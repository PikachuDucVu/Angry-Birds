{"ast":null,"code":"import createOrthoCamera from './orthoCamera';\nimport resizeCanvas from './resizeCanvas';\nconst defaultOptions = {\n  autoUpdate: true,\n  pixelRatio: undefined,\n  crop: true\n};\nexport default ((canvas, width, height, options) => {\n  options = { ...defaultOptions,\n    ...options\n  };\n  let contextOption;\n\n  if (options.disablePremultipliedAlpha) {\n    contextOption = {\n      premultipliedAlpha: false\n    };\n  }\n\n  contextOption = { ...contextOption,\n    ...options.contextOption\n  };\n  const gl = canvas.getContext('webgl', contextOption);\n  const additionalCameras = [];\n  let {\n    autoUpdate,\n    pixelRatio,\n    crop\n  } = options;\n  pixelRatio = pixelRatio || window.devicePixelRatio || 1;\n  const viewportInfo = {\n    pixelRatio,\n    x: 0,\n    y: 0,\n    width,\n    height,\n    worldWidth: width,\n    worldHeight: height\n  };\n  let resizeHandler;\n  const [vWidth, vHeight] = resizeCanvas(canvas, pixelRatio);\n  const camera = createOrthoCamera(width, height, vWidth, vHeight);\n\n  if (autoUpdate) {\n    resizeHandler = e => {\n      viewportObject.update();\n    };\n\n    window.addEventListener('resize', resizeHandler);\n  }\n\n  const viewportObject = {\n    getViewportInfo() {\n      return viewportInfo;\n    },\n\n    getCamera() {\n      return camera;\n    },\n\n    addCamera(camera) {\n      additionalCameras.push(camera);\n    },\n\n    getContext() {\n      return gl;\n    },\n\n    getCanvas() {\n      return canvas;\n    },\n\n    update() {\n      let [vWidth, vHeight] = resizeCanvas(canvas, pixelRatio);\n      const ratio = width / height;\n      const vRatio = vWidth / vHeight;\n\n      if (crop) {\n        let displayWidth, displayHeight;\n\n        if (ratio < vRatio) {\n          displayHeight = vHeight;\n          displayWidth = vHeight * ratio;\n        } else {\n          displayWidth = vWidth;\n          displayHeight = vWidth / ratio;\n        }\n\n        const displayX = (vWidth - displayWidth) / 2;\n        const displayY = (vHeight - displayHeight) / 2;\n        viewportInfo.x = displayX;\n        viewportInfo.y = displayY;\n        viewportInfo.width = displayWidth;\n        viewportInfo.height = displayHeight;\n        gl.viewport(displayX, displayY, displayWidth, displayHeight);\n        camera.resize(width, height, displayWidth, displayHeight);\n\n        for (let camera of additionalCameras) {\n          camera.resize(width, height, displayWidth, displayHeight);\n        }\n      } else {\n        viewportInfo.x = 0;\n        viewportInfo.y = 0;\n        viewportInfo.width = vWidth;\n        viewportInfo.height = vHeight;\n        gl.viewport(0, 0, vWidth, vHeight);\n        let cameraWidth, cameraHeight, cameraX, cameraY;\n\n        if (ratio < vRatio) {\n          cameraHeight = height;\n          cameraWidth = cameraHeight * vRatio;\n          cameraX = -(cameraWidth - width) / 2;\n          cameraY = 0;\n        } else {\n          cameraWidth = width;\n          cameraHeight = cameraWidth / vRatio;\n          cameraX = 0;\n          cameraY = -(cameraHeight - height) / 2;\n        }\n\n        camera.resize(cameraWidth, cameraHeight, vWidth, vHeight);\n        camera.setPosition(cameraX, cameraY);\n\n        for (let camera of additionalCameras) {\n          camera.resize(cameraWidth, cameraHeight, vWidth, vHeight);\n          camera.setPosition(cameraX, cameraY);\n        }\n      }\n    },\n\n    cleanUp() {\n      if (resizeHandler) {\n        window.removeEventListener('resize', resizeHandler);\n      }\n    }\n\n  };\n  autoUpdate && viewportObject.update();\n  return viewportObject;\n});","map":{"version":3,"names":["createOrthoCamera","resizeCanvas","defaultOptions","autoUpdate","pixelRatio","undefined","crop","canvas","width","height","options","contextOption","disablePremultipliedAlpha","premultipliedAlpha","gl","getContext","additionalCameras","window","devicePixelRatio","viewportInfo","x","y","worldWidth","worldHeight","resizeHandler","vWidth","vHeight","camera","e","viewportObject","update","addEventListener","getViewportInfo","getCamera","addCamera","push","getCanvas","ratio","vRatio","displayWidth","displayHeight","displayX","displayY","viewport","resize","cameraWidth","cameraHeight","cameraX","cameraY","setPosition","cleanUp","removeEventListener"],"sources":["D:/projects/test-game/node_modules/gdxjs/lib/createViewport.js"],"sourcesContent":["import createOrthoCamera from './orthoCamera';\nimport resizeCanvas from './resizeCanvas';\nconst defaultOptions = {\n  autoUpdate: true,\n  pixelRatio: undefined,\n  crop: true\n};\nexport default ((canvas, width, height, options) => {\n  options = { ...defaultOptions,\n    ...options\n  };\n  let contextOption;\n\n  if (options.disablePremultipliedAlpha) {\n    contextOption = {\n      premultipliedAlpha: false\n    };\n  }\n\n  contextOption = { ...contextOption,\n    ...options.contextOption\n  };\n  const gl = canvas.getContext('webgl', contextOption);\n  const additionalCameras = [];\n  let {\n    autoUpdate,\n    pixelRatio,\n    crop\n  } = options;\n  pixelRatio = pixelRatio || window.devicePixelRatio || 1;\n  const viewportInfo = {\n    pixelRatio,\n    x: 0,\n    y: 0,\n    width,\n    height,\n    worldWidth: width,\n    worldHeight: height\n  };\n  let resizeHandler;\n  const [vWidth, vHeight] = resizeCanvas(canvas, pixelRatio);\n  const camera = createOrthoCamera(width, height, vWidth, vHeight);\n\n  if (autoUpdate) {\n    resizeHandler = e => {\n      viewportObject.update();\n    };\n\n    window.addEventListener('resize', resizeHandler);\n  }\n\n  const viewportObject = {\n    getViewportInfo() {\n      return viewportInfo;\n    },\n\n    getCamera() {\n      return camera;\n    },\n\n    addCamera(camera) {\n      additionalCameras.push(camera);\n    },\n\n    getContext() {\n      return gl;\n    },\n\n    getCanvas() {\n      return canvas;\n    },\n\n    update() {\n      let [vWidth, vHeight] = resizeCanvas(canvas, pixelRatio);\n      const ratio = width / height;\n      const vRatio = vWidth / vHeight;\n\n      if (crop) {\n        let displayWidth, displayHeight;\n\n        if (ratio < vRatio) {\n          displayHeight = vHeight;\n          displayWidth = vHeight * ratio;\n        } else {\n          displayWidth = vWidth;\n          displayHeight = vWidth / ratio;\n        }\n\n        const displayX = (vWidth - displayWidth) / 2;\n        const displayY = (vHeight - displayHeight) / 2;\n        viewportInfo.x = displayX;\n        viewportInfo.y = displayY;\n        viewportInfo.width = displayWidth;\n        viewportInfo.height = displayHeight;\n        gl.viewport(displayX, displayY, displayWidth, displayHeight);\n        camera.resize(width, height, displayWidth, displayHeight);\n\n        for (let camera of additionalCameras) {\n          camera.resize(width, height, displayWidth, displayHeight);\n        }\n      } else {\n        viewportInfo.x = 0;\n        viewportInfo.y = 0;\n        viewportInfo.width = vWidth;\n        viewportInfo.height = vHeight;\n        gl.viewport(0, 0, vWidth, vHeight);\n        let cameraWidth, cameraHeight, cameraX, cameraY;\n\n        if (ratio < vRatio) {\n          cameraHeight = height;\n          cameraWidth = cameraHeight * vRatio;\n          cameraX = -(cameraWidth - width) / 2;\n          cameraY = 0;\n        } else {\n          cameraWidth = width;\n          cameraHeight = cameraWidth / vRatio;\n          cameraX = 0;\n          cameraY = -(cameraHeight - height) / 2;\n        }\n\n        camera.resize(cameraWidth, cameraHeight, vWidth, vHeight);\n        camera.setPosition(cameraX, cameraY);\n\n        for (let camera of additionalCameras) {\n          camera.resize(cameraWidth, cameraHeight, vWidth, vHeight);\n          camera.setPosition(cameraX, cameraY);\n        }\n      }\n    },\n\n    cleanUp() {\n      if (resizeHandler) {\n        window.removeEventListener('resize', resizeHandler);\n      }\n    }\n\n  };\n  autoUpdate && viewportObject.update();\n  return viewportObject;\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}