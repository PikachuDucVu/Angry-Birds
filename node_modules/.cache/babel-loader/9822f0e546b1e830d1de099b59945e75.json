{"ast":null,"code":"import InputHandler from './InputHandler';\nimport Vector2 from './Vector2';\n\nconst createViewportAwareInputListener = (handler, viewport) => {\n  return (x, y, id) => {\n    const {\n      x: vX,\n      y: vY,\n      pixelRatio\n    } = viewport.getViewportInfo();\n    x = x * pixelRatio - vX;\n    y = y * pixelRatio - vY;\n    handler(x, y, id);\n  };\n};\n\nexport default ((canvas, viewport) => {\n  const inputHandler = new InputHandler(canvas);\n  const screenCoord = new Vector2();\n  const worldCoord = new Vector2();\n  return {\n    isTouched() {\n      return inputHandler.isTouched();\n    },\n\n    cleanup() {\n      inputHandler.cleanup();\n    },\n\n    addEventListener(event, listener) {\n      inputHandler.addEventListener(event, createViewportAwareInputListener(listener, viewport));\n    },\n\n    getX() {\n      const {\n        x: vX,\n        pixelRatio\n      } = viewport.getViewportInfo();\n      return inputHandler.getX() * pixelRatio - vX;\n    },\n\n    getY() {\n      const {\n        y: vY,\n        pixelRatio\n      } = viewport.getViewportInfo();\n      return inputHandler.getY() * pixelRatio - vY;\n    },\n\n    getTouchedWorldCoord(camera) {\n      if (!camera) {\n        camera = viewport.getCamera();\n      }\n\n      screenCoord.set(this.getX(), this.getY());\n      camera.unprojectVector2(worldCoord, screenCoord);\n      return worldCoord;\n    }\n\n  };\n});","map":{"version":3,"names":["InputHandler","Vector2","createViewportAwareInputListener","handler","viewport","x","y","id","vX","vY","pixelRatio","getViewportInfo","canvas","inputHandler","screenCoord","worldCoord","isTouched","cleanup","addEventListener","event","listener","getX","getY","getTouchedWorldCoord","camera","getCamera","set","unprojectVector2"],"sources":["D:/projects/test-game/node_modules/gdxjs/lib/createViewportAwareInputHandler.js"],"sourcesContent":["import InputHandler from './InputHandler';\nimport Vector2 from './Vector2';\n\nconst createViewportAwareInputListener = (handler, viewport) => {\n  return (x, y, id) => {\n    const {\n      x: vX,\n      y: vY,\n      pixelRatio\n    } = viewport.getViewportInfo();\n    x = x * pixelRatio - vX;\n    y = y * pixelRatio - vY;\n    handler(x, y, id);\n  };\n};\n\nexport default ((canvas, viewport) => {\n  const inputHandler = new InputHandler(canvas);\n  const screenCoord = new Vector2();\n  const worldCoord = new Vector2();\n  return {\n    isTouched() {\n      return inputHandler.isTouched();\n    },\n\n    cleanup() {\n      inputHandler.cleanup();\n    },\n\n    addEventListener(event, listener) {\n      inputHandler.addEventListener(event, createViewportAwareInputListener(listener, viewport));\n    },\n\n    getX() {\n      const {\n        x: vX,\n        pixelRatio\n      } = viewport.getViewportInfo();\n      return inputHandler.getX() * pixelRatio - vX;\n    },\n\n    getY() {\n      const {\n        y: vY,\n        pixelRatio\n      } = viewport.getViewportInfo();\n      return inputHandler.getY() * pixelRatio - vY;\n    },\n\n    getTouchedWorldCoord(camera) {\n      if (!camera) {\n        camera = viewport.getCamera();\n      }\n\n      screenCoord.set(this.getX(), this.getY());\n      camera.unprojectVector2(worldCoord, screenCoord);\n      return worldCoord;\n    }\n\n  };\n});"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,gCAAgC,GAAG,CAACC,OAAD,EAAUC,QAAV,KAAuB;EAC9D,OAAO,CAACC,CAAD,EAAIC,CAAJ,EAAOC,EAAP,KAAc;IACnB,MAAM;MACJF,CAAC,EAAEG,EADC;MAEJF,CAAC,EAAEG,EAFC;MAGJC;IAHI,IAIFN,QAAQ,CAACO,eAAT,EAJJ;IAKAN,CAAC,GAAGA,CAAC,GAAGK,UAAJ,GAAiBF,EAArB;IACAF,CAAC,GAAGA,CAAC,GAAGI,UAAJ,GAAiBD,EAArB;IACAN,OAAO,CAACE,CAAD,EAAIC,CAAJ,EAAOC,EAAP,CAAP;EACD,CATD;AAUD,CAXD;;AAaA,gBAAgB,CAACK,MAAD,EAASR,QAAT,KAAsB;EACpC,MAAMS,YAAY,GAAG,IAAIb,YAAJ,CAAiBY,MAAjB,CAArB;EACA,MAAME,WAAW,GAAG,IAAIb,OAAJ,EAApB;EACA,MAAMc,UAAU,GAAG,IAAId,OAAJ,EAAnB;EACA,OAAO;IACLe,SAAS,GAAG;MACV,OAAOH,YAAY,CAACG,SAAb,EAAP;IACD,CAHI;;IAKLC,OAAO,GAAG;MACRJ,YAAY,CAACI,OAAb;IACD,CAPI;;IASLC,gBAAgB,CAACC,KAAD,EAAQC,QAAR,EAAkB;MAChCP,YAAY,CAACK,gBAAb,CAA8BC,KAA9B,EAAqCjB,gCAAgC,CAACkB,QAAD,EAAWhB,QAAX,CAArE;IACD,CAXI;;IAaLiB,IAAI,GAAG;MACL,MAAM;QACJhB,CAAC,EAAEG,EADC;QAEJE;MAFI,IAGFN,QAAQ,CAACO,eAAT,EAHJ;MAIA,OAAOE,YAAY,CAACQ,IAAb,KAAsBX,UAAtB,GAAmCF,EAA1C;IACD,CAnBI;;IAqBLc,IAAI,GAAG;MACL,MAAM;QACJhB,CAAC,EAAEG,EADC;QAEJC;MAFI,IAGFN,QAAQ,CAACO,eAAT,EAHJ;MAIA,OAAOE,YAAY,CAACS,IAAb,KAAsBZ,UAAtB,GAAmCD,EAA1C;IACD,CA3BI;;IA6BLc,oBAAoB,CAACC,MAAD,EAAS;MAC3B,IAAI,CAACA,MAAL,EAAa;QACXA,MAAM,GAAGpB,QAAQ,CAACqB,SAAT,EAAT;MACD;;MAEDX,WAAW,CAACY,GAAZ,CAAgB,KAAKL,IAAL,EAAhB,EAA6B,KAAKC,IAAL,EAA7B;MACAE,MAAM,CAACG,gBAAP,CAAwBZ,UAAxB,EAAoCD,WAApC;MACA,OAAOC,UAAP;IACD;;EArCI,CAAP;AAwCD,CA5CD"},"metadata":{},"sourceType":"module"}