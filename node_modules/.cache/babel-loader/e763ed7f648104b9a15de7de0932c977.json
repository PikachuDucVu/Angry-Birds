{"ast":null,"code":"import _regeneratorRuntime from\"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{createGameLoop,createStage,createViewport,InputEvent,PolygonBatch,ShapeRenderer,Texture,Vector2,ViewportInputHandler,BitmapFont,TextureRegion,Animation,PlayMode}from\"gdxts\";export var init=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var stage,canvas,viewport,gl,background1,background2,obstacles,gameovericon,tapToPlay,font,newBird,regions,birdAnimation,shapeRenderer,batch,camera,inputHandler,characterPosition,rotationOfBird,i,frame,firstClick,falling,runningGame,obstaclePosition,obstacleSpeed,heightObstacleUp1,heightObstacleDown1,heightObstacleUp2,heightObstacleDown2,speedY,gravityOfBird,gravityGame,tryagainmode,score,layerbg2,layerbg1,moveOfBird,spawnAndMovePipe,randomHeightOfObstacle,getRandomInt;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:getRandomInt=function _getRandomInt(min,max){return Math.floor(Math.random()*(max-min))+min;};randomHeightOfObstacle=function _randomHeightOfObstac(){if(obstaclePosition[0]>=600){var optionOfObstacle1=getRandomInt(1,5);score+=1;switch(optionOfObstacle1){case 1:heightObstacleDown1=150;heightObstacleUp1=400;//\nbreak;case 2:heightObstacleDown1=250;heightObstacleUp1=300;break;case 3:heightObstacleDown1=350;heightObstacleUp1=200;break;case 4:heightObstacleDown1=450;heightObstacleUp1=150;break;case 5:heightObstacleDown1=550;heightObstacleUp1=125;break;default:break;}}if(obstaclePosition[2]>=600){var optionOfObstacle2=getRandomInt(1,5);score+=1;switch(optionOfObstacle2){case 1:heightObstacleDown2=150;heightObstacleUp2=400;break;case 2:heightObstacleDown2=250;heightObstacleUp2=300;break;case 3:heightObstacleDown2=350;heightObstacleUp2=200;break;case 4:heightObstacleDown2=450;heightObstacleUp2=150;break;case 5:heightObstacleDown2=550;heightObstacleUp2=125;break;default:break;}}};spawnAndMovePipe=function _spawnAndMovePipe(delta){obstaclePosition[0]-=obstacleSpeed*delta;obstaclePosition[2]-=obstacleSpeed*delta;//bg move\nlayerbg1-=delta*obstacleSpeed;layerbg2-=delta*obstacleSpeed;// respawn pipe\nif(obstaclePosition[0]<-200){obstaclePosition[0]=695;randomHeightOfObstacle();if(obstacleSpeed<=520){obstacleSpeed*=1.02;}}if(obstaclePosition[2]<-200){obstaclePosition[2]=695;randomHeightOfObstacle();if(obstacleSpeed<=500){obstacleSpeed*=1.02;}}};moveOfBird=function _moveOfBird(delta){if(falling===false){characterPosition.y=characterPosition.y+speedY*delta;if(rotationOfBird<=0.3){setTimeout(function(){rotationOfBird+=0.04;},50);}if(speedY<=20){falling=true;}}if(falling===true){characterPosition.y-=gravityGame*delta;if(rotationOfBird>=-1.05){setTimeout(function(){rotationOfBird-=0.1-delta;},25);}}};stage=createStage();canvas=stage.getCanvas();viewport=createViewport(canvas,600,1000);gl=viewport.getContext();_context.next=10;return Texture.load(gl,\"./flappy-bird.gif\");case 10:background1=_context.sent;_context.next=13;return Texture.load(gl,\"./flappy-bird2.gif\");case 13:background2=_context.sent;_context.next=16;return Texture.load(gl,\"./obstacle.webp\");case 16:obstacles=_context.sent;_context.next=19;return Texture.load(gl,\"./gameover.png\");case 19:gameovericon=_context.sent;_context.next=22;return Texture.load(gl,\"./taptoplay.png\");case 22:tapToPlay=_context.sent;_context.next=25;return BitmapFont.load(gl,\"./font.fnt\");case 25:font=_context.sent;_context.next=28;return Texture.load(gl,\"./newbird.png\");case 28:newBird=_context.sent;regions=TextureRegion.splitTexture(newBird,3,1);birdAnimation=new Animation(regions.slice(0,3),0.25);shapeRenderer=new ShapeRenderer(gl);batch=new PolygonBatch(gl);camera=viewport.getCamera();inputHandler=new ViewportInputHandler(viewport);//config of bá»‰d\ncharacterPosition=new Vector2(250,500);rotationOfBird=0;i=0;frame=0;// animation\nfirstClick=false;falling=true;runningGame=true;//config obstacle\nobstaclePosition=[495,195,995,195];obstacleSpeed=400;heightObstacleUp1=300;heightObstacleDown1=270;heightObstacleUp2=200;heightObstacleDown2=420;//config game\nspeedY=0;gravityOfBird=0;gravityGame=0;tryagainmode=false;score=0;gl.clearColor(0,0,0,1);layerbg2=595;layerbg1=0;inputHandler.addEventListener(InputEvent.TouchStart,function(x,y){firstClick=true;if(firstClick===true&&runningGame===true){speedY=520;rotationOfBird=0;gravityOfBird=0;gravityGame=200;}falling=false;//try again\nif(tryagainmode===true&&runningGame===false){characterPosition=new Vector2(250,500);// redeclare\nrotationOfBird=0;i=0;frame=0;layerbg2=595;layerbg1=0;speedY=0;gravityOfBird=0;gravityGame=0;score=0;obstaclePosition=[495,195,995,195];obstacleSpeed=350;heightObstacleUp1=300;heightObstacleDown1=270;heightObstacleUp2=200;heightObstacleDown2=420;runningGame=true;firstClick=false;falling=true;}tryagainmode=false;});// try again\ncreateGameLoop(function(delta){gl.clear(gl.COLOR_BUFFER_BIT);shapeRenderer.setProjection(camera.projectionView.values);shapeRenderer.begin();shapeRenderer.rect(true,0,0,600,1000);shapeRenderer.end();frame+=delta;gravityOfBird+=delta;speedY=speedY-20-gravityOfBird;gravityGame+=250*delta;if(firstClick===true&&runningGame===true){spawnAndMovePipe(delta);moveOfBird(delta);}// draw background\nbatch.setProjection(camera.projectionView.values);batch.begin();batch.draw(background2,layerbg2,0,600,1000);batch.draw(background1,layerbg1,0,600,1000);if(layerbg1<=-595){layerbg1=590;}if(layerbg2<=-595){layerbg2=590;}//draw obstacle\nbatch.draw(obstacles,obstaclePosition[0]-50,obstaclePosition[1],150,heightObstacleDown1// heightDown // default = 270 // max 500 min 150\n);batch.draw(obstacles,obstaclePosition[0]-50,obstaclePosition[1]+610,150,heightObstacleUp1,// heightUp // default = 300 // max 500 min 150\n75,100,47.13);batch.draw(obstacles,obstaclePosition[2]-50,obstaclePosition[3],150,heightObstacleDown2// heightDown // default = 270 // max 500 min 150\n);batch.draw(obstacles,obstaclePosition[2]-50,obstaclePosition[3]+610,150,heightObstacleUp2,// heightUp // default = 300 // max 500 min 150\n75,100,47.13);//draw chim\nvar region=birdAnimation.getKeyFrame(frame,PlayMode.LOOP);if(i>0.2){i=0;frame%=3;}region.draw(batch,characterPosition.x,characterPosition.y,// height of chim\n60,60,30,30,rotationOfBird);//gameover condition\nif(firstClick===false&&runningGame===true){batch.draw(tapToPlay,180,330,200,200);}if(characterPosition.y<=190){runningGame=false;firstClick=false;falling=false;speedY=0;}if(Math.abs(characterPosition.x-obstaclePosition[0])<=90){// crash with obstacleDown\nif(characterPosition.y-100-heightObstacleDown1<=90){runningGame=false;firstClick=false;speedY=0;}// crash with obstacleUp\nif(heightObstacleUp1===300&&characterPosition.y>=660){runningGame=false;firstClick=false;speedY=0;}if(heightObstacleUp1===400&&characterPosition.y>=560){runningGame=false;firstClick=false;speedY=0;}//\nif(heightObstacleUp1===200&&characterPosition.y>=760){runningGame=false;firstClick=false;speedY=0;}//\nif(heightObstacleUp1===150&&characterPosition.y>=810){runningGame=false;firstClick=false;speedY=0;}if(heightObstacleUp1===125&&characterPosition.y>=835){runningGame=false;firstClick=false;speedY=0;}}if(Math.abs(characterPosition.x-obstaclePosition[2])<=95){if(characterPosition.y-90-heightObstacleDown2<=90){runningGame=false;firstClick=false;speedY=0;}if(heightObstacleUp2===300&&characterPosition.y>=660){runningGame=false;firstClick=false;speedY=0;}if(heightObstacleUp2===400&&characterPosition.y>=560){runningGame=false;firstClick=false;speedY=0;}if(heightObstacleUp2===200&&characterPosition.y>=760){runningGame=false;firstClick=false;speedY=0;}if(heightObstacleUp2===150&&characterPosition.y>=810){runningGame=false;firstClick=false;speedY=0;}if(heightObstacleUp2===125&&characterPosition.y>=830){runningGame=false;firstClick=false;speedY=0;}// crash with obstacleUp\n}if(runningGame===false){batch.draw(gameovericon,50,500,500,250);if(characterPosition.y>=190){characterPosition.y-=gravityGame*delta;}font.draw(batch,\"TAP TO TRY AGAIN\",150,500,400);font.draw(batch,\"Your Score is: \"+score,170,450,400);if(rotationOfBird>=-1.2){rotationOfBird-=0.1-delta;}setTimeout(function(){tryagainmode=true;},800);}console.log(runningGame,tryagainmode);batch.end();});case 58:case\"end\":return _context.stop();}}},_callee);}));return function init(){return _ref.apply(this,arguments);};}();init();","map":{"version":3,"names":["createGameLoop","createStage","createViewport","InputEvent","PolygonBatch","ShapeRenderer","Texture","Vector2","ViewportInputHandler","BitmapFont","TextureRegion","Animation","PlayMode","init","moveOfBird","spawnAndMovePipe","randomHeightOfObstacle","getRandomInt","min","max","Math","floor","random","obstaclePosition","optionOfObstacle1","score","heightObstacleDown1","heightObstacleUp1","optionOfObstacle2","heightObstacleDown2","heightObstacleUp2","delta","obstacleSpeed","layerbg1","layerbg2","falling","characterPosition","y","speedY","rotationOfBird","setTimeout","gravityGame","stage","canvas","getCanvas","viewport","gl","getContext","load","background1","background2","obstacles","gameovericon","tapToPlay","font","newBird","regions","splitTexture","birdAnimation","slice","shapeRenderer","batch","camera","getCamera","inputHandler","i","frame","firstClick","runningGame","gravityOfBird","tryagainmode","clearColor","addEventListener","TouchStart","x","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end","draw","region","getKeyFrame","LOOP","abs","console","log"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createGameLoop,\n  createStage,\n  createViewport,\n  InputEvent,\n  PolygonBatch,\n  ShapeRenderer,\n  Texture,\n  Vector2,\n  ViewportInputHandler,\n  BitmapFont,\n  TextureRegion,\n  Animation,\n  PlayMode,\n} from \"gdxts\";\n\nexport const init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 600, 1000);\n  const gl = viewport.getContext();\n\n  const background1 = await Texture.load(gl, \"./flappy-bird.gif\");\n  const background2 = await Texture.load(gl, \"./flappy-bird2.gif\");\n  const obstacles = await Texture.load(gl, \"./obstacle.webp\");\n  const gameovericon = await Texture.load(gl, \"./gameover.png\");\n  const tapToPlay = await Texture.load(gl, \"./taptoplay.png\");\n  const font = await BitmapFont.load(gl, \"./font.fnt\");\n  const newBird = await Texture.load(gl, \"./newbird.png\");\n  const regions = TextureRegion.splitTexture(newBird, 3, 1);\n  const birdAnimation = new Animation(regions.slice(0, 3), 0.25);\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n\n  //config of bá»‰d\n  let characterPosition = new Vector2(250, 500);\n  let rotationOfBird = 0;\n  let i = 0;\n  let frame = 0; // animation\n\n  let firstClick = false;\n  let falling = true;\n  let runningGame = true;\n\n  //config obstacle\n  let obstaclePosition = [495, 195, 995, 195];\n  let obstacleSpeed = 400;\n  let heightObstacleUp1 = 300;\n  let heightObstacleDown1 = 270;\n  let heightObstacleUp2 = 200;\n  let heightObstacleDown2 = 420;\n\n  //config game\n  let speedY = 0;\n  let gravityOfBird = 0;\n  let gravityGame = 0;\n  let tryagainmode = false;\n  let score = 0;\n\n  gl.clearColor(0, 0, 0, 1);\n  let layerbg2 = 595;\n  let layerbg1 = 0;\n\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    firstClick = true;\n    if (firstClick === true && runningGame === true) {\n      speedY = 520;\n      rotationOfBird = 0;\n      gravityOfBird = 0;\n      gravityGame = 200;\n    }\n    falling = false;\n\n    //try again\n    if (tryagainmode === true && runningGame === false) {\n      characterPosition = new Vector2(250, 500);\n\n      // redeclare\n\n      rotationOfBird = 0;\n      i = 0;\n      frame = 0;\n\n      layerbg2 = 595;\n      layerbg1 = 0;\n\n      speedY = 0;\n      gravityOfBird = 0;\n      gravityGame = 0;\n      score = 0;\n\n      obstaclePosition = [495, 195, 995, 195];\n      obstacleSpeed = 350;\n      heightObstacleUp1 = 300;\n      heightObstacleDown1 = 270;\n      heightObstacleUp2 = 200;\n      heightObstacleDown2 = 420;\n\n      runningGame = true;\n      firstClick = false;\n      falling = true;\n    }\n    tryagainmode = false;\n  });\n\n  function moveOfBird(delta: number) {\n    if (falling === false) {\n      characterPosition.y = characterPosition.y + speedY * delta;\n      if (rotationOfBird <= 0.3) {\n        setTimeout(() => {\n          rotationOfBird += 0.04;\n        }, 50);\n      }\n\n      if (speedY <= 20) {\n        falling = true;\n      }\n    }\n\n    if (falling === true) {\n      characterPosition.y -= gravityGame * delta;\n      if (rotationOfBird >= -1.05) {\n        setTimeout(() => {\n          rotationOfBird -= 0.1 - delta;\n        }, 25);\n      }\n    }\n  }\n\n  function spawnAndMovePipe(delta: number) {\n    obstaclePosition[0] -= obstacleSpeed * delta;\n    obstaclePosition[2] -= obstacleSpeed * delta;\n\n    //bg move\n    layerbg1 -= delta * obstacleSpeed;\n    layerbg2 -= delta * obstacleSpeed;\n\n    // respawn pipe\n    if (obstaclePosition[0] < -200) {\n      obstaclePosition[0] = 695;\n      randomHeightOfObstacle();\n\n      if (obstacleSpeed <= 520) {\n        obstacleSpeed *= 1.02;\n      }\n    }\n    if (obstaclePosition[2] < -200) {\n      obstaclePosition[2] = 695;\n      randomHeightOfObstacle();\n\n      if (obstacleSpeed <= 500) {\n        obstacleSpeed *= 1.02;\n      }\n    }\n  }\n\n  //random height of obstacle\n  function randomHeightOfObstacle() {\n    if (obstaclePosition[0] >= 600) {\n      let optionOfObstacle1 = getRandomInt(1, 5);\n      score += 1;\n      switch (optionOfObstacle1) {\n        case 1:\n          heightObstacleDown1 = 150;\n          heightObstacleUp1 = 400; //\n          break;\n\n        case 2:\n          heightObstacleDown1 = 250;\n          heightObstacleUp1 = 300;\n          break;\n        case 3:\n          heightObstacleDown1 = 350;\n          heightObstacleUp1 = 200;\n          break;\n        case 4:\n          heightObstacleDown1 = 450;\n          heightObstacleUp1 = 150;\n          break;\n        case 5:\n          heightObstacleDown1 = 550;\n          heightObstacleUp1 = 125;\n          break;\n        default:\n          break;\n      }\n    }\n\n    if (obstaclePosition[2] >= 600) {\n      let optionOfObstacle2 = getRandomInt(1, 5);\n      score += 1;\n      switch (optionOfObstacle2) {\n        case 1:\n          heightObstacleDown2 = 150;\n          heightObstacleUp2 = 400;\n          break;\n\n        case 2:\n          heightObstacleDown2 = 250;\n          heightObstacleUp2 = 300;\n          break;\n        case 3:\n          heightObstacleDown2 = 350;\n          heightObstacleUp2 = 200;\n          break;\n        case 4:\n          heightObstacleDown2 = 450;\n          heightObstacleUp2 = 150;\n          break;\n        case 5:\n          heightObstacleDown2 = 550;\n          heightObstacleUp2 = 125;\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  function getRandomInt(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  // try again\n\n  createGameLoop((delta: number) => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 600, 1000);\n    shapeRenderer.end();\n\n    frame += delta;\n    gravityOfBird += delta;\n    speedY = speedY - 20 - gravityOfBird;\n    gravityGame += 250 * delta;\n\n    if (firstClick === true && runningGame === true) {\n      spawnAndMovePipe(delta);\n      moveOfBird(delta);\n    }\n\n    // draw background\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background2, layerbg2, 0, 600, 1000);\n    batch.draw(background1, layerbg1, 0, 600, 1000);\n    if (layerbg1 <= -595) {\n      layerbg1 = 590;\n    }\n    if (layerbg2 <= -595) {\n      layerbg2 = 590;\n    }\n\n    //draw obstacle\n    batch.draw(\n      obstacles,\n      obstaclePosition[0] - 50,\n      obstaclePosition[1],\n      150,\n      heightObstacleDown1 // heightDown // default = 270 // max 500 min 150\n    );\n    batch.draw(\n      obstacles,\n      obstaclePosition[0] - 50,\n      obstaclePosition[1] + 610,\n      150,\n      heightObstacleUp1, // heightUp // default = 300 // max 500 min 150\n      75,\n      100,\n      47.13\n    );\n    batch.draw(\n      obstacles,\n      obstaclePosition[2] - 50,\n      obstaclePosition[3],\n      150,\n      heightObstacleDown2 // heightDown // default = 270 // max 500 min 150\n    );\n    batch.draw(\n      obstacles,\n      obstaclePosition[2] - 50,\n      obstaclePosition[3] + 610,\n      150,\n      heightObstacleUp2, // heightUp // default = 300 // max 500 min 150\n      75,\n      100,\n      47.13\n    );\n\n    //draw chim\n    let region = birdAnimation.getKeyFrame(frame, PlayMode.LOOP);\n    if (i > 0.2) {\n      i = 0;\n      frame %= 3;\n    }\n    region.draw(\n      batch,\n      characterPosition.x,\n      characterPosition.y, // height of chim\n      60,\n      60,\n      30,\n      30,\n      rotationOfBird\n    );\n\n    //gameover condition\n    if (firstClick === false && runningGame === true) {\n      batch.draw(tapToPlay, 180, 330, 200, 200);\n    }\n\n    if (characterPosition.y <= 190) {\n      runningGame = false;\n      firstClick = false;\n      falling = false;\n      speedY = 0;\n    }\n\n    if (Math.abs(characterPosition.x - obstaclePosition[0]) <= 90) {\n      // crash with obstacleDown\n      if (characterPosition.y - 100 - heightObstacleDown1 <= 90) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      }\n      // crash with obstacleUp\n      if (heightObstacleUp1 === 300 && characterPosition.y >= 660) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      }\n      if (heightObstacleUp1 === 400 && characterPosition.y >= 560) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      } //\n      if (heightObstacleUp1 === 200 && characterPosition.y >= 760) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      } //\n      if (heightObstacleUp1 === 150 && characterPosition.y >= 810) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      }\n      if (heightObstacleUp1 === 125 && characterPosition.y >= 835) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      }\n    }\n\n    if (Math.abs(characterPosition.x - obstaclePosition[2]) <= 95) {\n      if (characterPosition.y - 90 - heightObstacleDown2 <= 90) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      }\n      if (heightObstacleUp2 === 300 && characterPosition.y >= 660) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      }\n      if (heightObstacleUp2 === 400 && characterPosition.y >= 560) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      }\n      if (heightObstacleUp2 === 200 && characterPosition.y >= 760) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      }\n      if (heightObstacleUp2 === 150 && characterPosition.y >= 810) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      }\n      if (heightObstacleUp2 === 125 && characterPosition.y >= 830) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      }\n      // crash with obstacleUp\n    }\n    if (runningGame === false) {\n      batch.draw(gameovericon, 50, 500, 500, 250);\n      if (characterPosition.y >= 190) {\n        characterPosition.y -= gravityGame * delta;\n      }\n      font.draw(batch, \"TAP TO TRY AGAIN\", 150, 500, 400);\n      font.draw(batch, \"Your Score is: \" + score, 170, 450, 400);\n      if (rotationOfBird >= -1.2) {\n        rotationOfBird -= 0.1 - delta;\n      }\n      setTimeout(() => {\n        tryagainmode = true;\n      }, 800);\n    }\n    console.log(runningGame, tryagainmode);\n    batch.end();\n  });\n};\n\ninit();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}