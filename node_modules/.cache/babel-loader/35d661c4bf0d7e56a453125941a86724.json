{"ast":null,"code":"import { createGameLoop, createStage, createViewport, InputEvent, PolygonBatch, ShapeRenderer, Texture, Vector2, ViewportInputHandler, BitmapFont, TextureRegion, Animation, PlayMode } from \"gdxts\";\n/*\n1. draw bird\n2. draw pipe\n3. spawn pipe\n4. move pipe\n5. apply gravity to bird\n6. move bird (check inputHandler, apply speedY to bird, rotate bird)\n7. check collision (check win condition)\n8. try again\n*/\n\nexport const init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 600, 1000);\n  const gl = viewport.getContext();\n  const background1 = await Texture.load(gl, \"./flappy-bird.gif\");\n  let layer1 = 0;\n  const background2 = await Texture.load(gl, \"./flappy-bird2.gif\");\n  let layer2 = 595;\n  const obstacles = await Texture.load(gl, \"./obstacle.webp\");\n  const gameovericon = await Texture.load(gl, \"./gameover.png\");\n  const tapToPlay = await Texture.load(gl, \"./taptoplay.png\");\n  const font = await BitmapFont.load(gl, \"./font.fnt\");\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  const newBird = await Texture.load(gl, \"./newbird.png\");\n  const regions = TextureRegion.splitTexture(newBird, 3, 1);\n  const birdAnimation = new Animation(regions.slice(0, 3), 0.25);\n  let characterPosition = new Vector2(250, 500);\n  let rotationOfBird = 0;\n  let obstaclePosition1 = new Vector2(595, 195);\n  let obstaclePosition2 = new Vector2(995, 195);\n  gl.clearColor(0, 0, 0, 1);\n  let lastClick = false;\n  let speedY = 0;\n  let obstacleSpeed = 250;\n  let heightObstacleUp1 = 300;\n  let heightObstacleDown1 = 270;\n  let heightObstacleUp2 = 350;\n  let heightObstacleDown2 = 220;\n  let firstClick = false;\n  let runningGame = true;\n  let frame = 0;\n  let i = 0;\n  let gravityOfBird = 0;\n  let gravity = 300; // let speedY = 0;\n  // if(speedY > 0) {\n  //   bird.y += speedY * delta;\n  //   speedY = Math.max(0, speedY - 10 * delta)\n  // } else {\n  //   bird.y -= gravity * delta;\n  // }\n\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    firstClick = true;\n\n    if (firstClick === true && runningGame === true) {\n      speedY = 400;\n      gravityOfBird = 0;\n    }\n\n    lastClick = true;\n  });\n\n  function moveOfBird(delta) {\n    if (lastClick) {\n      lastClick = true;\n      characterPosition.y = characterPosition.y + speedY * delta;\n\n      if (rotationOfBird <= 0.25) {\n        setTimeout(() => {\n          rotationOfBird += 0.1; // console.log(rotationOfBird);\n        }, 50);\n      }\n\n      if (speedY <= 25) {\n        lastClick = false;\n      }\n    }\n\n    if (lastClick === false) {\n      characterPosition.y -= gravity * delta;\n\n      if (rotationOfBird >= -1.2) {\n        setTimeout(() => {\n          rotationOfBird -= 0.1;\n        }, 50);\n      }\n    }\n  }\n\n  function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  function obstacleMove(delta) {\n    obstaclePosition1.x -= obstacleSpeed * delta;\n    obstaclePosition2.x -= obstacleSpeed * delta; //bg move\n\n    layer1 -= delta * obstacleSpeed;\n    layer2 -= delta * obstacleSpeed;\n\n    if (obstaclePosition1.x < -200) {\n      obstaclePosition1.set(695, 195);\n      randomHeightOfObstacle(); // heightObstacleUp1 = getRandomInt(200, 800);\n      // heightObstacleDown1 = getRandomInt(200, 800);\n\n      if (obstacleSpeed <= 500) {\n        obstacleSpeed *= 1.02;\n      }\n    }\n\n    if (obstaclePosition2.x < -200) {\n      obstaclePosition2.set(695, 195);\n      randomHeightOfObstacle();\n\n      if (obstacleSpeed <= 500) {\n        obstacleSpeed *= 1.02;\n      }\n    }\n  }\n\n  function randomHeightOfObstacle() {\n    if (obstaclePosition1.x >= 600) {\n      let optionOfObstacle1 = getRandomInt(1, 5);\n\n      switch (optionOfObstacle1) {\n        case 1:\n          heightObstacleDown1 = 150;\n          heightObstacleUp1 = 500; //\n\n          break;\n\n        case 2:\n          heightObstacleDown1 = 250;\n          heightObstacleUp1 = 400;\n          break;\n\n        case 3:\n          heightObstacleDown1 = 350;\n          heightObstacleUp1 = 300;\n          break;\n\n        case 4:\n          heightObstacleDown1 = 450;\n          heightObstacleUp1 = 200;\n          break;\n\n        case 5:\n          heightObstacleDown1 = 550;\n          heightObstacleUp1 = 125;\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    if (obstaclePosition2.x >= 600) {\n      let optionOfObstacle2 = getRandomInt(1, 5);\n\n      switch (optionOfObstacle2) {\n        case 1:\n          heightObstacleDown2 = 150;\n          heightObstacleUp2 = 500;\n          break;\n\n        case 2:\n          heightObstacleDown2 = 250;\n          heightObstacleUp2 = 400;\n          break;\n\n        case 3:\n          heightObstacleDown2 = 350;\n          heightObstacleUp2 = 300;\n          break;\n\n        case 4:\n          heightObstacleDown2 = 450;\n          heightObstacleUp2 = 200;\n          break;\n\n        case 5:\n          heightObstacleDown2 = 550;\n          heightObstacleUp2 = 125;\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  createGameLoop(delta => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 600, 1000);\n    shapeRenderer.end();\n    frame += delta;\n    gravityOfBird += delta;\n    speedY = speedY - 12 - gravityOfBird;\n    console.log(speedY);\n    let region = birdAnimation.getKeyFrame(frame, PlayMode.LOOP);\n\n    if (i > 0.2) {\n      i = 0;\n      frame %= 3;\n    } // console.log(characterPosition.y, speedY);\n\n\n    if (firstClick === true && runningGame === true) {\n      moveOfBird(delta);\n      obstacleMove(delta);\n    } // console.log(layer1);\n\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background2, layer2, 0, 600, 1000);\n    batch.draw(background1, layer1, 0, 600, 1000);\n    region.draw(batch, characterPosition.x, characterPosition.y, // height of chim\n    60, 60, 30, 30, rotationOfBird); // obstacle 1\n\n    batch.draw(obstacles, obstaclePosition1.x - 50, obstaclePosition1.y, 150, heightObstacleDown1 // heightDown // default = 270 // max 500 min 150\n    );\n    batch.draw(obstacles, obstaclePosition1.x - 50, obstaclePosition1.y + 610, 150, heightObstacleUp1, // heightUp // default = 300 // max 500 min 150\n    75, 100, 47.13); // obstacles 2\n\n    batch.draw(obstacles, obstaclePosition2.x - 50, obstaclePosition2.y, 150, heightObstacleDown2 // height ben duoi default = 270 // max 500 min 150\n    );\n    batch.draw(obstacles, obstaclePosition2.x - 50, obstaclePosition2.y + 610, 150, heightObstacleUp2, // height ben tren // default = 300 // max 500 min 150\n    75, 100, 47.13);\n\n    if (firstClick === false && runningGame === true) {\n      batch.draw(tapToPlay, 180, 330, 200, 200);\n    }\n\n    if (characterPosition.y <= 190) {\n      runningGame = false;\n      firstClick = false;\n      lastClick = false;\n      speedY = 0;\n      batch.draw(gameovericon, 50, 500, 500, 250);\n    }\n\n    if (Math.abs(characterPosition.x - obstaclePosition1.x) <= 90) {\n      // crash with obstacleDown\n      if (characterPosition.y - 90 - heightObstacleDown1 <= 90) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      } // crash with obstacleUp\n\n\n      if (heightObstacleUp1 === 500 && characterPosition.y >= 460) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n\n      if (heightObstacleUp1 === 400 && characterPosition.y >= 560) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n\n      if (heightObstacleUp1 === 300 && characterPosition.y >= 660) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n\n      if (heightObstacleUp1 === 200 && characterPosition.y >= 760) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n\n      if (heightObstacleUp1 === 125 && characterPosition.y >= 830) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n    }\n\n    if (Math.abs(characterPosition.x - obstaclePosition2.x) <= 90) {\n      if (characterPosition.y - 90 - heightObstacleDown2 <= 90) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n\n      if (heightObstacleUp2 === 350 && characterPosition.y >= 610) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n\n      if (heightObstacleUp2 === 500 && characterPosition.y >= 460) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n\n      if (heightObstacleUp2 === 400 && characterPosition.y >= 560) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n\n      if (heightObstacleUp2 === 300 && characterPosition.y >= 660) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0; // correct\n      }\n\n      if (heightObstacleUp2 === 200 && characterPosition.y >= 760) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n\n      if (heightObstacleUp2 === 125 && characterPosition.y >= 830) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n    }\n\n    if (runningGame === false) {\n      font.draw(batch, \"F5 TO TRYAGAIN\", 220, 450, 250);\n    } //bg\n\n\n    if (layer1 <= -595) {\n      layer1 = 593;\n    }\n\n    if (layer2 <= -595) {\n      layer2 = 593;\n    }\n\n    batch.end();\n  });\n};\ninit();","map":{"version":3,"names":["createGameLoop","createStage","createViewport","InputEvent","PolygonBatch","ShapeRenderer","Texture","Vector2","ViewportInputHandler","BitmapFont","TextureRegion","Animation","PlayMode","init","stage","canvas","getCanvas","viewport","gl","getContext","background1","load","layer1","background2","layer2","obstacles","gameovericon","tapToPlay","font","shapeRenderer","batch","camera","getCamera","inputHandler","newBird","regions","splitTexture","birdAnimation","slice","characterPosition","rotationOfBird","obstaclePosition1","obstaclePosition2","clearColor","lastClick","speedY","obstacleSpeed","heightObstacleUp1","heightObstacleDown1","heightObstacleUp2","heightObstacleDown2","firstClick","runningGame","frame","i","gravityOfBird","gravity","addEventListener","TouchStart","x","y","moveOfBird","delta","setTimeout","getRandomInt","min","max","Math","floor","random","obstacleMove","set","randomHeightOfObstacle","optionOfObstacle1","optionOfObstacle2","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end","console","log","region","getKeyFrame","LOOP","draw","abs"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createGameLoop,\n  createStage,\n  createViewport,\n  InputEvent,\n  PolygonBatch,\n  ShapeRenderer,\n  Texture,\n  Vector2,\n  ViewportInputHandler,\n  BitmapFont,\n  TextureRegion,\n  Animation,\n  PlayMode,\n} from \"gdxts\";\n\n/*\n1. draw bird\n2. draw pipe\n3. spawn pipe\n4. move pipe\n5. apply gravity to bird\n6. move bird (check inputHandler, apply speedY to bird, rotate bird)\n7. check collision (check win condition)\n8. try again\n*/\n\nexport const init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 600, 1000);\n  const gl = viewport.getContext();\n  const background1 = await Texture.load(gl, \"./flappy-bird.gif\");\n  let layer1 = 0;\n  const background2 = await Texture.load(gl, \"./flappy-bird2.gif\");\n  let layer2 = 595;\n\n  const obstacles = await Texture.load(gl, \"./obstacle.webp\");\n  const gameovericon = await Texture.load(gl, \"./gameover.png\");\n  const tapToPlay = await Texture.load(gl, \"./taptoplay.png\");\n  const font = await BitmapFont.load(gl, \"./font.fnt\");\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n\n  const newBird = await Texture.load(gl, \"./newbird.png\");\n  const regions = TextureRegion.splitTexture(newBird, 3, 1);\n  const birdAnimation = new Animation(regions.slice(0, 3), 0.25);\n\n  let characterPosition = new Vector2(250, 500);\n  let rotationOfBird = 0;\n  let obstaclePosition1 = new Vector2(595, 195);\n  let obstaclePosition2 = new Vector2(995, 195);\n\n  gl.clearColor(0, 0, 0, 1);\n  let lastClick = false;\n  let speedY = 0;\n  let obstacleSpeed = 250;\n  let heightObstacleUp1 = 300;\n  let heightObstacleDown1 = 270;\n  let heightObstacleUp2 = 350;\n  let heightObstacleDown2 = 220;\n  let firstClick = false;\n  let runningGame = true;\n  let frame = 0;\n  let i = 0;\n  let gravityOfBird = 0;\n\n  let gravity = 300;\n\n  // let speedY = 0;\n\n  // if(speedY > 0) {\n  //   bird.y += speedY * delta;\n  //   speedY = Math.max(0, speedY - 10 * delta)\n  // } else {\n  //   bird.y -= gravity * delta;\n  // }\n\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    firstClick = true;\n\n    if (firstClick === true && runningGame === true) {\n      speedY = 400;\n      gravityOfBird = 0;\n    }\n\n    lastClick = true;\n  });\n\n  function moveOfBird(delta: number) {\n    if (lastClick) {\n      lastClick = true;\n      characterPosition.y = characterPosition.y + speedY * delta;\n      if (rotationOfBird <= 0.25) {\n        setTimeout(() => {\n          rotationOfBird += 0.1;\n          // console.log(rotationOfBird);\n        }, 50);\n      }\n\n      if (speedY <= 25) {\n        lastClick = false;\n      }\n    }\n\n    if (lastClick === false) {\n      characterPosition.y -= gravity * delta;\n      if (rotationOfBird >= -1.2) {\n        setTimeout(() => {\n          rotationOfBird -= 0.1;\n        }, 50);\n      }\n    }\n  }\n\n  function getRandomInt(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  function obstacleMove(delta: number) {\n    obstaclePosition1.x -= obstacleSpeed * delta;\n    obstaclePosition2.x -= obstacleSpeed * delta;\n\n    //bg move\n    layer1 -= delta * obstacleSpeed;\n    layer2 -= delta * obstacleSpeed;\n\n    if (obstaclePosition1.x < -200) {\n      obstaclePosition1.set(695, 195);\n      randomHeightOfObstacle();\n      // heightObstacleUp1 = getRandomInt(200, 800);\n      // heightObstacleDown1 = getRandomInt(200, 800);\n\n      if (obstacleSpeed <= 500) {\n        obstacleSpeed *= 1.02;\n      }\n    }\n    if (obstaclePosition2.x < -200) {\n      obstaclePosition2.set(695, 195);\n      randomHeightOfObstacle();\n      if (obstacleSpeed <= 500) {\n        obstacleSpeed *= 1.02;\n      }\n    }\n  }\n\n  function randomHeightOfObstacle() {\n    if (obstaclePosition1.x >= 600) {\n      let optionOfObstacle1 = getRandomInt(1, 5);\n      switch (optionOfObstacle1) {\n        case 1:\n          heightObstacleDown1 = 150;\n          heightObstacleUp1 = 500; //\n          break;\n\n        case 2:\n          heightObstacleDown1 = 250;\n          heightObstacleUp1 = 400;\n          break;\n        case 3:\n          heightObstacleDown1 = 350;\n          heightObstacleUp1 = 300;\n          break;\n        case 4:\n          heightObstacleDown1 = 450;\n          heightObstacleUp1 = 200;\n          break;\n        case 5:\n          heightObstacleDown1 = 550;\n          heightObstacleUp1 = 125;\n          break;\n        default:\n          break;\n      }\n    }\n\n    if (obstaclePosition2.x >= 600) {\n      let optionOfObstacle2 = getRandomInt(1, 5);\n      switch (optionOfObstacle2) {\n        case 1:\n          heightObstacleDown2 = 150;\n          heightObstacleUp2 = 500;\n          break;\n\n        case 2:\n          heightObstacleDown2 = 250;\n          heightObstacleUp2 = 400;\n          break;\n        case 3:\n          heightObstacleDown2 = 350;\n          heightObstacleUp2 = 300;\n          break;\n        case 4:\n          heightObstacleDown2 = 450;\n          heightObstacleUp2 = 200;\n          break;\n        case 5:\n          heightObstacleDown2 = 550;\n          heightObstacleUp2 = 125;\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  createGameLoop((delta: number) => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 600, 1000);\n    shapeRenderer.end();\n\n    frame += delta;\n    gravityOfBird += delta;\n\n    speedY = speedY - 12 - gravityOfBird;\n    console.log(speedY);\n\n    let region = birdAnimation.getKeyFrame(frame, PlayMode.LOOP);\n    if (i > 0.2) {\n      i = 0;\n      frame %= 3;\n    }\n\n    // console.log(characterPosition.y, speedY);\n    if (firstClick === true && runningGame === true) {\n      moveOfBird(delta);\n      obstacleMove(delta);\n    }\n    // console.log(layer1);\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background2, layer2, 0, 600, 1000);\n    batch.draw(background1, layer1, 0, 600, 1000);\n\n    region.draw(\n      batch,\n      characterPosition.x,\n      characterPosition.y, // height of chim\n      60,\n      60,\n      30,\n      30,\n      rotationOfBird\n    );\n\n    // obstacle 1\n    batch.draw(\n      obstacles,\n      obstaclePosition1.x - 50,\n      obstaclePosition1.y,\n      150,\n      heightObstacleDown1 // heightDown // default = 270 // max 500 min 150\n    );\n    batch.draw(\n      obstacles,\n      obstaclePosition1.x - 50,\n      obstaclePosition1.y + 610,\n      150,\n      heightObstacleUp1, // heightUp // default = 300 // max 500 min 150\n      75,\n      100,\n      47.13\n    );\n\n    // obstacles 2\n    batch.draw(\n      obstacles,\n      obstaclePosition2.x - 50,\n      obstaclePosition2.y,\n      150,\n      heightObstacleDown2 // height ben duoi default = 270 // max 500 min 150\n    );\n    batch.draw(\n      obstacles,\n      obstaclePosition2.x - 50,\n      obstaclePosition2.y + 610,\n      150,\n      heightObstacleUp2, // height ben tren // default = 300 // max 500 min 150\n      75,\n      100,\n      47.13\n    );\n\n    if (firstClick === false && runningGame === true) {\n      batch.draw(tapToPlay, 180, 330, 200, 200);\n    }\n\n    if (characterPosition.y <= 190) {\n      runningGame = false;\n      firstClick = false;\n      lastClick = false;\n      speedY = 0;\n      batch.draw(gameovericon, 50, 500, 500, 250);\n    }\n\n    if (Math.abs(characterPosition.x - obstaclePosition1.x) <= 90) {\n      // crash with obstacleDown\n      if (characterPosition.y - 90 - heightObstacleDown1 <= 90) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n\n      // crash with obstacleUp\n\n      if (heightObstacleUp1 === 500 && characterPosition.y >= 460) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n      if (heightObstacleUp1 === 400 && characterPosition.y >= 560) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n      if (heightObstacleUp1 === 300 && characterPosition.y >= 660) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n      if (heightObstacleUp1 === 200 && characterPosition.y >= 760) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n      if (heightObstacleUp1 === 125 && characterPosition.y >= 830) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n    }\n\n    if (Math.abs(characterPosition.x - obstaclePosition2.x) <= 90) {\n      if (characterPosition.y - 90 - heightObstacleDown2 <= 90) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n\n      if (heightObstacleUp2 === 350 && characterPosition.y >= 610) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n\n      if (heightObstacleUp2 === 500 && characterPosition.y >= 460) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n      if (heightObstacleUp2 === 400 && characterPosition.y >= 560) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n      if (heightObstacleUp2 === 300 && characterPosition.y >= 660) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0; // correct\n      }\n      if (heightObstacleUp2 === 200 && characterPosition.y >= 760) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n      if (heightObstacleUp2 === 125 && characterPosition.y >= 830) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedY = 0;\n      }\n    }\n    if (runningGame === false) {\n      font.draw(batch, \"F5 TO TRYAGAIN\", 220, 450, 250);\n    }\n\n    //bg\n    if (layer1 <= -595) {\n      layer1 = 593;\n    }\n    if (layer2 <= -595) {\n      layer2 = 593;\n    }\n\n    batch.end();\n  });\n};\n\ninit();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}