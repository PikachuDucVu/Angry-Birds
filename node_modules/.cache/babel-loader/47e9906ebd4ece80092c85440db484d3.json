{"ast":null,"code":"var hxDaedalus = require(\"hxdaedalus-js\").hxDaedalus;\n\nvar RectMesh = hxDaedalus.factories.RectMesh;\nvar EntityAI = hxDaedalus.ai.EntityAI;\nvar PathFinder = hxDaedalus.ai.PathFinder;\nvar DaedalusObject = hxDaedalus.data.Object;\n\nfunction Walkable(width, height) {\n  var mesh = RectMesh.buildRectangle(width, height);\n  var entity = new EntityAI();\n  var pathFinder = new PathFinder();\n  pathFinder.entity = entity;\n  pathFinder.set_mesh(mesh);\n  this.mesh = mesh;\n  this.entity = entity;\n  this.pathFinder = pathFinder;\n  this.path = [];\n}\n\nWalkable.prototype.addRect = function (w, h, x, y) {\n  var obj = new DaedalusObject();\n  obj.set_coordinates([0, 0, 0, h, 0, h, w, h, w, h, w, 0, w, 0, 0, 0]);\n  obj.set_x(x);\n  obj.set_y(y);\n  this.mesh.insertObject(obj);\n  return obj;\n};\n\nWalkable.prototype.addPolygon = function (vertices, x, y) {\n  if (vertices.length < 6) {\n    console.log(\"Polygons must contain at least 3 points!\");\n    return;\n  }\n\n  var obj = new DaedalusObject();\n  var coords = [];\n  var prevX = vertices[vertices.length - 2],\n      prevY = vertices[vertices.length - 1];\n\n  for (var i = 0; i < vertices.length; i += 2) {\n    var currX = vertices[i],\n        currY = vertices[i + 1];\n    coords.push(prevX, prevY, currX, currY);\n    prevX = currX;\n    prevY = currY;\n  }\n\n  obj.set_coordinates(coords);\n  obj.set_x(x || 0);\n  obj.set_y(y || 0);\n  this.mesh.insertObject(obj);\n  return obj;\n};\n\nWalkable.prototype.addPolyline = function (vertices, x, y) {\n  if (vertices.length < 4) {\n    console.log(\"Polylines must contain at least 2 points!\");\n    return;\n  }\n\n  var obj = new DaedalusObject();\n  var coords = [];\n  var prevX = 0,\n      prevY = 0;\n\n  for (var i = 0; i < vertices.length; i += 2) {\n    var currX = vertices[i],\n        currY = vertices[i + 1];\n\n    if (i > 0) {\n      coords.push(prevX, prevY, currX, currY);\n    }\n\n    prevX = currX;\n    prevY = currY;\n  }\n\n  obj.set_coordinates(coords);\n  obj.set_x(x || 0);\n  obj.set_y(y || 0);\n  this.mesh.insertObject(obj);\n  return obj;\n};\n\nWalkable.prototype.deleteObstacle = function (obj) {\n  this.mesh.deleteObject(obj);\n};\n\nWalkable.prototype.findPath = function (fromX, fromY, toX, toY, radius, path) {\n  if (path === undefined) path = this.path;\n  this.entity.set_radius(radius);\n  this.entity.x = fromX;\n  this.entity.y = fromY;\n  this.pathFinder.findPath(toX, toY, path);\n  return path;\n};\n\nmodule.exports = Walkable;","map":{"version":3,"names":["hxDaedalus","require","RectMesh","factories","EntityAI","ai","PathFinder","DaedalusObject","data","Object","Walkable","width","height","mesh","buildRectangle","entity","pathFinder","set_mesh","path","prototype","addRect","w","h","x","y","obj","set_coordinates","set_x","set_y","insertObject","addPolygon","vertices","length","console","log","coords","prevX","prevY","i","currX","currY","push","addPolyline","deleteObstacle","deleteObject","findPath","fromX","fromY","toX","toY","radius","undefined","set_radius","module","exports"],"sources":["D:/projects/test-game/node_modules/walkable/index.js"],"sourcesContent":["var hxDaedalus = require(\"hxdaedalus-js\").hxDaedalus;\n\nvar RectMesh = hxDaedalus.factories.RectMesh;\nvar EntityAI = hxDaedalus.ai.EntityAI;\nvar PathFinder = hxDaedalus.ai.PathFinder;\nvar DaedalusObject = hxDaedalus.data.Object;\n\nfunction Walkable(width, height) {\n  var mesh = RectMesh.buildRectangle(width, height);\n  var entity = new EntityAI();\n  var pathFinder = new PathFinder();\n  pathFinder.entity = entity;\n  pathFinder.set_mesh(mesh);\n\n  this.mesh = mesh;\n  this.entity = entity;\n  this.pathFinder = pathFinder;\n  this.path = [];\n}\n\nWalkable.prototype.addRect = function (w, h, x, y) {\n  var obj = new DaedalusObject();\n  obj.set_coordinates([0, 0, 0, h, 0, h, w, h, w, h, w, 0, w, 0, 0, 0]);\n  obj.set_x(x);\n  obj.set_y(y);\n  this.mesh.insertObject(obj);\n\n  return obj;\n};\n\nWalkable.prototype.addPolygon = function (vertices, x, y) {\n  if (vertices.length < 6) {\n    console.log(\"Polygons must contain at least 3 points!\");\n    return;\n  }\n  var obj = new DaedalusObject();\n  var coords = [];\n\n  var prevX = vertices[vertices.length - 2],\n    prevY = vertices[vertices.length - 1];\n\n  for (var i = 0; i < vertices.length; i += 2) {\n    var currX = vertices[i],\n      currY = vertices[i + 1];\n    coords.push(prevX, prevY, currX, currY);\n    prevX = currX;\n    prevY = currY;\n  }\n\n  obj.set_coordinates(coords);\n  obj.set_x(x || 0);\n  obj.set_y(y || 0);\n  this.mesh.insertObject(obj);\n\n  return obj;\n};\n\nWalkable.prototype.addPolyline = function (vertices, x, y) {\n  if (vertices.length < 4) {\n    console.log(\"Polylines must contain at least 2 points!\");\n    return;\n  }\n  var obj = new DaedalusObject();\n  var coords = [];\n\n  var prevX = 0,\n    prevY = 0;\n\n  for (var i = 0; i < vertices.length; i += 2) {\n    var currX = vertices[i],\n      currY = vertices[i + 1];\n    if (i > 0) {\n      coords.push(prevX, prevY, currX, currY);\n    }\n    prevX = currX;\n    prevY = currY;\n  }\n\n  obj.set_coordinates(coords);\n  obj.set_x(x || 0);\n  obj.set_y(y || 0);\n  this.mesh.insertObject(obj);\n\n  return obj;\n};\n\nWalkable.prototype.deleteObstacle = function (obj) {\n  this.mesh.deleteObject(obj);\n};\n\nWalkable.prototype.findPath = function (fromX, fromY, toX, toY, radius, path) {\n  if (path === undefined) path = this.path;\n  this.entity.set_radius(radius);\n  this.entity.x = fromX;\n  this.entity.y = fromY;\n\n  this.pathFinder.findPath(toX, toY, path);\n\n  return path;\n};\n\nmodule.exports = Walkable;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}