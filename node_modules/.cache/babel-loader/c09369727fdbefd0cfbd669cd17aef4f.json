{"ast":null,"code":"import { createStage, createViewport, createGameLoop, ShapeRenderer, Texture, TextureRegion, PolygonBatch, Animation, PlayMode, ViewportInputHandler, InputEvent, Vector2 } from \"gdxts\";\nimport { initTest2 } from \"./test2\";\n\nconst init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext(); // eslint-disable-next-line\n\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n  const walkDownAnimation = new Animation(regions.slice(0, 4), 0.2);\n  const walkLeftAnimation = new Animation(regions.slice(4, 8), 0.2);\n  const walkRightAnimation = new Animation(regions.slice(8, 12), 0.2);\n  const walkUpAnimation = new Animation(regions.slice(12, 16), 0.2);\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  const characterPosition = new Vector2(250, 500);\n  let rotation = 0; // const ROTATION_SPEED = Math.PI * 2;\n\n  let frame = 0;\n  gl.clearColor(0, 0, 0, 1);\n  let nextPositon = new Vector2(250, 500);\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    nextPositon = inputHandler.getTouchedWorldCoord();\n    rotation = Math.atan2(nextPositon.y - characterPosition.y, nextPositon.x - characterPosition.x) * 180 / Math.PI;\n  });\n  const moveSpeed = 150;\n\n  function changePosition(delta) {\n    if (characterPosition.x < nextPositon.x) {\n      characterPosition.x = Math.min(characterPosition.x + delta * moveSpeed, nextPositon.x);\n    }\n\n    if (characterPosition.y < nextPositon.y) {\n      characterPosition.y = Math.min(characterPosition.y + delta * moveSpeed, nextPositon.y);\n    }\n\n    if (characterPosition.x > nextPositon.x) {\n      characterPosition.x = Math.max(characterPosition.x - delta * moveSpeed, nextPositon.x);\n    }\n\n    if (characterPosition.y > nextPositon.y) {\n      characterPosition.y = Math.max(characterPosition.y - delta * moveSpeed, nextPositon.y);\n    }\n  }\n\n  createGameLoop(delta => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n    let region = walkDownAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n\n    if (characterPosition.x !== nextPositon.x || characterPosition.y !== nextPositon.y) {\n      frame += delta;\n\n      if (rotation > 75 && rotation < 105) {\n        region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      } else if (rotation > -105 && rotation < -75) {\n        region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      } else if (rotation >= 0 && rotation < 90) {\n        region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      } else if (rotation >= 90 && rotation < 180) {\n        region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      } else if (rotation >= -180 && rotation < -90) {\n        region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      } else {\n        region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      }\n    } else {\n      frame = 0;\n    }\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    changePosition(delta);\n    region.draw(batch, characterPosition.x - 50, characterPosition.y, 100, 100);\n    batch.end();\n  });\n};\n\ninit(); // option 1\n\ninitTest2(); // option 2\n\nexport {};","map":{"version":3,"names":["createStage","createViewport","createGameLoop","ShapeRenderer","Texture","TextureRegion","PolygonBatch","Animation","PlayMode","ViewportInputHandler","InputEvent","Vector2","initTest2","init","stage","canvas","getCanvas","viewport","gl","getContext","characterTexture","load","regions","splitTexture","walkDownAnimation","slice","walkLeftAnimation","walkRightAnimation","walkUpAnimation","shapeRenderer","batch","camera","getCamera","inputHandler","characterPosition","rotation","frame","clearColor","nextPositon","addEventListener","TouchStart","x","y","getTouchedWorldCoord","Math","atan2","PI","moveSpeed","changePosition","delta","min","max","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end","region","getKeyFrame","NORMAL","LOOP","draw"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createStage,\n  createViewport,\n  createGameLoop,\n  ShapeRenderer,\n  Texture,\n  TextureRegion,\n  PolygonBatch,\n  Animation,\n  PlayMode,\n  ViewportInputHandler,\n  InputEvent,\n  Vector2,\n} from \"gdxts\";\nimport { initTest2 } from \"./test2\";\nconst init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n\n  // eslint-disable-next-line\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n\n  const walkDownAnimation = new Animation(regions.slice(0, 4), 0.2);\n  const walkLeftAnimation = new Animation(regions.slice(4, 8), 0.2);\n  const walkRightAnimation = new Animation(regions.slice(8, 12), 0.2);\n  const walkUpAnimation = new Animation(regions.slice(12, 16), 0.2);\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n\n  const inputHandler = new ViewportInputHandler(viewport);\n  const characterPosition = new Vector2(250, 500);\n\n  let rotation = 0;\n  // const ROTATION_SPEED = Math.PI * 2;\n\n  let frame = 0;\n\n  gl.clearColor(0, 0, 0, 1);\n\n  let nextPositon = new Vector2(250, 500);\n\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    nextPositon = inputHandler.getTouchedWorldCoord();\n    rotation =\n      (Math.atan2(\n        nextPositon.y - characterPosition.y,\n        nextPositon.x - characterPosition.x\n      ) *\n        180) /\n      Math.PI;\n  });\n\n  const moveSpeed = 150;\n  function changePosition(delta: number) {\n    if (characterPosition.x < nextPositon.x) {\n      characterPosition.x = Math.min(\n        characterPosition.x + delta * moveSpeed,\n        nextPositon.x\n      );\n    }\n    if (characterPosition.y < nextPositon.y) {\n      characterPosition.y = Math.min(\n        characterPosition.y + delta * moveSpeed,\n        nextPositon.y\n      );\n    }\n    if (characterPosition.x > nextPositon.x) {\n      characterPosition.x = Math.max(\n        characterPosition.x - delta * moveSpeed,\n        nextPositon.x\n      );\n    }\n    if (characterPosition.y > nextPositon.y) {\n      characterPosition.y = Math.max(\n        characterPosition.y - delta * moveSpeed,\n        nextPositon.y\n      );\n    }\n  }\n\n  createGameLoop((delta: number) => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n    let region = walkDownAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n\n    if (\n      characterPosition.x !== nextPositon.x ||\n      characterPosition.y !== nextPositon.y\n    ) {\n      frame += delta;\n      if (rotation > 75 && rotation < 105) {\n        region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      } else if (rotation > -105 && rotation < -75) {\n        region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      } else if (rotation >= 0 && rotation < 90) {\n        region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      } else if (rotation >= 90 && rotation < 180) {\n        region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      } else if (rotation >= -180 && rotation < -90) {\n        region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      } else {\n        region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      }\n    } else {\n      frame = 0;\n    }\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    changePosition(delta);\n\n    region.draw(batch, characterPosition.x - 50, characterPosition.y, 100, 100);\n    batch.end();\n  });\n};\ninit(); // option 1\ninitTest2(); // option 2\n\nexport {};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}