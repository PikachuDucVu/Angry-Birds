{"ast":null,"code":"import { createStage, createViewport, createGameLoop, ShapeRenderer, Texture, TextureRegion, PolygonBatch, Animation, PlayMode, ViewportInputHandler, InputEvent } from \"gdxts\";\nimport Vector2 from \"gdxts/dist/lib/Vector2\";\n\nconst init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext(); // eslint-disable-next-line\n  // const texture = await Texture.load(gl, \"./charizard.png\");\n\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n  const walkAnimation = new Animation(regions.slice(0, 4), 0.2);\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  const characterPosition = new Vector2(250, 500); // const ROTATION_SPEED = Math.PI * 2;\n\n  let i = 0;\n  let frame = 0;\n  gl.clearColor(0, 0, 0, 1);\n  let nextPositon;\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    nextPositon = inputHandler.getTouchedWorldCoord();\n    nextPositon.set(Math.round(nextPositon.x), Math.round(nextPositon.y));\n  });\n  let rotation = Math.sin(characterPosition.y / characterPosition.x);\n\n  function changePosition() {\n    if (characterPosition.x < nextPositon.x) {\n      characterPosition.x++;\n    }\n\n    if (characterPosition.y < nextPositon.y) {\n      characterPosition.y++;\n    }\n\n    if (characterPosition.x > nextPositon.x) {\n      characterPosition.x--;\n    }\n\n    if (characterPosition.y > nextPositon.y) {\n      characterPosition.y--;\n    }\n  }\n\n  createGameLoop(delta => {\n    i += delta;\n    console.log(rotation);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n    let region = walkAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n\n    if (characterPosition.x !== nextPositon.x || characterPosition.y !== nextPositon.y) {\n      if (i > 0.2) {\n        i = 0;\n      }\n    } else {\n      frame = 0;\n    }\n\n    if (rotation >= 0 && rotation < 90 && (characterPosition.x !== nextPositon.x || characterPosition.y !== nextPositon.y)) {\n      frame++;\n      frame = frame % 4;\n      changePosition();\n    }\n\n    if (rotation >= 90 && rotation < 180 && (characterPosition.x !== nextPositon.x || characterPosition.y !== nextPositon.y)) {\n      regions[frame + 12].draw(batch, characterPosition.x, characterPosition.y, 100, 100);\n      changePosition();\n    }\n\n    console.log(frame);\n    batch.setProjection(camera.projectionView.values);\n    batch.begin(); // batch.draw(\n    //   characterTexture,\n    //   10,\n    //   10,\n    //   500,\n    //   500\n    //   // 100,\n    //   // 100\n    //   // rotation,\n    //   // scale,\n    //   // scale\n    // );\n\n    region.draw(batch, characterPosition.x - 50, characterPosition.y, 100, 100);\n    batch.end();\n  });\n};\n\ninit();\nexport {};","map":{"version":3,"names":["createStage","createViewport","createGameLoop","ShapeRenderer","Texture","TextureRegion","PolygonBatch","Animation","PlayMode","ViewportInputHandler","InputEvent","Vector2","init","stage","canvas","getCanvas","viewport","gl","getContext","characterTexture","load","regions","splitTexture","walkAnimation","slice","shapeRenderer","batch","camera","getCamera","inputHandler","characterPosition","i","frame","clearColor","nextPositon","addEventListener","TouchStart","x","y","getTouchedWorldCoord","set","Math","round","rotation","sin","changePosition","delta","console","log","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end","region","getKeyFrame","NORMAL","draw"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createStage,\n  createViewport,\n  createGameLoop,\n  ShapeRenderer,\n  Texture,\n  TextureRegion,\n  PolygonBatch,\n  Animation,\n  PlayMode,\n  ViewportInputHandler,\n  InputEvent,\n} from \"gdxts\";\nimport Vector2 from \"gdxts/dist/lib/Vector2\";\n\nconst init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n\n  // eslint-disable-next-line\n  // const texture = await Texture.load(gl, \"./charizard.png\");\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n\n  const walkAnimation = new Animation(regions.slice(0, 4), 0.2);\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n\n  const inputHandler = new ViewportInputHandler(viewport);\n  const characterPosition = new Vector2(250, 500);\n\n  // const ROTATION_SPEED = Math.PI * 2;\n  let i = 0;\n  let frame = 0;\n  gl.clearColor(0, 0, 0, 1);\n\n  let nextPositon: any;\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    nextPositon = inputHandler.getTouchedWorldCoord();\n    nextPositon.set(Math.round(nextPositon.x), Math.round(nextPositon.y));\n  });\n  let rotation = Math.sin(characterPosition.y / characterPosition.x);\n  function changePosition() {\n    if (characterPosition.x < nextPositon.x) {\n      characterPosition.x++;\n    }\n    if (characterPosition.y < nextPositon.y) {\n      characterPosition.y++;\n    }\n    if (characterPosition.x > nextPositon.x) {\n      characterPosition.x--;\n    }\n    if (characterPosition.y > nextPositon.y) {\n      characterPosition.y--;\n    }\n  }\n  createGameLoop((delta: number) => {\n    i += delta;\n\n    console.log(rotation);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n    let region = walkAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n    if (\n      characterPosition.x !== nextPositon.x ||\n      characterPosition.y !== nextPositon.y\n    ) {\n      if (i > 0.2) {\n        i = 0;\n      }\n    } else {\n      frame = 0;\n    }\n\n    if (\n      rotation >= 0 &&\n      rotation < 90 &&\n      (characterPosition.x !== nextPositon.x ||\n        characterPosition.y !== nextPositon.y)\n    ) {\n      frame++;\n      frame = frame % 4;\n      changePosition();\n    }\n\n    if (\n      rotation >= 90 &&\n      rotation < 180 &&\n      (characterPosition.x !== nextPositon.x ||\n        characterPosition.y !== nextPositon.y)\n    ) {\n      regions[frame + 12].draw(\n        batch,\n        characterPosition.x,\n        characterPosition.y,\n        100,\n        100\n      );\n      changePosition();\n    }\n\n    console.log(frame);\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    // batch.draw(\n    //   characterTexture,\n    //   10,\n    //   10,\n    //   500,\n    //   500\n    //   // 100,\n    //   // 100\n    //   // rotation,\n    //   // scale,\n    //   // scale\n    // );\n\n    region.draw(batch, characterPosition.x - 50, characterPosition.y, 100, 100);\n    batch.end();\n  });\n};\ninit();\n\nexport {};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}