{"ast":null,"code":"import _initializerDefineProperty from \"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js\";\nimport _applyDecoratedDescriptor from \"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\";\nimport _initializerWarningHelper from \"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper.js\";\n\nvar _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8;\n\nimport { b2BodyType } from \"box2d.ts\";\nimport { System, Inject } from \"flat-ecs\";\nimport { InputEvent } from \"gdxts\";\nimport { Constants } from \"../Constants\";\nexport let inputHandlerSystem = (_dec = Inject(\"inputHandler\"), _dec2 = Inject(\"originPosition\"), _dec3 = Inject(\"slingPos\"), _dec4 = Inject(\"bird\"), _dec5 = Inject(\"boxes\"), _dec6 = Inject(\"birdOnSlingShot\"), _dec7 = Inject(\"physicWorld\"), _dec8 = Inject(\"levelState\"), (_class = class inputHandlerSystem extends System {\n  constructor() {\n    super(...arguments);\n\n    _initializerDefineProperty(this, \"inputHandler\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"originPosition\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"slingPos\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"bird\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"boxes\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"birdOnSlingShot\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"physicWorld\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"levelState\", _descriptor8, this);\n\n    this.flyStatus = void 0;\n  }\n\n  initialized() {\n    this.flyStatus = false;\n    this.inputHandler.addEventListener(InputEvent.TouchMove, () => {\n      if (this.inputHandler.isTouched()) {\n        this.slingPos.setVector(this.inputHandler.getTouchedWorldCoord());\n      }\n    });\n    this.inputHandler.addEventListener(InputEvent.TouchStart, () => {\n      if (this.levelState.remainingTimeOfUseSpecialSkill > 0) {\n        console.log(\"dcm\");\n      }\n    });\n    this.inputHandler.addEventListener(InputEvent.TouchEnd, () => {\n      if (this.levelState.conditionWin === false) {\n        if (this.levelState.birdCount < 4) {\n          this.bird[this.levelState.birdCount].SetType(b2BodyType.b2_dynamicBody);\n          this.bird[this.levelState.birdCount].ApplyLinearImpulseToCenter({\n            x: 7 * (this.originPosition.x - this.slingPos.x) / Constants.METER_TO_WORLD,\n            y: 7 * (this.originPosition.y - this.slingPos.y) / Constants.METER_TO_WORLD\n          }, true);\n        }\n\n        this.levelState.birdCount++;\n\n        if (this.levelState.birdCount + 1 <= 4 && this.bird.length !== 0) {\n          this.flyStatus = true;\n          setTimeout(() => {\n            this.bird[this.levelState.birdCount].SetPositionXY(2, 3.45);\n          }, 3000);\n        }\n      } else {}\n    }); // window.onkeydown = (ev: KeyboardEvent): any => {\n    //   if (!this.this.birdOnSlingShot && ev.key === \"r\") {\n    //   }\n    // };\n  }\n\n  process() {\n    console.log(this.levelState.remainingTimeOfUseSpecialSkill);\n\n    if (this.levelState.remainingTimeOfUseSpecialSkill < 0) {\n      this.flyStatus = false;\n    }\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"inputHandler\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"originPosition\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"slingPos\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"bird\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"boxes\", [_dec5], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"birdOnSlingShot\", [_dec6], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"physicWorld\", [_dec7], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"levelState\", [_dec8], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class));","map":{"version":3,"names":["b2BodyType","System","Inject","InputEvent","Constants","inputHandlerSystem","flyStatus","initialized","inputHandler","addEventListener","TouchMove","isTouched","slingPos","setVector","getTouchedWorldCoord","TouchStart","levelState","remainingTimeOfUseSpecialSkill","console","log","TouchEnd","conditionWin","birdCount","bird","SetType","b2_dynamicBody","ApplyLinearImpulseToCenter","x","originPosition","METER_TO_WORLD","y","length","setTimeout","SetPositionXY","process"],"sources":["D:/projects/test-game/src/system/inputHandleSystem.ts"],"sourcesContent":["import { b2Body, b2BodyType, b2World } from \"box2d.ts\";\r\nimport { System, Inject } from \"flat-ecs\";\r\nimport { InputEvent, Vector2, ViewportInputHandler } from \"gdxts\";\r\nimport { Constants } from \"../Constants\";\r\nimport { LevelState } from \"../data/LevelState\";\r\n\r\nexport class inputHandlerSystem extends System {\r\n  @Inject(\"inputHandler\") inputHandler: ViewportInputHandler;\r\n  @Inject(\"originPosition\") originPosition: Vector2;\r\n  @Inject(\"slingPos\") slingPos: Vector2;\r\n  @Inject(\"bird\") bird: b2Body[];\r\n  @Inject(\"boxes\") boxes: b2Body[];\r\n  @Inject(\"birdOnSlingShot\") birdOnSlingShot: boolean;\r\n  @Inject(\"physicWorld\") physicWorld: b2World;\r\n  @Inject(\"levelState\") levelState: LevelState;\r\n  flyStatus: boolean;\r\n  initialized(): void {\r\n    this.flyStatus = false;\r\n\r\n    this.inputHandler.addEventListener(InputEvent.TouchMove, () => {\r\n      if (this.inputHandler.isTouched()) {\r\n        this.slingPos.setVector(this.inputHandler.getTouchedWorldCoord());\r\n      }\r\n    });\r\n\r\n    this.inputHandler.addEventListener(InputEvent.TouchStart, () => {\r\n      if (this.levelState.remainingTimeOfUseSpecialSkill > 0) {\r\n        console.log(\"dcm\");\r\n      }\r\n    });\r\n\r\n    this.inputHandler.addEventListener(InputEvent.TouchEnd, () => {\r\n      if (this.levelState.conditionWin === false) {\r\n        if (this.levelState.birdCount < 4) {\r\n          this.bird[this.levelState.birdCount].SetType(\r\n            b2BodyType.b2_dynamicBody\r\n          );\r\n          this.bird[this.levelState.birdCount].ApplyLinearImpulseToCenter(\r\n            {\r\n              x:\r\n                (7 * (this.originPosition.x - this.slingPos.x)) /\r\n                Constants.METER_TO_WORLD,\r\n              y:\r\n                (7 * (this.originPosition.y - this.slingPos.y)) /\r\n                Constants.METER_TO_WORLD,\r\n            },\r\n            true\r\n          );\r\n        }\r\n        this.levelState.birdCount++;\r\n        if (this.levelState.birdCount + 1 <= 4 && this.bird.length !== 0) {\r\n          this.flyStatus = true;\r\n          setTimeout(() => {\r\n            this.bird[this.levelState.birdCount].SetPositionXY(2, 3.45);\r\n          }, 3000);\r\n        }\r\n      } else {\r\n      }\r\n    });\r\n    // window.onkeydown = (ev: KeyboardEvent): any => {\r\n    //   if (!this.this.birdOnSlingShot && ev.key === \"r\") {\r\n    //   }\r\n    // };\r\n  }\r\n\r\n  process(): void {\r\n    console.log(this.levelState.remainingTimeOfUseSpecialSkill);\r\n    if (this.levelState.remainingTimeOfUseSpecialSkill < 0) {\r\n      this.flyStatus = false;\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}