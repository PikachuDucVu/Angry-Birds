{"ast":null,"code":"import _regeneratorRuntime from\"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _classCallCheck from\"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _asyncToGenerator from\"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{createGameLoop,createStage,createViewport,PolygonBatch,Texture,BitmapFont}from\"gdxts\";var ROWS=24;var COLS=12;var GAME_WIDTH=1500;var GAME_HEIGHT=2000;export var init=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var stage,canvas,viewport,gl,font,batch,camera,bgRight,block,mainBlock,gameOverIcon,SQUARE_SIZE,dropTime,score,gameover,iBlock,lBlock,lReverseBlock,sBlock,zBlock,zReverseBlock,tBlock,speedGame,Piece,blocks,piece,nextPiece,control,getRandomInt,map,row,col,drawMapGame,drawSquare;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:drawSquare=function _drawSquare(x,y,color){batch.begin();batch.draw(color?mainBlock:block,// 0 = gray // 1 = green\nSQUARE_SIZE*x,SQUARE_SIZE*y,SQUARE_SIZE,SQUARE_SIZE);batch.end();};drawMapGame=function _drawMapGame(){for(var _row2=0;_row2<ROWS;_row2++){for(var _col4=0;_col4<COLS;_col4++){drawSquare(_col4,_row2,map[_row2][_col4]===1?1:0);}}};getRandomInt=function _getRandomInt(min,max){return Math.floor(Math.random()*(max-min))+min;};control=function _control(e){if(e.keyCode===37){piece.moveLeft();}else if(e.keyCode===38){piece.rotate();}else if(e.keyCode===39){piece.moveRight();}else if(e.keyCode===40){piece.moveDown();piece.moveDown();}};stage=createStage();canvas=stage.getCanvas();viewport=createViewport(canvas,GAME_WIDTH,GAME_HEIGHT);gl=viewport.getContext();_context.next=10;return BitmapFont.load(gl,\"./1231231.fnt\");case 10:font=_context.sent;batch=new PolygonBatch(gl);camera=viewport.getCamera();batch.setYDown(true);camera.setYDown(true);_context.next=17;return Texture.load(gl,\"./bg1.png\");case 17:bgRight=_context.sent;_context.next=20;return Texture.load(gl,\"./borderBlock.png\");case 20:block=_context.sent;_context.next=23;return Texture.load(gl,\"./GreenBlock.png\");case 23:mainBlock=_context.sent;_context.next=26;return Texture.load(gl,\"./gameover.png\");case 26:gameOverIcon=_context.sent;SQUARE_SIZE=83;dropTime=0;score=0;gameover=false;//tetrominoes\n//I\niBlock=[[[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]],[[0,1,0,0],[0,1,0,0],[0,1,0,0],[0,1,0,0]]];//L\nlBlock=[[[0,0,1],[1,1,1],[0,0,0]],[[0,1,0],[0,1,0],[0,1,1]],[[0,0,0],[1,1,1],[1,0,0]],[[1,1,0],[0,1,0],[0,1,0]]];//L-reverse\nlReverseBlock=[[[1,0,0],[1,1,1],[0,0,0]],[[0,1,1],[0,1,0],[0,1,0]],[[0,0,0],[1,1,1],[0,0,1]],[[0,1,0],[0,1,0],[1,1,0]]];// Square\nsBlock=[[[1,1],[1,1]]];// Z\nzBlock=[[[0,1,1],[1,1,0],[0,0,0]],[[0,1,0],[0,1,1],[0,0,1]]];// Z-reverse\nzReverseBlock=[[[1,1,0],[0,1,1],[0,0,0]],[[0,0,1],[0,1,1],[0,1,0]]];// T\ntBlock=[[[0,1,0],[1,1,1],[0,0,0]],[[0,1,0],[0,1,1],[0,1,0]],[[0,0,0],[1,1,1],[0,1,0]],[[0,1,0],[1,1,0],[0,1,0]]];speedGame=0.5;Piece=/*#__PURE__*/function(){function Piece(tetromino,nextTetro){_classCallCheck(this,Piece);this.tetromino=void 0;this.color=void 0;this.tetrominoN=void 0;this.activeTetromino=void 0;this.temp=void 0;this.x=void 0;this.y=void 0;this.tetromino=tetromino;this.tetrominoN=0;this.activeTetromino=this.tetromino[this.tetrominoN];this.x=4;this.y=0;}_createClass(Piece,[{key:\"fill\",value:function fill(color){for(var row=0;row<this.activeTetromino.length;row++){for(var col=0;col<this.activeTetromino.length;col++){if(this.activeTetromino[row][col]){drawSquare(this.x+col,this.y+row,color);}}}}},{key:\"draw\",value:function draw(){this.fill(1);}},{key:\"undraw\",value:function undraw(){this.fill(0);}},{key:\"lock\",value:function lock(){for(var row=0;row<this.activeTetromino.length;row++){for(var col=0;col<this.activeTetromino.length;col++){if(!this.activeTetromino[row][col]){continue;}map[this.y+row][this.x+col]=1;//checkGameOver\nif(this.y+row<1){gameover=true;}}// console.warn(map);\n}//checkpoint\nfor(var _row=0;_row<ROWS;_row++){var fullRow=true;for(var _col=0;_col<COLS;_col++){fullRow=fullRow&&map[_row][_col]!==0;}if(fullRow){for(var y=_row;y>1;y--){for(var _col2=0;_col2<COLS;_col2++){map[y][_col2]=map[y-1][_col2];}}for(var _col3=0;_col3<COLS;_col3++){map[0][_col3]=0;}if(speedGame>0.15){speedGame-=0.04;console.log(speedGame);}}}score+=10;}},{key:\"collision\",value:function collision(x,y,piece){for(var row=0;row<piece.length;row++){for(var col=0;col<piece.length;col++){if(!piece[row][col]){continue;}var newX=this.x+col+x;var newY=this.y+row+y;if(newX<0||newX>=COLS||newY>=ROWS){return true;}if(newY<0){continue;}if(map[newY][newX]!==0){return true;}}}return false;}},{key:\"rotate\",value:function rotate(){var nextRotateOfBlock=this.tetromino[(this.tetrominoN+1)%this.tetromino.length];var kick=0;if(this.collision(0,0,nextRotateOfBlock)){if(this.x>COLS/2){kick=-1;}else{kick=1;}}if(!this.collision(kick,0,nextRotateOfBlock)){this.undraw();this.x+=kick;this.tetrominoN=(this.tetrominoN+1)%this.tetromino.length;this.activeTetromino=this.tetromino[this.tetrominoN];this.draw();}}},{key:\"moveDown\",value:function moveDown(){if(this.y>=22){this.lock();piece=new Piece(nextPiece);nextPiece=blocks[getRandomInt(0,6)];}if(!this.collision(0,1,this.activeTetromino)){this.undraw();this.y++;this.draw();}else{this.lock();piece=new Piece(nextPiece);nextPiece=blocks[getRandomInt(0,6)];}}},{key:\"moveLeft\",value:function moveLeft(){if(!this.collision(-1,0,this.activeTetromino)){this.undraw();this.x--;this.draw();}}},{key:\"moveRight\",value:function moveRight(){if(!this.collision(1,0,this.activeTetromino)){this.undraw();this.x++;this.draw();}}},{key:\"showNextTetromino\",value:function showNextTetromino(nextTetro){for(var row=0;row<nextTetro.length;row++){for(var col=0;col<nextTetro[row].length;col++){if(nextTetro[row][col]){drawSquare(13.4+col,3.2+row,1);}}}}}]);return Piece;}();blocks=[iBlock,lBlock,lReverseBlock,tBlock,sBlock,zBlock,zReverseBlock];piece=new Piece(blocks[4]);nextPiece=blocks[getRandomInt(0,6)];window.addEventListener(\"keydown\",function(e){control(e);});map=[];for(row=0;row<ROWS;row++){map[row]=[];for(col=0;col<COLS;col++){drawSquare(col,row,0);map[row][col]=0;}}createGameLoop(function(delta){gl.clearColor(0,0,0,1);gl.clear(gl.COLOR_BUFFER_BIT);batch.setProjection(camera.projectionView.values);drawMapGame();batch.begin();batch.draw(bgRight,1000,0,500,2000);batch.end();piece.fill(1);piece.showNextTetromino(nextPiece[0]);if(!gameover){dropTime+=delta;if(dropTime>=speedGame){dropTime=0;piece.moveDown();}}else{batch.begin();batch.draw(gameOverIcon,GAME_WIDTH/2-760,GAME_HEIGHT/2-500,1000,1000);batch.end();}});case 47:case\"end\":return _context.stop();}}},_callee);}));return function init(){return _ref.apply(this,arguments);};}();init();","map":{"version":3,"names":["createGameLoop","createStage","createViewport","PolygonBatch","Texture","BitmapFont","ROWS","COLS","GAME_WIDTH","GAME_HEIGHT","init","control","getRandomInt","drawMapGame","drawSquare","x","y","color","batch","begin","draw","mainBlock","block","SQUARE_SIZE","end","row","col","map","min","max","Math","floor","random","e","keyCode","piece","moveLeft","rotate","moveRight","moveDown","stage","canvas","getCanvas","viewport","gl","getContext","load","font","camera","getCamera","setYDown","bgRight","gameOverIcon","dropTime","score","gameover","iBlock","lBlock","lReverseBlock","sBlock","zBlock","zReverseBlock","tBlock","speedGame","Piece","tetromino","nextTetro","tetrominoN","activeTetromino","temp","length","fill","fullRow","console","log","newX","newY","nextRotateOfBlock","kick","collision","undraw","lock","nextPiece","blocks","window","addEventListener","delta","clearColor","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","showNextTetromino"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\r\n  createGameLoop,\r\n  createStage,\r\n  createViewport,\r\n  PolygonBatch,\r\n  Texture,\r\n  BitmapFont,\r\n} from \"gdxts\";\r\n\r\nconst ROWS = 24;\r\nconst COLS = 12;\r\nconst GAME_WIDTH = 1500;\r\nconst GAME_HEIGHT = 2000;\r\n\r\nexport const init = async () => {\r\n  const stage = createStage();\r\n  const canvas = stage.getCanvas();\r\n  const viewport = createViewport(canvas, GAME_WIDTH, GAME_HEIGHT);\r\n  const gl = viewport.getContext();\r\n  const font = await BitmapFont.load(gl, \"./1231231.fnt\");\r\n  const batch = new PolygonBatch(gl);\r\n  const camera = viewport.getCamera();\r\n  batch.setYDown(true);\r\n  camera.setYDown(true);\r\n\r\n  const bgRight = await Texture.load(gl, \"./bg1.png\");\r\n  const block = await Texture.load(gl, \"./borderBlock.png\");\r\n  const mainBlock = await Texture.load(gl, \"./GreenBlock.png\");\r\n  const gameOverIcon = await Texture.load(gl, \"./gameover.png\");\r\n  const SQUARE_SIZE = 83;\r\n\r\n  let dropTime = 0;\r\n  let score = 0;\r\n  let gameover = false;\r\n\r\n  //tetrominoes\r\n  //I\r\n  const iBlock = [\r\n    [\r\n      [0, 0, 0, 0],\r\n      [1, 1, 1, 1],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n    ],\r\n    [\r\n      [0, 1, 0, 0],\r\n      [0, 1, 0, 0],\r\n      [0, 1, 0, 0],\r\n      [0, 1, 0, 0],\r\n    ],\r\n  ];\r\n\r\n  //L\r\n  const lBlock = [\r\n    [\r\n      [0, 0, 1],\r\n      [1, 1, 1],\r\n      [0, 0, 0],\r\n    ],\r\n    [\r\n      [0, 1, 0],\r\n      [0, 1, 0],\r\n      [0, 1, 1],\r\n    ],\r\n    [\r\n      [0, 0, 0],\r\n      [1, 1, 1],\r\n      [1, 0, 0],\r\n    ],\r\n    [\r\n      [1, 1, 0],\r\n      [0, 1, 0],\r\n      [0, 1, 0],\r\n    ],\r\n  ];\r\n\r\n  //L-reverse\r\n  const lReverseBlock = [\r\n    [\r\n      [1, 0, 0],\r\n      [1, 1, 1],\r\n      [0, 0, 0],\r\n    ],\r\n    [\r\n      [0, 1, 1],\r\n      [0, 1, 0],\r\n      [0, 1, 0],\r\n    ],\r\n    [\r\n      [0, 0, 0],\r\n      [1, 1, 1],\r\n      [0, 0, 1],\r\n    ],\r\n    [\r\n      [0, 1, 0],\r\n      [0, 1, 0],\r\n      [1, 1, 0],\r\n    ],\r\n  ];\r\n\r\n  // Square\r\n  const sBlock = [\r\n    [\r\n      [1, 1],\r\n      [1, 1],\r\n    ],\r\n  ];\r\n\r\n  // Z\r\n  const zBlock = [\r\n    [\r\n      [0, 1, 1],\r\n      [1, 1, 0],\r\n      [0, 0, 0],\r\n    ],\r\n    [\r\n      [0, 1, 0],\r\n      [0, 1, 1],\r\n      [0, 0, 1],\r\n    ],\r\n  ];\r\n\r\n  // Z-reverse\r\n  const zReverseBlock = [\r\n    [\r\n      [1, 1, 0],\r\n      [0, 1, 1],\r\n      [0, 0, 0],\r\n    ],\r\n    [\r\n      [0, 0, 1],\r\n      [0, 1, 1],\r\n      [0, 1, 0],\r\n    ],\r\n  ];\r\n\r\n  // T\r\n  const tBlock = [\r\n    [\r\n      [0, 1, 0],\r\n      [1, 1, 1],\r\n      [0, 0, 0],\r\n    ],\r\n    [\r\n      [0, 1, 0],\r\n      [0, 1, 1],\r\n      [0, 1, 0],\r\n    ],\r\n    [\r\n      [0, 0, 0],\r\n      [1, 1, 1],\r\n      [0, 1, 0],\r\n    ],\r\n    [\r\n      [0, 1, 0],\r\n      [1, 1, 0],\r\n      [0, 1, 0],\r\n    ],\r\n  ];\r\n  let speedGame = 0.5;\r\n  class Piece {\r\n    tetromino: any;\r\n    color: any;\r\n    tetrominoN: any;\r\n    activeTetromino: any;\r\n    temp: any;\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor(tetromino: any, nextTetro?: any) {\r\n      this.tetromino = tetromino;\r\n      this.tetrominoN = 0;\r\n      this.activeTetromino = this.tetromino[this.tetrominoN];\r\n\r\n      this.x = 4;\r\n      this.y = 0;\r\n    }\r\n\r\n    fill(color?: any) {\r\n      for (let row = 0; row < this.activeTetromino.length; row++) {\r\n        for (let col = 0; col < this.activeTetromino.length; col++) {\r\n          if (this.activeTetromino[row][col]) {\r\n            drawSquare(this.x + col, this.y + row, color);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    draw() {\r\n      this.fill(1);\r\n    }\r\n    undraw() {\r\n      this.fill(0);\r\n    }\r\n\r\n    lock() {\r\n      for (let row = 0; row < this.activeTetromino.length; row++) {\r\n        for (let col = 0; col < this.activeTetromino.length; col++) {\r\n          if (!this.activeTetromino[row][col]) {\r\n            continue;\r\n          }\r\n          map[this.y + row][this.x + col] = 1;\r\n          //checkGameOver\r\n          if (this.y + row < 1) {\r\n            gameover = true;\r\n          }\r\n        }\r\n        // console.warn(map);\r\n      }\r\n\r\n      //checkpoint\r\n      for (let row = 0; row < ROWS; row++) {\r\n        let fullRow: boolean = true;\r\n        for (let col = 0; col < COLS; col++) {\r\n          fullRow = fullRow && map[row][col] !== 0;\r\n        }\r\n        if (fullRow) {\r\n          for (let y = row; y > 1; y--) {\r\n            for (let col = 0; col < COLS; col++) {\r\n              map[y][col] = map[y - 1][col];\r\n            }\r\n          }\r\n          for (let col = 0; col < COLS; col++) {\r\n            map[0][col] = 0;\r\n          }\r\n          if (speedGame > 0.15) {\r\n            speedGame -= 0.04;\r\n            console.log(speedGame);\r\n          }\r\n        }\r\n      }\r\n\r\n      score += 10;\r\n    }\r\n\r\n    collision(x: any, y: any, piece: any) {\r\n      for (let row = 0; row < piece.length; row++) {\r\n        for (let col = 0; col < piece.length; col++) {\r\n          if (!piece[row][col]) {\r\n            continue;\r\n          }\r\n          let newX = this.x + col + x;\r\n          let newY = this.y + row + y;\r\n\r\n          if (newX < 0 || newX >= COLS || newY >= ROWS) {\r\n            return true;\r\n          }\r\n\r\n          if (newY < 0) {\r\n            continue;\r\n          }\r\n          if (map[newY][newX] !== 0) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n    rotate() {\r\n      let nextRotateOfBlock =\r\n        this.tetromino[(this.tetrominoN + 1) % this.tetromino.length];\r\n      let kick = 0;\r\n      if (this.collision(0, 0, nextRotateOfBlock)) {\r\n        if (this.x > COLS / 2) {\r\n          kick = -1;\r\n        } else {\r\n          kick = 1;\r\n        }\r\n      }\r\n      if (!this.collision(kick, 0, nextRotateOfBlock)) {\r\n        this.undraw();\r\n        this.x += kick;\r\n        this.tetrominoN = (this.tetrominoN + 1) % this.tetromino.length;\r\n        this.activeTetromino = this.tetromino[this.tetrominoN];\r\n        this.draw();\r\n      }\r\n    }\r\n\r\n    moveDown() {\r\n      if (this.y >= 22) {\r\n        this.lock();\r\n        piece = new Piece(nextPiece);\r\n        nextPiece = blocks[getRandomInt(0, 6)];\r\n      }\r\n      if (!this.collision(0, 1, this.activeTetromino)) {\r\n        this.undraw();\r\n        this.y++;\r\n        this.draw();\r\n      } else {\r\n        this.lock();\r\n        piece = new Piece(nextPiece);\r\n        nextPiece = blocks[getRandomInt(0, 6)];\r\n      }\r\n    }\r\n    moveLeft() {\r\n      if (!this.collision(-1, 0, this.activeTetromino)) {\r\n        this.undraw();\r\n        this.x--;\r\n        this.draw();\r\n      }\r\n    }\r\n    moveRight() {\r\n      if (!this.collision(1, 0, this.activeTetromino)) {\r\n        this.undraw();\r\n        this.x++;\r\n        this.draw();\r\n      }\r\n    }\r\n    showNextTetromino(nextTetro: any) {\r\n      for (let row = 0; row < nextTetro.length; row++) {\r\n        for (let col = 0; col < nextTetro[row].length; col++) {\r\n          if (nextTetro[row][col]) {\r\n            drawSquare(13.4 + col, 3.2 + row, 1);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let blocks = [\r\n    iBlock,\r\n    lBlock,\r\n    lReverseBlock,\r\n    tBlock,\r\n    sBlock,\r\n    zBlock,\r\n    zReverseBlock,\r\n  ];\r\n\r\n  let piece = new Piece(blocks[4]);\r\n  let nextPiece = blocks[getRandomInt(0, 6)];\r\n\r\n  window.addEventListener(\"keydown\", function (e) {\r\n    control(e);\r\n  });\r\n  function control(e: any) {\r\n    if (e.keyCode === 37) {\r\n      piece.moveLeft();\r\n    } else if (e.keyCode === 38) {\r\n      piece.rotate();\r\n    } else if (e.keyCode === 39) {\r\n      piece.moveRight();\r\n    } else if (e.keyCode === 40) {\r\n      piece.moveDown();\r\n      piece.moveDown();\r\n    }\r\n  }\r\n\r\n  function getRandomInt(min: number, max: number) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  }\r\n\r\n  let map: any[] = [];\r\n  for (let row = 0; row < ROWS; row++) {\r\n    map[row] = [];\r\n    for (let col = 0; col < COLS; col++) {\r\n      drawSquare(col, row, 0);\r\n      map[row][col] = 0;\r\n    }\r\n  }\r\n  function drawMapGame() {\r\n    for (let row = 0; row < ROWS; row++) {\r\n      for (let col = 0; col < COLS; col++) {\r\n        drawSquare(col, row, map[row][col] === 1 ? 1 : 0);\r\n      }\r\n    }\r\n  }\r\n  function drawSquare(x: number, y: number, color?: any) {\r\n    batch.begin();\r\n    batch.draw(\r\n      color ? mainBlock : block, // 0 = gray // 1 = green\r\n      SQUARE_SIZE * x,\r\n      SQUARE_SIZE * y,\r\n      SQUARE_SIZE,\r\n      SQUARE_SIZE\r\n    );\r\n    batch.end();\r\n  }\r\n\r\n  createGameLoop((delta: number) => {\r\n    gl.clearColor(0, 0, 0, 1);\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    batch.setProjection(camera.projectionView.values);\r\n    drawMapGame();\r\n    batch.begin();\r\n    batch.draw(bgRight, 1000, 0, 500, 2000);\r\n    batch.end();\r\n    piece.fill(1);\r\n    piece.showNextTetromino(nextPiece[0]);\r\n    if (!gameover) {\r\n      dropTime += delta;\r\n      if (dropTime >= speedGame) {\r\n        dropTime = 0;\r\n        piece.moveDown();\r\n      }\r\n    } else {\r\n      batch.begin();\r\n\r\n      batch.draw(\r\n        gameOverIcon,\r\n        GAME_WIDTH / 2 - 760,\r\n        GAME_HEIGHT / 2 - 500,\r\n        1000,\r\n        1000\r\n      );\r\n      batch.end();\r\n    }\r\n  });\r\n};\r\ninit();\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}