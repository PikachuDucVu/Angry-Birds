{"ast":null,"code":"import { createStage, createViewport, createGameLoop, ShapeRenderer, Texture, TextureRegion, PolygonBatch, Animation, PlayMode, ViewportInputHandler, InputEvent, Vector2 } from \"gdxts\";\nimport Walkable from \"walkable\";\n\nconst init = async () => {\n  let walkable = new Walkable(500, 1000);\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./pokemon-bg.jpg\");\n  const mapData = await fetch(\"./test.tmj\").then(res => res.json()); // console.log(mapData);\n  // eslint-disable-next-line\n  // const texture = await Texture.load(gl, \"./charizard.png\");\n\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\"); // const apple = await Texture.load(gl, \"./apple.png\");\n\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n  const walkDownAnimation = new Animation(regions.slice(0, 4), 0.2);\n  const walkLeftAnimation = new Animation(regions.slice(4, 8), 0.2);\n  const walkRightAnimation = new Animation(regions.slice(8, 12), 0.2);\n  const walkUpAnimation = new Animation(regions.slice(12, 16), 0.2);\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  const characterPosition = new Vector2(250, 500);\n  let rotation = 0;\n  let frame = 0;\n  gl.clearColor(0, 0, 0, 1);\n  let nextPositon = new Vector2(250, 500);\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    nextPositon = inputHandler.getTouchedWorldCoord();\n    rotation = Math.atan2(nextPositon.y - characterPosition.y, nextPositon.x - characterPosition.x) * 180 / Math.PI; // console.log(applePosition);\n\n    var path = walkable.findPath(2, 2, 300, 300, 1);\n    console.log(path);\n  }); // let applePosition = {\n  //   x: getRandomInt(50, 400),\n  //   y: getRandomInt(30, 900),\n  // };\n\n  function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  const moveSpeed = 150;\n  createGameLoop(delta => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n    let region = walkDownAnimation.getKeyFrame(frame, PlayMode.NORMAL); // if (\n    //   characterPosition.x !== nextPositon.x ||\n    //   characterPosition.y !== nextPositon.y\n    // ) {\n    //   frame += delta;\n    //   if (rotation >= 0 && rotation < 90) {\n    //     if (characterPosition.y < nextPositon.y) {\n    //       region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n    //       characterPosition.y = Math.min(\n    //         characterPosition.y + delta * moveSpeed,\n    //         nextPositon.y\n    //       ); // increase y\n    //     } else {\n    //       if (characterPosition.x < nextPositon.x) {\n    //         region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n    //         characterPosition.x = Math.min(\n    //           characterPosition.x + delta * moveSpeed,\n    //           nextPositon.x\n    //         ); // increase x\n    //       }\n    //     }\n    //   }\n    //   if (rotation >= -90 && rotation < 0) {\n    //     if (characterPosition.x < nextPositon.x) {\n    //       region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n    //       characterPosition.x = Math.min(\n    //         characterPosition.x + delta * moveSpeed,\n    //         nextPositon.x\n    //       ); // increase x\n    //     } else {\n    //       if (characterPosition.y > nextPositon.y) {\n    //         region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n    //         characterPosition.y = Math.max(\n    //           characterPosition.y - delta * moveSpeed,\n    //           nextPositon.y\n    //         ); // decrease y\n    //       }\n    //     }\n    //   }\n    //   if (rotation >= 90 && rotation < 180) {\n    //     if (characterPosition.y < nextPositon.y) {\n    //       region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n    //       characterPosition.y = Math.min(\n    //         characterPosition.y + delta * moveSpeed,\n    //         nextPositon.y\n    //       ); // increase y\n    //     } else {\n    //       if (characterPosition.x > nextPositon.x) {\n    //         region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n    //         characterPosition.x = Math.max(\n    //           characterPosition.x - delta * moveSpeed,\n    //           nextPositon.x\n    //         ); // decrease x\n    //       }\n    //     }\n    //   }\n    //   if (rotation >= -180 && rotation < -90) {\n    //     if (characterPosition.y > nextPositon.y) {\n    //       region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n    //       characterPosition.y = Math.max(\n    //         characterPosition.y - delta * moveSpeed,\n    //         nextPositon.y\n    //       ); // decrease y\n    //     } else {\n    //       if (characterPosition.x > nextPositon.x) {\n    //         region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n    //         characterPosition.x = Math.max(\n    //           characterPosition.x - delta * moveSpeed,\n    //           nextPositon.x\n    //         ); // decrease x\n    //       }\n    //     }\n    //   }\n    // } else {\n    //   frame = 0;\n    // }\n    // if (\n    //   Math.abs(applePosition.x - characterPosition.x) <= 35 &&\n    //   Math.abs(applePosition.y - characterPosition.y) <= 30\n    // ) {\n    //   applePosition.x = getRandomInt(50, 400);\n    //   applePosition.y = getRandomInt(30, 900);\n    // }\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 500, 1000); // batch.draw(apple, applePosition.x, applePosition.y, 45, 50);\n    // console.log(frame);\n\n    region.draw(batch, characterPosition.x - 50, characterPosition.y - 20, 100, 100);\n    batch.end();\n  });\n};\n\ninit();","map":{"version":3,"names":["createStage","createViewport","createGameLoop","ShapeRenderer","Texture","TextureRegion","PolygonBatch","Animation","PlayMode","ViewportInputHandler","InputEvent","Vector2","Walkable","init","walkable","stage","canvas","getCanvas","viewport","gl","getContext","background","load","mapData","fetch","then","res","json","characterTexture","regions","splitTexture","walkDownAnimation","slice","walkLeftAnimation","walkRightAnimation","walkUpAnimation","shapeRenderer","batch","camera","getCamera","inputHandler","characterPosition","rotation","frame","clearColor","nextPositon","addEventListener","TouchStart","x","y","getTouchedWorldCoord","Math","atan2","PI","path","findPath","console","log","getRandomInt","min","max","floor","random","moveSpeed","delta","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end","region","getKeyFrame","NORMAL","draw"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createStage,\n  createViewport,\n  createGameLoop,\n  ShapeRenderer,\n  Texture,\n  TextureRegion,\n  PolygonBatch,\n  Animation,\n  PlayMode,\n  ViewportInputHandler,\n  InputEvent,\n  Vector2,\n} from \"gdxts\";\n\nimport Walkable from \"walkable\";\n\nconst init = async () => {\n  let walkable = new Walkable(500, 1000);\n\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./pokemon-bg.jpg\");\n\n  const mapData = await fetch(\"./test.tmj\").then((res) => res.json());\n  // console.log(mapData);\n\n  // eslint-disable-next-line\n  // const texture = await Texture.load(gl, \"./charizard.png\");\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  // const apple = await Texture.load(gl, \"./apple.png\");\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n\n  const walkDownAnimation = new Animation(regions.slice(0, 4), 0.2);\n  const walkLeftAnimation = new Animation(regions.slice(4, 8), 0.2);\n  const walkRightAnimation = new Animation(regions.slice(8, 12), 0.2);\n  const walkUpAnimation = new Animation(regions.slice(12, 16), 0.2);\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  const characterPosition = new Vector2(250, 500);\n\n  let rotation = 0;\n  let frame = 0;\n  gl.clearColor(0, 0, 0, 1);\n\n  let nextPositon = new Vector2(250, 500);\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    nextPositon = inputHandler.getTouchedWorldCoord();\n    rotation =\n      (Math.atan2(\n        nextPositon.y - characterPosition.y,\n        nextPositon.x - characterPosition.x\n      ) *\n        180) /\n      Math.PI;\n    // console.log(applePosition);\n    var path = walkable.findPath(2, 2, 300, 300, 1);\n    console.log(path);\n  });\n\n  // let applePosition = {\n  //   x: getRandomInt(50, 400),\n  //   y: getRandomInt(30, 900),\n  // };\n\n  function getRandomInt(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  const moveSpeed = 150;\n\n  createGameLoop((delta: number) => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n    let region = walkDownAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n    // if (\n    //   characterPosition.x !== nextPositon.x ||\n    //   characterPosition.y !== nextPositon.y\n    // ) {\n    //   frame += delta;\n    //   if (rotation >= 0 && rotation < 90) {\n    //     if (characterPosition.y < nextPositon.y) {\n    //       region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n    //       characterPosition.y = Math.min(\n    //         characterPosition.y + delta * moveSpeed,\n    //         nextPositon.y\n    //       ); // increase y\n    //     } else {\n    //       if (characterPosition.x < nextPositon.x) {\n    //         region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n    //         characterPosition.x = Math.min(\n    //           characterPosition.x + delta * moveSpeed,\n    //           nextPositon.x\n    //         ); // increase x\n    //       }\n    //     }\n    //   }\n    //   if (rotation >= -90 && rotation < 0) {\n    //     if (characterPosition.x < nextPositon.x) {\n    //       region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n    //       characterPosition.x = Math.min(\n    //         characterPosition.x + delta * moveSpeed,\n    //         nextPositon.x\n    //       ); // increase x\n    //     } else {\n    //       if (characterPosition.y > nextPositon.y) {\n    //         region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n    //         characterPosition.y = Math.max(\n    //           characterPosition.y - delta * moveSpeed,\n    //           nextPositon.y\n    //         ); // decrease y\n    //       }\n    //     }\n    //   }\n    //   if (rotation >= 90 && rotation < 180) {\n    //     if (characterPosition.y < nextPositon.y) {\n    //       region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n    //       characterPosition.y = Math.min(\n    //         characterPosition.y + delta * moveSpeed,\n    //         nextPositon.y\n    //       ); // increase y\n    //     } else {\n    //       if (characterPosition.x > nextPositon.x) {\n    //         region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n    //         characterPosition.x = Math.max(\n    //           characterPosition.x - delta * moveSpeed,\n    //           nextPositon.x\n    //         ); // decrease x\n    //       }\n    //     }\n    //   }\n    //   if (rotation >= -180 && rotation < -90) {\n    //     if (characterPosition.y > nextPositon.y) {\n    //       region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n    //       characterPosition.y = Math.max(\n    //         characterPosition.y - delta * moveSpeed,\n    //         nextPositon.y\n    //       ); // decrease y\n    //     } else {\n    //       if (characterPosition.x > nextPositon.x) {\n    //         region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n    //         characterPosition.x = Math.max(\n    //           characterPosition.x - delta * moveSpeed,\n    //           nextPositon.x\n    //         ); // decrease x\n    //       }\n    //     }\n    //   }\n    // } else {\n    //   frame = 0;\n    // }\n\n    // if (\n    //   Math.abs(applePosition.x - characterPosition.x) <= 35 &&\n    //   Math.abs(applePosition.y - characterPosition.y) <= 30\n    // ) {\n    //   applePosition.x = getRandomInt(50, 400);\n    //   applePosition.y = getRandomInt(30, 900);\n    // }\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 500, 1000);\n    // batch.draw(apple, applePosition.x, applePosition.y, 45, 50);\n    // console.log(frame);\n    region.draw(\n      batch,\n      characterPosition.x - 50,\n      characterPosition.y - 20,\n      100,\n      100\n    );\n    batch.end();\n  });\n};\ninit();\n"],"mappings":"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AE,CAAC+C,gBAAZ;IACA9B,aAAa,CAAC+B,aAAd,CAA4B7B,MAAM,CAAC8B,cAAP,CAAsBC,MAAlD;IACAjC,aAAa,CAACkC,KAAd;IACAlC,aAAa,CAACmC,IAAd,CAAmB,IAAnB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,GAA/B,EAAoC,IAApC;IACAnC,aAAa,CAACoC,GAAd;IACA,IAAIC,MAAM,GAAG1C,iBAAiB,CAAC2C,WAAlB,CAA8B/B,KAA9B,EAAqCnC,QAAQ,CAACmE,MAA9C,CAAb,CANgC,CAOhC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IACAtC,KAAK,CAAC8B,aAAN,CAAoB7B,MAAM,CAAC8B,cAAP,CAAsBC,MAA1C;IACAhC,KAAK,CAACiC,KAAN;IACAjC,KAAK,CAACuC,IAAN,CAAWvD,UAAX,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,GAA7B,EAAkC,IAAlC,EA7FgC,CA8FhC;IACA;;IACAoD,MAAM,CAACG,IAAP,CACEvC,KADF,EAEEI,iBAAiB,CAACO,CAAlB,GAAsB,EAFxB,EAGEP,iBAAiB,CAACQ,CAAlB,GAAsB,EAHxB,EAIE,GAJF,EAKE,GALF;IAOAZ,KAAK,CAACmC,GAAN;EACD,CAxGa,CAAd;AAyGD,CApKD;;AAqKA3D,IAAI"},"metadata":{},"sourceType":"module"}