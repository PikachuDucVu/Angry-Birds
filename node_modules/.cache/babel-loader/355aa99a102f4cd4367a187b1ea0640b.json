{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"D:/projects/test-game/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"D:/projects/test-game/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PolygonBatch = void 0;\n\nvar Utils_1 = require(\"./Utils\");\n\nvar Mesh_1 = require(\"./Mesh\");\n\nvar Shader_1 = require(\"./Shader\");\n\nvar WebGL_1 = require(\"./WebGL\"); // prettier-ignore\n\n\nvar quad = [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0];\nvar WHITE = new Utils_1.Color(1, 1, 1, 1);\n\nvar PolygonBatch = /*#__PURE__*/function () {\n  function PolygonBatch(context) {\n    var twoColorTint = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var maxVertices = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10920;\n\n    _classCallCheck(this, PolygonBatch);\n\n    this.isDrawing = false;\n    this.shader = null;\n    this.lastTexture = null;\n    this.verticesLength = 0;\n    this.indicesLength = 0;\n    this.projectionValues = new Float32Array(16);\n    this.color = WHITE;\n    this.twoColorTint = true;\n    this.yDown = false;\n    if (maxVertices > 10920) throw new Error(\"Can't have more than 10920 triangles per batch: \" + maxVertices);\n    this.context = context instanceof WebGL_1.ManagedWebGLRenderingContext ? context : new WebGL_1.ManagedWebGLRenderingContext(context);\n    var attributes = twoColorTint ? [new Mesh_1.Position2Attribute(), new Mesh_1.ColorAttribute(), new Mesh_1.TexCoordAttribute(), new Mesh_1.Color2Attribute()] : [new Mesh_1.Position2Attribute(), new Mesh_1.ColorAttribute(), new Mesh_1.TexCoordAttribute()];\n    this.mesh = new Mesh_1.Mesh(context, attributes, maxVertices, maxVertices * 3);\n    this.shader = Shader_1.Shader.newTwoColoredTextured(context);\n    var gl = this.context.gl;\n    this.srcColorBlend = gl.SRC_ALPHA;\n    this.srcAlphaBlend = gl.ONE;\n    this.dstBlend = gl.ONE_MINUS_SRC_ALPHA;\n    this.twoColorTint = twoColorTint;\n  }\n\n  _createClass(PolygonBatch, [{\n    key: \"setColor\",\n    value: function setColor(color) {\n      this.color = color;\n    }\n  }, {\n    key: \"setShader\",\n    value: function setShader(shader) {\n      this.shader = shader;\n    }\n  }, {\n    key: \"setProjection\",\n    value: function setProjection(projectionValues) {\n      this.projectionValues = projectionValues;\n    }\n  }, {\n    key: \"begin\",\n    value: function begin() {\n      if (this.isDrawing) throw new Error('PolygonBatch is already drawing. Call PolygonBatch.end() before calling PolygonBatch.begin()');\n      this.drawCalls = 0;\n      var shader = this.shader;\n      this.lastTexture = null;\n      this.isDrawing = true;\n      shader.bind();\n      shader.setUniform4x4f(Shader_1.Shader.MVP_MATRIX, this.projectionValues);\n      shader.setUniformi('u_texture', 0);\n      var gl = this.context.gl;\n      gl.enable(gl.BLEND);\n      gl.blendFuncSeparate(this.srcColorBlend, this.dstBlend, this.srcAlphaBlend, this.dstBlend);\n    }\n  }, {\n    key: \"setBlendMode\",\n    value: function setBlendMode(srcColorBlend, srcAlphaBlend, dstBlend) {\n      if (this.srcColorBlend === srcColorBlend && this.srcAlphaBlend === srcAlphaBlend && this.dstBlend === dstBlend) return;\n      this.srcColorBlend = srcColorBlend;\n      this.srcAlphaBlend = srcAlphaBlend;\n      this.dstBlend = dstBlend;\n\n      if (this.isDrawing) {\n        this.flush();\n        var gl = this.context.gl;\n        gl.blendFuncSeparate(srcColorBlend, dstBlend, srcAlphaBlend, dstBlend);\n      }\n    }\n  }, {\n    key: \"drawVerticesWithOffset\",\n    value: function drawVerticesWithOffset(texture, vertices, offset, count) {\n      var newVertices = [];\n\n      for (var i = 0; i < count; i++) {\n        newVertices[i] = vertices[i + offset];\n      }\n\n      this.drawVertices(texture, newVertices, PolygonBatch.QUAD_TRIANGLES);\n    }\n  }, {\n    key: \"drawVertices\",\n    value: function drawVertices(texture, vertices) {\n      var indices = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : PolygonBatch.QUAD_TRIANGLES;\n\n      if (texture !== this.lastTexture) {\n        this.flush();\n        this.lastTexture = texture;\n      } else if (this.verticesLength + vertices.length > this.mesh.getVertices().length || this.indicesLength + indices.length > this.mesh.getIndices().length) {\n        this.flush();\n      }\n\n      var indexStart = this.mesh.numVertices();\n      this.mesh.getVertices().set(vertices, this.verticesLength);\n      this.verticesLength += vertices.length;\n      this.mesh.setVerticesLength(this.verticesLength);\n      var indicesArray = this.mesh.getIndices();\n\n      for (var i = this.indicesLength, j = 0; j < indices.length; i++, j++) {\n        indicesArray[i] = indices[j] + indexStart;\n      }\n\n      this.indicesLength += indices.length;\n      this.mesh.setIndicesLength(this.indicesLength);\n    }\n  }, {\n    key: \"flush\",\n    value: function flush() {\n      if (this.verticesLength === 0) return;\n      this.lastTexture.bind();\n      this.mesh.draw(this.shader, this.context.gl.TRIANGLES);\n      this.verticesLength = 0;\n      this.indicesLength = 0;\n      this.mesh.setVerticesLength(0);\n      this.mesh.setIndicesLength(0);\n      this.drawCalls++;\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      if (!this.isDrawing) throw new Error('PolygonBatch is not drawing. Call PolygonBatch.begin() before calling PolygonBatch.end()');\n      if (this.verticesLength > 0 || this.indicesLength > 0) this.flush();\n      this.shader.unbind();\n      this.lastTexture = null;\n      this.isDrawing = false;\n      var gl = this.context.gl;\n      gl.disable(gl.BLEND);\n    }\n  }, {\n    key: \"getDrawCalls\",\n    value: function getDrawCalls() {\n      return this.drawCalls;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.mesh.dispose();\n    }\n  }, {\n    key: \"setYDown\",\n    value: function setYDown(yDown) {\n      this.yDown = yDown;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(texture, x, y, width, height) {\n      var originX = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n      var originY = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n      var rotation = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n      var scaleX = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 1;\n      var scaleY = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 1;\n      var ou1 = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : 0;\n      var ov1 = arguments.length > 11 && arguments[11] !== undefined ? arguments[11] : 1;\n      var ou2 = arguments.length > 12 && arguments[12] !== undefined ? arguments[12] : 1;\n      var ov2 = arguments.length > 13 && arguments[13] !== undefined ? arguments[13] : 0;\n      var rotate = arguments.length > 14 && arguments[14] !== undefined ? arguments[14] : false;\n      var color = this.color;\n\n      if (this.yDown) {\n        var tmpV1 = ov1;\n        ov1 = ov2;\n        ov2 = tmpV1;\n      }\n\n      width = width === 0 ? width : width || texture.width;\n      height = height === 0 ? height : height || texture.height;\n      x = x || 0;\n      y = y || 0;\n      var x1 = -originX;\n      var x2 = width - originX;\n      var x3 = width - originX;\n      var x4 = -originX;\n      var y1 = -originY;\n      var y2 = -originY;\n      var y3 = height - originY;\n      var y4 = height - originY;\n\n      if (scaleX !== 1) {\n        x1 = x1 * scaleX;\n        x2 = x2 * scaleX;\n        x3 = x3 * scaleX;\n        x4 = x4 * scaleX;\n      }\n\n      if (scaleY !== 1) {\n        y1 = y1 * scaleY;\n        y2 = y2 * scaleY;\n        y3 = y3 * scaleY;\n        y4 = y4 * scaleY;\n      }\n\n      if (rotation !== 0) {\n        var cos = Math.cos(rotation);\n        var sin = Math.sin(rotation);\n        var rotatedX1 = cos * x1 - sin * y1;\n        var rotatedY1 = sin * x1 + cos * y1;\n        var rotatedX2 = cos * x2 - sin * y2;\n        var rotatedY2 = sin * x2 + cos * y2;\n        var rotatedX3 = cos * x3 - sin * y3;\n        var rotatedY3 = sin * x3 + cos * y3;\n        var rotatedX4 = cos * x4 - sin * y4;\n        var rotatedY4 = sin * x4 + cos * y4;\n        x1 = rotatedX1;\n        x2 = rotatedX2;\n        x3 = rotatedX3;\n        x4 = rotatedX4;\n        y1 = rotatedY1;\n        y2 = rotatedY2;\n        y3 = rotatedY3;\n        y4 = rotatedY4;\n      }\n\n      x1 += x + originX;\n      x2 += x + originX;\n      x3 += x + originX;\n      x4 += x + originX;\n      y1 += y + originY;\n      y2 += y + originY;\n      y3 += y + originY;\n      y4 += y + originY;\n      var u1 = ou1;\n      var v1 = ov1;\n      var u2 = ou2;\n      var v2 = ov2;\n      var u3 = u2;\n      var v3 = v1;\n      var u4 = u1;\n      var v4 = v2;\n\n      if (rotate) {\n        if (this.yDown) {\n          u1 = ou1;\n          v1 = ov2;\n          u2 = ou2;\n          v2 = ov1;\n          u3 = ou1;\n          v3 = ov1;\n          u4 = ou2;\n          v4 = ov2;\n        } else {\n          u1 = ou2;\n          v1 = ov1;\n          u2 = ou1;\n          v2 = ov2;\n          u3 = ou2;\n          v3 = ov2;\n          u4 = ou1;\n          v4 = ov1;\n        }\n      }\n\n      var i = 0;\n      quad[i++] = x1;\n      quad[i++] = y1;\n      quad[i++] = color.r;\n      quad[i++] = color.g;\n      quad[i++] = color.b;\n      quad[i++] = color.a;\n      quad[i++] = u1;\n      quad[i++] = v1;\n\n      if (this.twoColorTint) {\n        quad[i++] = 0;\n        quad[i++] = 0;\n        quad[i++] = 0;\n        quad[i++] = 0;\n      }\n\n      quad[i++] = x2;\n      quad[i++] = y2;\n      quad[i++] = color.r;\n      quad[i++] = color.g;\n      quad[i++] = color.b;\n      quad[i++] = color.a;\n      quad[i++] = u3;\n      quad[i++] = v3;\n\n      if (this.twoColorTint) {\n        quad[i++] = 0;\n        quad[i++] = 0;\n        quad[i++] = 0;\n        quad[i++] = 0;\n      }\n\n      quad[i++] = x3;\n      quad[i++] = y3;\n      quad[i++] = color.r;\n      quad[i++] = color.g;\n      quad[i++] = color.b;\n      quad[i++] = color.a;\n      quad[i++] = u2;\n      quad[i++] = v2;\n\n      if (this.twoColorTint) {\n        quad[i++] = 0;\n        quad[i++] = 0;\n        quad[i++] = 0;\n        quad[i++] = 0;\n      }\n\n      quad[i++] = x4;\n      quad[i++] = y4;\n      quad[i++] = color.r;\n      quad[i++] = color.g;\n      quad[i++] = color.b;\n      quad[i++] = color.a;\n      quad[i++] = u4;\n      quad[i++] = v4;\n\n      if (this.twoColorTint) {\n        quad[i++] = 0;\n        quad[i++] = 0;\n        quad[i++] = 0;\n        quad[i] = 0;\n      }\n\n      this.drawVertices(texture, quad, PolygonBatch.QUAD_TRIANGLES);\n    }\n  }]);\n\n  return PolygonBatch;\n}();\n\nexports.PolygonBatch = PolygonBatch;\nPolygonBatch.QUAD_TRIANGLES = [0, 1, 2, 2, 3, 0];","map":{"version":3,"names":["Object","defineProperty","exports","value","PolygonBatch","Utils_1","require","Mesh_1","Shader_1","WebGL_1","quad","WHITE","Color","context","twoColorTint","maxVertices","isDrawing","shader","lastTexture","verticesLength","indicesLength","projectionValues","Float32Array","color","yDown","Error","ManagedWebGLRenderingContext","attributes","Position2Attribute","ColorAttribute","TexCoordAttribute","Color2Attribute","mesh","Mesh","Shader","newTwoColoredTextured","gl","srcColorBlend","SRC_ALPHA","srcAlphaBlend","ONE","dstBlend","ONE_MINUS_SRC_ALPHA","drawCalls","bind","setUniform4x4f","MVP_MATRIX","setUniformi","enable","BLEND","blendFuncSeparate","flush","texture","vertices","offset","count","newVertices","i","drawVertices","QUAD_TRIANGLES","indices","length","getVertices","getIndices","indexStart","numVertices","set","setVerticesLength","indicesArray","j","setIndicesLength","draw","TRIANGLES","unbind","disable","dispose","x","y","width","height","originX","originY","rotation","scaleX","scaleY","ou1","ov1","ou2","ov2","rotate","tmpV1","x1","x2","x3","x4","y1","y2","y3","y4","cos","Math","sin","rotatedX1","rotatedY1","rotatedX2","rotatedY2","rotatedX3","rotatedY3","rotatedX4","rotatedY4","u1","v1","u2","v2","u3","v3","u4","v4","r","g","b","a"],"sources":["D:/projects/test-game/node_modules/gdxts/dist/lib/PolygonBatcher.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PolygonBatch = void 0;\nconst Utils_1 = require(\"./Utils\");\nconst Mesh_1 = require(\"./Mesh\");\nconst Shader_1 = require(\"./Shader\");\nconst WebGL_1 = require(\"./WebGL\");\n// prettier-ignore\nconst quad = [\n    0, 0, 1, 1, 1, 1, 0, 0,\n    0, 0, 1, 1, 1, 1, 0, 0,\n    0, 0, 1, 1, 1, 1, 0, 0,\n    0, 0, 1, 1, 1, 1, 0, 0,\n];\nconst WHITE = new Utils_1.Color(1, 1, 1, 1);\nclass PolygonBatch {\n    constructor(context, twoColorTint = true, maxVertices = 10920) {\n        this.isDrawing = false;\n        this.shader = null;\n        this.lastTexture = null;\n        this.verticesLength = 0;\n        this.indicesLength = 0;\n        this.projectionValues = new Float32Array(16);\n        this.color = WHITE;\n        this.twoColorTint = true;\n        this.yDown = false;\n        if (maxVertices > 10920)\n            throw new Error(\"Can't have more than 10920 triangles per batch: \" + maxVertices);\n        this.context =\n            context instanceof WebGL_1.ManagedWebGLRenderingContext ? context : new WebGL_1.ManagedWebGLRenderingContext(context);\n        let attributes = twoColorTint\n            ? [new Mesh_1.Position2Attribute(), new Mesh_1.ColorAttribute(), new Mesh_1.TexCoordAttribute(), new Mesh_1.Color2Attribute()]\n            : [new Mesh_1.Position2Attribute(), new Mesh_1.ColorAttribute(), new Mesh_1.TexCoordAttribute()];\n        this.mesh = new Mesh_1.Mesh(context, attributes, maxVertices, maxVertices * 3);\n        this.shader = Shader_1.Shader.newTwoColoredTextured(context);\n        let gl = this.context.gl;\n        this.srcColorBlend = gl.SRC_ALPHA;\n        this.srcAlphaBlend = gl.ONE;\n        this.dstBlend = gl.ONE_MINUS_SRC_ALPHA;\n        this.twoColorTint = twoColorTint;\n    }\n    setColor(color) {\n        this.color = color;\n    }\n    setShader(shader) {\n        this.shader = shader;\n    }\n    setProjection(projectionValues) {\n        this.projectionValues = projectionValues;\n    }\n    begin() {\n        if (this.isDrawing)\n            throw new Error('PolygonBatch is already drawing. Call PolygonBatch.end() before calling PolygonBatch.begin()');\n        this.drawCalls = 0;\n        const shader = this.shader;\n        this.lastTexture = null;\n        this.isDrawing = true;\n        shader.bind();\n        shader.setUniform4x4f(Shader_1.Shader.MVP_MATRIX, this.projectionValues);\n        shader.setUniformi('u_texture', 0);\n        let gl = this.context.gl;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(this.srcColorBlend, this.dstBlend, this.srcAlphaBlend, this.dstBlend);\n    }\n    setBlendMode(srcColorBlend, srcAlphaBlend, dstBlend) {\n        if (this.srcColorBlend === srcColorBlend && this.srcAlphaBlend === srcAlphaBlend && this.dstBlend === dstBlend)\n            return;\n        this.srcColorBlend = srcColorBlend;\n        this.srcAlphaBlend = srcAlphaBlend;\n        this.dstBlend = dstBlend;\n        if (this.isDrawing) {\n            this.flush();\n            let gl = this.context.gl;\n            gl.blendFuncSeparate(srcColorBlend, dstBlend, srcAlphaBlend, dstBlend);\n        }\n    }\n    drawVerticesWithOffset(texture, vertices, offset, count) {\n        const newVertices = [];\n        for (let i = 0; i < count; i++) {\n            newVertices[i] = vertices[i + offset];\n        }\n        this.drawVertices(texture, newVertices, PolygonBatch.QUAD_TRIANGLES);\n    }\n    drawVertices(texture, vertices, indices = PolygonBatch.QUAD_TRIANGLES) {\n        if (texture !== this.lastTexture) {\n            this.flush();\n            this.lastTexture = texture;\n        }\n        else if (this.verticesLength + vertices.length > this.mesh.getVertices().length ||\n            this.indicesLength + indices.length > this.mesh.getIndices().length) {\n            this.flush();\n        }\n        let indexStart = this.mesh.numVertices();\n        this.mesh.getVertices().set(vertices, this.verticesLength);\n        this.verticesLength += vertices.length;\n        this.mesh.setVerticesLength(this.verticesLength);\n        let indicesArray = this.mesh.getIndices();\n        for (let i = this.indicesLength, j = 0; j < indices.length; i++, j++)\n            indicesArray[i] = indices[j] + indexStart;\n        this.indicesLength += indices.length;\n        this.mesh.setIndicesLength(this.indicesLength);\n    }\n    flush() {\n        if (this.verticesLength === 0)\n            return;\n        this.lastTexture.bind();\n        this.mesh.draw(this.shader, this.context.gl.TRIANGLES);\n        this.verticesLength = 0;\n        this.indicesLength = 0;\n        this.mesh.setVerticesLength(0);\n        this.mesh.setIndicesLength(0);\n        this.drawCalls++;\n    }\n    end() {\n        if (!this.isDrawing)\n            throw new Error('PolygonBatch is not drawing. Call PolygonBatch.begin() before calling PolygonBatch.end()');\n        if (this.verticesLength > 0 || this.indicesLength > 0)\n            this.flush();\n        this.shader.unbind();\n        this.lastTexture = null;\n        this.isDrawing = false;\n        let gl = this.context.gl;\n        gl.disable(gl.BLEND);\n    }\n    getDrawCalls() {\n        return this.drawCalls;\n    }\n    dispose() {\n        this.mesh.dispose();\n    }\n    setYDown(yDown) {\n        this.yDown = yDown;\n    }\n    draw(texture, x, y, width, height, originX = 0, originY = 0, rotation = 0, scaleX = 1, scaleY = 1, ou1 = 0, ov1 = 1, ou2 = 1, ov2 = 0, rotate = false) {\n        const color = this.color;\n        if (this.yDown) {\n            const tmpV1 = ov1;\n            ov1 = ov2;\n            ov2 = tmpV1;\n        }\n        width = width === 0 ? width : width || texture.width;\n        height = height === 0 ? height : height || texture.height;\n        x = x || 0;\n        y = y || 0;\n        let x1 = -originX;\n        let x2 = width - originX;\n        let x3 = width - originX;\n        let x4 = -originX;\n        let y1 = -originY;\n        let y2 = -originY;\n        let y3 = height - originY;\n        let y4 = height - originY;\n        if (scaleX !== 1) {\n            x1 = x1 * scaleX;\n            x2 = x2 * scaleX;\n            x3 = x3 * scaleX;\n            x4 = x4 * scaleX;\n        }\n        if (scaleY !== 1) {\n            y1 = y1 * scaleY;\n            y2 = y2 * scaleY;\n            y3 = y3 * scaleY;\n            y4 = y4 * scaleY;\n        }\n        if (rotation !== 0) {\n            var cos = Math.cos(rotation);\n            var sin = Math.sin(rotation);\n            var rotatedX1 = cos * x1 - sin * y1;\n            var rotatedY1 = sin * x1 + cos * y1;\n            var rotatedX2 = cos * x2 - sin * y2;\n            var rotatedY2 = sin * x2 + cos * y2;\n            var rotatedX3 = cos * x3 - sin * y3;\n            var rotatedY3 = sin * x3 + cos * y3;\n            var rotatedX4 = cos * x4 - sin * y4;\n            var rotatedY4 = sin * x4 + cos * y4;\n            x1 = rotatedX1;\n            x2 = rotatedX2;\n            x3 = rotatedX3;\n            x4 = rotatedX4;\n            y1 = rotatedY1;\n            y2 = rotatedY2;\n            y3 = rotatedY3;\n            y4 = rotatedY4;\n        }\n        x1 += x + originX;\n        x2 += x + originX;\n        x3 += x + originX;\n        x4 += x + originX;\n        y1 += y + originY;\n        y2 += y + originY;\n        y3 += y + originY;\n        y4 += y + originY;\n        let u1 = ou1;\n        let v1 = ov1;\n        let u2 = ou2;\n        let v2 = ov2;\n        let u3 = u2;\n        let v3 = v1;\n        let u4 = u1;\n        let v4 = v2;\n        if (rotate) {\n            if (this.yDown) {\n                u1 = ou1;\n                v1 = ov2;\n                u2 = ou2;\n                v2 = ov1;\n                u3 = ou1;\n                v3 = ov1;\n                u4 = ou2;\n                v4 = ov2;\n            }\n            else {\n                u1 = ou2;\n                v1 = ov1;\n                u2 = ou1;\n                v2 = ov2;\n                u3 = ou2;\n                v3 = ov2;\n                u4 = ou1;\n                v4 = ov1;\n            }\n        }\n        var i = 0;\n        quad[i++] = x1;\n        quad[i++] = y1;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = u1;\n        quad[i++] = v1;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x2;\n        quad[i++] = y2;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = u3;\n        quad[i++] = v3;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x3;\n        quad[i++] = y3;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = u2;\n        quad[i++] = v2;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n        }\n        quad[i++] = x4;\n        quad[i++] = y4;\n        quad[i++] = color.r;\n        quad[i++] = color.g;\n        quad[i++] = color.b;\n        quad[i++] = color.a;\n        quad[i++] = u4;\n        quad[i++] = v4;\n        if (this.twoColorTint) {\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i++] = 0;\n            quad[i] = 0;\n        }\n        this.drawVertices(texture, quad, PolygonBatch.QUAD_TRIANGLES);\n    }\n}\nexports.PolygonBatch = PolygonBatch;\nPolygonBatch.QUAD_TRIANGLES = [0, 1, 2, 2, 3, 0];\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}