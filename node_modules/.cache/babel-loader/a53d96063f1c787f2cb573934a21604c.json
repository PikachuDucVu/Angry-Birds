{"ast":null,"code":"import { createStage, createViewport, createGameLoop, ShapeRenderer, Texture, TextureRegion, PolygonBatch, Animation, PlayMode, ViewportInputHandler, InputEvent, Vector2, Color } from \"gdxts\";\nimport Walkable from \"walkable\";\n\nconst init = async () => {\n  let walkable = new Walkable(500, 1000);\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./pokemon-bg.jpg\");\n  const mapData = await fetch(\"./test.tmj\").then(res => res.json());\n  const obstacles = mapData.layers.find(l => l.name === \"obstacles\").objects.map(rect => ({ ...rect,\n    y: 1000 - rect.y - rect.height\n  }));\n\n  for (let rect of obstacles) {\n    walkable.addRect(rect.width, rect.height, rect.x, rect.y);\n  } // eslint-disable-next-line\n  // const texture = await Texture.load(gl, \"./charizard.png\");\n\n\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\"); // const apple = await Texture.load(gl, \"./apple.png\");\n\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n  const walkDownAnimation = new Animation(regions.slice(0, 4), 0.2);\n  const walkLeftAnimation = new Animation(regions.slice(4, 8), 0.2);\n  const walkRightAnimation = new Animation(regions.slice(8, 12), 0.2);\n  const walkUpAnimation = new Animation(regions.slice(12, 16), 0.2);\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  const characterPosition = new Vector2(250, 500); // var path = walkable.findPath(\n  //   characterPosition.x,\n  //   characterPosition.y,\n  //   250,\n  //   500,\n  //   1\n  // );\n\n  let rotation = 0;\n  let frame = 0;\n  gl.clearColor(0, 0, 0, 1);\n  const path = [];\n  let nextPositon = new Vector2(250, 500);\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    const nextPositon = inputHandler.getTouchedWorldCoord();\n    walkable.findPath(characterPosition.x, characterPosition.y, nextPositon.x, nextPositon.y, 10, path);\n    rotation = Math.atan2(nextPositon.y - characterPosition.y, nextPositon.x - characterPosition.x) * 180 / Math.PI;\n    console.log(nextPositon); // console.log(applePosition);\n    // path = walkable.findPath(\n    //   characterPosition.x,\n    //   characterPosition.y,\n    //   nextPositon.x,\n    //   nextPositon.y,\n    //   1\n    // );\n    // console.log(path);\n  }); // let applePosition = {\n  //   x: getRandomInt(50, 400),\n  //   y: getRandomInt(30, 900),\n  // };\n\n  function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  const moveSpeed = 150;\n  createGameLoop(delta => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n    let region = walkDownAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n\n    if (characterPosition.x !== nextPositon.x || characterPosition.y !== nextPositon.y) {\n      frame += delta;\n\n      if (rotation >= 0 && rotation < 90) {\n        if (characterPosition.y < nextPositon.y) {\n          region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.y = Math.min(characterPosition.y + delta * moveSpeed, nextPositon.y); // increase y\n        }\n\n        if (characterPosition.x < nextPositon.x) {\n          region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.x = Math.min(characterPosition.x + delta * moveSpeed, nextPositon.x); // increase x\n        }\n      }\n\n      if (rotation >= -90 && rotation < 0) {\n        if (characterPosition.x < nextPositon.x) {\n          region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.x = Math.min(characterPosition.x + delta * moveSpeed, nextPositon.x); // increase x\n        }\n\n        if (characterPosition.y > nextPositon.y) {\n          region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.y = Math.max(characterPosition.y - delta * moveSpeed, nextPositon.y); // decrease y\n        }\n      }\n\n      if (rotation >= 90 && rotation < 180) {\n        if (characterPosition.y < nextPositon.y) {\n          region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.y = Math.min(characterPosition.y + delta * moveSpeed, nextPositon.y); // increase y\n        }\n\n        if (characterPosition.x > nextPositon.x) {\n          region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.x = Math.max(characterPosition.x - delta * moveSpeed, nextPositon.x); // decrease x\n        }\n      }\n\n      if (rotation >= -180 && rotation < -90) {\n        if (characterPosition.y > nextPositon.y) {\n          region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.y = Math.max(characterPosition.y - delta * moveSpeed, nextPositon.y); // decrease y\n        }\n\n        if (characterPosition.x > nextPositon.x) {\n          region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.x = Math.max(characterPosition.x - delta * moveSpeed, nextPositon.x); // decrease x\n        }\n      }\n    } else {\n      frame = 0;\n    } // if (\n    //   Math.abs(applePosition.x - characterPosition.x) <= 35 &&\n    //   Math.abs(applePosition.y - characterPosition.y) <= 30\n    // ) {\n    //   applePosition.x = getRandomInt(50, 400);\n    //   applePosition.y = getRandomInt(30, 900);\n    // }\n\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 500, 1000); // batch.draw(apple, applePosition.x, applePosition.y, 45, 50);\n    // console.log(frame);\n\n    region.draw(batch, characterPosition.x - 50, characterPosition.y - 20, 100, 100);\n    batch.end();\n    shapeRenderer.begin();\n\n    for (let rect of obstacles) {\n      shapeRenderer.rect(false, rect.x, rect.y, rect.width, rect.height, Color.WHITE);\n    }\n\n    if (path.length >= 4) {\n      for (let i = 2; i < path.length; i += 2) {\n        shapeRenderer.line(path[i - 2], path[i - 1], path[i], path[i + 1], Color.WHITE);\n      }\n    }\n\n    shapeRenderer.end();\n  });\n};\n\ninit();","map":{"version":3,"names":["createStage","createViewport","createGameLoop","ShapeRenderer","Texture","TextureRegion","PolygonBatch","Animation","PlayMode","ViewportInputHandler","InputEvent","Vector2","Color","Walkable","init","walkable","stage","canvas","getCanvas","viewport","gl","getContext","background","load","mapData","fetch","then","res","json","obstacles","layers","find","l","name","objects","map","rect","y","height","addRect","width","x","characterTexture","regions","splitTexture","walkDownAnimation","slice","walkLeftAnimation","walkRightAnimation","walkUpAnimation","shapeRenderer","batch","camera","getCamera","inputHandler","characterPosition","rotation","frame","clearColor","path","nextPositon","addEventListener","TouchStart","getTouchedWorldCoord","findPath","Math","atan2","PI","console","log","getRandomInt","min","max","floor","random","moveSpeed","delta","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","end","region","getKeyFrame","NORMAL","LOOP","draw","WHITE","length","i","line"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createStage,\n  createViewport,\n  createGameLoop,\n  ShapeRenderer,\n  Texture,\n  TextureRegion,\n  PolygonBatch,\n  Animation,\n  PlayMode,\n  ViewportInputHandler,\n  InputEvent,\n  Vector2,\n  Color,\n} from \"gdxts\";\n\nimport Walkable from \"walkable\";\n\nconst init = async () => {\n  let walkable = new Walkable(500, 1000);\n\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./pokemon-bg.jpg\");\n\n  const mapData = await fetch(\"./test.tmj\").then((res) => res.json());\n  const obstacles = mapData.layers\n    .find((l: any) => l.name === \"obstacles\")\n    .objects.map((rect: any) => ({\n      ...rect,\n      y: 1000 - rect.y - rect.height,\n    }));\n\n  for (let rect of obstacles) {\n    walkable.addRect(rect.width, rect.height, rect.x, rect.y);\n  }\n\n  // eslint-disable-next-line\n  // const texture = await Texture.load(gl, \"./charizard.png\");\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  // const apple = await Texture.load(gl, \"./apple.png\");\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n\n  const walkDownAnimation = new Animation(regions.slice(0, 4), 0.2);\n  const walkLeftAnimation = new Animation(regions.slice(4, 8), 0.2);\n  const walkRightAnimation = new Animation(regions.slice(8, 12), 0.2);\n  const walkUpAnimation = new Animation(regions.slice(12, 16), 0.2);\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  const characterPosition = new Vector2(250, 500);\n  // var path = walkable.findPath(\n  //   characterPosition.x,\n  //   characterPosition.y,\n  //   250,\n  //   500,\n  //   1\n  // );\n\n  let rotation = 0;\n  let frame = 0;\n  gl.clearColor(0, 0, 0, 1);\n\n  const path: number[] = [];\n  let nextPositon = new Vector2(250, 500);\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    const nextPositon = inputHandler.getTouchedWorldCoord();\n    walkable.findPath(\n      characterPosition.x,\n      characterPosition.y,\n      nextPositon.x,\n      nextPositon.y,\n      10,\n      path\n    );\n    rotation =\n      (Math.atan2(\n        nextPositon.y - characterPosition.y,\n        nextPositon.x - characterPosition.x\n      ) *\n        180) /\n      Math.PI;\n    console.log(nextPositon);\n    // console.log(applePosition);\n    // path = walkable.findPath(\n    //   characterPosition.x,\n    //   characterPosition.y,\n    //   nextPositon.x,\n    //   nextPositon.y,\n    //   1\n    // );\n    // console.log(path);\n  });\n\n  // let applePosition = {\n  //   x: getRandomInt(50, 400),\n\n  //   y: getRandomInt(30, 900),\n  // };\n\n  function getRandomInt(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  const moveSpeed = 150;\n\n  createGameLoop((delta: number) => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n    let region = walkDownAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n    if (\n      characterPosition.x !== nextPositon.x ||\n      characterPosition.y !== nextPositon.y\n    ) {\n      frame += delta;\n      if (rotation >= 0 && rotation < 90) {\n        if (characterPosition.y < nextPositon.y) {\n          region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.y = Math.min(\n            characterPosition.y + delta * moveSpeed,\n            nextPositon.y\n          ); // increase y\n        }\n        if (characterPosition.x < nextPositon.x) {\n          region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.x = Math.min(\n            characterPosition.x + delta * moveSpeed,\n            nextPositon.x\n          ); // increase x\n        }\n      }\n      if (rotation >= -90 && rotation < 0) {\n        if (characterPosition.x < nextPositon.x) {\n          region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.x = Math.min(\n            characterPosition.x + delta * moveSpeed,\n            nextPositon.x\n          ); // increase x\n        }\n        if (characterPosition.y > nextPositon.y) {\n          region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.y = Math.max(\n            characterPosition.y - delta * moveSpeed,\n            nextPositon.y\n          ); // decrease y\n        }\n      }\n      if (rotation >= 90 && rotation < 180) {\n        if (characterPosition.y < nextPositon.y) {\n          region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.y = Math.min(\n            characterPosition.y + delta * moveSpeed,\n            nextPositon.y\n          ); // increase y\n        }\n        if (characterPosition.x > nextPositon.x) {\n          region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.x = Math.max(\n            characterPosition.x - delta * moveSpeed,\n            nextPositon.x\n          ); // decrease x\n        }\n      }\n      if (rotation >= -180 && rotation < -90) {\n        if (characterPosition.y > nextPositon.y) {\n          region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.y = Math.max(\n            characterPosition.y - delta * moveSpeed,\n            nextPositon.y\n          ); // decrease y\n        }\n        if (characterPosition.x > nextPositon.x) {\n          region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.x = Math.max(\n            characterPosition.x - delta * moveSpeed,\n            nextPositon.x\n          ); // decrease x\n        }\n      }\n    } else {\n      frame = 0;\n    }\n\n    // if (\n    //   Math.abs(applePosition.x - characterPosition.x) <= 35 &&\n    //   Math.abs(applePosition.y - characterPosition.y) <= 30\n    // ) {\n    //   applePosition.x = getRandomInt(50, 400);\n    //   applePosition.y = getRandomInt(30, 900);\n    // }\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 500, 1000);\n    // batch.draw(apple, applePosition.x, applePosition.y, 45, 50);\n    // console.log(frame);\n    region.draw(\n      batch,\n      characterPosition.x - 50,\n      characterPosition.y - 20,\n      100,\n      100\n    );\n    batch.end();\n\n    shapeRenderer.begin();\n    for (let rect of obstacles) {\n      shapeRenderer.rect(\n        false,\n        rect.x,\n        rect.y,\n        rect.width,\n        rect.height,\n        Color.WHITE\n      );\n    }\n    if (path.length >= 4) {\n      for (let i = 2; i < path.length; i += 2) {\n        shapeRenderer.line(\n          path[i - 2],\n          path[i - 1],\n          path[i],\n          path[i + 1],\n          Color.WHITE\n        );\n      }\n    }\n    shapeRenderer.end();\n  });\n};\ninit();\n"],"mappings":"AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,aAJF,EAKEC,OALF,EAMEC,aANF,EAOEC,YAPF,EAQEC,SARF,EASEC,QATF,EAUEC,oBAVF,EAWEC,UAXF,EAYEC,OAZF,EAaEC,KAbF,QAcO,OAdP;AAgBA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,IAAI,GAAG,YAAY;EACvB,IAAIC,QAAQ,GAAG,IAAIF,QAAJ,CAAa,GAAb,EAAkB,IAAlB,CAAf;EAEA,MAAMG,KAAK,GAAGhB,WAAW,EAAzB;EACA,MAAMiB,MAAM,GAAGD,KAAK,CAACE,SAAN,EAAf;EACA,MAAMC,QAAQ,GAAGlB,cAAc,CAACgB,MAAD,EAAS,GAAT,EAAc,IAAd,CAA/B;EACA,MAAMG,EAAE,GAAGD,QAAQ,CAACE,UAAT,EAAX;EACA,MAAMC,UAAU,GAAG,MAAMlB,OAAO,CAACmB,IAAR,CAAaH,EAAb,EAAiB,kBAAjB,CAAzB;EAEA,MAAMI,OAAO,GAAG,MAAMC,KAAK,CAAC,YAAD,CAAL,CAAoBC,IAApB,CAA0BC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAlC,CAAtB;EACA,MAAMC,SAAS,GAAGL,OAAO,CAACM,MAAR,CACfC,IADe,CACTC,CAAD,IAAYA,CAAC,CAACC,IAAF,KAAW,WADb,EAEfC,OAFe,CAEPC,GAFO,CAEFC,IAAD,KAAgB,EAC3B,GAAGA,IADwB;IAE3BC,CAAC,EAAE,OAAOD,IAAI,CAACC,CAAZ,GAAgBD,IAAI,CAACE;EAFG,CAAhB,CAFG,CAAlB;;EAOA,KAAK,IAAIF,IAAT,IAAiBP,SAAjB,EAA4B;IAC1Bd,QAAQ,CAACwB,OAAT,CAAiBH,IAAI,CAACI,KAAtB,EAA6BJ,IAAI,CAACE,MAAlC,EAA0CF,IAAI,CAACK,CAA/C,EAAkDL,IAAI,CAACC,CAAvD;EACD,CAnBsB,CAqBvB;EACA;;;EACA,MAAMK,gBAAgB,GAAG,MAAMtC,OAAO,CAACmB,IAAR,CAAaH,EAAb,EAAiB,mBAAjB,CAA/B,CAvBuB,CAwBvB;;EACA,MAAMuB,OAAO,GAAGtC,aAAa,CAACuC,YAAd,CAA2BF,gBAA3B,EAA6C,CAA7C,EAAgD,CAAhD,CAAhB;EAEA,MAAMG,iBAAiB,GAAG,IAAItC,SAAJ,CAAcoC,OAAO,CAACG,KAAR,CAAc,CAAd,EAAiB,CAAjB,CAAd,EAAmC,GAAnC,CAA1B;EACA,MAAMC,iBAAiB,GAAG,IAAIxC,SAAJ,CAAcoC,OAAO,CAACG,KAAR,CAAc,CAAd,EAAiB,CAAjB,CAAd,EAAmC,GAAnC,CAA1B;EACA,MAAME,kBAAkB,GAAG,IAAIzC,SAAJ,CAAcoC,OAAO,CAACG,KAAR,CAAc,CAAd,EAAiB,EAAjB,CAAd,EAAoC,GAApC,CAA3B;EACA,MAAMG,eAAe,GAAG,IAAI1C,SAAJ,CAAcoC,OAAO,CAACG,KAAR,CAAc,EAAd,EAAkB,EAAlB,CAAd,EAAqC,GAArC,CAAxB;EAEA,MAAMI,aAAa,GAAG,IAAI/C,aAAJ,CAAkBiB,EAAlB,CAAtB;EACA,MAAM+B,KAAK,GAAG,IAAI7C,YAAJ,CAAiBc,EAAjB,CAAd;EACA,MAAMgC,MAAM,GAAGjC,QAAQ,CAACkC,SAAT,EAAf;EACA,MAAMC,YAAY,GAAG,IAAI7C,oBAAJ,CAAyBU,QAAzB,CAArB;EACA,MAAMoC,iBAAiB,GAAG,IAAI5C,OAAJ,CAAY,GAAZ,EAAiB,GAAjB,CAA1B,CApCuB,CAqCvB;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAI6C,QAAQ,GAAG,CAAf;EACA,IAAIC,KAAK,GAAG,CAAZ;EACArC,EAAE,CAACsC,UAAH,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;EAEA,MAAMC,IAAc,GAAG,EAAvB;EACA,IAAIC,WAAW,GAAG,IAAIjD,OAAJ,CAAY,GAAZ,EAAiB,GAAjB,CAAlB;EACA2C,YAAY,CAACO,gBAAb,CAA8BnD,UAAU,CAACoD,UAAzC,EAAqD,CAACrB,CAAD,EAAIJ,CAAJ,KAAU;IAC7D,MAAMuB,WAAW,GAAGN,YAAY,CAACS,oBAAb,EAApB;IACAhD,QAAQ,CAACiD,QAAT,CACET,iBAAiB,CAACd,CADpB,EAEEc,iBAAiB,CAAClB,CAFpB,EAGEuB,WAAW,CAACnB,CAHd,EAIEmB,WAAW,CAACvB,CAJd,EAKE,EALF,EAMEsB,IANF;IAQAH,QAAQ,GACLS,IAAI,CAACC,KAAL,CACCN,WAAW,CAACvB,CAAZ,GAAgBkB,iBAAiB,CAAClB,CADnC,EAECuB,WAAW,CAACnB,CAAZ,GAAgBc,iBAAiB,CAACd,CAFnC,IAIC,GAJF,GAKAwB,IAAI,CAACE,EANP;IAOAC,OAAO,CAACC,GAAR,CAAYT,WAAZ,EAjB6D,CAkB7D;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD,CA3BD,EAnDuB,CAgFvB;EACA;EAEA;EACA;;EAEA,SAASU,YAAT,CAAsBC,GAAtB,EAAmCC,GAAnC,EAAwD;IACtD,OAAOP,IAAI,CAACQ,KAAL,CAAWR,IAAI,CAACS,MAAL,MAAiBF,GAAG,GAAGD,GAAvB,CAAX,IAA0CA,GAAjD;EACD;;EAED,MAAMI,SAAS,GAAG,GAAlB;EAEAzE,cAAc,CAAE0E,KAAD,IAAmB;IAChCxD,EAAE,CAACyD,KAAH,CAASzD,EAAE,CAAC0D,gBAAZ;IACA5B,aAAa,CAAC6B,aAAd,CAA4B3B,MAAM,CAAC4B,cAAP,CAAsBC,MAAlD;IACA/B,aAAa,CAACgC,KAAd;IACAhC,aAAa,CAACd,IAAd,CAAmB,IAAnB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,GAA/B,EAAoC,IAApC;IACAc,aAAa,CAACiC,GAAd;IACA,IAAIC,MAAM,GAAGvC,iBAAiB,CAACwC,WAAlB,CAA8B5B,KAA9B,EAAqCjD,QAAQ,CAAC8E,MAA9C,CAAb;;IACA,IACE/B,iBAAiB,CAACd,CAAlB,KAAwBmB,WAAW,CAACnB,CAApC,IACAc,iBAAiB,CAAClB,CAAlB,KAAwBuB,WAAW,CAACvB,CAFtC,EAGE;MACAoB,KAAK,IAAImB,KAAT;;MACA,IAAIpB,QAAQ,IAAI,CAAZ,IAAiBA,QAAQ,GAAG,EAAhC,EAAoC;QAClC,IAAID,iBAAiB,CAAClB,CAAlB,GAAsBuB,WAAW,CAACvB,CAAtC,EAAyC;UACvC+C,MAAM,GAAGnC,eAAe,CAACoC,WAAhB,CAA4B5B,KAA5B,EAAmCjD,QAAQ,CAAC+E,IAA5C,CAAT;UACAhC,iBAAiB,CAAClB,CAAlB,GAAsB4B,IAAI,CAACM,GAAL,CACpBhB,iBAAiB,CAAClB,CAAlB,GAAsBuC,KAAK,GAAGD,SADV,EAEpBf,WAAW,CAACvB,CAFQ,CAAtB,CAFuC,CAKpC;QACJ;;QACD,IAAIkB,iBAAiB,CAACd,CAAlB,GAAsBmB,WAAW,CAACnB,CAAtC,EAAyC;UACvC2C,MAAM,GAAGpC,kBAAkB,CAACqC,WAAnB,CAA+B5B,KAA/B,EAAsCjD,QAAQ,CAAC+E,IAA/C,CAAT;UACAhC,iBAAiB,CAACd,CAAlB,GAAsBwB,IAAI,CAACM,GAAL,CACpBhB,iBAAiB,CAACd,CAAlB,GAAsBmC,KAAK,GAAGD,SADV,EAEpBf,WAAW,CAACnB,CAFQ,CAAtB,CAFuC,CAKpC;QACJ;MACF;;MACD,IAAIe,QAAQ,IAAI,CAAC,EAAb,IAAmBA,QAAQ,GAAG,CAAlC,EAAqC;QACnC,IAAID,iBAAiB,CAACd,CAAlB,GAAsBmB,WAAW,CAACnB,CAAtC,EAAyC;UACvC2C,MAAM,GAAGpC,kBAAkB,CAACqC,WAAnB,CAA+B5B,KAA/B,EAAsCjD,QAAQ,CAAC+E,IAA/C,CAAT;UACAhC,iBAAiB,CAACd,CAAlB,GAAsBwB,IAAI,CAACM,GAAL,CACpBhB,iBAAiB,CAACd,CAAlB,GAAsBmC,KAAK,GAAGD,SADV,EAEpBf,WAAW,CAACnB,CAFQ,CAAtB,CAFuC,CAKpC;QACJ;;QACD,IAAIc,iBAAiB,CAAClB,CAAlB,GAAsBuB,WAAW,CAACvB,CAAtC,EAAyC;UACvC+C,MAAM,GAAGvC,iBAAiB,CAACwC,WAAlB,CAA8B5B,KAA9B,EAAqCjD,QAAQ,CAAC+E,IAA9C,CAAT;UACAhC,iBAAiB,CAAClB,CAAlB,GAAsB4B,IAAI,CAACO,GAAL,CACpBjB,iBAAiB,CAAClB,CAAlB,GAAsBuC,KAAK,GAAGD,SADV,EAEpBf,WAAW,CAACvB,CAFQ,CAAtB,CAFuC,CAKpC;QACJ;MACF;;MACD,IAAImB,QAAQ,IAAI,EAAZ,IAAkBA,QAAQ,GAAG,GAAjC,EAAsC;QACpC,IAAID,iBAAiB,CAAClB,CAAlB,GAAsBuB,WAAW,CAACvB,CAAtC,EAAyC;UACvC+C,MAAM,GAAGnC,eAAe,CAACoC,WAAhB,CAA4B5B,KAA5B,EAAmCjD,QAAQ,CAAC+E,IAA5C,CAAT;UACAhC,iBAAiB,CAAClB,CAAlB,GAAsB4B,IAAI,CAACM,GAAL,CACpBhB,iBAAiB,CAAClB,CAAlB,GAAsBuC,KAAK,GAAGD,SADV,EAEpBf,WAAW,CAACvB,CAFQ,CAAtB,CAFuC,CAKpC;QACJ;;QACD,IAAIkB,iBAAiB,CAACd,CAAlB,GAAsBmB,WAAW,CAACnB,CAAtC,EAAyC;UACvC2C,MAAM,GAAGrC,iBAAiB,CAACsC,WAAlB,CAA8B5B,KAA9B,EAAqCjD,QAAQ,CAAC+E,IAA9C,CAAT;UACAhC,iBAAiB,CAACd,CAAlB,GAAsBwB,IAAI,CAACO,GAAL,CACpBjB,iBAAiB,CAACd,CAAlB,GAAsBmC,KAAK,GAAGD,SADV,EAEpBf,WAAW,CAACnB,CAFQ,CAAtB,CAFuC,CAKpC;QACJ;MACF;;MACD,IAAIe,QAAQ,IAAI,CAAC,GAAb,IAAoBA,QAAQ,GAAG,CAAC,EAApC,EAAwC;QACtC,IAAID,iBAAiB,CAAClB,CAAlB,GAAsBuB,WAAW,CAACvB,CAAtC,EAAyC;UACvC+C,MAAM,GAAGvC,iBAAiB,CAACwC,WAAlB,CAA8B5B,KAA9B,EAAqCjD,QAAQ,CAAC+E,IAA9C,CAAT;UACAhC,iBAAiB,CAAClB,CAAlB,GAAsB4B,IAAI,CAACO,GAAL,CACpBjB,iBAAiB,CAAClB,CAAlB,GAAsBuC,KAAK,GAAGD,SADV,EAEpBf,WAAW,CAACvB,CAFQ,CAAtB,CAFuC,CAKpC;QACJ;;QACD,IAAIkB,iBAAiB,CAACd,CAAlB,GAAsBmB,WAAW,CAACnB,CAAtC,EAAyC;UACvC2C,MAAM,GAAGrC,iBAAiB,CAACsC,WAAlB,CAA8B5B,KAA9B,EAAqCjD,QAAQ,CAAC+E,IAA9C,CAAT;UACAhC,iBAAiB,CAACd,CAAlB,GAAsBwB,IAAI,CAACO,GAAL,CACpBjB,iBAAiB,CAACd,CAAlB,GAAsBmC,KAAK,GAAGD,SADV,EAEpBf,WAAW,CAACnB,CAFQ,CAAtB,CAFuC,CAKpC;QACJ;MACF;IACF,CArED,MAqEO;MACLgB,KAAK,GAAG,CAAR;IACD,CA9E+B,CAgFhC;IACA;IACA;IACA;IACA;IACA;IACA;;;IACAN,KAAK,CAAC4B,aAAN,CAAoB3B,MAAM,CAAC4B,cAAP,CAAsBC,MAA1C;IACA9B,KAAK,CAAC+B,KAAN;IACA/B,KAAK,CAACqC,IAAN,CAAWlE,UAAX,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,GAA7B,EAAkC,IAAlC,EAzFgC,CA0FhC;IACA;;IACA8D,MAAM,CAACI,IAAP,CACErC,KADF,EAEEI,iBAAiB,CAACd,CAAlB,GAAsB,EAFxB,EAGEc,iBAAiB,CAAClB,CAAlB,GAAsB,EAHxB,EAIE,GAJF,EAKE,GALF;IAOAc,KAAK,CAACgC,GAAN;IAEAjC,aAAa,CAACgC,KAAd;;IACA,KAAK,IAAI9C,IAAT,IAAiBP,SAAjB,EAA4B;MAC1BqB,aAAa,CAACd,IAAd,CACE,KADF,EAEEA,IAAI,CAACK,CAFP,EAGEL,IAAI,CAACC,CAHP,EAIED,IAAI,CAACI,KAJP,EAKEJ,IAAI,CAACE,MALP,EAME1B,KAAK,CAAC6E,KANR;IAQD;;IACD,IAAI9B,IAAI,CAAC+B,MAAL,IAAe,CAAnB,EAAsB;MACpB,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhC,IAAI,CAAC+B,MAAzB,EAAiCC,CAAC,IAAI,CAAtC,EAAyC;QACvCzC,aAAa,CAAC0C,IAAd,CACEjC,IAAI,CAACgC,CAAC,GAAG,CAAL,CADN,EAEEhC,IAAI,CAACgC,CAAC,GAAG,CAAL,CAFN,EAGEhC,IAAI,CAACgC,CAAD,CAHN,EAIEhC,IAAI,CAACgC,CAAC,GAAG,CAAL,CAJN,EAKE/E,KAAK,CAAC6E,KALR;MAOD;IACF;;IACDvC,aAAa,CAACiC,GAAd;EACD,CA5Ha,CAAd;AA6HD,CAzND;;AA0NArE,IAAI"},"metadata":{},"sourceType":"module"}