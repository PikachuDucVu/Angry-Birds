{"ast":null,"code":"import { createGameLoop, createStage, createViewport, InputEvent, PolygonBatch, ShapeRenderer, Texture, Vector2, ViewportInputHandler } from \"gdxts\";\nexport const init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 600, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./flappy-bird.gif\");\n  const obstacles = await Texture.load(gl, \"./obstacle.webp\");\n  const gameovericon = await Texture.load(gl, \"./gameover.png\");\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  const characterTexture = await Texture.load(gl, \"./bird.png\");\n  let characterPosition = new Vector2(250, 500);\n  let rotationOfBird = 0;\n  let obstaclePosition = new Vector2(595, 195);\n  gl.clearColor(0, 0, 0, 1);\n  let lastClick = false;\n  let speedGame = 170;\n  let obstacleSpeed = speedGame;\n  let count = 0;\n  let heightObstacleUp = 300;\n  let heightObstacleDown = 270;\n  let firstClick = false;\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    count = 0;\n    rotationOfBird = -0.1;\n\n    if (firstClick) {\n      speedGame = 170;\n    }\n\n    firstClick = true;\n    lastClick = true;\n  });\n\n  function moveOfBird(delta) {\n    if (lastClick) {\n      lastClick = true;\n      characterPosition.y = characterPosition.y + (speedGame *= 1.05) * delta;\n      count += speedGame * delta;\n\n      if (rotationOfBird <= 0.25) {\n        setTimeout(() => {\n          rotationOfBird += 0.05; // console.log(rotationOfBird);\n        }, 50);\n      }\n\n      if (count >= 90) {\n        lastClick = false;\n        count--;\n      }\n    }\n\n    if (lastClick === false) {\n      characterPosition.y -= speedGame * delta;\n\n      if (count >= -30 && count < 90) {\n        count -= (speedGame *= 1.025) * delta;\n      }\n\n      if (rotationOfBird >= -1) {\n        rotationOfBird -= 0.07;\n      }\n    }\n  }\n\n  function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  function obstacleMove(delta) {\n    obstaclePosition.x -= obstacleSpeed * delta;\n\n    if (obstaclePosition.x < -150) {\n      obstaclePosition.set(595, 195);\n      let optionOfObstacle = getRandomInt(1, 5);\n      console.log(optionOfObstacle);\n\n      switch (optionOfObstacle) {\n        case 1:\n          heightObstacleDown = 150;\n          heightObstacleUp = 500;\n          break;\n\n        case 2:\n          heightObstacleDown = 250;\n          heightObstacleUp = 400;\n          break;\n\n        case 3:\n          heightObstacleDown = 350;\n          heightObstacleUp = 300;\n          break;\n\n        case 4:\n          heightObstacleDown = 450;\n          heightObstacleUp = 200;\n          break;\n\n        case 5:\n          heightObstacleDown = 550;\n          heightObstacleUp = 125;\n          break;\n\n        default:\n          break;\n      } // heightObstacleUp = getRandomInt(200, 800);\n      // heightObstacleDown = getRandomInt(200, 800);\n\n\n      if (obstacleSpeed <= 500) {\n        obstacleSpeed *= 1.15;\n      }\n    }\n  }\n\n  createGameLoop(delta => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 600, 1000);\n    shapeRenderer.end(); // console.log(characterPosition.y, speedGame);\n\n    if (firstClick === true) {\n      moveOfBird(delta);\n      obstacleMove(delta);\n    }\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 600, 1000);\n    batch.draw(characterTexture, characterPosition.x, characterPosition.y, 60, 60, 30, 30, rotationOfBird);\n    batch.draw(obstacles, obstaclePosition.x, obstaclePosition.y, 150, heightObstacleDown // height ben duoi default = 270 // max 500 min 150\n    );\n    batch.draw(obstacles, obstaclePosition.x, obstaclePosition.y + 610, 150, heightObstacleUp, // height ben tren // default = 300 // max 500 min 150\n    75, 100, 47.13);\n\n    if (characterPosition.y <= 190) {\n      firstClick = false;\n      lastClick = false;\n      speedGame = 0;\n      batch.draw(gameovericon, 50, 500, 500, 250);\n    }\n\n    batch.end();\n  });\n};\ninit();","map":{"version":3,"names":["createGameLoop","createStage","createViewport","InputEvent","PolygonBatch","ShapeRenderer","Texture","Vector2","ViewportInputHandler","init","stage","canvas","getCanvas","viewport","gl","getContext","background","load","obstacles","gameovericon","shapeRenderer","batch","camera","getCamera","inputHandler","characterTexture","characterPosition","rotationOfBird","obstaclePosition","clearColor","lastClick","speedGame","obstacleSpeed","count","heightObstacleUp","heightObstacleDown","firstClick","addEventListener","TouchStart","x","y","moveOfBird","delta","setTimeout","getRandomInt","min","max","Math","floor","random","obstacleMove","set","optionOfObstacle","console","log","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end","draw"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createGameLoop,\n  createStage,\n  createViewport,\n  InputEvent,\n  PolygonBatch,\n  ShapeRenderer,\n  Texture,\n  Vector2,\n  ViewportInputHandler,\n} from \"gdxts\";\nimport { init2 } from \"./PokemonGame\";\nexport const init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 600, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./flappy-bird.gif\");\n  const obstacles = await Texture.load(gl, \"./obstacle.webp\");\n  const gameovericon = await Texture.load(gl, \"./gameover.png\");\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n\n  const characterTexture = await Texture.load(gl, \"./bird.png\");\n  let characterPosition = new Vector2(250, 500);\n  let rotationOfBird = 0;\n  let obstaclePosition = new Vector2(595, 195);\n\n  gl.clearColor(0, 0, 0, 1);\n  let lastClick = false;\n  let speedGame = 170;\n  let obstacleSpeed = speedGame;\n  let count = 0;\n  let heightObstacleUp = 300;\n  let heightObstacleDown = 270;\n  let firstClick = false;\n\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    count = 0;\n    rotationOfBird = -0.1;\n    if (firstClick) {\n      speedGame = 170;\n    }\n    firstClick = true;\n    lastClick = true;\n  });\n\n  function moveOfBird(delta: number) {\n    if (lastClick) {\n      lastClick = true;\n      characterPosition.y = characterPosition.y + (speedGame *= 1.05) * delta;\n      count += speedGame * delta;\n      if (rotationOfBird <= 0.25) {\n        setTimeout(() => {\n          rotationOfBird += 0.05;\n          // console.log(rotationOfBird);\n        }, 50);\n      }\n\n      if (count >= 90) {\n        lastClick = false;\n        count--;\n      }\n    }\n\n    if (lastClick === false) {\n      characterPosition.y -= speedGame * delta;\n      if (count >= -30 && count < 90) {\n        count -= (speedGame *= 1.025) * delta;\n      }\n      if (rotationOfBird >= -1) {\n        rotationOfBird -= 0.07;\n      }\n    }\n  }\n\n  function getRandomInt(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  function obstacleMove(delta: number) {\n    obstaclePosition.x -= obstacleSpeed * delta;\n\n    if (obstaclePosition.x < -150) {\n      obstaclePosition.set(595, 195);\n      let optionOfObstacle = getRandomInt(1, 5);\n      console.log(optionOfObstacle);\n      switch (optionOfObstacle) {\n        case 1:\n          heightObstacleDown = 150;\n          heightObstacleUp = 500;\n          break;\n\n        case 2:\n          heightObstacleDown = 250;\n          heightObstacleUp = 400;\n          break;\n        case 3:\n          heightObstacleDown = 350;\n          heightObstacleUp = 300;\n          break;\n        case 4:\n          heightObstacleDown = 450;\n          heightObstacleUp = 200;\n          break;\n        case 5:\n          heightObstacleDown = 550;\n          heightObstacleUp = 125;\n          break;\n        default:\n          break;\n      }\n      // heightObstacleUp = getRandomInt(200, 800);\n      // heightObstacleDown = getRandomInt(200, 800);\n\n      if (obstacleSpeed <= 500) {\n        obstacleSpeed *= 1.15;\n      }\n    }\n  }\n\n  createGameLoop((delta: number) => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 600, 1000);\n    shapeRenderer.end();\n    // console.log(characterPosition.y, speedGame);\n\n    if (firstClick === true) {\n      moveOfBird(delta);\n      obstacleMove(delta);\n    }\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 600, 1000);\n    batch.draw(\n      characterTexture,\n      characterPosition.x,\n      characterPosition.y,\n      60,\n      60,\n      30,\n      30,\n      rotationOfBird\n    );\n\n    batch.draw(\n      obstacles,\n      obstaclePosition.x,\n      obstaclePosition.y,\n      150,\n      heightObstacleDown // height ben duoi default = 270 // max 500 min 150\n    );\n    batch.draw(\n      obstacles,\n      obstaclePosition.x,\n      obstaclePosition.y + 610,\n      150,\n      heightObstacleUp, // height ben tren // default = 300 // max 500 min 150\n      75,\n      100,\n      47.13\n    );\n    if (characterPosition.y <= 190) {\n      firstClick = false;\n      lastClick = false;\n      speedGame = 0;\n      batch.draw(gameovericon, 50, 500, 500, 250);\n    }\n    batch.end();\n  });\n};\n\ninit();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}