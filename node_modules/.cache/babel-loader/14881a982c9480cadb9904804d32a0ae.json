{"ast":null,"code":"import { b2BodyDef, b2BodyType, b2CircleShape, b2ContactListener, b2FixtureDef, b2PolygonShape, b2World } from \"box2d.ts\";\nimport { World } from \"flat-ecs\";\nimport { PolygonBatch, ShapeRenderer, Vector2, ViewportInputHandler } from \"gdxts\";\nimport { Constants } from \"../Constants\";\nimport { BackgroundRenderSystem } from \"../system/BackgroundRenderSystem\";\nimport { BirdRenderSystem } from \"../system/BirdRenderSystem\";\nimport { BoxesAndPigsRenderSystem } from \"../system/BoxesAndPigsRenderSystem\";\nimport { ContactListenerSystem } from \"../system/ContactListenerSystem\";\nimport { inputHandlerSystem } from \"../system/inputHandleSystem\";\nimport { NextLevelSystem } from \"../system/NextLevelSystem\";\nimport { ShapeRendererSystem } from \"../system/ShapeRendererSystem\";\nimport { SlingshotRenderSystem } from \"../system/SlingshotRenderSystem\";\nexport const createGameScreen = async (assetManager, viewport) => {\n  const createWall = (world, x, y, width, height) => {\n    const bodyDef = new b2BodyDef();\n    bodyDef.type = b2BodyType.b2_staticBody;\n    bodyDef.position.Set(x + width / 2, y + height / 2);\n    const body = world.CreateBody(bodyDef);\n    const shape = new b2PolygonShape();\n    shape.SetAsBox(width / 2, height / 2);\n    body.SetUserData(\"ground\");\n    body.CreateFixture(shape);\n  };\n\n  const createBall = (world, x, y, radius, userData) => {\n    const bodyDef = new b2BodyDef();\n    bodyDef.type = b2BodyType.b2_staticBody;\n    bodyDef.position.Set(x + radius / 2, y + radius / 2);\n    const circle = new b2CircleShape();\n    circle.m_radius = radius;\n    const fixtureDef = new b2FixtureDef();\n    fixtureDef.shape = circle;\n    fixtureDef.restitution = 0.5; // bounce bird\n\n    fixtureDef.friction = 1;\n    fixtureDef.shape = circle;\n    const body = world.CreateBody(bodyDef);\n    body.CreateFixture(fixtureDef);\n    body.SetUserData(userData);\n    return body;\n  };\n\n  const createBox = (world, x, y, width, height, userData) => {\n    const bodyDef = new b2BodyDef();\n    bodyDef.type = b2BodyType.b2_dynamicBody;\n    bodyDef.position.Set(x + width / 2, y + height / 2);\n    const body = world.CreateBody(bodyDef);\n    const shape = new b2PolygonShape();\n    shape.SetAsBox(width * 0.5, height * 0.5);\n    body.SetUserData({\n      name: userData.name,\n      durability: 0\n    });\n    body.CreateFixture(shape);\n    return body;\n  };\n\n  const gl = viewport.getContext();\n  const shapeRenderer = new ShapeRenderer(gl);\n  const inputHandler = new ViewportInputHandler(viewport);\n  const camera = viewport.getCamera();\n  const batch = new PolygonBatch(gl);\n  camera.setYDown(true);\n  batch.setYDown(true);\n  const physicWorld = new b2World({\n    x: 0,\n    y: 10\n  });\n  const BALL_RADIUS = 0.2;\n  const LevelState = {\n    birdCount: 0,\n    conditionWin: false,\n    clearMap: false\n  };\n  let offset = 0.5;\n  let birdNumber = 1;\n  let bird = [createBall(physicWorld, 2, 3.45, BALL_RADIUS, \"bird\" + birdNumber++)];\n\n  for (let i = 0; i < 2; i++) {\n    bird.push(createBall(physicWorld, 1.5 - offset * i, 3.85, BALL_RADIUS, \"bird\" + birdNumber++));\n  }\n\n  const mapData = await fetch(\"./untitled.tmj\").then(res => res.json());\n  const wallData = mapData.layers.find(l => l.name === \"walls\").objects; // const boxData = mapData.layers.find((l: any) => l.name === \"box\").objects;\n\n  console.log(mapData);\n\n  for (let wall of wallData) {\n    createWall(physicWorld, wall.x / Constants.METER_TO_WORLD, wall.y / Constants.METER_TO_WORLD, wall.width / Constants.METER_TO_WORLD, wall.height / Constants.METER_TO_WORLD);\n  }\n\n  let delayTime = 0;\n  const BOX_SIZE = 0.5;\n  const PIG_SIZE = 0.3;\n  let pigs = [];\n  let boxes = [];\n  let pigNumber = 0;\n  let boxNumber = 0;\n  let positionBoxX = 6;\n  let positionBoxY = 4.3;\n  let birdOnSlingShot = true;\n  const originPosition = new Vector2(bird[0].GetPosition().x * Constants.METER_TO_WORLD, bird[0].GetPosition().y * Constants.METER_TO_WORLD);\n  let slingPos = new Vector2(bird[0].GetPosition().x * Constants.METER_TO_WORLD, bird[0].GetPosition().y * Constants.METER_TO_WORLD);\n\n  for (let i = 0; i < 3; i++) {\n    positionBoxX = 6 + i * 0.4;\n\n    for (let j = 0; j <= i; j++) {\n      boxes.push(createBox(physicWorld, positionBoxX += 0.51, positionBoxY -= 0.55, BOX_SIZE, BOX_SIZE, {\n        name: `box ${boxNumber++}`\n      }));\n    }\n\n    if (i < 1) {\n      pigs.push(createBox(physicWorld, positionBoxX + 0.5, positionBoxY - 0.25, PIG_SIZE, PIG_SIZE, {\n        name: `pig ${pigNumber++}`\n      }));\n    }\n  }\n\n  const world = new World();\n  const contactListener = new b2ContactListener();\n  var cleared = false;\n  gl.clearColor(0, 0, 0, 1);\n  physicWorld.SetContactListener(contactListener);\n  world.register(\"inputHandler\", inputHandler);\n  world.register(\"contactListener\", contactListener);\n  world.register(\"delayTime\", delayTime);\n  world.register(\"gl\", gl);\n  world.register(\"shapeRenderer\", shapeRenderer);\n  world.register(\"assetManager\", assetManager);\n  world.register(\"viewport\", viewport);\n  world.register(\"batch\", batch);\n  world.register(\"bird\", bird);\n  world.register(\"levelState\", LevelState);\n  world.register(\"boxes\", boxes);\n  world.register(\"pigs\", pigs);\n  world.register(\"originPosition\", originPosition);\n  world.register(\"slingPos\", slingPos);\n  world.register(\"physicWorld\", physicWorld);\n  world.register(\"birdOnSlingShot\", birdOnSlingShot);\n  world.register(\"birdNumber\", birdNumber);\n  world.register(\"createBall\", createBall);\n  world.addSystem(new BackgroundRenderSystem(), false);\n  world.addSystem(new ShapeRendererSystem(), false);\n  world.addSystem(new inputHandlerSystem(), false);\n  world.addSystem(new BirdRenderSystem(), false);\n  world.addSystem(new BoxesAndPigsRenderSystem(), false);\n  world.addSystem(new SlingshotRenderSystem(), false);\n  world.addSystem(new ContactListenerSystem(), false);\n  world.addSystem(new NextLevelSystem(), false);\n  return {\n    update(delta) {\n      if (LevelState.conditionWin) {}\n\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      batch.setProjection(camera.combined);\n      shapeRenderer.setProjection(camera.combined);\n      world.setDelta(delta);\n      world.processActiveSystem();\n      world.processPassiveSystem();\n      physicWorld.Step(delta, 8, 3);\n    },\n\n    dispose() {\n      batch.dispose();\n      inputHandler.cleanup();\n    }\n\n  };\n};","map":{"version":3,"names":["b2BodyDef","b2BodyType","b2CircleShape","b2ContactListener","b2FixtureDef","b2PolygonShape","b2World","World","PolygonBatch","ShapeRenderer","Vector2","ViewportInputHandler","Constants","BackgroundRenderSystem","BirdRenderSystem","BoxesAndPigsRenderSystem","ContactListenerSystem","inputHandlerSystem","NextLevelSystem","ShapeRendererSystem","SlingshotRenderSystem","createGameScreen","assetManager","viewport","createWall","world","x","y","width","height","bodyDef","type","b2_staticBody","position","Set","body","CreateBody","shape","SetAsBox","SetUserData","CreateFixture","createBall","radius","userData","circle","m_radius","fixtureDef","restitution","friction","createBox","b2_dynamicBody","name","durability","gl","getContext","shapeRenderer","inputHandler","camera","getCamera","batch","setYDown","physicWorld","BALL_RADIUS","LevelState","birdCount","conditionWin","clearMap","offset","birdNumber","bird","i","push","mapData","fetch","then","res","json","wallData","layers","find","l","objects","console","log","wall","METER_TO_WORLD","delayTime","BOX_SIZE","PIG_SIZE","pigs","boxes","pigNumber","boxNumber","positionBoxX","positionBoxY","birdOnSlingShot","originPosition","GetPosition","slingPos","j","contactListener","cleared","clearColor","SetContactListener","register","addSystem","update","delta","clear","COLOR_BUFFER_BIT","setProjection","combined","setDelta","processActiveSystem","processPassiveSystem","Step","dispose","cleanup"],"sources":["D:/projects/test-game/src/screen/GameScreen.ts"],"sourcesContent":["import {\r\n  b2Body,\r\n  b2BodyDef,\r\n  b2BodyType,\r\n  b2CircleShape,\r\n  b2ContactListener,\r\n  b2FixtureDef,\r\n  b2PolygonShape,\r\n  b2World,\r\n} from \"box2d.ts\";\r\nimport { World } from \"flat-ecs\";\r\nimport {\r\n  AssetManager,\r\n  OrthoCamera,\r\n  PolygonBatch,\r\n  Screen,\r\n  ShapeRenderer,\r\n  Vector2,\r\n  Viewport,\r\n  ViewportInputHandler,\r\n} from \"gdxts\";\r\nimport { Constants } from \"../Constants\";\r\nimport { LevelState } from \"../data/LevelState\";\r\nimport { BackgroundRenderSystem } from \"../system/BackgroundRenderSystem\";\r\nimport { BirdRenderSystem } from \"../system/BirdRenderSystem\";\r\nimport { BoxesAndPigsRenderSystem } from \"../system/BoxesAndPigsRenderSystem\";\r\nimport { ContactListenerSystem } from \"../system/ContactListenerSystem\";\r\nimport { inputHandlerSystem } from \"../system/inputHandleSystem\";\r\nimport { NextLevelSystem } from \"../system/NextLevelSystem\";\r\nimport { ShapeRendererSystem } from \"../system/ShapeRendererSystem\";\r\nimport { SlingshotRenderSystem } from \"../system/SlingshotRenderSystem\";\r\n\r\nexport const createGameScreen = async (\r\n  assetManager: AssetManager,\r\n  viewport: Viewport\r\n): Promise<Screen> => {\r\n  const createWall = (\r\n    world: b2World,\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ) => {\r\n    const bodyDef = new b2BodyDef();\r\n    bodyDef.type = b2BodyType.b2_staticBody;\r\n    bodyDef.position.Set(x + width / 2, y + height / 2);\r\n    const body = world.CreateBody(bodyDef);\r\n    const shape = new b2PolygonShape();\r\n    shape.SetAsBox(width / 2, height / 2);\r\n    body.SetUserData(\"ground\");\r\n    body.CreateFixture(shape);\r\n  };\r\n\r\n  const createBall = (\r\n    world: b2World,\r\n    x: number,\r\n    y: number,\r\n    radius: number,\r\n    userData: string\r\n  ): b2Body => {\r\n    const bodyDef = new b2BodyDef();\r\n    bodyDef.type = b2BodyType.b2_staticBody;\r\n    bodyDef.position.Set(x + radius / 2, y + radius / 2);\r\n    const circle = new b2CircleShape();\r\n    circle.m_radius = radius;\r\n    const fixtureDef = new b2FixtureDef();\r\n    fixtureDef.shape = circle;\r\n    fixtureDef.restitution = 0.5; // bounce bird\r\n    fixtureDef.friction = 1;\r\n    fixtureDef.shape = circle;\r\n\r\n    const body = world.CreateBody(bodyDef);\r\n    body.CreateFixture(fixtureDef);\r\n    body.SetUserData(userData);\r\n    return body;\r\n  };\r\n\r\n  const createBox = (\r\n    world: b2World,\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number,\r\n    userData: {\r\n      name: string;\r\n    }\r\n  ): b2Body => {\r\n    const bodyDef = new b2BodyDef();\r\n    bodyDef.type = b2BodyType.b2_dynamicBody;\r\n    bodyDef.position.Set(x + width / 2, y + height / 2);\r\n    const body = world.CreateBody(bodyDef);\r\n    const shape = new b2PolygonShape();\r\n    shape.SetAsBox(width * 0.5, height * 0.5);\r\n    body.SetUserData({\r\n      name: userData.name,\r\n      durability: 0,\r\n    });\r\n    body.CreateFixture(shape);\r\n    return body;\r\n  };\r\n\r\n  const gl = viewport.getContext();\r\n  const shapeRenderer = new ShapeRenderer(gl);\r\n  const inputHandler = new ViewportInputHandler(viewport);\r\n  const camera = viewport.getCamera();\r\n  const batch = new PolygonBatch(gl);\r\n  camera.setYDown(true);\r\n  batch.setYDown(true);\r\n\r\n  const physicWorld = new b2World({\r\n    x: 0,\r\n    y: 10,\r\n  });\r\n  const BALL_RADIUS = 0.2;\r\n\r\n  const LevelState: LevelState = {\r\n    birdCount: 0,\r\n    conditionWin: false,\r\n    clearMap: false,\r\n  };\r\n\r\n  let offset = 0.5;\r\n  let birdNumber = 1;\r\n  let bird: b2Body[] = [\r\n    createBall(physicWorld, 2, 3.45, BALL_RADIUS, \"bird\" + birdNumber++),\r\n  ];\r\n\r\n  for (let i = 0; i < 2; i++) {\r\n    bird.push(\r\n      createBall(\r\n        physicWorld,\r\n        1.5 - offset * i,\r\n        3.85,\r\n        BALL_RADIUS,\r\n        \"bird\" + birdNumber++\r\n      )\r\n    );\r\n  }\r\n\r\n  const mapData = await fetch(\"./untitled.tmj\").then((res) => res.json());\r\n  const wallData = mapData.layers.find((l: any) => l.name === \"walls\").objects;\r\n  // const boxData = mapData.layers.find((l: any) => l.name === \"box\").objects;\r\n  console.log(mapData);\r\n  for (let wall of wallData) {\r\n    createWall(\r\n      physicWorld,\r\n      wall.x / Constants.METER_TO_WORLD,\r\n      wall.y / Constants.METER_TO_WORLD,\r\n      wall.width / Constants.METER_TO_WORLD,\r\n      wall.height / Constants.METER_TO_WORLD\r\n    );\r\n  }\r\n\r\n  let delayTime = 0;\r\n  const BOX_SIZE = 0.5;\r\n  const PIG_SIZE = 0.3;\r\n  let pigs: b2Body[] = [];\r\n  let boxes: b2Body[] = [];\r\n  let pigNumber = 0;\r\n  let boxNumber = 0;\r\n  let positionBoxX = 6;\r\n  let positionBoxY = 4.3;\r\n  let birdOnSlingShot = true;\r\n\r\n  const originPosition = new Vector2(\r\n    bird[0].GetPosition().x * Constants.METER_TO_WORLD,\r\n    bird[0].GetPosition().y * Constants.METER_TO_WORLD\r\n  );\r\n  let slingPos = new Vector2(\r\n    bird[0].GetPosition().x * Constants.METER_TO_WORLD,\r\n    bird[0].GetPosition().y * Constants.METER_TO_WORLD\r\n  );\r\n\r\n  for (let i = 0; i < 3; i++) {\r\n    positionBoxX = 6 + i * 0.4;\r\n    for (let j = 0; j <= i; j++) {\r\n      boxes.push(\r\n        createBox(\r\n          physicWorld,\r\n          (positionBoxX += 0.51),\r\n          (positionBoxY -= 0.55),\r\n          BOX_SIZE,\r\n          BOX_SIZE,\r\n          {\r\n            name: `box ${boxNumber++}`,\r\n          }\r\n        )\r\n      );\r\n    }\r\n    if (i < 1) {\r\n      pigs.push(\r\n        createBox(\r\n          physicWorld,\r\n          positionBoxX + 0.5,\r\n          positionBoxY - 0.25,\r\n          PIG_SIZE,\r\n          PIG_SIZE,\r\n          {\r\n            name: `pig ${pigNumber++}`,\r\n          }\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  const world = new World();\r\n  const contactListener = new b2ContactListener();\r\n  var cleared = false;\r\n\r\n  gl.clearColor(0, 0, 0, 1);\r\n  physicWorld.SetContactListener(contactListener);\r\n\r\n  world.register(\"inputHandler\", inputHandler);\r\n  world.register(\"contactListener\", contactListener);\r\n  world.register(\"delayTime\", delayTime);\r\n  world.register(\"gl\", gl);\r\n  world.register(\"shapeRenderer\", shapeRenderer);\r\n  world.register(\"assetManager\", assetManager);\r\n  world.register(\"viewport\", viewport);\r\n  world.register(\"batch\", batch);\r\n  world.register(\"bird\", bird);\r\n  world.register(\"levelState\", LevelState);\r\n  world.register(\"boxes\", boxes);\r\n  world.register(\"pigs\", pigs);\r\n  world.register(\"originPosition\", originPosition);\r\n  world.register(\"slingPos\", slingPos);\r\n  world.register(\"physicWorld\", physicWorld);\r\n  world.register(\"birdOnSlingShot\", birdOnSlingShot);\r\n  world.register(\"birdNumber\", birdNumber);\r\n  world.register(\"createBall\", createBall);\r\n\r\n  world.addSystem(new BackgroundRenderSystem(), false);\r\n  world.addSystem(new ShapeRendererSystem(), false);\r\n  world.addSystem(new inputHandlerSystem(), false);\r\n  world.addSystem(new BirdRenderSystem(), false);\r\n  world.addSystem(new BoxesAndPigsRenderSystem(), false);\r\n  world.addSystem(new SlingshotRenderSystem(), false);\r\n  world.addSystem(new ContactListenerSystem(), false);\r\n  world.addSystem(new NextLevelSystem(), false);\r\n\r\n  return {\r\n    update(delta: number) {\r\n      if (LevelState.conditionWin) {\r\n      }\r\n\r\n      gl.clear(gl.COLOR_BUFFER_BIT);\r\n      batch.setProjection(camera.combined);\r\n      shapeRenderer.setProjection(camera.combined);\r\n      world.setDelta(delta);\r\n      world.processActiveSystem();\r\n      world.processPassiveSystem();\r\n      physicWorld.Step(delta, 8, 3);\r\n    },\r\n    dispose(): void {\r\n      batch.dispose();\r\n      inputHandler.cleanup();\r\n    },\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}