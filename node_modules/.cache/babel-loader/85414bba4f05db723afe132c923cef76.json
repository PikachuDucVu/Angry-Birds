{"ast":null,"code":"import _initializerDefineProperty from \"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js\";\nimport _applyDecoratedDescriptor from \"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\";\nimport _initializerWarningHelper from \"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper.js\";\n\nvar _dec, _dec2, _dec3, _dec4, _dec5, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;\n\nimport { System, Inject } from \"flat-ecs\";\nimport { TextureRegion, Animation, PlayMode } from \"gdxts\";\nimport { Constants } from \"../Constants\";\nexport let BoxesAndPigsRenderSystem = (_dec = Inject(\"gl\"), _dec2 = Inject(\"assetManager\"), _dec3 = Inject(\"batch\"), _dec4 = Inject(\"boxes\"), _dec5 = Inject(\"pigs\"), (_class = class BoxesAndPigsRenderSystem extends System {\n  constructor() {\n    super(...arguments);\n    this.boxAsset = void 0;\n    this.pigAsset = void 0;\n    this.boxRegions = void 0;\n    this.pigRegions = void 0;\n    this.boxAnimation = void 0;\n    this.pigAnimation = void 0;\n\n    _initializerDefineProperty(this, \"gl\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"assetManager\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"batch\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"boxes\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"pigs\", _descriptor5, this);\n  }\n\n  initialized() {\n    this.boxAsset = this.assetManager.getTexture(\"boxAsset\");\n    this.pigAsset = this.assetManager.getTexture(\"pigAsset\");\n    const boxesRegions = TextureRegion.splitTexture(this.boxAsset, 1, 4);\n    const pigTexture = TextureRegion.splitTexture(this.pigAsset, 2, 1);\n    this.boxAnimation = new Animation(boxesRegions.slice(0, 4), Constants.frameDuration);\n    this.pigAnimation = new Animation(pigTexture.slice(0, 2), Constants.frameDuration);\n    this.boxRegions = [this.boxAnimation.getKeyFrame(0, PlayMode.NORMAL), this.boxAnimation.getKeyFrame(0, PlayMode.NORMAL), this.boxAnimation.getKeyFrame(0, PlayMode.NORMAL), this.boxAnimation.getKeyFrame(0, PlayMode.NORMAL), this.boxAnimation.getKeyFrame(0, PlayMode.NORMAL), this.boxAnimation.getKeyFrame(0, PlayMode.NORMAL)];\n    this.pigRegions = [this.pigAnimation.getKeyFrame(0, PlayMode.NORMAL), this.pigAnimation.getKeyFrame(0, PlayMode.NORMAL)];\n  }\n\n  process() {\n    console.log(this.boxAnimation);\n\n    const updateBoxRegionByDurability = (index, durability) => {\n      this.boxRegions[index] = this.boxAnimation.getKeyFrame(Constants.frameDuration * durability, PlayMode.NORMAL);\n    };\n\n    const updatePigRegionByDurability = (index, durability) => {\n      this.pigRegions[index] = this.pigAnimation.getKeyFrame(Constants.frameDuration * durability, PlayMode.NORMAL);\n    };\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"gl\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"assetManager\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"batch\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"boxes\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"pigs\", [_dec5], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class));","map":{"version":3,"names":["System","Inject","TextureRegion","Animation","PlayMode","Constants","BoxesAndPigsRenderSystem","boxAsset","pigAsset","boxRegions","pigRegions","boxAnimation","pigAnimation","initialized","assetManager","getTexture","boxesRegions","splitTexture","pigTexture","slice","frameDuration","getKeyFrame","NORMAL","process","console","log","updateBoxRegionByDurability","index","durability","updatePigRegionByDurability"],"sources":["D:/projects/test-game/src/system/BoxesAndPigsRenderSystem.ts"],"sourcesContent":["import { b2Body } from \"box2d.ts\";\r\nimport { System, Inject } from \"flat-ecs\";\r\nimport {\r\n  AssetManager,\r\n  PolygonBatch,\r\n  Texture,\r\n  TextureRegion,\r\n  Animation,\r\n  PlayMode,\r\n} from \"gdxts\";\r\nimport { Constants } from \"../Constants\";\r\nexport class BoxesAndPigsRenderSystem extends System {\r\n  boxAsset: Texture;\r\n  pigAsset: Texture;\r\n  boxRegions: TextureRegion[];\r\n  pigRegions: TextureRegion[];\r\n  boxAnimation: any;\r\n  pigAnimation: any;\r\n\r\n  @Inject(\"gl\") gl: WebGLRenderingContext;\r\n  @Inject(\"assetManager\") assetManager: AssetManager;\r\n  @Inject(\"batch\") batch: PolygonBatch;\r\n  @Inject(\"boxes\") boxes: b2Body[];\r\n  @Inject(\"pigs\") pigs: b2Body[];\r\n\r\n  initialized(): void {\r\n    this.boxAsset = this.assetManager.getTexture(\"boxAsset\") as Texture;\r\n    this.pigAsset = this.assetManager.getTexture(\"pigAsset\") as Texture;\r\n    const boxesRegions = TextureRegion.splitTexture(this.boxAsset, 1, 4);\r\n    const pigTexture = TextureRegion.splitTexture(this.pigAsset, 2, 1);\r\n    this.boxAnimation = new Animation(\r\n      boxesRegions.slice(0, 4),\r\n      Constants.frameDuration\r\n    );\r\n    this.pigAnimation = new Animation(\r\n      pigTexture.slice(0, 2),\r\n      Constants.frameDuration\r\n    );\r\n    this.boxRegions = [\r\n      this.boxAnimation.getKeyFrame(0, PlayMode.NORMAL),\r\n      this.boxAnimation.getKeyFrame(0, PlayMode.NORMAL),\r\n      this.boxAnimation.getKeyFrame(0, PlayMode.NORMAL),\r\n      this.boxAnimation.getKeyFrame(0, PlayMode.NORMAL),\r\n      this.boxAnimation.getKeyFrame(0, PlayMode.NORMAL),\r\n      this.boxAnimation.getKeyFrame(0, PlayMode.NORMAL),\r\n    ];\r\n    this.pigRegions = [\r\n      this.pigAnimation.getKeyFrame(0, PlayMode.NORMAL),\r\n      this.pigAnimation.getKeyFrame(0, PlayMode.NORMAL),\r\n    ];\r\n  }\r\n\r\n  process(): void {\r\n    console.log(this.boxAnimation);\r\n    const updateBoxRegionByDurability = (index: number, durability: number) => {\r\n      this.boxRegions[index] = this.boxAnimation.getKeyFrame(\r\n        Constants.frameDuration * durability,\r\n        PlayMode.NORMAL\r\n      );\r\n    };\r\n    const updatePigRegionByDurability = (index: number, durability: number) => {\r\n      this.pigRegions[index] = this.pigAnimation.getKeyFrame(\r\n        Constants.frameDuration * durability,\r\n        PlayMode.NORMAL\r\n      );\r\n    };\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}