{"ast":null,"code":"import { createGameLoop, createStage, createViewport, InputEvent, PolygonBatch, ShapeRenderer, Texture, Vector2, ViewportInputHandler } from \"gdxts\";\nexport const init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 600, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./flappy-bird.gif\");\n  const obstacles = await Texture.load(gl, \"./obstacle.webp\");\n  const gameovericon = await Texture.load(gl, \"./gameover.png\");\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  const characterTexture = await Texture.load(gl, \"./bird.png\");\n  let characterPosition = new Vector2(250, 500);\n  let obstaclePosition = new Vector2(595, 195);\n  gl.clearColor(0, 0, 0, 1);\n  let lastClick = false;\n  let speedGame = 170;\n  let count = 0;\n  let firstClick = false;\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    count = 0;\n\n    if (firstClick) {\n      speedGame = 170;\n    }\n\n    firstClick = true;\n    lastClick = true;\n  });\n\n  function moveOfBird(delta) {\n    if (lastClick) {\n      lastClick = true;\n      characterPosition.y = characterPosition.y + speedGame * delta;\n      count += speedGame * delta;\n\n      if (count >= 90) {\n        lastClick = false;\n        count--;\n      }\n    }\n\n    if (lastClick === false) {\n      characterPosition.y -= speedGame * delta;\n\n      if (count >= -30 && count < 90) {\n        count -= (speedGame *= 1.02) * delta;\n      }\n    }\n  }\n\n  function obstacleMove(delta) {\n    obstaclePosition.x -= speedGame * delta;\n    obstaclePosition.y -= speedGame * delta;\n\n    if (obstaclePosition.x < -10) {\n      obstaclePosition.set(595, 190);\n    }\n  }\n\n  createGameLoop(delta => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 600, 1000);\n    shapeRenderer.end();\n    console.log(characterPosition.y, speedGame);\n\n    if (firstClick === true) {\n      moveOfBird(delta);\n      obstacleMove(delta);\n    } // characterPosition = 190 => gameover\n\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 600, 1000);\n    batch.draw(characterTexture, characterPosition.x, characterPosition.y, 60, 60);\n\n    if (characterPosition.y <= 190) {\n      firstClick = false;\n      lastClick = false;\n      speedGame = 0;\n      batch.draw(gameovericon, 50, 500, 500, 250);\n    }\n\n    batch.draw(obstacles, obstaclePosition.x, obstaclePosition.y, 150, 200);\n    batch.end();\n  });\n};\ninit();","map":{"version":3,"names":["createGameLoop","createStage","createViewport","InputEvent","PolygonBatch","ShapeRenderer","Texture","Vector2","ViewportInputHandler","init","stage","canvas","getCanvas","viewport","gl","getContext","background","load","obstacles","gameovericon","shapeRenderer","batch","camera","getCamera","inputHandler","characterTexture","characterPosition","obstaclePosition","clearColor","lastClick","speedGame","count","firstClick","addEventListener","TouchStart","x","y","moveOfBird","delta","obstacleMove","set","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end","console","log","draw"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createGameLoop,\n  createStage,\n  createViewport,\n  InputEvent,\n  PolygonBatch,\n  ShapeRenderer,\n  Texture,\n  Vector2,\n  ViewportInputHandler,\n} from \"gdxts\";\nimport { init2 } from \"./PokemonGame\";\nexport const init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 600, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./flappy-bird.gif\");\n  const obstacles = await Texture.load(gl, \"./obstacle.webp\");\n  const gameovericon = await Texture.load(gl, \"./gameover.png\");\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n\n  const characterTexture = await Texture.load(gl, \"./bird.png\");\n  let characterPosition = new Vector2(250, 500);\n  let obstaclePosition = new Vector2(595, 195);\n\n  gl.clearColor(0, 0, 0, 1);\n  let lastClick = false;\n  let speedGame = 170;\n  let count = 0;\n  let firstClick = false;\n\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    count = 0;\n    if (firstClick) {\n      speedGame = 170;\n    }\n    firstClick = true;\n    lastClick = true;\n  });\n\n  function moveOfBird(delta: number) {\n    if (lastClick) {\n      lastClick = true;\n      characterPosition.y = characterPosition.y + speedGame * delta;\n      count += speedGame * delta;\n\n      if (count >= 90) {\n        lastClick = false;\n        count--;\n      }\n    }\n\n    if (lastClick === false) {\n      characterPosition.y -= speedGame * delta;\n      if (count >= -30 && count < 90) {\n        count -= (speedGame *= 1.02) * delta;\n      }\n    }\n  }\n\n  function obstacleMove(delta: number) {\n    obstaclePosition.x -= speedGame * delta;\n    obstaclePosition.y -= speedGame * delta;\n    if (obstaclePosition.x < -10) {\n      obstaclePosition.set(595, 190);\n    }\n  }\n\n  createGameLoop((delta: number) => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 600, 1000);\n    shapeRenderer.end();\n    console.log(characterPosition.y, speedGame);\n\n    if (firstClick === true) {\n      moveOfBird(delta);\n      obstacleMove(delta);\n    }\n\n    // characterPosition = 190 => gameover\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 600, 1000);\n    batch.draw(\n      characterTexture,\n      characterPosition.x,\n      characterPosition.y,\n      60,\n      60\n    );\n    if (characterPosition.y <= 190) {\n      firstClick = false;\n      lastClick = false;\n      speedGame = 0;\n      batch.draw(gameovericon, 50, 500, 500, 250);\n    }\n    batch.draw(obstacles, obstaclePosition.x, obstaclePosition.y, 150, 200);\n    batch.end();\n  });\n};\n\ninit();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}