{"ast":null,"code":"import { createStage, createViewport, createGameLoop, ShapeRenderer, Texture, TextureRegion, PolygonBatch, Animation, PlayMode, ViewportInputHandler, InputEvent, Vector2 } from \"gdxts\";\n\nconst init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./backgroundGame.png\"); // eslint-disable-next-line\n  // const texture = await Texture.load(gl, \"./charizard.png\");\n\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  const apple = await Texture.load(gl, \"./apple.png\");\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n  const walkDownAnimation = new Animation(regions.slice(0, 4), 0.2);\n  const walkLeftAnimation = new Animation(regions.slice(4, 8), 0.2);\n  const walkRightAnimation = new Animation(regions.slice(8, 12), 0.2);\n  const walkUpAnimation = new Animation(regions.slice(12, 16), 0.2);\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  const characterPosition = new Vector2(250, 500);\n  let rotation = 0;\n  let frame = 0;\n  gl.clearColor(0, 0, 0, 1);\n  let nextPositon = new Vector2(250, 500);\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    nextPositon = inputHandler.getTouchedWorldCoord();\n    rotation = Math.atan2(nextPositon.y - characterPosition.y, nextPositon.x - characterPosition.x) * 180 / Math.PI;\n    console.log(applePosition);\n  });\n  let applePosition = {\n    x: getRandomInt(50, 450),\n    y: getRandomInt(30, 930)\n  };\n\n  function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  const moveSpeed = 150;\n  createGameLoop(delta => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n    let region = walkDownAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n\n    if (characterPosition.x !== nextPositon.x || characterPosition.y !== nextPositon.y) {\n      frame += delta;\n\n      if (rotation >= 0 && rotation < 90) {\n        if (characterPosition.y < nextPositon.y) {\n          region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.y = Math.min(characterPosition.y + delta * moveSpeed, nextPositon.y); // increase y\n        } else {\n          if (characterPosition.x < nextPositon.x) {\n            region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n            characterPosition.x = Math.min(characterPosition.x + delta * moveSpeed, nextPositon.x); // increase x\n          }\n        }\n      }\n\n      if (rotation >= -90 && rotation < 0) {\n        if (characterPosition.x < nextPositon.x) {\n          region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.x = Math.min(characterPosition.x + delta * moveSpeed, nextPositon.x); // increase x\n        } else {\n          if (characterPosition.y > nextPositon.y) {\n            region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n            characterPosition.y = Math.max(characterPosition.y - delta * moveSpeed, nextPositon.y); // decrease y\n          }\n        }\n      }\n\n      if (rotation >= 90 && rotation < 180) {\n        if (characterPosition.y < nextPositon.y) {\n          region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.y = Math.min(characterPosition.y + delta * moveSpeed, nextPositon.y); // increase y\n        } else {\n          if (characterPosition.x > nextPositon.x) {\n            region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n            characterPosition.x = Math.max(characterPosition.x - delta * moveSpeed, nextPositon.x); // decrease x\n          }\n        }\n      }\n\n      if (rotation >= -180 && rotation < -90) {\n        if (characterPosition.y > nextPositon.y) {\n          region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.y = Math.max(characterPosition.y - delta * moveSpeed, nextPositon.y); // decrease y\n        } else {\n          if (characterPosition.x > nextPositon.x) {\n            region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n            characterPosition.x = Math.max(characterPosition.x - delta * moveSpeed, nextPositon.x); // decrease x\n          }\n        }\n      }\n    } else {\n      frame = 0;\n    }\n\n    if (characterPosition.x === applePosition.x && characterPosition.y === applePosition.y) {}\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 500, 1000);\n    batch.draw(apple, applePosition.x, applePosition.y, 40, 40); // console.log(frame);\n\n    region.draw(batch, characterPosition.x - 50, characterPosition.y - 20, 100, 100);\n    batch.end();\n  });\n};\n\ninit();","map":{"version":3,"names":["createStage","createViewport","createGameLoop","ShapeRenderer","Texture","TextureRegion","PolygonBatch","Animation","PlayMode","ViewportInputHandler","InputEvent","Vector2","init","stage","canvas","getCanvas","viewport","gl","getContext","background","load","characterTexture","apple","regions","splitTexture","walkDownAnimation","slice","walkLeftAnimation","walkRightAnimation","walkUpAnimation","shapeRenderer","batch","camera","getCamera","inputHandler","characterPosition","rotation","frame","clearColor","nextPositon","addEventListener","TouchStart","x","y","getTouchedWorldCoord","Math","atan2","PI","console","log","applePosition","getRandomInt","min","max","floor","random","moveSpeed","delta","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end","region","getKeyFrame","NORMAL","LOOP","draw"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createStage,\n  createViewport,\n  createGameLoop,\n  ShapeRenderer,\n  Texture,\n  TextureRegion,\n  PolygonBatch,\n  Animation,\n  PlayMode,\n  ViewportInputHandler,\n  InputEvent,\n  Vector2,\n} from \"gdxts\";\n\nconst init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./backgroundGame.png\");\n\n  // eslint-disable-next-line\n  // const texture = await Texture.load(gl, \"./charizard.png\");\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  const apple = await Texture.load(gl, \"./apple.png\");\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n\n  const walkDownAnimation = new Animation(regions.slice(0, 4), 0.2);\n  const walkLeftAnimation = new Animation(regions.slice(4, 8), 0.2);\n  const walkRightAnimation = new Animation(regions.slice(8, 12), 0.2);\n  const walkUpAnimation = new Animation(regions.slice(12, 16), 0.2);\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  const characterPosition = new Vector2(250, 500);\n\n  let rotation = 0;\n  let frame = 0;\n  gl.clearColor(0, 0, 0, 1);\n\n  let nextPositon = new Vector2(250, 500);\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    nextPositon = inputHandler.getTouchedWorldCoord();\n    rotation =\n      (Math.atan2(\n        nextPositon.y - characterPosition.y,\n        nextPositon.x - characterPosition.x\n      ) *\n        180) /\n      Math.PI;\n    console.log(applePosition);\n  });\n\n  let applePosition = {\n    x: getRandomInt(50, 450),\n    y: getRandomInt(30, 930),\n  };\n\n  function getRandomInt(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  const moveSpeed = 150;\n\n  createGameLoop((delta: number) => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n    let region = walkDownAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n\n    if (\n      characterPosition.x !== nextPositon.x ||\n      characterPosition.y !== nextPositon.y\n    ) {\n      frame += delta;\n      if (rotation >= 0 && rotation < 90) {\n        if (characterPosition.y < nextPositon.y) {\n          region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.y = Math.min(\n            characterPosition.y + delta * moveSpeed,\n            nextPositon.y\n          ); // increase y\n        } else {\n          if (characterPosition.x < nextPositon.x) {\n            region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n            characterPosition.x = Math.min(\n              characterPosition.x + delta * moveSpeed,\n              nextPositon.x\n            ); // increase x\n          }\n        }\n      }\n      if (rotation >= -90 && rotation < 0) {\n        if (characterPosition.x < nextPositon.x) {\n          region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.x = Math.min(\n            characterPosition.x + delta * moveSpeed,\n            nextPositon.x\n          ); // increase x\n        } else {\n          if (characterPosition.y > nextPositon.y) {\n            region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n            characterPosition.y = Math.max(\n              characterPosition.y - delta * moveSpeed,\n              nextPositon.y\n            ); // decrease y\n          }\n        }\n      }\n      if (rotation >= 90 && rotation < 180) {\n        if (characterPosition.y < nextPositon.y) {\n          region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.y = Math.min(\n            characterPosition.y + delta * moveSpeed,\n            nextPositon.y\n          ); // increase y\n        } else {\n          if (characterPosition.x > nextPositon.x) {\n            region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n            characterPosition.x = Math.max(\n              characterPosition.x - delta * moveSpeed,\n              nextPositon.x\n            ); // decrease x\n          }\n        }\n      }\n      if (rotation >= -180 && rotation < -90) {\n        if (characterPosition.y > nextPositon.y) {\n          region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.y = Math.max(\n            characterPosition.y - delta * moveSpeed,\n            nextPositon.y\n          ); // decrease y\n        } else {\n          if (characterPosition.x > nextPositon.x) {\n            region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n            characterPosition.x = Math.max(\n              characterPosition.x - delta * moveSpeed,\n              nextPositon.x\n            ); // decrease x\n          }\n        }\n      }\n    } else {\n      frame = 0;\n    }\n\n    if (\n      characterPosition.x === applePosition.x &&\n      characterPosition.y === applePosition.y\n    ) {\n    }\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 500, 1000);\n    batch.draw(apple, applePosition.x, applePosition.y, 40, 40);\n    // console.log(frame);\n    region.draw(\n      batch,\n      characterPosition.x - 50,\n      characterPosition.y - 20,\n      100,\n      100\n    );\n    batch.end();\n  });\n};\ninit();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}