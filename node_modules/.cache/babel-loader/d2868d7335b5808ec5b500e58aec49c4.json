{"ast":null,"code":"import { createBatch, createGameLoop, createStage, createViewport, createViewportAwareInputHandler, createWhiteTexture, Vector2 } from \"gdxjs\";\nexport const initTest = () => {\n  const stage = createStage();\n  stage.show();\n  const viewport = createViewport(stage.getCanvas(), 50, 100, {\n    pixelRatio: Math.min(2, window.devicePixelRatio),\n    contextOption: {\n      antialias: true\n    }\n  });\n  const gl = viewport.getContext();\n  const batch = createBatch(gl);\n  const camera = viewport.getCamera();\n  const whiteText = createWhiteTexture(gl);\n  const inputHandler = createViewportAwareInputHandler(stage.getCanvas(), viewport);\n  const DURATION = 2;\n  let speedX = 0;\n  let speedY = 0;\n  inputHandler.addEventListener(\"touchEnd\", () => {\n    const {\n      x,\n      y\n    } = inputHandler.getTouchedWorldCoord();\n    console.log(x, y);\n    speedX = (x - human.display.x) / DURATION;\n    speedY = (y - human.display.y) / DURATION;\n    human.target.set(x, y);\n  });\n  const human = {\n    texture: whiteText,\n    display: new Vector2(50 / 2, 100 / 2),\n    target: new Vector2(50 / 2, 100 / 2),\n    width: 8,\n    height: 16\n  };\n  gl.clearColor(0, 0, 0, 1);\n  const loop = createGameLoop(delta => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    batch.setProjection(camera.combined);\n    batch.begin();\n    batch.draw(whiteText, 0, 0, 50, 100);\n\n    if (Math.abs(human.display.x - human.target.x) < 0.1) {\n      human.display.x = human.target.x;\n    } else {\n      human.display.x += speedX * delta;\n    }\n\n    if (Math.abs(human.display.y - human.target.y) < 0.1) {\n      human.display.y = human.target.y;\n    } else {\n      human.display.y += speedY * delta;\n    }\n\n    batch.setColor(1, 0, 0, 1);\n    batch.draw(human.texture, human.display.x - human.width / 2, human.display.y - human.height / 2, human.width, human.height);\n    batch.setColor(1, 1, 1, 1);\n    batch.end();\n  });\n};","map":{"version":3,"names":["createBatch","createGameLoop","createStage","createViewport","createViewportAwareInputHandler","createWhiteTexture","Vector2","initTest","stage","show","viewport","getCanvas","pixelRatio","Math","min","window","devicePixelRatio","contextOption","antialias","gl","getContext","batch","camera","getCamera","whiteText","inputHandler","DURATION","speedX","speedY","addEventListener","x","y","getTouchedWorldCoord","console","log","human","display","target","set","texture","width","height","clearColor","loop","delta","clear","COLOR_BUFFER_BIT","setProjection","combined","begin","draw","abs","setColor","end"],"sources":["D:/projects/test-game/src/test.ts"],"sourcesContent":["import {\r\n  createBatch,\r\n  createGameLoop,\r\n  createStage,\r\n  createViewport,\r\n  createViewportAwareInputHandler,\r\n  createWhiteTexture,\r\n  InputHandler,\r\n  Texture,\r\n  Vector2,\r\n} from \"gdxjs\";\r\n\r\nexport const initTest = () => {\r\n  const stage = createStage();\r\n  stage.show();\r\n\r\n  const viewport = createViewport(stage.getCanvas(), 50, 100, {\r\n    pixelRatio: Math.min(2, window.devicePixelRatio),\r\n    contextOption: {\r\n      antialias: true,\r\n    },\r\n  });\r\n  const gl = viewport.getContext();\r\n  const batch = createBatch(gl);\r\n  const camera = viewport.getCamera();\r\n  const whiteText = createWhiteTexture(gl);\r\n\r\n  const inputHandler = createViewportAwareInputHandler(\r\n    stage.getCanvas(),\r\n    viewport\r\n  );\r\n\r\n  const DURATION = 2;\r\n  let speedX = 0;\r\n  let speedY = 0;\r\n\r\n  inputHandler.addEventListener(\"touchEnd\", () => {\r\n    const { x, y } = inputHandler.getTouchedWorldCoord();\r\n    console.log(x, y);\r\n\r\n    speedX = (x - human.display.x) / DURATION;\r\n    speedY = (y - human.display.y) / DURATION;\r\n\r\n    human.target.set(x, y);\r\n  });\r\n\r\n  const human: {\r\n    texture: Texture;\r\n    display: Vector2;\r\n    target: Vector2;\r\n    width: number;\r\n    height: number;\r\n  } = {\r\n    texture: whiteText as Texture,\r\n    display: new Vector2(50 / 2, 100 / 2),\r\n    target: new Vector2(50 / 2, 100 / 2),\r\n    width: 8,\r\n    height: 16,\r\n  };\r\n\r\n  gl.clearColor(0, 0, 0, 1);\r\n  const loop = createGameLoop((delta) => {\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n    batch.setProjection(camera.combined);\r\n    batch.begin();\r\n    batch.draw(whiteText, 0, 0, 50, 100);\r\n\r\n    if (Math.abs(human.display.x - human.target.x) < 0.1) {\r\n      human.display.x = human.target.x;\r\n    } else {\r\n      human.display.x += speedX * delta;\r\n    }\r\n\r\n    if (Math.abs(human.display.y - human.target.y) < 0.1) {\r\n      human.display.y = human.target.y;\r\n    } else {\r\n      human.display.y += speedY * delta;\r\n    }\r\n\r\n    batch.setColor(1, 0, 0, 1);\r\n    batch.draw(\r\n      human.texture,\r\n      human.display.x - human.width / 2,\r\n      human.display.y - human.height / 2,\r\n      human.width,\r\n      human.height\r\n    );\r\n    batch.setColor(1, 1, 1, 1);\r\n    batch.end();\r\n  });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}