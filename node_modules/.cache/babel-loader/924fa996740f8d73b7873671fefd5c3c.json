{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStage = exports.pointInRect = exports.resizeCanvas = exports.createGameLoop = exports.WindowedMean = exports.TimeKeeper = exports.Vector2 = exports.Pool = exports.Utils = exports.PowOut = exports.Pow = exports.Interpolation = exports.MathUtils = exports.Color = exports.StringSet = exports.IntSet = void 0;\n\nclass IntSet {\n  constructor() {\n    this.array = new Array();\n  }\n\n  add(value) {\n    let contains = this.contains(value);\n    this.array[value | 0] = value | 0;\n    return !contains;\n  }\n\n  contains(value) {\n    return this.array[value | 0] !== undefined;\n  }\n\n  remove(value) {\n    this.array[value | 0] = undefined;\n  }\n\n  clear() {\n    this.array.length = 0;\n  }\n\n}\n\nexports.IntSet = IntSet;\n\nclass StringSet {\n  constructor() {\n    this.entries = {};\n    this.size = 0;\n  }\n\n  add(value) {\n    let contains = this.entries[value];\n    this.entries[value] = true;\n\n    if (!contains) {\n      this.size++;\n      return true;\n    }\n\n    return false;\n  }\n\n  addAll(values) {\n    let oldSize = this.size;\n\n    for (var i = 0, n = values.length; i < n; i++) this.add(values[i]);\n\n    return oldSize !== this.size;\n  }\n\n  contains(value) {\n    return this.entries[value];\n  }\n\n  clear() {\n    this.entries = {};\n    this.size = 0;\n  }\n\n}\n\nexports.StringSet = StringSet;\n\nclass Color {\n  constructor() {\n    let r = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let g = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let b = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let a = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    this.a = a;\n  }\n\n  set(r, g, b, a) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    this.a = a;\n    return this.clamp();\n  }\n\n  setFromColor(c) {\n    this.r = c.r;\n    this.g = c.g;\n    this.b = c.b;\n    this.a = c.a;\n    return this;\n  }\n\n  setFromString(hex) {\n    hex = hex.charAt(0) === \"#\" ? hex.substr(1) : hex;\n    this.r = parseInt(hex.substr(0, 2), 16) / 255;\n    this.g = parseInt(hex.substr(2, 2), 16) / 255;\n    this.b = parseInt(hex.substr(4, 2), 16) / 255;\n    this.a = hex.length !== 8 ? 1 : parseInt(hex.substr(6, 2), 16) / 255;\n    return this;\n  }\n\n  add(r, g, b, a) {\n    this.r += r;\n    this.g += g;\n    this.b += b;\n    this.a += a;\n    return this.clamp();\n  }\n\n  clamp() {\n    if (this.r < 0) this.r = 0;else if (this.r > 1) this.r = 1;\n    if (this.g < 0) this.g = 0;else if (this.g > 1) this.g = 1;\n    if (this.b < 0) this.b = 0;else if (this.b > 1) this.b = 1;\n    if (this.a < 0) this.a = 0;else if (this.a > 1) this.a = 1;\n    return this;\n  }\n\n  static rgba8888ToColor(color, value) {\n    color.r = ((value & 0xff000000) >>> 24) / 255;\n    color.g = ((value & 0x00ff0000) >>> 16) / 255;\n    color.b = ((value & 0x0000ff00) >>> 8) / 255;\n    color.a = (value & 0x000000ff) / 255;\n  }\n\n  static rgb888ToColor(color, value) {\n    color.r = ((value & 0x00ff0000) >>> 16) / 255;\n    color.g = ((value & 0x0000ff00) >>> 8) / 255;\n    color.b = (value & 0x000000ff) / 255;\n  }\n\n  static fromString(hex) {\n    return new Color().setFromString(hex);\n  }\n\n}\n\nexports.Color = Color;\nColor.WHITE = new Color(1, 1, 1, 1);\nColor.RED = new Color(1, 0, 0, 1);\nColor.GREEN = new Color(0, 1, 0, 1);\nColor.BLUE = new Color(0, 0, 1, 1);\nColor.MAGENTA = new Color(1, 0, 1, 1);\n\nclass MathUtils {\n  static clamp(value, min, max) {\n    if (value < min) return min;\n    if (value > max) return max;\n    return value;\n  }\n\n  static cosDeg(degrees) {\n    return Math.cos(degrees * MathUtils.degRad);\n  }\n\n  static sinDeg(degrees) {\n    return Math.sin(degrees * MathUtils.degRad);\n  }\n\n  static signum(value) {\n    return value > 0 ? 1 : value < 0 ? -1 : 0;\n  }\n\n  static toInt(x) {\n    return x > 0 ? Math.floor(x) : Math.ceil(x);\n  }\n\n  static cbrt(x) {\n    let y = Math.pow(Math.abs(x), 1 / 3);\n    return x < 0 ? -y : y;\n  }\n\n  static randomTriangular(min, max) {\n    return MathUtils.randomTriangularWith(min, max, (min + max) * 0.5);\n  }\n\n  static randomTriangularWith(min, max, mode) {\n    let u = Math.random();\n    let d = max - min;\n    if (u <= (mode - min) / d) return min + Math.sqrt(u * d * (mode - min));\n    return max - Math.sqrt((1 - u) * d * (max - mode));\n  }\n\n  static isPowerOfTwo(value) {\n    return value && (value & value - 1) === 0;\n  }\n\n}\n\nexports.MathUtils = MathUtils;\nMathUtils.PI = 3.1415927;\nMathUtils.PI2 = MathUtils.PI * 2;\nMathUtils.radiansToDegrees = 180 / MathUtils.PI;\nMathUtils.radDeg = MathUtils.radiansToDegrees;\nMathUtils.degreesToRadians = MathUtils.PI / 180;\nMathUtils.degRad = MathUtils.degreesToRadians;\n\nclass Interpolation {\n  apply(start, end, a) {\n    return start + (end - start) * this.applyInternal(a);\n  }\n\n}\n\nexports.Interpolation = Interpolation;\n\nclass Pow extends Interpolation {\n  constructor(power) {\n    super();\n    this.power = 2;\n    this.power = power;\n  }\n\n  applyInternal(a) {\n    if (a <= 0.5) return Math.pow(a * 2, this.power) / 2;\n    return Math.pow((a - 1) * 2, this.power) / (this.power % 2 === 0 ? -2 : 2) + 1;\n  }\n\n}\n\nexports.Pow = Pow;\n\nclass PowOut extends Pow {\n  // constructor(power: number) {\n  //   super(power);\n  // }\n  applyInternal(a) {\n    return Math.pow(a - 1, this.power) * (this.power % 2 === 0 ? -1 : 1) + 1;\n  }\n\n}\n\nexports.PowOut = PowOut;\n\nclass Utils {\n  static arrayCopy(source, sourceStart, dest, destStart, numElements) {\n    for (let i = sourceStart, j = destStart; i < sourceStart + numElements; i++, j++) {\n      dest[j] = source[i];\n    }\n  }\n\n  static arrayFill(array, fromIndex, toIndex, value) {\n    for (let i = fromIndex; i < toIndex; i++) array[i] = value;\n  }\n\n  static setArraySize(array, size) {\n    let value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let oldSize = array.length;\n    if (oldSize === size) return array;\n    array.length = size;\n\n    if (oldSize < size) {\n      for (let i = oldSize; i < size; i++) array[i] = value;\n    }\n\n    return array;\n  }\n\n  static ensureArrayCapacity(array, size) {\n    let value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    if (array.length >= size) return array;\n    return Utils.setArraySize(array, size, value);\n  }\n\n  static newArray(size, defaultValue) {\n    let array = new Array(size);\n\n    for (let i = 0; i < size; i++) array[i] = defaultValue;\n\n    return array;\n  }\n\n  static newFloatArray(size) {\n    if (Utils.SUPPORTS_TYPED_ARRAYS) return new Float32Array(size);else {\n      let array = new Array(size);\n\n      for (let i = 0; i < array.length; i++) array[i] = 0;\n\n      return array;\n    }\n  }\n\n  static newShortArray(size) {\n    if (Utils.SUPPORTS_TYPED_ARRAYS) return new Int16Array(size);else {\n      let array = new Array(size);\n\n      for (let i = 0; i < array.length; i++) array[i] = 0;\n\n      return array;\n    }\n  }\n\n  static toFloatArray(array) {\n    return Utils.SUPPORTS_TYPED_ARRAYS ? new Float32Array(array) : array;\n  }\n\n  static toSinglePrecision(value) {\n    return Utils.SUPPORTS_TYPED_ARRAYS ? Math.fround(value) : value;\n  }\n\n  static contains(array, element) {\n    let identity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    for (var i = 0; i < array.length; i++) if (array[i] === element) return true;\n\n    return false;\n  }\n\n  static enumValue(type, name) {\n    return type[name[0].toUpperCase() + name.slice(1)];\n  }\n\n}\n\nexports.Utils = Utils;\nUtils.SUPPORTS_TYPED_ARRAYS = typeof Float32Array !== \"undefined\";\n\nclass Pool {\n  constructor(instantiator) {\n    this.items = new Array();\n    this.instantiator = instantiator;\n  }\n\n  obtain() {\n    return this.items.length > 0 ? this.items.pop() : this.instantiator();\n  }\n\n  free(item) {\n    if (item.reset) item.reset();\n    this.items.push(item);\n  }\n\n  freeAll(items) {\n    for (let i = 0; i < items.length; i++) this.free(items[i]);\n  }\n\n  clear() {\n    this.items.length = 0;\n  }\n\n}\n\nexports.Pool = Pool;\n\nclass Vector2 {\n  constructor() {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this.x = x;\n    this.y = y;\n  }\n\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  length() {\n    let x = this.x;\n    let y = this.y;\n    return Math.sqrt(x * x + y * y);\n  }\n\n  normalize() {\n    let len = this.length();\n\n    if (len !== 0) {\n      this.x /= len;\n      this.y /= len;\n    }\n\n    return this;\n  }\n\n}\n\nexports.Vector2 = Vector2;\n\nclass TimeKeeper {\n  constructor() {\n    this.maxDelta = 0.064;\n    this.framesPerSecond = 0;\n    this.delta = 0;\n    this.totalTime = 0;\n    this.lastTime = Date.now() / 1000;\n    this.frameCount = 0;\n    this.frameTime = 0;\n  }\n\n  update() {\n    let now = Date.now() / 1000;\n    this.delta = now - this.lastTime;\n    this.frameTime += this.delta;\n    this.totalTime += this.delta;\n    if (this.delta > this.maxDelta) this.delta = this.maxDelta;\n    this.lastTime = now;\n    this.frameCount++;\n\n    if (this.frameTime > 1) {\n      this.framesPerSecond = this.frameCount / this.frameTime;\n      this.frameTime = 0;\n      this.frameCount = 0;\n    }\n  }\n\n}\n\nexports.TimeKeeper = TimeKeeper;\n\nclass WindowedMean {\n  constructor() {\n    let windowSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;\n    this.addedValues = 0;\n    this.lastValue = 0;\n    this.mean = 0;\n    this.dirty = true;\n    this.values = new Array(windowSize);\n  }\n\n  hasEnoughData() {\n    return this.addedValues >= this.values.length;\n  }\n\n  addValue(value) {\n    if (this.addedValues < this.values.length) this.addedValues++;\n    this.values[this.lastValue++] = value;\n    if (this.lastValue > this.values.length - 1) this.lastValue = 0;\n    this.dirty = true;\n  }\n\n  getMean() {\n    if (this.hasEnoughData()) {\n      if (this.dirty) {\n        let mean = 0;\n\n        for (let i = 0; i < this.values.length; i++) mean += this.values[i];\n\n        this.mean = mean / this.values.length;\n        this.dirty = false;\n      }\n\n      return this.mean;\n    }\n\n    return 0;\n  }\n\n}\n\nexports.WindowedMean = WindowedMean;\n\nconst createGameLoop = update => {\n  let lastUpdate = Date.now();\n  let fps = 0;\n  let running = true;\n  let requestId;\n  let frameInLastSecond = 0;\n  let elapsed = 0;\n\n  function loop() {\n    if (running) {\n      const delta = Date.now() - lastUpdate;\n      lastUpdate = Date.now();\n      frameInLastSecond++;\n      elapsed += delta;\n\n      if (elapsed >= 1000) {\n        fps = frameInLastSecond;\n        frameInLastSecond = 0;\n        elapsed -= 1000;\n      }\n\n      requestId = requestAnimationFrame(loop);\n      update(delta / 1000);\n    }\n  }\n\n  loop();\n  return {\n    isRunning: () => running,\n    start: () => {\n      if (!running) {\n        running = true;\n        loop();\n      }\n    },\n    stop: () => {\n      if (requestId) {\n        cancelAnimationFrame(requestId);\n      }\n\n      running = false;\n    },\n    getFps: () => fps\n  };\n};\n\nexports.createGameLoop = createGameLoop;\n\nconst resizeCanvas = (canvas, deviceRatio) => {\n  const devicePixelRatio = deviceRatio || window.devicePixelRatio || 1;\n  const displayWidth = canvas.clientWidth * devicePixelRatio;\n  const displayHeight = canvas.clientHeight * devicePixelRatio;\n\n  if (canvas.width !== displayWidth || canvas.height !== displayHeight) {\n    canvas.width = displayWidth;\n    canvas.height = displayHeight;\n  }\n\n  return [displayWidth, displayHeight];\n};\n\nexports.resizeCanvas = resizeCanvas;\n\nconst pointInRect = (pX, pY, x, y, width, height) => {\n  return pX > x && pX < x + width && pY > y && pY < y + height;\n};\n\nexports.pointInRect = pointInRect;\n\nconst createStage = options => {\n  const defaultOptions = {\n    hidden: false,\n    info: true\n  };\n  options = Object.assign(Object.assign({}, defaultOptions), options);\n  const wrapper = document.createElement(\"div\");\n  wrapper.setAttribute(\"style\", `position:fixed;top:0;left:0;right:0;bottom:0;`);\n\n  if (options.wrapperClassName) {\n    wrapper.className = options.wrapperClassName;\n  }\n\n  if (options.hidden) {\n    wrapper.style.display = \"none\";\n  }\n\n  const canvas = document.createElement(\"canvas\");\n  canvas.setAttribute(\"style\", `width:100%;height:100%;`);\n  const info = document.createElement(\"div\");\n  info.setAttribute(\"style\", `position:absolute;top:1em;left:1em;color:white`);\n\n  if (!options.info) {\n    info.style.display = \"none\";\n  }\n\n  wrapper.appendChild(canvas);\n  wrapper.appendChild(info);\n  document.body.appendChild(wrapper);\n  return {\n    getCanvas: () => canvas,\n    getInfo: () => info,\n    show: () => wrapper.style.display = \"block\",\n    hide: () => wrapper.style.display = \"none\",\n    cleanup: () => document.body.removeChild(wrapper)\n  };\n};\n\nexports.createStage = createStage;","map":{"version":3,"names":["Object","defineProperty","exports","value","createStage","pointInRect","resizeCanvas","createGameLoop","WindowedMean","TimeKeeper","Vector2","Pool","Utils","PowOut","Pow","Interpolation","MathUtils","Color","StringSet","IntSet","constructor","array","Array","add","contains","undefined","remove","clear","length","entries","size","addAll","values","oldSize","i","n","r","g","b","a","set","clamp","setFromColor","c","setFromString","hex","charAt","substr","parseInt","rgba8888ToColor","color","rgb888ToColor","fromString","WHITE","RED","GREEN","BLUE","MAGENTA","min","max","cosDeg","degrees","Math","cos","degRad","sinDeg","sin","signum","toInt","x","floor","ceil","cbrt","y","pow","abs","randomTriangular","randomTriangularWith","mode","u","random","d","sqrt","isPowerOfTwo","PI","PI2","radiansToDegrees","radDeg","degreesToRadians","apply","start","end","applyInternal","power","arrayCopy","source","sourceStart","dest","destStart","numElements","j","arrayFill","fromIndex","toIndex","setArraySize","ensureArrayCapacity","newArray","defaultValue","newFloatArray","SUPPORTS_TYPED_ARRAYS","Float32Array","newShortArray","Int16Array","toFloatArray","toSinglePrecision","fround","element","identity","enumValue","type","name","toUpperCase","slice","instantiator","items","obtain","pop","free","item","reset","push","freeAll","normalize","len","maxDelta","framesPerSecond","delta","totalTime","lastTime","Date","now","frameCount","frameTime","update","windowSize","addedValues","lastValue","mean","dirty","hasEnoughData","addValue","getMean","lastUpdate","fps","running","requestId","frameInLastSecond","elapsed","loop","requestAnimationFrame","isRunning","stop","cancelAnimationFrame","getFps","canvas","deviceRatio","devicePixelRatio","window","displayWidth","clientWidth","displayHeight","clientHeight","width","height","pX","pY","options","defaultOptions","hidden","info","assign","wrapper","document","createElement","setAttribute","wrapperClassName","className","style","display","appendChild","body","getCanvas","getInfo","show","hide","cleanup","removeChild"],"sources":["D:/projects/test-game/node_modules/gdxts/dist/lib/Utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createStage = exports.pointInRect = exports.resizeCanvas = exports.createGameLoop = exports.WindowedMean = exports.TimeKeeper = exports.Vector2 = exports.Pool = exports.Utils = exports.PowOut = exports.Pow = exports.Interpolation = exports.MathUtils = exports.Color = exports.StringSet = exports.IntSet = void 0;\nclass IntSet {\n    constructor() {\n        this.array = new Array();\n    }\n    add(value) {\n        let contains = this.contains(value);\n        this.array[value | 0] = value | 0;\n        return !contains;\n    }\n    contains(value) {\n        return this.array[value | 0] !== undefined;\n    }\n    remove(value) {\n        this.array[value | 0] = undefined;\n    }\n    clear() {\n        this.array.length = 0;\n    }\n}\nexports.IntSet = IntSet;\nclass StringSet {\n    constructor() {\n        this.entries = {};\n        this.size = 0;\n    }\n    add(value) {\n        let contains = this.entries[value];\n        this.entries[value] = true;\n        if (!contains) {\n            this.size++;\n            return true;\n        }\n        return false;\n    }\n    addAll(values) {\n        let oldSize = this.size;\n        for (var i = 0, n = values.length; i < n; i++)\n            this.add(values[i]);\n        return oldSize !== this.size;\n    }\n    contains(value) {\n        return this.entries[value];\n    }\n    clear() {\n        this.entries = {};\n        this.size = 0;\n    }\n}\nexports.StringSet = StringSet;\nclass Color {\n    constructor(r = 0, g = 0, b = 0, a = 0) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n    set(r, g, b, a) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n        return this.clamp();\n    }\n    setFromColor(c) {\n        this.r = c.r;\n        this.g = c.g;\n        this.b = c.b;\n        this.a = c.a;\n        return this;\n    }\n    setFromString(hex) {\n        hex = hex.charAt(0) === \"#\" ? hex.substr(1) : hex;\n        this.r = parseInt(hex.substr(0, 2), 16) / 255;\n        this.g = parseInt(hex.substr(2, 2), 16) / 255;\n        this.b = parseInt(hex.substr(4, 2), 16) / 255;\n        this.a = hex.length !== 8 ? 1 : parseInt(hex.substr(6, 2), 16) / 255;\n        return this;\n    }\n    add(r, g, b, a) {\n        this.r += r;\n        this.g += g;\n        this.b += b;\n        this.a += a;\n        return this.clamp();\n    }\n    clamp() {\n        if (this.r < 0)\n            this.r = 0;\n        else if (this.r > 1)\n            this.r = 1;\n        if (this.g < 0)\n            this.g = 0;\n        else if (this.g > 1)\n            this.g = 1;\n        if (this.b < 0)\n            this.b = 0;\n        else if (this.b > 1)\n            this.b = 1;\n        if (this.a < 0)\n            this.a = 0;\n        else if (this.a > 1)\n            this.a = 1;\n        return this;\n    }\n    static rgba8888ToColor(color, value) {\n        color.r = ((value & 0xff000000) >>> 24) / 255;\n        color.g = ((value & 0x00ff0000) >>> 16) / 255;\n        color.b = ((value & 0x0000ff00) >>> 8) / 255;\n        color.a = (value & 0x000000ff) / 255;\n    }\n    static rgb888ToColor(color, value) {\n        color.r = ((value & 0x00ff0000) >>> 16) / 255;\n        color.g = ((value & 0x0000ff00) >>> 8) / 255;\n        color.b = (value & 0x000000ff) / 255;\n    }\n    static fromString(hex) {\n        return new Color().setFromString(hex);\n    }\n}\nexports.Color = Color;\nColor.WHITE = new Color(1, 1, 1, 1);\nColor.RED = new Color(1, 0, 0, 1);\nColor.GREEN = new Color(0, 1, 0, 1);\nColor.BLUE = new Color(0, 0, 1, 1);\nColor.MAGENTA = new Color(1, 0, 1, 1);\nclass MathUtils {\n    static clamp(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    }\n    static cosDeg(degrees) {\n        return Math.cos(degrees * MathUtils.degRad);\n    }\n    static sinDeg(degrees) {\n        return Math.sin(degrees * MathUtils.degRad);\n    }\n    static signum(value) {\n        return value > 0 ? 1 : value < 0 ? -1 : 0;\n    }\n    static toInt(x) {\n        return x > 0 ? Math.floor(x) : Math.ceil(x);\n    }\n    static cbrt(x) {\n        let y = Math.pow(Math.abs(x), 1 / 3);\n        return x < 0 ? -y : y;\n    }\n    static randomTriangular(min, max) {\n        return MathUtils.randomTriangularWith(min, max, (min + max) * 0.5);\n    }\n    static randomTriangularWith(min, max, mode) {\n        let u = Math.random();\n        let d = max - min;\n        if (u <= (mode - min) / d)\n            return min + Math.sqrt(u * d * (mode - min));\n        return max - Math.sqrt((1 - u) * d * (max - mode));\n    }\n    static isPowerOfTwo(value) {\n        return value && (value & (value - 1)) === 0;\n    }\n}\nexports.MathUtils = MathUtils;\nMathUtils.PI = 3.1415927;\nMathUtils.PI2 = MathUtils.PI * 2;\nMathUtils.radiansToDegrees = 180 / MathUtils.PI;\nMathUtils.radDeg = MathUtils.radiansToDegrees;\nMathUtils.degreesToRadians = MathUtils.PI / 180;\nMathUtils.degRad = MathUtils.degreesToRadians;\nclass Interpolation {\n    apply(start, end, a) {\n        return start + (end - start) * this.applyInternal(a);\n    }\n}\nexports.Interpolation = Interpolation;\nclass Pow extends Interpolation {\n    constructor(power) {\n        super();\n        this.power = 2;\n        this.power = power;\n    }\n    applyInternal(a) {\n        if (a <= 0.5)\n            return Math.pow(a * 2, this.power) / 2;\n        return (Math.pow((a - 1) * 2, this.power) / (this.power % 2 === 0 ? -2 : 2) + 1);\n    }\n}\nexports.Pow = Pow;\nclass PowOut extends Pow {\n    // constructor(power: number) {\n    //   super(power);\n    // }\n    applyInternal(a) {\n        return Math.pow(a - 1, this.power) * (this.power % 2 === 0 ? -1 : 1) + 1;\n    }\n}\nexports.PowOut = PowOut;\nclass Utils {\n    static arrayCopy(source, sourceStart, dest, destStart, numElements) {\n        for (let i = sourceStart, j = destStart; i < sourceStart + numElements; i++, j++) {\n            dest[j] = source[i];\n        }\n    }\n    static arrayFill(array, fromIndex, toIndex, value) {\n        for (let i = fromIndex; i < toIndex; i++)\n            array[i] = value;\n    }\n    static setArraySize(array, size, value = 0) {\n        let oldSize = array.length;\n        if (oldSize === size)\n            return array;\n        array.length = size;\n        if (oldSize < size) {\n            for (let i = oldSize; i < size; i++)\n                array[i] = value;\n        }\n        return array;\n    }\n    static ensureArrayCapacity(array, size, value = 0) {\n        if (array.length >= size)\n            return array;\n        return Utils.setArraySize(array, size, value);\n    }\n    static newArray(size, defaultValue) {\n        let array = new Array(size);\n        for (let i = 0; i < size; i++)\n            array[i] = defaultValue;\n        return array;\n    }\n    static newFloatArray(size) {\n        if (Utils.SUPPORTS_TYPED_ARRAYS)\n            return new Float32Array(size);\n        else {\n            let array = new Array(size);\n            for (let i = 0; i < array.length; i++)\n                array[i] = 0;\n            return array;\n        }\n    }\n    static newShortArray(size) {\n        if (Utils.SUPPORTS_TYPED_ARRAYS)\n            return new Int16Array(size);\n        else {\n            let array = new Array(size);\n            for (let i = 0; i < array.length; i++)\n                array[i] = 0;\n            return array;\n        }\n    }\n    static toFloatArray(array) {\n        return Utils.SUPPORTS_TYPED_ARRAYS ? new Float32Array(array) : array;\n    }\n    static toSinglePrecision(value) {\n        return Utils.SUPPORTS_TYPED_ARRAYS ? Math.fround(value) : value;\n    }\n    static contains(array, element, identity = true) {\n        for (var i = 0; i < array.length; i++)\n            if (array[i] === element)\n                return true;\n        return false;\n    }\n    static enumValue(type, name) {\n        return type[name[0].toUpperCase() + name.slice(1)];\n    }\n}\nexports.Utils = Utils;\nUtils.SUPPORTS_TYPED_ARRAYS = typeof Float32Array !== \"undefined\";\nclass Pool {\n    constructor(instantiator) {\n        this.items = new Array();\n        this.instantiator = instantiator;\n    }\n    obtain() {\n        return this.items.length > 0 ? this.items.pop() : this.instantiator();\n    }\n    free(item) {\n        if (item.reset)\n            item.reset();\n        this.items.push(item);\n    }\n    freeAll(items) {\n        for (let i = 0; i < items.length; i++)\n            this.free(items[i]);\n    }\n    clear() {\n        this.items.length = 0;\n    }\n}\nexports.Pool = Pool;\nclass Vector2 {\n    constructor(x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n    }\n    set(x, y) {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n    length() {\n        let x = this.x;\n        let y = this.y;\n        return Math.sqrt(x * x + y * y);\n    }\n    normalize() {\n        let len = this.length();\n        if (len !== 0) {\n            this.x /= len;\n            this.y /= len;\n        }\n        return this;\n    }\n}\nexports.Vector2 = Vector2;\nclass TimeKeeper {\n    constructor() {\n        this.maxDelta = 0.064;\n        this.framesPerSecond = 0;\n        this.delta = 0;\n        this.totalTime = 0;\n        this.lastTime = Date.now() / 1000;\n        this.frameCount = 0;\n        this.frameTime = 0;\n    }\n    update() {\n        let now = Date.now() / 1000;\n        this.delta = now - this.lastTime;\n        this.frameTime += this.delta;\n        this.totalTime += this.delta;\n        if (this.delta > this.maxDelta)\n            this.delta = this.maxDelta;\n        this.lastTime = now;\n        this.frameCount++;\n        if (this.frameTime > 1) {\n            this.framesPerSecond = this.frameCount / this.frameTime;\n            this.frameTime = 0;\n            this.frameCount = 0;\n        }\n    }\n}\nexports.TimeKeeper = TimeKeeper;\nclass WindowedMean {\n    constructor(windowSize = 32) {\n        this.addedValues = 0;\n        this.lastValue = 0;\n        this.mean = 0;\n        this.dirty = true;\n        this.values = new Array(windowSize);\n    }\n    hasEnoughData() {\n        return this.addedValues >= this.values.length;\n    }\n    addValue(value) {\n        if (this.addedValues < this.values.length)\n            this.addedValues++;\n        this.values[this.lastValue++] = value;\n        if (this.lastValue > this.values.length - 1)\n            this.lastValue = 0;\n        this.dirty = true;\n    }\n    getMean() {\n        if (this.hasEnoughData()) {\n            if (this.dirty) {\n                let mean = 0;\n                for (let i = 0; i < this.values.length; i++)\n                    mean += this.values[i];\n                this.mean = mean / this.values.length;\n                this.dirty = false;\n            }\n            return this.mean;\n        }\n        return 0;\n    }\n}\nexports.WindowedMean = WindowedMean;\nconst createGameLoop = (update) => {\n    let lastUpdate = Date.now();\n    let fps = 0;\n    let running = true;\n    let requestId;\n    let frameInLastSecond = 0;\n    let elapsed = 0;\n    function loop() {\n        if (running) {\n            const delta = Date.now() - lastUpdate;\n            lastUpdate = Date.now();\n            frameInLastSecond++;\n            elapsed += delta;\n            if (elapsed >= 1000) {\n                fps = frameInLastSecond;\n                frameInLastSecond = 0;\n                elapsed -= 1000;\n            }\n            requestId = requestAnimationFrame(loop);\n            update(delta / 1000);\n        }\n    }\n    loop();\n    return {\n        isRunning: () => running,\n        start: () => {\n            if (!running) {\n                running = true;\n                loop();\n            }\n        },\n        stop: () => {\n            if (requestId) {\n                cancelAnimationFrame(requestId);\n            }\n            running = false;\n        },\n        getFps: () => fps,\n    };\n};\nexports.createGameLoop = createGameLoop;\nconst resizeCanvas = (canvas, deviceRatio) => {\n    const devicePixelRatio = deviceRatio || window.devicePixelRatio || 1;\n    const displayWidth = canvas.clientWidth * devicePixelRatio;\n    const displayHeight = canvas.clientHeight * devicePixelRatio;\n    if (canvas.width !== displayWidth || canvas.height !== displayHeight) {\n        canvas.width = displayWidth;\n        canvas.height = displayHeight;\n    }\n    return [displayWidth, displayHeight];\n};\nexports.resizeCanvas = resizeCanvas;\nconst pointInRect = (pX, pY, x, y, width, height) => {\n    return pX > x && pX < x + width && pY > y && pY < y + height;\n};\nexports.pointInRect = pointInRect;\nconst createStage = (options) => {\n    const defaultOptions = {\n        hidden: false,\n        info: true,\n    };\n    options = Object.assign(Object.assign({}, defaultOptions), options);\n    const wrapper = document.createElement(\"div\");\n    wrapper.setAttribute(\"style\", `position:fixed;top:0;left:0;right:0;bottom:0;`);\n    if (options.wrapperClassName) {\n        wrapper.className = options.wrapperClassName;\n    }\n    if (options.hidden) {\n        wrapper.style.display = \"none\";\n    }\n    const canvas = document.createElement(\"canvas\");\n    canvas.setAttribute(\"style\", `width:100%;height:100%;`);\n    const info = document.createElement(\"div\");\n    info.setAttribute(\"style\", `position:absolute;top:1em;left:1em;color:white`);\n    if (!options.info) {\n        info.style.display = \"none\";\n    }\n    wrapper.appendChild(canvas);\n    wrapper.appendChild(info);\n    document.body.appendChild(wrapper);\n    return {\n        getCanvas: () => canvas,\n        getInfo: () => info,\n        show: () => (wrapper.style.display = \"block\"),\n        hide: () => (wrapper.style.display = \"none\"),\n        cleanup: () => document.body.removeChild(wrapper),\n    };\n};\nexports.createStage = createStage;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}