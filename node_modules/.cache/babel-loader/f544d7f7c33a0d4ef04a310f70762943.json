{"ast":null,"code":"import { createStage, createViewport, createGameLoop, ShapeRenderer, Texture, TextureRegion, PolygonBatch, Animation, PlayMode, ViewportInputHandler, InputEvent, Vector2 } from \"gdxts\";\n\nconst init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./backgroundGame.png\"); // eslint-disable-next-line\n  // const texture = await Texture.load(gl, \"./charizard.png\");\n\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n  const walkDownAnimation = new Animation(regions.slice(0, 4), 0.2);\n  const walkLeftAnimation = new Animation(regions.slice(4, 8), 0.2);\n  const walkRightAnimation = new Animation(regions.slice(8, 12), 0.2);\n  const walkUpAnimation = new Animation(regions.slice(12, 16), 0.2);\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  const characterPosition = new Vector2(250, 500);\n  let rotation = 0;\n  let frame = 0;\n  gl.clearColor(0, 0, 0, 1);\n  background.getImage();\n  let nextPositon = new Vector2(250, 500);\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    nextPositon = inputHandler.getTouchedWorldCoord();\n    rotation = Math.atan2(nextPositon.y - characterPosition.y, nextPositon.x - characterPosition.x) * 180 / Math.PI;\n  });\n  const moveSpeed = 150;\n  createGameLoop(delta => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n    let region = walkDownAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n\n    if (characterPosition.x !== nextPositon.x || characterPosition.y !== nextPositon.y) {\n      frame += delta;\n\n      if (rotation >= 0 && rotation < 90) {\n        if (characterPosition.y < nextPositon.y) {\n          region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.y = Math.min(characterPosition.y + delta * moveSpeed, nextPositon.y); // increase y\n        } else {\n          if (characterPosition.x < nextPositon.x) {\n            region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n            characterPosition.x = Math.min(characterPosition.x + delta * moveSpeed, nextPositon.x); // increase x\n          }\n        }\n      }\n\n      if (rotation >= -90 && rotation < 0) {\n        if (characterPosition.x < nextPositon.x) {\n          region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.x = Math.min(characterPosition.x + delta * moveSpeed, nextPositon.x); // increase x\n        } else {\n          if (characterPosition.y > nextPositon.y) {\n            region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n            characterPosition.y = Math.max(characterPosition.y - delta * moveSpeed, nextPositon.y); // decrease y\n          }\n        }\n      }\n\n      if (rotation >= 90 && rotation < 180) {\n        if (characterPosition.y < nextPositon.y) {\n          region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.y = Math.min(characterPosition.y + delta * moveSpeed, nextPositon.y); // increase y\n        } else {\n          if (characterPosition.x > nextPositon.x) {\n            region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n            characterPosition.x = Math.max(characterPosition.x - delta * moveSpeed, nextPositon.x); // decrease x\n          }\n        }\n      }\n\n      if (rotation >= -180 && rotation < -90) {\n        if (characterPosition.y > nextPositon.y) {\n          region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.y = Math.max(characterPosition.y - delta * moveSpeed, nextPositon.y); // decrease y\n        } else {\n          if (characterPosition.x > nextPositon.x) {\n            region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n            characterPosition.x = Math.max(characterPosition.x - delta * moveSpeed, nextPositon.x); // decrease x\n          }\n        }\n      }\n    } else {\n      frame = 0;\n    }\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin(); // console.log(frame);\n\n    region.draw(batch, characterPosition.x - 50, characterPosition.y, 100, 100);\n    batch.end();\n  });\n};\n\ninit();","map":{"version":3,"names":["createStage","createViewport","createGameLoop","ShapeRenderer","Texture","TextureRegion","PolygonBatch","Animation","PlayMode","ViewportInputHandler","InputEvent","Vector2","init","stage","canvas","getCanvas","viewport","gl","getContext","background","load","characterTexture","regions","splitTexture","walkDownAnimation","slice","walkLeftAnimation","walkRightAnimation","walkUpAnimation","shapeRenderer","batch","camera","getCamera","inputHandler","characterPosition","rotation","frame","clearColor","getImage","nextPositon","addEventListener","TouchStart","x","y","getTouchedWorldCoord","Math","atan2","PI","moveSpeed","delta","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end","region","getKeyFrame","NORMAL","LOOP","min","max","draw"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createStage,\n  createViewport,\n  createGameLoop,\n  ShapeRenderer,\n  Texture,\n  TextureRegion,\n  PolygonBatch,\n  Animation,\n  PlayMode,\n  ViewportInputHandler,\n  InputEvent,\n  Vector2,\n} from \"gdxts\";\n\nconst init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./backgroundGame.png\");\n\n  // eslint-disable-next-line\n  // const texture = await Texture.load(gl, \"./charizard.png\");\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n\n  const walkDownAnimation = new Animation(regions.slice(0, 4), 0.2);\n  const walkLeftAnimation = new Animation(regions.slice(4, 8), 0.2);\n  const walkRightAnimation = new Animation(regions.slice(8, 12), 0.2);\n  const walkUpAnimation = new Animation(regions.slice(12, 16), 0.2);\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n\n  const inputHandler = new ViewportInputHandler(viewport);\n  const characterPosition = new Vector2(250, 500);\n\n  let rotation = 0;\n  let frame = 0;\n  gl.clearColor(0, 0, 0, 1);\n  background.getImage();\n\n  let nextPositon = new Vector2(250, 500);\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    nextPositon = inputHandler.getTouchedWorldCoord();\n    rotation =\n      (Math.atan2(\n        nextPositon.y - characterPosition.y,\n        nextPositon.x - characterPosition.x\n      ) *\n        180) /\n      Math.PI;\n  });\n\n  const moveSpeed = 150;\n\n  createGameLoop((delta: number) => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n    let region = walkDownAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n\n    if (\n      characterPosition.x !== nextPositon.x ||\n      characterPosition.y !== nextPositon.y\n    ) {\n      frame += delta;\n      if (rotation >= 0 && rotation < 90) {\n        if (characterPosition.y < nextPositon.y) {\n          region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.y = Math.min(\n            characterPosition.y + delta * moveSpeed,\n            nextPositon.y\n          ); // increase y\n        } else {\n          if (characterPosition.x < nextPositon.x) {\n            region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n            characterPosition.x = Math.min(\n              characterPosition.x + delta * moveSpeed,\n              nextPositon.x\n            ); // increase x\n          }\n        }\n      }\n      if (rotation >= -90 && rotation < 0) {\n        if (characterPosition.x < nextPositon.x) {\n          region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.x = Math.min(\n            characterPosition.x + delta * moveSpeed,\n            nextPositon.x\n          ); // increase x\n        } else {\n          if (characterPosition.y > nextPositon.y) {\n            region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n            characterPosition.y = Math.max(\n              characterPosition.y - delta * moveSpeed,\n              nextPositon.y\n            ); // decrease y\n          }\n        }\n      }\n      if (rotation >= 90 && rotation < 180) {\n        if (characterPosition.y < nextPositon.y) {\n          region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.y = Math.min(\n            characterPosition.y + delta * moveSpeed,\n            nextPositon.y\n          ); // increase y\n        } else {\n          if (characterPosition.x > nextPositon.x) {\n            region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n            characterPosition.x = Math.max(\n              characterPosition.x - delta * moveSpeed,\n              nextPositon.x\n            ); // decrease x\n          }\n        }\n      }\n      if (rotation >= -180 && rotation < -90) {\n        if (characterPosition.y > nextPositon.y) {\n          region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n          characterPosition.y = Math.max(\n            characterPosition.y - delta * moveSpeed,\n            nextPositon.y\n          ); // decrease y\n        } else {\n          if (characterPosition.x > nextPositon.x) {\n            region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n            characterPosition.x = Math.max(\n              characterPosition.x - delta * moveSpeed,\n              nextPositon.x\n            ); // decrease x\n          }\n        }\n      }\n    } else {\n      frame = 0;\n    }\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    // console.log(frame);\n    region.draw(batch, characterPosition.x - 50, characterPosition.y, 100, 100);\n    batch.end();\n  });\n};\ninit();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}