{"ast":null,"code":"import _initializerDefineProperty from \"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js\";\nimport _applyDecoratedDescriptor from \"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\";\nimport _initializerWarningHelper from \"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper.js\";\n\nvar _dec, _dec2, _dec3, _dec4, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;\n\nimport { System, Inject } from \"flat-ecs\";\nexport let ContactListenerSystem = (_dec = Inject(\"contactListener\"), _dec2 = Inject(\"physicWorld\"), _dec3 = Inject(\"delayTime\"), _dec4 = Inject(\"birdOnSlingShot\"), (_class = class ContactListenerSystem extends System {\n  constructor() {\n    super(...arguments);\n\n    _initializerDefineProperty(this, \"contactListener\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"physicWorld\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"delayTime\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"birdOnSlingShot\", _descriptor4, this);\n  }\n\n  initialized() {\n    this.contactListener.BeginContact = function (contact) {\n      const fixtureAData = contact.GetFixtureA().GetBody().GetUserData();\n\n      if (fixtureAData.name && fixtureAData.name.startsWith(\"box\")) {\n        fixtureAData.durability += 1;\n      }\n\n      if (fixtureAData.name && fixtureAData.name.startsWith(\"pig\")) {\n        fixtureAData.durability += 1;\n      }\n    };\n\n    this.physicWorld.SetContactListener(this.contactListener);\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.key === \"r\") {}\n    }); // window.addEventListener(\"keydown\", function (e) {\n    //   if (!hasBirdOnSlingShot && e.key === \"r\") {\n    //     this.physicWorld.DestroyBody(ball);\n    //     ball = createBall(world, 2, 3.5, BALL_RADIUS);\n    //     physicWorld.DestroyBody(bird);\n    //     bird = createBall(physicWorld, 2, 3.5, BALL_RADIUS);\n    //     hasBirdOnSlingShot = true;\n    //   }\n    // });\n  }\n\n  process() {}\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"contactListener\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"physicWorld\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"delayTime\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"birdOnSlingShot\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class));","map":{"version":3,"names":["System","Inject","ContactListenerSystem","initialized","contactListener","BeginContact","contact","fixtureAData","GetFixtureA","GetBody","GetUserData","name","startsWith","durability","physicWorld","SetContactListener","window","addEventListener","e","key","process"],"sources":["D:/projects/test-game/src/system/ContactListenerSystem.ts"],"sourcesContent":["import { b2Contact, b2ContactListener, b2World } from \"box2d.ts\";\r\nimport { System, Inject } from \"flat-ecs\";\r\n\r\nexport class ContactListenerSystem extends System {\r\n  @Inject(\"contactListener\") contactListener: b2ContactListener;\r\n  @Inject(\"physicWorld\") physicWorld: b2World;\r\n  @Inject(\"delayTime\") delayTime: number;\r\n  @Inject(\"birdOnSlingShot\") birdOnSlingShot: boolean;\r\n\r\n  initialized(): void {\r\n    this.contactListener.BeginContact = function (contact: b2Contact) {\r\n      const fixtureAData = contact.GetFixtureA().GetBody().GetUserData();\r\n      if (fixtureAData.name && fixtureAData.name.startsWith(\"box\")) {\r\n        fixtureAData.durability += 1;\r\n      }\r\n      if (fixtureAData.name && fixtureAData.name.startsWith(\"pig\")) {\r\n        fixtureAData.durability += 1;\r\n      }\r\n    };\r\n    this.physicWorld.SetContactListener(this.contactListener);\r\n\r\n    window.addEventListener(\"keydown\", function (e) {\r\n      if (e.key === \"r\") {\r\n      }\r\n    });\r\n    // window.addEventListener(\"keydown\", function (e) {\r\n    //   if (!hasBirdOnSlingShot && e.key === \"r\") {\r\n    //     this.physicWorld.DestroyBody(ball);\r\n    //     ball = createBall(world, 2, 3.5, BALL_RADIUS);\r\n    //     physicWorld.DestroyBody(bird);\r\n    //     bird = createBall(physicWorld, 2, 3.5, BALL_RADIUS);\r\n    //     hasBirdOnSlingShot = true;\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  process(): void {}\r\n}\r\n"],"mappings":";;;;;;AACA,SAASA,MAAT,EAAiBC,MAAjB,QAA+B,UAA/B;AAEA,WAAaC,qBAAb,WACGD,MAAM,CAAC,iBAAD,CADT,UAEGA,MAAM,CAAC,aAAD,CAFT,UAGGA,MAAM,CAAC,WAAD,CAHT,UAIGA,MAAM,CAAC,iBAAD,CAJT,YAAO,MAAMC,qBAAN,SAAoCF,MAApC,CAA2C;EAAA;IAAA;;IAAA;;IAAA;;IAAA;;IAAA;EAAA;;EAMhDG,WAAW,GAAS;IAClB,KAAKC,eAAL,CAAqBC,YAArB,GAAoC,UAAUC,OAAV,EAA8B;MAChE,MAAMC,YAAY,GAAGD,OAAO,CAACE,WAAR,GAAsBC,OAAtB,GAAgCC,WAAhC,EAArB;;MACA,IAAIH,YAAY,CAACI,IAAb,IAAqBJ,YAAY,CAACI,IAAb,CAAkBC,UAAlB,CAA6B,KAA7B,CAAzB,EAA8D;QAC5DL,YAAY,CAACM,UAAb,IAA2B,CAA3B;MACD;;MACD,IAAIN,YAAY,CAACI,IAAb,IAAqBJ,YAAY,CAACI,IAAb,CAAkBC,UAAlB,CAA6B,KAA7B,CAAzB,EAA8D;QAC5DL,YAAY,CAACM,UAAb,IAA2B,CAA3B;MACD;IACF,CARD;;IASA,KAAKC,WAAL,CAAiBC,kBAAjB,CAAoC,KAAKX,eAAzC;IAEAY,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,UAAUC,CAAV,EAAa;MAC9C,IAAIA,CAAC,CAACC,GAAF,KAAU,GAAd,EAAmB,CAClB;IACF,CAHD,EAZkB,CAgBlB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD;;EAEDC,OAAO,GAAS,CAAE;;AAjC8B,CAAlD;EAAA;EAAA;EAAA;EAAA;AAAA;EAAA;EAAA;EAAA;EAAA;AAAA;EAAA;EAAA;EAAA;EAAA;AAAA;EAAA;EAAA;EAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}