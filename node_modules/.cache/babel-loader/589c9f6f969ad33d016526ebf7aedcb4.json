{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"D:/projects/test-game/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"D:/projects/test-game/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextureRegion = void 0;\n\nvar TextureRegion = /*#__PURE__*/function () {\n  function TextureRegion(tex, x, y, width, height, extraData, invTexWidth, invTexHeight) {\n    var rotate = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;\n\n    _classCallCheck(this, TextureRegion);\n\n    this.name = null;\n    this.index = 0;\n    this.texture = null;\n    this.x = 0;\n    this.y = 0;\n    this.width = 0;\n    this.height = 0;\n    this.invTexWidth = 0;\n    this.invTexHeight = 0;\n    this.originalWidth = 0;\n    this.originalHeight = 0;\n    this.offsetX = 0;\n    this.offsetY = 0;\n    this.u = 0;\n    this.v = 0;\n    this.u2 = 0;\n    this.v2 = 0;\n\n    if (!invTexWidth || !invTexHeight) {\n      invTexWidth = 1 / tex.width;\n      invTexHeight = 1 / tex.height;\n    }\n\n    var u = x * invTexWidth;\n    var v = (y + height) * invTexHeight;\n    var u2 = (x + width) * invTexWidth;\n    var v2 = y * invTexHeight;\n    this.texture = tex;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.originalWidth = width;\n    this.originalHeight = height;\n    this.offsetX = 0;\n    this.offsetY = 0;\n\n    if (rotate) {\n      this.u = u2;\n      this.v = v;\n      this.u2 = u;\n      this.v2 = v2;\n    } else {\n      this.u = u;\n      this.v = v;\n      this.u2 = u2;\n      this.v2 = v2;\n    }\n\n    for (var key in extraData) {\n      this[key] = extraData[key];\n    }\n  }\n\n  _createClass(TextureRegion, [{\n    key: \"draw\",\n    value: function draw(batch, x, y, width, height) {\n      var originX = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n      var originY = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n      var rotation = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n      var scaleX = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 1;\n      var scaleY = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 1;\n      var originalWidth = this.originalWidth;\n      var offsetX = this.offsetX;\n      var offsetY = this.offsetY;\n      var ratio = width / originalWidth;\n      var drawWidth = this.width * ratio;\n      var drawHeight = this.height * ratio;\n      var drawX = x + offsetX * ratio;\n      var drawY = y + height - offsetY * ratio - drawHeight;\n      originX = originX - (drawX - x);\n      originY = originY - (drawY - y);\n      batch.draw(this.texture, drawX, drawY, drawWidth, drawHeight, originX, originY, rotation, scaleX, scaleY, this.u, this.v, this.u2, this.v2);\n    }\n  }], [{\n    key: \"splitTexture\",\n    value: function splitTexture(texture, cols, rows) {\n      var width = texture.width,\n          height = texture.height;\n      var regionWidth = width / cols;\n      var regionHeight = height / rows;\n      var regions = [];\n\n      for (var y = 0; y < rows; y++) {\n        for (var x = 0; x < cols; x++) {\n          regions.push(new TextureRegion(texture, x * regionWidth, y * regionHeight, regionWidth, regionHeight, {}));\n        }\n      }\n\n      return regions;\n    }\n  }]);\n\n  return TextureRegion;\n}();\n\nexports.TextureRegion = TextureRegion;","map":{"version":3,"names":["Object","defineProperty","exports","value","TextureRegion","tex","x","y","width","height","extraData","invTexWidth","invTexHeight","rotate","name","index","texture","originalWidth","originalHeight","offsetX","offsetY","u","v","u2","v2","key","batch","originX","originY","rotation","scaleX","scaleY","ratio","drawWidth","drawHeight","drawX","drawY","draw","cols","rows","regionWidth","regionHeight","regions","push"],"sources":["D:/projects/test-game/node_modules/gdxts/dist/lib/TextureRegion.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextureRegion = void 0;\nclass TextureRegion {\n    constructor(tex, x, y, width, height, extraData, invTexWidth, invTexHeight, rotate = false) {\n        this.name = null;\n        this.index = 0;\n        this.texture = null;\n        this.x = 0;\n        this.y = 0;\n        this.width = 0;\n        this.height = 0;\n        this.invTexWidth = 0;\n        this.invTexHeight = 0;\n        this.originalWidth = 0;\n        this.originalHeight = 0;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.u = 0;\n        this.v = 0;\n        this.u2 = 0;\n        this.v2 = 0;\n        if (!invTexWidth || !invTexHeight) {\n            invTexWidth = 1 / tex.width;\n            invTexHeight = 1 / tex.height;\n        }\n        const u = x * invTexWidth;\n        const v = (y + height) * invTexHeight;\n        const u2 = (x + width) * invTexWidth;\n        const v2 = y * invTexHeight;\n        this.texture = tex;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.originalWidth = width;\n        this.originalHeight = height;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        if (rotate) {\n            this.u = u2;\n            this.v = v;\n            this.u2 = u;\n            this.v2 = v2;\n        }\n        else {\n            this.u = u;\n            this.v = v;\n            this.u2 = u2;\n            this.v2 = v2;\n        }\n        for (let key in extraData) {\n            this[key] = extraData[key];\n        }\n    }\n    static splitTexture(texture, cols, rows) {\n        const { width, height } = texture;\n        const regionWidth = width / cols;\n        const regionHeight = height / rows;\n        const regions = [];\n        for (let y = 0; y < rows; y++) {\n            for (let x = 0; x < cols; x++) {\n                regions.push(new TextureRegion(texture, x * regionWidth, y * regionHeight, regionWidth, regionHeight, {}));\n            }\n        }\n        return regions;\n    }\n    draw(batch, x, y, width, height, originX = 0, originY = 0, rotation = 0, scaleX = 1, scaleY = 1) {\n        const originalWidth = this.originalWidth;\n        const offsetX = this.offsetX;\n        const offsetY = this.offsetY;\n        const ratio = width / originalWidth;\n        const drawWidth = this.width * ratio;\n        const drawHeight = this.height * ratio;\n        const drawX = x + offsetX * ratio;\n        const drawY = y + height - offsetY * ratio - drawHeight;\n        originX = originX - (drawX - x);\n        originY = originY - (drawY - y);\n        batch.draw(this.texture, drawX, drawY, drawWidth, drawHeight, originX, originY, rotation, scaleX, scaleY, this.u, this.v, this.u2, this.v2);\n    }\n}\nexports.TextureRegion = TextureRegion;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}