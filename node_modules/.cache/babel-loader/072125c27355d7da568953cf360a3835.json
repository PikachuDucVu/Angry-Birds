{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OrthoCamera = void 0;\n\nconst Matrix4_1 = require(\"./Matrix4\");\n\nconst Vector3_1 = require(\"./Vector3\");\n\nclass OrthoCamera {\n  constructor(viewportWidth, viewportHeight, screenWidth, screenHeight) {\n    this.position = new Vector3_1.Vector3(0, 0, 0);\n    this.direction = new Vector3_1.Vector3(0, 0, -1);\n    this.up = new Vector3_1.Vector3(0, 1, 0);\n    this.near = 0;\n    this.far = 100;\n    this.zoom = 1;\n    this.viewportWidth = 0;\n    this.viewportHeight = 0;\n    this.projectionView = new Matrix4_1.Matrix4();\n    this.inverseProjectionView = new Matrix4_1.Matrix4();\n    this.projection = new Matrix4_1.Matrix4();\n    this.view = new Matrix4_1.Matrix4();\n    this.tmp3 = new Vector3_1.Vector3();\n    this.resize(viewportWidth, viewportHeight, screenWidth, screenHeight);\n  }\n\n  resize(viewportWidth, viewportHeight, screenWidth, screenHeight) {\n    this.viewportWidth = viewportWidth;\n    this.viewportHeight = viewportHeight;\n    this.screenWidth = screenWidth;\n    this.screenHeight = screenHeight;\n    this.update();\n  }\n\n  setPosition(cameraX, cameraY) {\n    this.position.set(cameraX, cameraY, this.position.z);\n  }\n\n  update() {\n    let projection = this.projection;\n    let view = this.view;\n    let projectionView = this.projectionView;\n    let inverseProjectionView = this.inverseProjectionView;\n    let zoom = this.zoom,\n        viewportWidth = this.viewportWidth,\n        viewportHeight = this.viewportHeight;\n    projection.ortho(zoom * (-viewportWidth / 2), zoom * (viewportWidth / 2), zoom * (-viewportHeight / 2), zoom * (viewportHeight / 2), this.near, this.far);\n    view.lookAt(this.position, this.direction, this.up);\n    projectionView.set(projection.values);\n    projectionView.multiply(view);\n    inverseProjectionView.set(projectionView.values).invert();\n  }\n\n  screenToWorld(screenCoords, screenWidth, screenHeight) {\n    screenWidth = screenWidth || this.screenWidth;\n    screenHeight = screenHeight || this.screenHeight;\n    let x = screenCoords.x,\n        y = screenHeight - screenCoords.y - 1;\n    screenCoords.x = 2 * x / screenWidth - 1;\n    screenCoords.y = 2 * y / screenHeight - 1;\n    screenCoords.z = 2 * screenCoords.z - 1;\n    screenCoords.project(this.inverseProjectionView);\n    return screenCoords;\n  }\n\n  worldToScreen(worldCoords, screenWidth, screenHeight) {\n    screenWidth = screenWidth || this.screenWidth;\n    screenHeight = screenHeight || this.screenHeight;\n    worldCoords.project(this.projectionView);\n    worldCoords.x = screenWidth * (worldCoords.x + 1) / 2;\n    worldCoords.y = screenHeight * (worldCoords.y + 1) / 2;\n    worldCoords.z = (worldCoords.z + 1) / 2;\n    return worldCoords;\n  }\n\n  unprojectVector2(worldCoord, screenCoord) {\n    this.tmp3.set(screenCoord.x, screenCoord.y, 0);\n    this.screenToWorld(this.tmp3);\n    worldCoord.set(this.tmp3.x, this.tmp3.y);\n  }\n\n  setViewport(viewportWidth, viewportHeight) {\n    this.viewportWidth = viewportWidth;\n    this.viewportHeight = viewportHeight;\n  }\n\n}\n\nexports.OrthoCamera = OrthoCamera;","map":{"version":3,"names":["Object","defineProperty","exports","value","OrthoCamera","Matrix4_1","require","Vector3_1","constructor","viewportWidth","viewportHeight","screenWidth","screenHeight","position","Vector3","direction","up","near","far","zoom","projectionView","Matrix4","inverseProjectionView","projection","view","tmp3","resize","update","setPosition","cameraX","cameraY","set","z","ortho","lookAt","values","multiply","invert","screenToWorld","screenCoords","x","y","project","worldToScreen","worldCoords","unprojectVector2","worldCoord","screenCoord","setViewport"],"sources":["D:/projects/test-game/node_modules/gdxts/dist/lib/Camera.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OrthoCamera = void 0;\nconst Matrix4_1 = require(\"./Matrix4\");\nconst Vector3_1 = require(\"./Vector3\");\nclass OrthoCamera {\n    constructor(viewportWidth, viewportHeight, screenWidth, screenHeight) {\n        this.position = new Vector3_1.Vector3(0, 0, 0);\n        this.direction = new Vector3_1.Vector3(0, 0, -1);\n        this.up = new Vector3_1.Vector3(0, 1, 0);\n        this.near = 0;\n        this.far = 100;\n        this.zoom = 1;\n        this.viewportWidth = 0;\n        this.viewportHeight = 0;\n        this.projectionView = new Matrix4_1.Matrix4();\n        this.inverseProjectionView = new Matrix4_1.Matrix4();\n        this.projection = new Matrix4_1.Matrix4();\n        this.view = new Matrix4_1.Matrix4();\n        this.tmp3 = new Vector3_1.Vector3();\n        this.resize(viewportWidth, viewportHeight, screenWidth, screenHeight);\n    }\n    resize(viewportWidth, viewportHeight, screenWidth, screenHeight) {\n        this.viewportWidth = viewportWidth;\n        this.viewportHeight = viewportHeight;\n        this.screenWidth = screenWidth;\n        this.screenHeight = screenHeight;\n        this.update();\n    }\n    setPosition(cameraX, cameraY) {\n        this.position.set(cameraX, cameraY, this.position.z);\n    }\n    update() {\n        let projection = this.projection;\n        let view = this.view;\n        let projectionView = this.projectionView;\n        let inverseProjectionView = this.inverseProjectionView;\n        let zoom = this.zoom, viewportWidth = this.viewportWidth, viewportHeight = this.viewportHeight;\n        projection.ortho(zoom * (-viewportWidth / 2), zoom * (viewportWidth / 2), zoom * (-viewportHeight / 2), zoom * (viewportHeight / 2), this.near, this.far);\n        view.lookAt(this.position, this.direction, this.up);\n        projectionView.set(projection.values);\n        projectionView.multiply(view);\n        inverseProjectionView.set(projectionView.values).invert();\n    }\n    screenToWorld(screenCoords, screenWidth, screenHeight) {\n        screenWidth = screenWidth || this.screenWidth;\n        screenHeight = screenHeight || this.screenHeight;\n        let x = screenCoords.x, y = screenHeight - screenCoords.y - 1;\n        screenCoords.x = (2 * x) / screenWidth - 1;\n        screenCoords.y = (2 * y) / screenHeight - 1;\n        screenCoords.z = 2 * screenCoords.z - 1;\n        screenCoords.project(this.inverseProjectionView);\n        return screenCoords;\n    }\n    worldToScreen(worldCoords, screenWidth, screenHeight) {\n        screenWidth = screenWidth || this.screenWidth;\n        screenHeight = screenHeight || this.screenHeight;\n        worldCoords.project(this.projectionView);\n        worldCoords.x = (screenWidth * (worldCoords.x + 1)) / 2;\n        worldCoords.y = (screenHeight * (worldCoords.y + 1)) / 2;\n        worldCoords.z = (worldCoords.z + 1) / 2;\n        return worldCoords;\n    }\n    unprojectVector2(worldCoord, screenCoord) {\n        this.tmp3.set(screenCoord.x, screenCoord.y, 0);\n        this.screenToWorld(this.tmp3);\n        worldCoord.set(this.tmp3.x, this.tmp3.y);\n    }\n    setViewport(viewportWidth, viewportHeight) {\n        this.viewportWidth = viewportWidth;\n        this.viewportHeight = viewportHeight;\n    }\n}\nexports.OrthoCamera = OrthoCamera;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}