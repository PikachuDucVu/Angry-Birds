{"ast":null,"code":"import { createBatch, createGameLoop, createStage, createViewport, createViewportAwareInputHandler, createWhiteTexture, Vector2 } from \"gdxjs\";\nexport const initTest = () => {\n  const stage = createStage();\n  stage.show();\n  const viewport = createViewport(stage.getCanvas(), 50, 100, {\n    pixelRatio: Math.min(2, window.devicePixelRatio),\n    contextOption: {\n      antialias: true\n    }\n  });\n  const gl = viewport.getContext();\n  const batch = createBatch(gl);\n  const camera = viewport.getCamera();\n  const whiteText = createWhiteTexture(gl);\n  const inputHandler = createViewportAwareInputHandler(stage.getCanvas(), viewport);\n  const DURATION = 2;\n  s = v * t;\n  inputHandler.addEventListener(\"touchEnd\", () => {\n    const {\n      x,\n      y\n    } = inputHandler.getTouchedWorldCoord();\n    console.log(x, y);\n  });\n  const human = {\n    texture: whiteText,\n    display: new Vector2(50 / 2, 100 / 2),\n    width: 8,\n    height: 16\n  };\n  gl.clearColor(0, 0, 0, 1);\n  const loop = createGameLoop(delta => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    batch.setProjection(camera.combined);\n    batch.begin();\n    batch.draw(whiteText, 0, 0, 50, 100);\n    batch.setColor(1, 0, 0, 1);\n    batch.draw(human.texture, human.display.x - human.width / 2, human.display.y - human.height / 2, human.width, human.height);\n    batch.setColor(1, 1, 1, 1);\n    batch.end();\n  });\n};","map":{"version":3,"names":["createBatch","createGameLoop","createStage","createViewport","createViewportAwareInputHandler","createWhiteTexture","Vector2","initTest","stage","show","viewport","getCanvas","pixelRatio","Math","min","window","devicePixelRatio","contextOption","antialias","gl","getContext","batch","camera","getCamera","whiteText","inputHandler","DURATION","s","v","t","addEventListener","x","y","getTouchedWorldCoord","console","log","human","texture","display","width","height","clearColor","loop","delta","clear","COLOR_BUFFER_BIT","setProjection","combined","begin","draw","setColor","end"],"sources":["D:/projects/test-game/src/test.ts"],"sourcesContent":["import {\r\n  createBatch,\r\n  createGameLoop,\r\n  createStage,\r\n  createViewport,\r\n  createViewportAwareInputHandler,\r\n  createWhiteTexture,\r\n  InputHandler,\r\n  Texture,\r\n  Vector2,\r\n} from \"gdxjs\";\r\n\r\nexport const initTest = () => {\r\n  const stage = createStage();\r\n  stage.show();\r\n\r\n  const viewport = createViewport(stage.getCanvas(), 50, 100, {\r\n    pixelRatio: Math.min(2, window.devicePixelRatio),\r\n    contextOption: {\r\n      antialias: true,\r\n    },\r\n  });\r\n  const gl = viewport.getContext();\r\n  const batch = createBatch(gl);\r\n  const camera = viewport.getCamera();\r\n  const whiteText = createWhiteTexture(gl);\r\n\r\n  const inputHandler = createViewportAwareInputHandler(\r\n    stage.getCanvas(),\r\n    viewport\r\n  );\r\n\r\n  const DURATION = 2;\r\n\r\n  s = v * t;\r\n  inputHandler.addEventListener(\"touchEnd\", () => {\r\n    const { x, y } = inputHandler.getTouchedWorldCoord();\r\n    console.log(x, y);\r\n  });\r\n\r\n  const human: {\r\n    texture: Texture;\r\n    display: Vector2;\r\n    width: number;\r\n    height: number;\r\n  } = {\r\n    texture: whiteText as Texture,\r\n    display: new Vector2(50 / 2, 100 / 2),\r\n    width: 8,\r\n    height: 16,\r\n  };\r\n\r\n  gl.clearColor(0, 0, 0, 1);\r\n  const loop = createGameLoop((delta) => {\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n    batch.setProjection(camera.combined);\r\n    batch.begin();\r\n    batch.draw(whiteText, 0, 0, 50, 100);\r\n\r\n    batch.setColor(1, 0, 0, 1);\r\n    batch.draw(\r\n      human.texture,\r\n      human.display.x - human.width / 2,\r\n      human.display.y - human.height / 2,\r\n      human.width,\r\n      human.height\r\n    );\r\n    batch.setColor(1, 1, 1, 1);\r\n    batch.end();\r\n  });\r\n};\r\n"],"mappings":"AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,cAJF,EAKEC,+BALF,EAMEC,kBANF,EASEC,OATF,QAUO,OAVP;AAYA,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAC5B,MAAMC,KAAK,GAAGN,WAAW,EAAzB;EACAM,KAAK,CAACC,IAAN;EAEA,MAAMC,QAAQ,GAAGP,cAAc,CAACK,KAAK,CAACG,SAAN,EAAD,EAAoB,EAApB,EAAwB,GAAxB,EAA6B;IAC1DC,UAAU,EAAEC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYC,MAAM,CAACC,gBAAnB,CAD8C;IAE1DC,aAAa,EAAE;MACbC,SAAS,EAAE;IADE;EAF2C,CAA7B,CAA/B;EAMA,MAAMC,EAAE,GAAGT,QAAQ,CAACU,UAAT,EAAX;EACA,MAAMC,KAAK,GAAGrB,WAAW,CAACmB,EAAD,CAAzB;EACA,MAAMG,MAAM,GAAGZ,QAAQ,CAACa,SAAT,EAAf;EACA,MAAMC,SAAS,GAAGnB,kBAAkB,CAACc,EAAD,CAApC;EAEA,MAAMM,YAAY,GAAGrB,+BAA+B,CAClDI,KAAK,CAACG,SAAN,EADkD,EAElDD,QAFkD,CAApD;EAKA,MAAMgB,QAAQ,GAAG,CAAjB;EAEAC,CAAC,GAAGC,CAAC,GAAGC,CAAR;EACAJ,YAAY,CAACK,gBAAb,CAA8B,UAA9B,EAA0C,MAAM;IAC9C,MAAM;MAAEC,CAAF;MAAKC;IAAL,IAAWP,YAAY,CAACQ,oBAAb,EAAjB;IACAC,OAAO,CAACC,GAAR,CAAYJ,CAAZ,EAAeC,CAAf;EACD,CAHD;EAKA,MAAMI,KAKL,GAAG;IACFC,OAAO,EAAEb,SADP;IAEFc,OAAO,EAAE,IAAIhC,OAAJ,CAAY,KAAK,CAAjB,EAAoB,MAAM,CAA1B,CAFP;IAGFiC,KAAK,EAAE,CAHL;IAIFC,MAAM,EAAE;EAJN,CALJ;EAYArB,EAAE,CAACsB,UAAH,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;EACA,MAAMC,IAAI,GAAGzC,cAAc,CAAE0C,KAAD,IAAW;IACrCxB,EAAE,CAACyB,KAAH,CAASzB,EAAE,CAAC0B,gBAAZ;IAEAxB,KAAK,CAACyB,aAAN,CAAoBxB,MAAM,CAACyB,QAA3B;IACA1B,KAAK,CAAC2B,KAAN;IACA3B,KAAK,CAAC4B,IAAN,CAAWzB,SAAX,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,GAAhC;IAEAH,KAAK,CAAC6B,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;IACA7B,KAAK,CAAC4B,IAAN,CACEb,KAAK,CAACC,OADR,EAEED,KAAK,CAACE,OAAN,CAAcP,CAAd,GAAkBK,KAAK,CAACG,KAAN,GAAc,CAFlC,EAGEH,KAAK,CAACE,OAAN,CAAcN,CAAd,GAAkBI,KAAK,CAACI,MAAN,GAAe,CAHnC,EAIEJ,KAAK,CAACG,KAJR,EAKEH,KAAK,CAACI,MALR;IAOAnB,KAAK,CAAC6B,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;IACA7B,KAAK,CAAC8B,GAAN;EACD,CAjB0B,CAA3B;AAkBD,CA3DM"},"metadata":{},"sourceType":"module"}