{"ast":null,"code":"import { createGameLoop, createStage, createViewport, PolygonBatch, ShapeRenderer, Texture, Vector2 } from \"gdxts\";\nexport const init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 1500, 2000);\n  const gl = viewport.getContext();\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const background = await Texture.load(gl, \"./TetrisBg.png\");\n  const border = await Texture.load(gl, \"./border.png\");\n  const bgRight = await Texture.load(gl, \"./bg1.png\");\n  const block = await Texture.load(gl, \"./7251.png\");\n  const redBlock = await Texture.load(gl, \"./RedBlock.png\");\n  const purpleBlock = await Texture.load(gl, \"./PurpleBlock.png\");\n  const orangeBlock = await Texture.load(gl, \"./OrangeBlock.png\");\n  const yellowBlock = await Texture.load(gl, \"./YellowBlock.png\");\n  const blueBlock = await Texture.load(gl, \"./BlueBlock.png\");\n  const blueSkyBlock = await Texture.load(gl, \"./BlueSkyBlock.png\");\n  const greenBlock = await Texture.load(gl, \"./GreenBlock.png\");\n  let map = new Array(); //tetromino\n\n  const squareBlock = [[1, 1], [1, 1]]; //I\n\n  const iBlock2 = [[2], [2], [2], [2]]; //J\n\n  const jBlock1 = [[3, 0, 0], [3, 3, 3]];\n  const jBlock2 = [[3, 3], [3, 0], [3, 0]];\n  const jBlock3 = [[3, 3, 3], [0, 0, 3]]; //L\n\n  const LBlock1 = [[0, 0, 4], [4, 4, 4]];\n  const LBlock2 = [[4, 4], [0, 4], [0, 4]]; //s\n\n  const sBlock1 = [[0, 5, 5], [5, 5, 0]];\n  const sBlock2 = [[5, 0], [5, 5], [0, 5]]; //t\n\n  const tBlock1 = [[0, 6, 0], [6, 6, 6]];\n  const tBlock2 = [[6, 0], [6, 6], [6, 0]];\n  const tBlock3 = [[7, 7, 7], [0, 7, 0]];\n  const tBlock4 = [[0, 7], [7, 7], [0, 7]]; //z\n\n  const zBlock1 = [[8, 8, 0], [0, 8, 8]];\n  const zBlock2 = [[8, 0], [8, 8], [0, 8]]; //config game\n\n  let blockPosition = new Vector2(83, 83);\n  let currentBlock = squareBlock; // error multidimensional array\n\n  let timeDelay = 0;\n  let rowBlock = 0;\n  let colBlock = 0;\n\n  function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  } // draw the map\n\n\n  for (let row = 0; row < 24; row++) {\n    //12x24\n    map[row] = new Array();\n\n    for (let col = 0; col < 11; col++) {\n      map[row].push(0);\n    }\n\n    for (let col = 0; col < map[0].length; col++) {\n      map[9][col] = 9;\n    }\n  }\n\n  function blockTracking() {\n    for (let row = 0; row < currentBlock.length; row++) {\n      for (let col = 0; col < currentBlock[row].length; col++) {\n        map[22 - row][6 - currentBlock[0].length / 2 + col] = currentBlock[row][col];\n      }\n    }\n  }\n\n  function drawTetromino() {\n    for (let row = 0; row < map.length; row++) {\n      for (let col = 0; col < map[row].length; col++) {\n        if (map[row][col] !== 0 && map[row][col] !== 9) {\n          colBlock = col;\n          rowBlock = row;\n          batch.draw(blueSkyBlock, col * blockPosition.x, row * blockPosition.y, 83, 83);\n        } // scan to draw\n\n      }\n    }\n  }\n\n  window.addEventListener(\"keypress\", function (e) {\n    if (e) {}\n  });\n  blockTracking();\n  createGameLoop(delta => {\n    timeDelay += delta;\n\n    if (timeDelay >= 0.5) {\n      timeDelay = 0;\n\n      for (let i = map.length - 1; i >= 0; i--) {\n        for (let j = 0; j < map[i].length; j++) {}\n      }\n\n      for (let row = 1; row < map.length; row++) {\n        for (let col = 0; col < map[row].length; col++) {\n          // if (\n          //   map[row - 1][col] === 0 &&\n          //   map[row - 1][col] !== 9 &&\n          //   map[row][col] !== 0\n          // ) {\n          //   map[row - 1][col] = 1;\n          //   map[row - 1][col + 1] = 1;\n          //   map[row + 1][col] = 0;\n          //   map[row + 1][col + 1] = 0;\n          //   if (map[row - 2][col] !== 0) {\n          //     console.log(\"123\");\n          //     currentBlock = jBlock2;\n          //     blockTracking();\n          //   }\n          // }\n          if (row === 0) {\n            map[row][col] = 0;\n          } else if (row < map.length - 1 && row > 0) {\n            [map[row][col], map[row + 1][col]] = [map[row + 1][col], map[row][col]];\n          } else {//\n          }\n        }\n      }\n\n      console.log(map);\n    }\n\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 1000, 2000);\n    shapeRenderer.end(); //draw border\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 1000, 2000);\n    drawTetromino();\n    batch.draw(border, 0, 0, 1000, 2000);\n    batch.draw(bgRight, 1000, 0, 500, 2000);\n    batch.end();\n  });\n};\ninit(); // init2();","map":{"version":3,"names":["createGameLoop","createStage","createViewport","PolygonBatch","ShapeRenderer","Texture","Vector2","init","stage","canvas","getCanvas","viewport","gl","getContext","shapeRenderer","batch","camera","getCamera","background","load","border","bgRight","block","redBlock","purpleBlock","orangeBlock","yellowBlock","blueBlock","blueSkyBlock","greenBlock","map","Array","squareBlock","iBlock2","jBlock1","jBlock2","jBlock3","LBlock1","LBlock2","sBlock1","sBlock2","tBlock1","tBlock2","tBlock3","tBlock4","zBlock1","zBlock2","blockPosition","currentBlock","timeDelay","rowBlock","colBlock","getRandomInt","min","max","Math","floor","random","row","col","push","length","blockTracking","drawTetromino","draw","x","y","window","addEventListener","e","delta","i","j","console","log","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createGameLoop,\n  createStage,\n  createViewport,\n  PolygonBatch,\n  ShapeRenderer,\n  Texture,\n  Vector2,\n  BitmapFont,\n  TextureRegion,\n  Color,\n} from \"gdxts\";\n\nimport { init2 } from \"./index2\";\n\nexport const init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 1500, 2000);\n  const gl = viewport.getContext();\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n\n  const background = await Texture.load(gl, \"./TetrisBg.png\");\n  const border = await Texture.load(gl, \"./border.png\");\n  const bgRight = await Texture.load(gl, \"./bg1.png\");\n  const block = await Texture.load(gl, \"./7251.png\");\n  const redBlock = await Texture.load(gl, \"./RedBlock.png\");\n  const purpleBlock = await Texture.load(gl, \"./PurpleBlock.png\");\n  const orangeBlock = await Texture.load(gl, \"./OrangeBlock.png\");\n  const yellowBlock = await Texture.load(gl, \"./YellowBlock.png\");\n  const blueBlock = await Texture.load(gl, \"./BlueBlock.png\");\n  const blueSkyBlock = await Texture.load(gl, \"./BlueSkyBlock.png\");\n  const greenBlock = await Texture.load(gl, \"./GreenBlock.png\");\n\n  let map = new Array();\n\n  //tetromino\n  const squareBlock = [\n    [1, 1],\n    [1, 1],\n  ];\n  //I\n  const iBlock2 = [[2], [2], [2], [2]];\n\n  //J\n  const jBlock1 = [\n    [3, 0, 0],\n    [3, 3, 3],\n  ];\n  const jBlock2 = [\n    [3, 3],\n    [3, 0],\n    [3, 0],\n  ];\n  const jBlock3 = [\n    [3, 3, 3],\n    [0, 0, 3],\n  ];\n  //L\n  const LBlock1 = [\n    [0, 0, 4],\n    [4, 4, 4],\n  ];\n  const LBlock2 = [\n    [4, 4],\n    [0, 4],\n    [0, 4],\n  ];\n  //s\n  const sBlock1 = [\n    [0, 5, 5],\n    [5, 5, 0],\n  ];\n  const sBlock2 = [\n    [5, 0],\n    [5, 5],\n    [0, 5],\n  ];\n  //t\n  const tBlock1 = [\n    [0, 6, 0],\n    [6, 6, 6],\n  ];\n  const tBlock2 = [\n    [6, 0],\n    [6, 6],\n    [6, 0],\n  ];\n  const tBlock3 = [\n    [7, 7, 7],\n    [0, 7, 0],\n  ];\n  const tBlock4 = [\n    [0, 7],\n    [7, 7],\n    [0, 7],\n  ];\n  //z\n  const zBlock1 = [\n    [8, 8, 0],\n    [0, 8, 8],\n  ];\n  const zBlock2 = [\n    [8, 0],\n    [8, 8],\n    [0, 8],\n  ];\n\n  //config game\n\n  let blockPosition = new Vector2(83, 83);\n  let currentBlock = squareBlock; // error multidimensional array\n  let timeDelay = 0;\n  let rowBlock = 0;\n  let colBlock = 0;\n\n  function getRandomInt(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n  // draw the map\n  for (let row = 0; row < 24; row++) {\n    //12x24\n    map[row] = new Array();\n    for (let col = 0; col < 11; col++) {\n      map[row].push(0);\n    }\n    for (let col = 0; col < map[0].length; col++) {\n      map[9][col] = 9;\n    }\n  }\n\n  function blockTracking() {\n    for (let row = 0; row < currentBlock.length; row++) {\n      for (let col = 0; col < currentBlock[row].length; col++) {\n        map[22 - row][6 - currentBlock[0].length / 2 + col] =\n          currentBlock[row][col];\n      }\n    }\n  }\n\n  function drawTetromino() {\n    for (let row = 0; row < map.length; row++) {\n      for (let col = 0; col < map[row].length; col++) {\n        if (map[row][col] !== 0 && map[row][col] !== 9) {\n          colBlock = col;\n          rowBlock = row;\n          batch.draw(\n            blueSkyBlock,\n            col * blockPosition.x,\n            row * blockPosition.y,\n            83,\n            83\n          );\n        } // scan to draw\n      }\n    }\n  }\n\n  window.addEventListener(\"keypress\", function (e) {\n    if (e) {\n    }\n  });\n\n  blockTracking();\n  createGameLoop((delta: number) => {\n    timeDelay += delta;\n    if (timeDelay >= 0.5) {\n      timeDelay = 0;\n\n      for (let i = map.length - 1; i >= 0; i--) {\n        for (let j = 0; j < map[i].length; j++) {}\n      }\n\n      for (let row = 1; row < map.length; row++) {\n        for (let col = 0; col < map[row].length; col++) {\n          // if (\n          //   map[row - 1][col] === 0 &&\n          //   map[row - 1][col] !== 9 &&\n          //   map[row][col] !== 0\n          // ) {\n          //   map[row - 1][col] = 1;\n          //   map[row - 1][col + 1] = 1;\n          //   map[row + 1][col] = 0;\n          //   map[row + 1][col + 1] = 0;\n          //   if (map[row - 2][col] !== 0) {\n          //     console.log(\"123\");\n          //     currentBlock = jBlock2;\n          //     blockTracking();\n          //   }\n          // }\n          if (row === 0) {\n            map[row][col] = 0;\n          } else if (row < map.length - 1 && row > 0) {\n            [map[row][col], map[row + 1][col]] = [\n              map[row + 1][col],\n              map[row][col],\n            ];\n          } else {\n            //\n          }\n        }\n      }\n      console.log(map);\n    }\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 1000, 2000);\n    shapeRenderer.end();\n\n    //draw border\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 1000, 2000);\n    drawTetromino();\n    batch.draw(border, 0, 0, 1000, 2000);\n    batch.draw(bgRight, 1000, 0, 500, 2000);\n    batch.end();\n  });\n};\n\ninit();\n// init2();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}