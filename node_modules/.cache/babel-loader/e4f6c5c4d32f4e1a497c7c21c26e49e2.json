{"ast":null,"code":"import { createStage, createViewport, createGameLoop, ShapeRenderer, Texture, TextureRegion, PolygonBatch, Animation, PlayMode, ViewportInputHandler, InputEvent, Vector2, Color } from \"gdxts\";\nimport Walkable from \"walkable\";\nexport const init = async () => {\n  let walkable = new Walkable(500, 1000);\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./pokemon-bg.jpg\");\n  const mapData = await fetch(\"./test.tmj\").then(res => res.json());\n  const obstacles = mapData.layers.find(l => l.name === \"obstacles\").objects.map(rect => ({ ...rect,\n    y: 1000 - rect.y - rect.height\n  }));\n\n  for (let rect of obstacles) {\n    walkable.addRect(rect.width, rect.height, rect.x, rect.y);\n  } // eslint-disable-next-line\n  // const texture = await Texture.load(gl, \"./charizard.png\");\n\n\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\"); // const apple = await Texture.load(gl, \"./apple.png\");\n\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n  const walkDownAnimation = new Animation(regions.slice(0, 4), 0.2);\n  const walkLeftAnimation = new Animation(regions.slice(4, 8), 0.2);\n  const walkRightAnimation = new Animation(regions.slice(8, 12), 0.2);\n  const walkUpAnimation = new Animation(regions.slice(12, 16), 0.2);\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  let characterPosition = new Vector2(250, 500);\n  let frame = 0;\n  let rotation = 0;\n  let vectorResult = new Vector2();\n  let d = new Vector2();\n  let lastUpdate = Date.now();\n  let count = 0;\n  gl.clearColor(0, 0, 0, 1);\n  let nextPosition = new Vector2(250, 500);\n  const path = [];\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    path.length = 0;\n    count = 0;\n    nextPosition = inputHandler.getTouchedWorldCoord();\n    walkable.findPath(characterPosition.x, characterPosition.y, nextPosition.x, nextPosition.y, 10, path);\n    console.log(path);\n    nextPosition.x = path[0];\n    nextPosition.y = path[1];\n    rotation = Math.atan2(nextPosition.y - characterPosition.y, nextPosition.x - characterPosition.x) * 180 / Math.PI;\n  });\n  var region = walkDownAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n  const moveSpeed = 150;\n  createGameLoop(delta => {\n    vectorResult.x = nextPosition.x - characterPosition.x;\n    vectorResult.y = nextPosition.y - characterPosition.y;\n    d = vectorResult.normalize();\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n\n    if (characterPosition.x !== nextPosition.x || characterPosition.y !== nextPosition.y) {\n      frame += delta;\n\n      if (rotation >= -45 && rotation < 45) {\n        region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      }\n\n      if (rotation >= -135 && rotation < -45) {\n        region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      }\n\n      if (rotation >= 45 && rotation < 135) {\n        region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      }\n\n      if (rotation >= 135 && rotation < 180 || rotation <= -135 && rotation <= -180) {\n        region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      }\n\n      if (characterPosition.x < nextPosition.x) {\n        characterPosition.x = Math.min(characterPosition.x + d.x * moveSpeed * delta, nextPosition.x);\n      }\n\n      if (characterPosition.y < nextPosition.y) {\n        characterPosition.y = Math.min(characterPosition.y + d.y * moveSpeed * delta, nextPosition.y);\n      }\n\n      if (characterPosition.x > nextPosition.x) {\n        characterPosition.x = Math.max(characterPosition.x + d.x * moveSpeed * delta, nextPosition.x);\n      }\n\n      if (characterPosition.y > nextPosition.y) {\n        characterPosition.y = Math.max(characterPosition.y + d.y * moveSpeed * delta, nextPosition.y);\n      }\n    } else {\n      frame = 0;\n      setTimeout(() => {\n        region = walkDownAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n      }, 0.2);\n\n      if (count < path.length) {\n        count += 2;\n      } else {\n        count = 0;\n      }\n\n      nextPosition.x = path[count];\n      nextPosition.y = path[count + 1];\n      console.log(rotation);\n      rotation = Math.atan2(nextPosition.y - characterPosition.y, nextPosition.x - characterPosition.x) * 180 / Math.PI;\n    }\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 500, 1000);\n    region.draw(batch, characterPosition.x - 50, characterPosition.y - 20, 100, 100);\n    batch.end();\n    shapeRenderer.begin();\n\n    for (let rect of obstacles) {\n      shapeRenderer.rect(false, rect.x, rect.y, rect.width, rect.height, Color.WHITE);\n    }\n\n    if (path.length >= 4) {\n      for (let i = 2; i <= path.length; i += 2) {\n        shapeRenderer.line(path[i - 2], path[i - 1], path[i], path[i + 1], Color.WHITE);\n      }\n    }\n\n    console.log(Date.now() - lastUpdate);\n    shapeRenderer.end();\n  });\n};\ninit();","map":{"version":3,"names":["createStage","createViewport","createGameLoop","ShapeRenderer","Texture","TextureRegion","PolygonBatch","Animation","PlayMode","ViewportInputHandler","InputEvent","Vector2","Color","Walkable","init","walkable","stage","canvas","getCanvas","viewport","gl","getContext","background","load","mapData","fetch","then","res","json","obstacles","layers","find","l","name","objects","map","rect","y","height","addRect","width","x","characterTexture","regions","splitTexture","walkDownAnimation","slice","walkLeftAnimation","walkRightAnimation","walkUpAnimation","shapeRenderer","batch","camera","getCamera","inputHandler","characterPosition","frame","rotation","vectorResult","d","lastUpdate","Date","now","count","clearColor","nextPosition","path","addEventListener","TouchStart","length","getTouchedWorldCoord","findPath","console","log","Math","atan2","PI","region","getKeyFrame","NORMAL","moveSpeed","delta","normalize","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","end","LOOP","min","max","setTimeout","draw","WHITE","i","line"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createStage,\n  createViewport,\n  createGameLoop,\n  ShapeRenderer,\n  Texture,\n  TextureRegion,\n  PolygonBatch,\n  Animation,\n  PlayMode,\n  ViewportInputHandler,\n  InputEvent,\n  Vector2,\n  Color,\n} from \"gdxts\";\nimport Walkable from \"walkable\";\n\nexport const init = async () => {\n  let walkable = new Walkable(500, 1000);\n\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./pokemon-bg.jpg\");\n\n  const mapData = await fetch(\"./test.tmj\").then((res) => res.json());\n  const obstacles = mapData.layers\n    .find((l: any) => l.name === \"obstacles\")\n    .objects.map((rect: any) => ({\n      ...rect,\n      y: 1000 - rect.y - rect.height,\n    }));\n\n  for (let rect of obstacles) {\n    walkable.addRect(rect.width, rect.height, rect.x, rect.y);\n  }\n\n  // eslint-disable-next-line\n  // const texture = await Texture.load(gl, \"./charizard.png\");\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  // const apple = await Texture.load(gl, \"./apple.png\");\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n\n  const walkDownAnimation = new Animation(regions.slice(0, 4), 0.2);\n  const walkLeftAnimation = new Animation(regions.slice(4, 8), 0.2);\n  const walkRightAnimation = new Animation(regions.slice(8, 12), 0.2);\n  const walkUpAnimation = new Animation(regions.slice(12, 16), 0.2);\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  let characterPosition = new Vector2(250, 500);\n\n  let frame = 0;\n  let rotation = 0;\n  let vectorResult = new Vector2();\n  let d = new Vector2();\n  let lastUpdate = Date.now();\n  let count = 0;\n\n  gl.clearColor(0, 0, 0, 1);\n  let nextPosition = new Vector2(250, 500);\n  const path: number[] = [];\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    path.length = 0;\n    count = 0;\n    nextPosition = inputHandler.getTouchedWorldCoord();\n    walkable.findPath(\n      characterPosition.x,\n      characterPosition.y,\n      nextPosition.x,\n      nextPosition.y,\n      10,\n      path\n    );\n    console.log(path);\n\n    nextPosition.x = path[0];\n    nextPosition.y = path[1];\n    rotation =\n      (Math.atan2(\n        nextPosition.y - characterPosition.y,\n        nextPosition.x - characterPosition.x\n      ) *\n        180) /\n      Math.PI;\n  });\n  var region = walkDownAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n  const moveSpeed = 150;\n\n  createGameLoop((delta: number) => {\n    vectorResult.x = nextPosition.x - characterPosition.x;\n    vectorResult.y = nextPosition.y - characterPosition.y;\n    d = vectorResult.normalize();\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n\n    if (\n      characterPosition.x !== nextPosition.x ||\n      characterPosition.y !== nextPosition.y\n    ) {\n      frame += delta;\n      if (rotation >= -45 && rotation < 45) {\n        region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      }\n      if (rotation >= -135 && rotation < -45) {\n        region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      }\n      if (rotation >= 45 && rotation < 135) {\n        region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      }\n      if (\n        (rotation >= 135 && rotation < 180) ||\n        (rotation <= -135 && rotation <= -180)\n      ) {\n        region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      }\n\n      if (characterPosition.x < nextPosition.x) {\n        characterPosition.x = Math.min(\n          characterPosition.x + d.x * moveSpeed * delta,\n          nextPosition.x\n        );\n      }\n      if (characterPosition.y < nextPosition.y) {\n        characterPosition.y = Math.min(\n          characterPosition.y + d.y * moveSpeed * delta,\n          nextPosition.y\n        );\n      }\n      if (characterPosition.x > nextPosition.x) {\n        characterPosition.x = Math.max(\n          characterPosition.x + d.x * moveSpeed * delta,\n          nextPosition.x\n        );\n      }\n      if (characterPosition.y > nextPosition.y) {\n        characterPosition.y = Math.max(\n          characterPosition.y + d.y * moveSpeed * delta,\n          nextPosition.y\n        );\n      }\n    } else {\n      frame = 0;\n      setTimeout(() => {\n        region = walkDownAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n      }, 0.2);\n      if (count < path.length) {\n        count += 2;\n      } else {\n        count = 0;\n      }\n      nextPosition.x = path[count];\n      nextPosition.y = path[count + 1];\n      console.log(rotation);\n      rotation =\n        (Math.atan2(\n          nextPosition.y - characterPosition.y,\n          nextPosition.x - characterPosition.x\n        ) *\n          180) /\n        Math.PI;\n    }\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 500, 1000);\n    region.draw(\n      batch,\n      characterPosition.x - 50,\n      characterPosition.y - 20,\n      100,\n      100\n    );\n    batch.end();\n\n    shapeRenderer.begin();\n    for (let rect of obstacles) {\n      shapeRenderer.rect(\n        false,\n        rect.x,\n        rect.y,\n        rect.width,\n        rect.height,\n        Color.WHITE\n      );\n    }\n\n    if (path.length >= 4) {\n      for (let i = 2; i <= path.length; i += 2) {\n        shapeRenderer.line(\n          path[i - 2],\n          path[i - 1],\n          path[i],\n          path[i + 1],\n          Color.WHITE\n        );\n      }\n    }\n    console.log(Date.now() - lastUpdate);\n    shapeRenderer.end();\n  });\n};\n\ninit();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}