{"ast":null,"code":"import { createGameLoop, createStage, createViewport, PolygonBatch, ShapeRenderer, Texture, Vector2, Color } from \"gdxts\";\nexport const init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 1500, 2000);\n  const gl = viewport.getContext();\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera(); // const background = await Texture.load(gl, \"./TetrisBg.png\");\n  // const border = await Texture.load(gl, \"./border.png\");\n\n  const bgRight = await Texture.load(gl, \"./bg1.png\");\n  const block = await Texture.load(gl, \"./borderBlock.png\");\n  const mainBlock = await Texture.load(gl, \"./PurpleBlock.png\");\n  const black = new Color(0, 0, 0, 1); //config game\n\n  const ROWGAME = 24;\n  const COLGAME = 12;\n  let map = [];\n  let blockSize = new Vector2(83, 83);\n  let delayTime = 0; //I\n\n  const iBlock = [[2], [1], [1], [1]]; //L\n\n  const lBlock = [[0, 0, 2], [1, 1, 1]]; //L-reverse\n\n  const lReverseBlock = [[2, 0, 0], [1, 1, 1]]; // Square\n\n  const sBlock = [[2, 1], [1, 1]]; // Z\n\n  const zBlock = [[0, 2, 1], [1, 1, 0]]; // Z-reverse\n\n  const zReverseBlock = [[2, 1, 0], [0, 1, 1]]; // T\n\n  const tBlock = [[0, 2, 0], [1, 1, 1]];\n  const blocks = [iBlock, lReverseBlock, lBlock, sBlock, zBlock, zReverseBlock, tBlock];\n  let currentBlock = blocks[getRandomInt(0, 6)]; //\n\n  let nextBlock = blocks[getRandomInt(0, 6)];\n\n  function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  } // draw the map\n\n\n  for (let row = 0; row < ROWGAME; row++) {\n    map[row] = [];\n\n    for (let col = 0; col < COLGAME; col++) {\n      if (row >= 1) {\n        map[row].push(0);\n      } else {\n        map[row].push(1);\n      }\n    }\n\n    for (let col = 0; col < map[row].length; col++) {\n      map[row][0] = 1;\n      map[row][11] = 1;\n    }\n  }\n\n  function blockOnMap() {\n    for (let row = 0; row < currentBlock.length; row++) {\n      for (let col = 0; col < currentBlock[row].length; col++) {\n        map[ROWGAME - 1 - row][COLGAME / 2 - 1 + col] = currentBlock[row][col];\n      }\n    }\n  }\n\n  function drawTetromino() {\n    for (let row = 0; row < map.length; row++) {\n      for (let col = 0; col < map[row].length; col++) {\n        if (map[row][col] !== 0) {\n          batch.draw(1 ? block : mainBlock, col * blockSize.x, row * blockSize.y, 83, 83);\n        } // scan to draw\n\n      }\n    } //\n\n  }\n\n  window.addEventListener(\"keypress\", function (e) {\n    if (e) {}\n  });\n  blockOnMap();\n  createGameLoop(delta => {\n    delayTime += delta;\n\n    if (delayTime >= 0.5) {\n      delayTime = 0;\n\n      for (let row = 1; row < map.length; row++) {\n        for (let col = 1; col < map[row].length - 1; col++) {\n          if (map[row - 1][col] === 0 && map[row][col] !== 0) {\n            console.log(map);\n          }\n        }\n      }\n    }\n\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 1000, 2000, black);\n    shapeRenderer.end(); //draw border\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    drawTetromino();\n    batch.draw(bgRight, 1000, 0, 500, 2000);\n    batch.end();\n  });\n};\ninit(); // init2();","map":{"version":3,"names":["createGameLoop","createStage","createViewport","PolygonBatch","ShapeRenderer","Texture","Vector2","Color","init","stage","canvas","getCanvas","viewport","gl","getContext","shapeRenderer","batch","camera","getCamera","bgRight","load","block","mainBlock","black","ROWGAME","COLGAME","map","blockSize","delayTime","iBlock","lBlock","lReverseBlock","sBlock","zBlock","zReverseBlock","tBlock","blocks","currentBlock","getRandomInt","nextBlock","min","max","Math","floor","random","row","col","push","length","blockOnMap","drawTetromino","draw","x","y","window","addEventListener","e","delta","console","log","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createGameLoop,\n  createStage,\n  createViewport,\n  PolygonBatch,\n  ShapeRenderer,\n  Texture,\n  Vector2,\n  BitmapFont,\n  TextureRegion,\n  Color,\n} from \"gdxts\";\n\nimport { init2 } from \"./index2\";\n\nexport const init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 1500, 2000);\n  const gl = viewport.getContext();\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n\n  // const background = await Texture.load(gl, \"./TetrisBg.png\");\n  // const border = await Texture.load(gl, \"./border.png\");\n  const bgRight = await Texture.load(gl, \"./bg1.png\");\n  const block = await Texture.load(gl, \"./borderBlock.png\");\n  const mainBlock = await Texture.load(gl, \"./PurpleBlock.png\");\n  const black = new Color(0, 0, 0, 1);\n\n  //config game\n  const ROWGAME = 24;\n  const COLGAME = 12;\n  let map: any[] = [];\n  let blockSize = new Vector2(83, 83);\n  let delayTime = 0;\n\n  //I\n  const iBlock = [[2], [1], [1], [1]];\n\n  //L\n  const lBlock = [\n    [0, 0, 2],\n    [1, 1, 1],\n  ];\n\n  //L-reverse\n  const lReverseBlock = [\n    [2, 0, 0],\n    [1, 1, 1],\n  ];\n\n  // Square\n  const sBlock = [\n    [2, 1],\n    [1, 1],\n  ];\n\n  // Z\n  const zBlock = [\n    [0, 2, 1],\n    [1, 1, 0],\n  ];\n\n  // Z-reverse\n  const zReverseBlock = [\n    [2, 1, 0],\n    [0, 1, 1],\n  ];\n\n  // T\n  const tBlock = [\n    [0, 2, 0],\n    [1, 1, 1],\n  ];\n\n  const blocks = [\n    iBlock,\n    lReverseBlock,\n    lBlock,\n    sBlock,\n    zBlock,\n    zReverseBlock,\n    tBlock,\n  ];\n\n  let currentBlock = blocks[getRandomInt(0, 6)]; //\n  let nextBlock = blocks[getRandomInt(0, 6)];\n\n  function getRandomInt(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n  // draw the map\n  for (let row = 0; row < ROWGAME; row++) {\n    map[row] = [];\n    for (let col = 0; col < COLGAME; col++) {\n      if (row >= 1) {\n        map[row].push(0);\n      } else {\n        map[row].push(1);\n      }\n    }\n    for (let col = 0; col < map[row].length; col++) {\n      map[row][0] = 1;\n      map[row][11] = 1;\n    }\n  }\n\n  function blockOnMap() {\n    for (let row = 0; row < currentBlock.length; row++) {\n      for (let col = 0; col < currentBlock[row].length; col++) {\n        map[ROWGAME - 1 - row][COLGAME / 2 - 1 + col] = currentBlock[row][col];\n      }\n    }\n  }\n\n  function drawTetromino() {\n    for (let row = 0; row < map.length; row++) {\n      for (let col = 0; col < map[row].length; col++) {\n        if (map[row][col] !== 0) {\n          batch.draw(\n            1 ? block : mainBlock,\n            col * blockSize.x,\n            row * blockSize.y,\n            83,\n            83\n          );\n        } // scan to draw\n      }\n    } //\n  }\n\n  window.addEventListener(\"keypress\", function (e) {\n    if (e) {\n    }\n  });\n\n  blockOnMap();\n  createGameLoop((delta: number) => {\n    delayTime += delta;\n    if (delayTime >= 0.5) {\n      delayTime = 0;\n      for (let row = 1; row < map.length; row++) {\n        for (let col = 1; col < map[row].length - 1; col++) {\n          if (map[row - 1][col] === 0 && map[row][col] !== 0) {\n            console.log(map);\n          }\n        }\n      }\n    }\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 1000, 2000, black);\n    shapeRenderer.end();\n\n    //draw border\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    drawTetromino();\n    batch.draw(bgRight, 1000, 0, 500, 2000);\n    batch.end();\n  });\n};\n\ninit();\n// init2();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}