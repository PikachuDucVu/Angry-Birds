{"ast":null,"code":"import { AssetManager, createGameLoop, createStage, createViewport, Game, PolygonBatch, ShapeRenderer, ViewportInputHandler } from \"gdxts\";\nimport { Constants } from \"./Constants\";\nimport { createGameScreen } from \"./screen/GameScreen\";\nconst WORLD_WIDTH = 1300;\nconst WORLD_HEIGHT = 500;\nconst METER_TO_WORLD = 100;\nexport const init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, Constants.WORLD_WIDTH, Constants.WORLD_HEIGHT);\n  const gl = viewport.getContext();\n  const camera = viewport.getCamera();\n  const batch = new PolygonBatch(gl);\n  const shapeRenderer = new ShapeRenderer(gl);\n  const inputHandler = new ViewportInputHandler(viewport);\n  camera.setYDown(true);\n  batch.setYDown(true);\n  const assetManager = new AssetManager(gl);\n  await assetManager.loadTexture(\"./background.png\", \"bg\");\n  await assetManager.loadTexture(\"./bird.png\", \"birdAsset\");\n  await assetManager.loadTexture(\"./pigAsset.png\", \"pigAsset\");\n  await assetManager.loadTexture(\"./testAnimation1.png\", \"boxAsset\");\n  await assetManager.loadTexture(\"./slingshot.png\", \"slingShot\");\n  await assetManager.loadTexture(\"./testAnimation1.png\", \"boxTexture\");\n  Game.shared.setScreen(await createGameScreen(assetManager, gl, inputHandler, shapeRenderer, camera, batch));\n  createGameLoop(delta => {\n    Game.shared.update(delta);\n  });\n};\ninit();","map":{"version":3,"names":["AssetManager","createGameLoop","createStage","createViewport","Game","PolygonBatch","ShapeRenderer","ViewportInputHandler","Constants","createGameScreen","WORLD_WIDTH","WORLD_HEIGHT","METER_TO_WORLD","init","stage","canvas","getCanvas","viewport","gl","getContext","camera","getCamera","batch","shapeRenderer","inputHandler","setYDown","assetManager","loadTexture","shared","setScreen","delta","update"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\r\n  AssetManager,\r\n  createGameLoop,\r\n  createStage,\r\n  createViewport,\r\n  Game,\r\n  PolygonBatch,\r\n  ShapeRenderer,\r\n  ViewportInputHandler,\r\n} from \"gdxts\";\r\nimport { Constants } from \"./Constants\";\r\n\r\nimport { createGameScreen } from \"./screen/GameScreen\";\r\nconst WORLD_WIDTH = 1300;\r\nconst WORLD_HEIGHT = 500;\r\nconst METER_TO_WORLD = 100;\r\n\r\nexport const init = async () => {\r\n  const stage = createStage();\r\n  const canvas = stage.getCanvas();\r\n  const viewport = createViewport(\r\n    canvas,\r\n    Constants.WORLD_WIDTH,\r\n    Constants.WORLD_HEIGHT\r\n  );\r\n  const gl = viewport.getContext();\r\n  const camera = viewport.getCamera();\r\n  const batch = new PolygonBatch(gl);\r\n  const shapeRenderer = new ShapeRenderer(gl);\r\n  const inputHandler = new ViewportInputHandler(viewport);\r\n  camera.setYDown(true);\r\n  batch.setYDown(true);\r\n\r\n  const assetManager = new AssetManager(gl);\r\n  await assetManager.loadTexture(\"./background.png\", \"bg\");\r\n  await assetManager.loadTexture(\"./bird.png\", \"birdAsset\");\r\n  await assetManager.loadTexture(\"./pigAsset.png\", \"pigAsset\");\r\n  await assetManager.loadTexture(\"./testAnimation1.png\", \"boxAsset\");\r\n  await assetManager.loadTexture(\"./slingshot.png\", \"slingShot\");\r\n  await assetManager.loadTexture(\"./testAnimation1.png\", \"boxTexture\");\r\n\r\n  Game.shared.setScreen(\r\n    await createGameScreen(\r\n      assetManager,\r\n      gl,\r\n      inputHandler,\r\n      shapeRenderer,\r\n      camera,\r\n      batch\r\n    )\r\n  );\r\n\r\n  createGameLoop((delta: number) => {\r\n    Game.shared.update(delta);\r\n  });\r\n};\r\ninit();\r\n"],"mappings":"AAAA,SACEA,YADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,cAJF,EAKEC,IALF,EAMEC,YANF,EAOEC,aAPF,EAQEC,oBARF,QASO,OATP;AAUA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,MAAMC,WAAW,GAAG,IAApB;AACA,MAAMC,YAAY,GAAG,GAArB;AACA,MAAMC,cAAc,GAAG,GAAvB;AAEA,OAAO,MAAMC,IAAI,GAAG,YAAY;EAC9B,MAAMC,KAAK,GAAGZ,WAAW,EAAzB;EACA,MAAMa,MAAM,GAAGD,KAAK,CAACE,SAAN,EAAf;EACA,MAAMC,QAAQ,GAAGd,cAAc,CAC7BY,MAD6B,EAE7BP,SAAS,CAACE,WAFmB,EAG7BF,SAAS,CAACG,YAHmB,CAA/B;EAKA,MAAMO,EAAE,GAAGD,QAAQ,CAACE,UAAT,EAAX;EACA,MAAMC,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;EACA,MAAMC,KAAK,GAAG,IAAIjB,YAAJ,CAAiBa,EAAjB,CAAd;EACA,MAAMK,aAAa,GAAG,IAAIjB,aAAJ,CAAkBY,EAAlB,CAAtB;EACA,MAAMM,YAAY,GAAG,IAAIjB,oBAAJ,CAAyBU,QAAzB,CAArB;EACAG,MAAM,CAACK,QAAP,CAAgB,IAAhB;EACAH,KAAK,CAACG,QAAN,CAAe,IAAf;EAEA,MAAMC,YAAY,GAAG,IAAI1B,YAAJ,CAAiBkB,EAAjB,CAArB;EACA,MAAMQ,YAAY,CAACC,WAAb,CAAyB,kBAAzB,EAA6C,IAA7C,CAAN;EACA,MAAMD,YAAY,CAACC,WAAb,CAAyB,YAAzB,EAAuC,WAAvC,CAAN;EACA,MAAMD,YAAY,CAACC,WAAb,CAAyB,gBAAzB,EAA2C,UAA3C,CAAN;EACA,MAAMD,YAAY,CAACC,WAAb,CAAyB,sBAAzB,EAAiD,UAAjD,CAAN;EACA,MAAMD,YAAY,CAACC,WAAb,CAAyB,iBAAzB,EAA4C,WAA5C,CAAN;EACA,MAAMD,YAAY,CAACC,WAAb,CAAyB,sBAAzB,EAAiD,YAAjD,CAAN;EAEAvB,IAAI,CAACwB,MAAL,CAAYC,SAAZ,CACE,MAAMpB,gBAAgB,CACpBiB,YADoB,EAEpBR,EAFoB,EAGpBM,YAHoB,EAIpBD,aAJoB,EAKpBH,MALoB,EAMpBE,KANoB,CADxB;EAWArB,cAAc,CAAE6B,KAAD,IAAmB;IAChC1B,IAAI,CAACwB,MAAL,CAAYG,MAAZ,CAAmBD,KAAnB;EACD,CAFa,CAAd;AAGD,CAtCM;AAuCPjB,IAAI"},"metadata":{},"sourceType":"module"}