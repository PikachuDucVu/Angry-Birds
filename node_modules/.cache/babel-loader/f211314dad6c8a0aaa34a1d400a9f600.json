{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createViewport = void 0;\n\nconst Camera_1 = require(\"./Camera\");\n\nconst Utils_1 = require(\"./Utils\");\n\nconst createViewport = (canvas, width, height, options) => {\n  const defaultOptions = {\n    autoUpdate: true,\n    pixelRatio: undefined,\n    crop: true\n  };\n  options = Object.assign(Object.assign({}, defaultOptions), options);\n  let contextOption;\n\n  if (options.disablePremultipliedAlpha) {\n    contextOption = {\n      premultipliedAlpha: false\n    };\n  }\n\n  contextOption = Object.assign(Object.assign({}, contextOption), options.contextOption);\n  const gl = canvas.getContext('webgl2', contextOption);\n  const additionalCameras = [];\n  let {\n    autoUpdate,\n    pixelRatio,\n    crop\n  } = options;\n  pixelRatio = pixelRatio || window.devicePixelRatio || 1;\n  const viewportInfo = {\n    pixelRatio,\n    x: 0,\n    y: 0,\n    width,\n    height,\n    worldWidth: width,\n    worldHeight: height\n  };\n  let resizeHandler;\n  const [vWidth, vHeight] = (0, Utils_1.resizeCanvas)(canvas, pixelRatio);\n  const camera = new Camera_1.OrthoCamera(width, height, vWidth, vHeight);\n\n  if (autoUpdate) {\n    resizeHandler = e => {\n      viewportObject.update();\n    };\n\n    window.addEventListener('resize', resizeHandler);\n  }\n\n  const viewportObject = {\n    getViewportInfo() {\n      return viewportInfo;\n    },\n\n    getCamera() {\n      return camera;\n    },\n\n    addCamera(camera) {\n      additionalCameras.push(camera);\n    },\n\n    getContext() {\n      return gl;\n    },\n\n    getCanvas() {\n      return canvas;\n    },\n\n    update() {\n      let [vWidth, vHeight] = (0, Utils_1.resizeCanvas)(canvas, pixelRatio);\n      const ratio = width / height;\n      const vRatio = vWidth / vHeight;\n\n      if (crop) {\n        let displayWidth, displayHeight;\n\n        if (ratio < vRatio) {\n          displayHeight = vHeight;\n          displayWidth = vHeight * ratio;\n        } else {\n          displayWidth = vWidth;\n          displayHeight = vWidth / ratio;\n        }\n\n        const displayX = (vWidth - displayWidth) / 2;\n        const displayY = (vHeight - displayHeight) / 2;\n        viewportInfo.x = displayX;\n        viewportInfo.y = displayY;\n        viewportInfo.width = displayWidth;\n        viewportInfo.height = displayHeight;\n        gl.viewport(displayX, displayY, displayWidth, displayHeight);\n        camera.setPosition(width / 2, height / 2);\n        camera.resize(width, height, displayWidth, displayHeight);\n\n        for (let camera of additionalCameras) {\n          camera.setPosition(width / 2, height / 2);\n          camera.resize(width, height, displayWidth, displayHeight);\n        }\n      } else {\n        viewportInfo.x = 0;\n        viewportInfo.y = 0;\n        viewportInfo.width = vWidth;\n        viewportInfo.height = vHeight;\n        gl.viewport(0, 0, vWidth, vHeight);\n        let cameraWidth, cameraHeight, cameraX, cameraY;\n\n        if (ratio < vRatio) {\n          cameraHeight = height;\n          cameraWidth = cameraHeight * vRatio;\n          cameraX = -(cameraWidth - width) / 2;\n          cameraY = 0;\n        } else {\n          cameraWidth = width;\n          cameraHeight = cameraWidth / vRatio;\n          cameraX = 0;\n          cameraY = -(cameraHeight - height) / 2;\n        }\n\n        camera.setPosition(cameraX + cameraWidth / 2, cameraY + cameraHeight / 2);\n        camera.resize(cameraWidth, cameraHeight, vWidth, vHeight);\n\n        for (let camera of additionalCameras) {\n          camera.setPosition(cameraX + cameraWidth / 2, cameraY + cameraHeight / 2);\n          camera.resize(cameraWidth, cameraHeight, vWidth, vHeight);\n        }\n      }\n    },\n\n    cleanUp() {\n      if (resizeHandler) {\n        window.removeEventListener('resize', resizeHandler);\n      }\n    }\n\n  };\n  autoUpdate && viewportObject.update();\n  return viewportObject;\n};\n\nexports.createViewport = createViewport;","map":{"version":3,"names":["Object","defineProperty","exports","value","createViewport","Camera_1","require","Utils_1","canvas","width","height","options","defaultOptions","autoUpdate","pixelRatio","undefined","crop","assign","contextOption","disablePremultipliedAlpha","premultipliedAlpha","gl","getContext","additionalCameras","window","devicePixelRatio","viewportInfo","x","y","worldWidth","worldHeight","resizeHandler","vWidth","vHeight","resizeCanvas","camera","OrthoCamera","e","viewportObject","update","addEventListener","getViewportInfo","getCamera","addCamera","push","getCanvas","ratio","vRatio","displayWidth","displayHeight","displayX","displayY","viewport","setPosition","resize","cameraWidth","cameraHeight","cameraX","cameraY","cleanUp","removeEventListener"],"sources":["D:/projects/test-game/node_modules/gdxts/dist/lib/Viewport.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createViewport = void 0;\nconst Camera_1 = require(\"./Camera\");\nconst Utils_1 = require(\"./Utils\");\nconst createViewport = (canvas, width, height, options) => {\n    const defaultOptions = {\n        autoUpdate: true,\n        pixelRatio: undefined,\n        crop: true\n    };\n    options = Object.assign(Object.assign({}, defaultOptions), options);\n    let contextOption;\n    if (options.disablePremultipliedAlpha) {\n        contextOption = {\n            premultipliedAlpha: false\n        };\n    }\n    contextOption = Object.assign(Object.assign({}, contextOption), options.contextOption);\n    const gl = canvas.getContext('webgl2', contextOption);\n    const additionalCameras = [];\n    let { autoUpdate, pixelRatio, crop } = options;\n    pixelRatio = pixelRatio || window.devicePixelRatio || 1;\n    const viewportInfo = {\n        pixelRatio,\n        x: 0,\n        y: 0,\n        width,\n        height,\n        worldWidth: width,\n        worldHeight: height\n    };\n    let resizeHandler;\n    const [vWidth, vHeight] = (0, Utils_1.resizeCanvas)(canvas, pixelRatio);\n    const camera = new Camera_1.OrthoCamera(width, height, vWidth, vHeight);\n    if (autoUpdate) {\n        resizeHandler = e => {\n            viewportObject.update();\n        };\n        window.addEventListener('resize', resizeHandler);\n    }\n    const viewportObject = {\n        getViewportInfo() {\n            return viewportInfo;\n        },\n        getCamera() {\n            return camera;\n        },\n        addCamera(camera) {\n            additionalCameras.push(camera);\n        },\n        getContext() {\n            return gl;\n        },\n        getCanvas() {\n            return canvas;\n        },\n        update() {\n            let [vWidth, vHeight] = (0, Utils_1.resizeCanvas)(canvas, pixelRatio);\n            const ratio = width / height;\n            const vRatio = vWidth / vHeight;\n            if (crop) {\n                let displayWidth, displayHeight;\n                if (ratio < vRatio) {\n                    displayHeight = vHeight;\n                    displayWidth = vHeight * ratio;\n                }\n                else {\n                    displayWidth = vWidth;\n                    displayHeight = vWidth / ratio;\n                }\n                const displayX = (vWidth - displayWidth) / 2;\n                const displayY = (vHeight - displayHeight) / 2;\n                viewportInfo.x = displayX;\n                viewportInfo.y = displayY;\n                viewportInfo.width = displayWidth;\n                viewportInfo.height = displayHeight;\n                gl.viewport(displayX, displayY, displayWidth, displayHeight);\n                camera.setPosition(width / 2, height / 2);\n                camera.resize(width, height, displayWidth, displayHeight);\n                for (let camera of additionalCameras) {\n                    camera.setPosition(width / 2, height / 2);\n                    camera.resize(width, height, displayWidth, displayHeight);\n                }\n            }\n            else {\n                viewportInfo.x = 0;\n                viewportInfo.y = 0;\n                viewportInfo.width = vWidth;\n                viewportInfo.height = vHeight;\n                gl.viewport(0, 0, vWidth, vHeight);\n                let cameraWidth, cameraHeight, cameraX, cameraY;\n                if (ratio < vRatio) {\n                    cameraHeight = height;\n                    cameraWidth = cameraHeight * vRatio;\n                    cameraX = -(cameraWidth - width) / 2;\n                    cameraY = 0;\n                }\n                else {\n                    cameraWidth = width;\n                    cameraHeight = cameraWidth / vRatio;\n                    cameraX = 0;\n                    cameraY = -(cameraHeight - height) / 2;\n                }\n                camera.setPosition(cameraX + cameraWidth / 2, cameraY + cameraHeight / 2);\n                camera.resize(cameraWidth, cameraHeight, vWidth, vHeight);\n                for (let camera of additionalCameras) {\n                    camera.setPosition(cameraX + cameraWidth / 2, cameraY + cameraHeight / 2);\n                    camera.resize(cameraWidth, cameraHeight, vWidth, vHeight);\n                }\n            }\n        },\n        cleanUp() {\n            if (resizeHandler) {\n                window.removeEventListener('resize', resizeHandler);\n            }\n        }\n    };\n    autoUpdate && viewportObject.update();\n    return viewportObject;\n};\nexports.createViewport = createViewport;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyB,KAAK,CAA9B;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMF,cAAc,GAAG,CAACI,MAAD,EAASC,KAAT,EAAgBC,MAAhB,EAAwBC,OAAxB,KAAoC;EACvD,MAAMC,cAAc,GAAG;IACnBC,UAAU,EAAE,IADO;IAEnBC,UAAU,EAAEC,SAFO;IAGnBC,IAAI,EAAE;EAHa,CAAvB;EAKAL,OAAO,GAAGX,MAAM,CAACiB,MAAP,CAAcjB,MAAM,CAACiB,MAAP,CAAc,EAAd,EAAkBL,cAAlB,CAAd,EAAiDD,OAAjD,CAAV;EACA,IAAIO,aAAJ;;EACA,IAAIP,OAAO,CAACQ,yBAAZ,EAAuC;IACnCD,aAAa,GAAG;MACZE,kBAAkB,EAAE;IADR,CAAhB;EAGH;;EACDF,aAAa,GAAGlB,MAAM,CAACiB,MAAP,CAAcjB,MAAM,CAACiB,MAAP,CAAc,EAAd,EAAkBC,aAAlB,CAAd,EAAgDP,OAAO,CAACO,aAAxD,CAAhB;EACA,MAAMG,EAAE,GAAGb,MAAM,CAACc,UAAP,CAAkB,QAAlB,EAA4BJ,aAA5B,CAAX;EACA,MAAMK,iBAAiB,GAAG,EAA1B;EACA,IAAI;IAAEV,UAAF;IAAcC,UAAd;IAA0BE;EAA1B,IAAmCL,OAAvC;EACAG,UAAU,GAAGA,UAAU,IAAIU,MAAM,CAACC,gBAArB,IAAyC,CAAtD;EACA,MAAMC,YAAY,GAAG;IACjBZ,UADiB;IAEjBa,CAAC,EAAE,CAFc;IAGjBC,CAAC,EAAE,CAHc;IAIjBnB,KAJiB;IAKjBC,MALiB;IAMjBmB,UAAU,EAAEpB,KANK;IAOjBqB,WAAW,EAAEpB;EAPI,CAArB;EASA,IAAIqB,aAAJ;EACA,MAAM,CAACC,MAAD,EAASC,OAAT,IAAoB,CAAC,GAAG1B,OAAO,CAAC2B,YAAZ,EAA0B1B,MAA1B,EAAkCM,UAAlC,CAA1B;EACA,MAAMqB,MAAM,GAAG,IAAI9B,QAAQ,CAAC+B,WAAb,CAAyB3B,KAAzB,EAAgCC,MAAhC,EAAwCsB,MAAxC,EAAgDC,OAAhD,CAAf;;EACA,IAAIpB,UAAJ,EAAgB;IACZkB,aAAa,GAAGM,CAAC,IAAI;MACjBC,cAAc,CAACC,MAAf;IACH,CAFD;;IAGAf,MAAM,CAACgB,gBAAP,CAAwB,QAAxB,EAAkCT,aAAlC;EACH;;EACD,MAAMO,cAAc,GAAG;IACnBG,eAAe,GAAG;MACd,OAAOf,YAAP;IACH,CAHkB;;IAInBgB,SAAS,GAAG;MACR,OAAOP,MAAP;IACH,CANkB;;IAOnBQ,SAAS,CAACR,MAAD,EAAS;MACdZ,iBAAiB,CAACqB,IAAlB,CAAuBT,MAAvB;IACH,CATkB;;IAUnBb,UAAU,GAAG;MACT,OAAOD,EAAP;IACH,CAZkB;;IAanBwB,SAAS,GAAG;MACR,OAAOrC,MAAP;IACH,CAfkB;;IAgBnB+B,MAAM,GAAG;MACL,IAAI,CAACP,MAAD,EAASC,OAAT,IAAoB,CAAC,GAAG1B,OAAO,CAAC2B,YAAZ,EAA0B1B,MAA1B,EAAkCM,UAAlC,CAAxB;MACA,MAAMgC,KAAK,GAAGrC,KAAK,GAAGC,MAAtB;MACA,MAAMqC,MAAM,GAAGf,MAAM,GAAGC,OAAxB;;MACA,IAAIjB,IAAJ,EAAU;QACN,IAAIgC,YAAJ,EAAkBC,aAAlB;;QACA,IAAIH,KAAK,GAAGC,MAAZ,EAAoB;UAChBE,aAAa,GAAGhB,OAAhB;UACAe,YAAY,GAAGf,OAAO,GAAGa,KAAzB;QACH,CAHD,MAIK;UACDE,YAAY,GAAGhB,MAAf;UACAiB,aAAa,GAAGjB,MAAM,GAAGc,KAAzB;QACH;;QACD,MAAMI,QAAQ,GAAG,CAAClB,MAAM,GAAGgB,YAAV,IAA0B,CAA3C;QACA,MAAMG,QAAQ,GAAG,CAAClB,OAAO,GAAGgB,aAAX,IAA4B,CAA7C;QACAvB,YAAY,CAACC,CAAb,GAAiBuB,QAAjB;QACAxB,YAAY,CAACE,CAAb,GAAiBuB,QAAjB;QACAzB,YAAY,CAACjB,KAAb,GAAqBuC,YAArB;QACAtB,YAAY,CAAChB,MAAb,GAAsBuC,aAAtB;QACA5B,EAAE,CAAC+B,QAAH,CAAYF,QAAZ,EAAsBC,QAAtB,EAAgCH,YAAhC,EAA8CC,aAA9C;QACAd,MAAM,CAACkB,WAAP,CAAmB5C,KAAK,GAAG,CAA3B,EAA8BC,MAAM,GAAG,CAAvC;QACAyB,MAAM,CAACmB,MAAP,CAAc7C,KAAd,EAAqBC,MAArB,EAA6BsC,YAA7B,EAA2CC,aAA3C;;QACA,KAAK,IAAId,MAAT,IAAmBZ,iBAAnB,EAAsC;UAClCY,MAAM,CAACkB,WAAP,CAAmB5C,KAAK,GAAG,CAA3B,EAA8BC,MAAM,GAAG,CAAvC;UACAyB,MAAM,CAACmB,MAAP,CAAc7C,KAAd,EAAqBC,MAArB,EAA6BsC,YAA7B,EAA2CC,aAA3C;QACH;MACJ,CAvBD,MAwBK;QACDvB,YAAY,CAACC,CAAb,GAAiB,CAAjB;QACAD,YAAY,CAACE,CAAb,GAAiB,CAAjB;QACAF,YAAY,CAACjB,KAAb,GAAqBuB,MAArB;QACAN,YAAY,CAAChB,MAAb,GAAsBuB,OAAtB;QACAZ,EAAE,CAAC+B,QAAH,CAAY,CAAZ,EAAe,CAAf,EAAkBpB,MAAlB,EAA0BC,OAA1B;QACA,IAAIsB,WAAJ,EAAiBC,YAAjB,EAA+BC,OAA/B,EAAwCC,OAAxC;;QACA,IAAIZ,KAAK,GAAGC,MAAZ,EAAoB;UAChBS,YAAY,GAAG9C,MAAf;UACA6C,WAAW,GAAGC,YAAY,GAAGT,MAA7B;UACAU,OAAO,GAAG,EAAEF,WAAW,GAAG9C,KAAhB,IAAyB,CAAnC;UACAiD,OAAO,GAAG,CAAV;QACH,CALD,MAMK;UACDH,WAAW,GAAG9C,KAAd;UACA+C,YAAY,GAAGD,WAAW,GAAGR,MAA7B;UACAU,OAAO,GAAG,CAAV;UACAC,OAAO,GAAG,EAAEF,YAAY,GAAG9C,MAAjB,IAA2B,CAArC;QACH;;QACDyB,MAAM,CAACkB,WAAP,CAAmBI,OAAO,GAAGF,WAAW,GAAG,CAA3C,EAA8CG,OAAO,GAAGF,YAAY,GAAG,CAAvE;QACArB,MAAM,CAACmB,MAAP,CAAcC,WAAd,EAA2BC,YAA3B,EAAyCxB,MAAzC,EAAiDC,OAAjD;;QACA,KAAK,IAAIE,MAAT,IAAmBZ,iBAAnB,EAAsC;UAClCY,MAAM,CAACkB,WAAP,CAAmBI,OAAO,GAAGF,WAAW,GAAG,CAA3C,EAA8CG,OAAO,GAAGF,YAAY,GAAG,CAAvE;UACArB,MAAM,CAACmB,MAAP,CAAcC,WAAd,EAA2BC,YAA3B,EAAyCxB,MAAzC,EAAiDC,OAAjD;QACH;MACJ;IACJ,CAtEkB;;IAuEnB0B,OAAO,GAAG;MACN,IAAI5B,aAAJ,EAAmB;QACfP,MAAM,CAACoC,mBAAP,CAA2B,QAA3B,EAAqC7B,aAArC;MACH;IACJ;;EA3EkB,CAAvB;EA6EAlB,UAAU,IAAIyB,cAAc,CAACC,MAAf,EAAd;EACA,OAAOD,cAAP;AACH,CAnHD;;AAoHApC,OAAO,CAACE,cAAR,GAAyBA,cAAzB"},"metadata":{},"sourceType":"script"}