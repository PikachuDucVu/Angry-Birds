{"ast":null,"code":"import _regeneratorRuntime from\"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _createForOfIteratorHelper from\"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _asyncToGenerator from\"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{b2BodyDef,b2BodyType,b2CircleShape,b2ContactListener,b2FixtureDef,b2PolygonShape,b2World}from\"box2d.ts\";import{Color,createGameLoop,createStage,createViewport,InputEvent,PolygonBatch,ShapeRenderer,Texture,Vector2,ViewportInputHandler}from\"gdxts\";var WORLD_WIDTH=1000;var WORLD_HEIGHT=500;var createWall=function createWall(world,x,y,width,height){var bodyDef=new b2BodyDef();bodyDef.type=b2BodyType.b2_staticBody;bodyDef.position.Set(x+width/2,y+height/2);var body=world.CreateBody(bodyDef);var shape=new b2PolygonShape();shape.SetAsBox(width/2,height/2);body.CreateFixture(shape);};var createBall=function createBall(world,x,y,radius){var bodyDef=new b2BodyDef();bodyDef.type=b2BodyType.b2_staticBody;bodyDef.position.Set(x+radius/2,y+radius/2);var circle=new b2CircleShape();circle.m_radius=radius;var fixtureDef=new b2FixtureDef();fixtureDef.shape=circle;fixtureDef.density=0.9;fixtureDef.restitution=0.15;// bounce ball\nfixtureDef.friction=0.7;var body=world.CreateBody(bodyDef);body.CreateFixture(fixtureDef);// body.CreateFixture(shape);\nreturn body;};var createBox=function createBox(world,x,y,width,height){var bodyDef=new b2BodyDef();bodyDef.type=b2BodyType.b2_dynamicBody;bodyDef.position.Set(x+width/2,y+height/2);var body=world.CreateBody(bodyDef);var shape=new b2PolygonShape();shape.SetAsBox(width*0.5,height*0.5);body.SetAwake(false);body.CreateFixture(shape);return body;};var WALL_COLOR=new Color(0.5,0.5,0.5,1);var METER_TO_WORLD=100;export var init=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var stage,canvas,viewport,gl,camera,batch,pig,bird,background,mapData,wallData,shapeRenderer,listener,world,_iterator,_step,wall,spaceOfEachBoxes,BOX_SIZE,boxes,i,BALL_RADIUS,ball,originPosition,slingPos,inputHandler;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:stage=createStage();canvas=stage.getCanvas();viewport=createViewport(canvas,WORLD_WIDTH,WORLD_HEIGHT);gl=viewport.getContext();camera=viewport.getCamera();batch=new PolygonBatch(gl);camera.setYDown(true);batch.setYDown(true);_context.next=10;return Texture.load(gl,\"./pig.png\");case 10:pig=_context.sent;_context.next=13;return Texture.load(gl,\"./bird.png\");case 13:bird=_context.sent;_context.next=16;return Texture.load(gl,\"./background.png\");case 16:background=_context.sent;_context.next=19;return fetch(\"./untitled.tmj\").then(function(res){return res.json();});case 19:mapData=_context.sent;wallData=mapData.layers.find(function(l){return l.name===\"walls\";}).objects;shapeRenderer=new ShapeRenderer(gl);listener=new b2ContactListener();world=new b2World({x:0,y:10});_iterator=_createForOfIteratorHelper(wallData);try{for(_iterator.s();!(_step=_iterator.n()).done;){wall=_step.value;createWall(world,wall.x/METER_TO_WORLD,wall.y/METER_TO_WORLD,wall.width/METER_TO_WORLD,wall.height/METER_TO_WORLD);}}catch(err){_iterator.e(err);}finally{_iterator.f();}spaceOfEachBoxes=0;BOX_SIZE=0.5;boxes=[];for(i=0;i<3;i++){boxes.push(createBox(world,8,spaceOfEachBoxes+=1,BOX_SIZE,BOX_SIZE));}BALL_RADIUS=0.2;ball=createBall(world,2,3.5,BALL_RADIUS);originPosition=new Vector2(ball.GetPosition().x*METER_TO_WORLD,ball.GetPosition().y*METER_TO_WORLD);slingPos=new Vector2(ball.GetPosition().x*METER_TO_WORLD,ball.GetPosition().y*METER_TO_WORLD);inputHandler=new ViewportInputHandler(viewport);inputHandler.addEventListener(InputEvent.TouchMove,function(){if(inputHandler.isTouched()){slingPos=inputHandler.getTouchedWorldCoord();}});inputHandler.addEventListener(InputEvent.TouchEnd,function(){ball.SetType(b2BodyType.b2_dynamicBody);ball.ApplyLinearImpulseToCenter({x:(originPosition.x-slingPos.x)/METER_TO_WORLD,y:(originPosition.y-slingPos.y)/METER_TO_WORLD},true);});gl.clearColor(0,0,0,1);createGameLoop(function(delta){gl.clear(gl.COLOR_BUFFER_BIT);world.Step(delta,8,3);batch.setProjection(camera.combined);shapeRenderer.setProjection(camera.combined);shapeRenderer.begin();shapeRenderer.rect(true,0,0,WORLD_WIDTH,WORLD_HEIGHT,Color.WHITE);var _iterator2=_createForOfIteratorHelper(wallData),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var wall=_step2.value;shapeRenderer.rect(true,wall.x,wall.y,wall.width,wall.height,WALL_COLOR);}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}shapeRenderer.rect(true,2*METER_TO_WORLD,3.5*METER_TO_WORLD,0.25*METER_TO_WORLD,0.7*METER_TO_WORLD,Color.MAGENTA);shapeRenderer.circle(true,ball.GetPosition().x*METER_TO_WORLD,ball.GetPosition().y*METER_TO_WORLD,BALL_RADIUS*METER_TO_WORLD,Color.RED);shapeRenderer.end();batch.begin();batch.draw(background,0,0,WORLD_WIDTH,WORLD_HEIGHT);batch.end();shapeRenderer.begin();shapeRenderer.circle(true,slingPos.x,slingPos.y,0.1*METER_TO_WORLD,Color.BLUE);var _iterator3=_createForOfIteratorHelper(boxes),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){// shapeRenderer.rect(\n//   true,\n//   box.GetPosition().x * METER_TO_WORLD - (BOX_SIZE * METER_TO_WORLD) / 2,\n//   box.GetPosition().y * METER_TO_WORLD - (BOX_SIZE * METER_TO_WORLD) / 2,\n//   BOX_SIZE * METER_TO_WORLD,\n//   BOX_SIZE * METER_TO_WORLD,\n//   Color.GREEN\n// );\n// console.log(box.GetContactList());\nvar box=_step3.value;}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}shapeRenderer.end();batch.begin();var _iterator4=_createForOfIteratorHelper(boxes),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var _box=_step4.value;batch.draw(pig,_box.GetPosition().x*METER_TO_WORLD-BOX_SIZE*METER_TO_WORLD/2,_box.GetPosition().y*METER_TO_WORLD-BOX_SIZE*METER_TO_WORLD/2,BOX_SIZE*METER_TO_WORLD,BOX_SIZE*METER_TO_WORLD);// console.log(box.GetContactList());\n}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}batch.draw(bird,ball.GetPosition().x*METER_TO_WORLD-25,ball.GetPosition().y*METER_TO_WORLD-25,BOX_SIZE*METER_TO_WORLD,BOX_SIZE*METER_TO_WORLD);batch.end();});case 39:case\"end\":return _context.stop();}}},_callee);}));return function init(){return _ref.apply(this,arguments);};}();init();","map":{"version":3,"names":["b2BodyDef","b2BodyType","b2CircleShape","b2ContactListener","b2FixtureDef","b2PolygonShape","b2World","Color","createGameLoop","createStage","createViewport","InputEvent","PolygonBatch","ShapeRenderer","Texture","Vector2","ViewportInputHandler","WORLD_WIDTH","WORLD_HEIGHT","createWall","world","x","y","width","height","bodyDef","type","b2_staticBody","position","Set","body","CreateBody","shape","SetAsBox","CreateFixture","createBall","radius","circle","m_radius","fixtureDef","density","restitution","friction","createBox","b2_dynamicBody","SetAwake","WALL_COLOR","METER_TO_WORLD","init","stage","canvas","getCanvas","viewport","gl","getContext","camera","getCamera","batch","setYDown","load","pig","bird","background","fetch","then","res","json","mapData","wallData","layers","find","l","name","objects","shapeRenderer","listener","wall","spaceOfEachBoxes","BOX_SIZE","boxes","i","push","BALL_RADIUS","ball","originPosition","GetPosition","slingPos","inputHandler","addEventListener","TouchMove","isTouched","getTouchedWorldCoord","TouchEnd","SetType","ApplyLinearImpulseToCenter","clearColor","delta","clear","COLOR_BUFFER_BIT","Step","setProjection","combined","begin","rect","WHITE","MAGENTA","RED","end","draw","BLUE","box"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\r\n  b2Body,\r\n  b2BodyDef,\r\n  b2BodyType,\r\n  b2CircleShape,\r\n  b2ContactListener,\r\n  b2FixtureDef,\r\n  b2PolygonShape,\r\n  b2World,\r\n  b2_pi,\r\n} from \"box2d.ts\";\r\nimport {\r\n  Color,\r\n  createGameLoop,\r\n  createStage,\r\n  createViewport,\r\n  InputEvent,\r\n  PolygonBatch,\r\n  ShapeRenderer,\r\n  Texture,\r\n  Vector2,\r\n  ViewportInputHandler,\r\n} from \"gdxts\";\r\n\r\nconst WORLD_WIDTH = 1000;\r\nconst WORLD_HEIGHT = 500;\r\n\r\nconst createWall = (\r\n  world: b2World,\r\n  x: number,\r\n  y: number,\r\n  width: number,\r\n  height: number\r\n) => {\r\n  const bodyDef = new b2BodyDef();\r\n  bodyDef.type = b2BodyType.b2_staticBody;\r\n  bodyDef.position.Set(x + width / 2, y + height / 2);\r\n  const body = world.CreateBody(bodyDef);\r\n  const shape = new b2PolygonShape();\r\n  shape.SetAsBox(width / 2, height / 2);\r\n  body.CreateFixture(shape);\r\n};\r\n\r\nconst createBall = (\r\n  world: b2World,\r\n  x: number,\r\n  y: number,\r\n  radius: number\r\n): b2Body => {\r\n  const bodyDef = new b2BodyDef();\r\n  bodyDef.type = b2BodyType.b2_staticBody;\r\n  bodyDef.position.Set(x + radius / 2, y + radius / 2);\r\n  const circle = new b2CircleShape();\r\n  circle.m_radius = radius;\r\n  const fixtureDef = new b2FixtureDef();\r\n  fixtureDef.shape = circle;\r\n  fixtureDef.density = 0.9;\r\n  fixtureDef.restitution = 0.15; // bounce ball\r\n  fixtureDef.friction = 0.7;\r\n\r\n  const body = world.CreateBody(bodyDef);\r\n  body.CreateFixture(fixtureDef);\r\n  // body.CreateFixture(shape);\r\n  return body;\r\n};\r\n\r\nconst createBox = (\r\n  world: b2World,\r\n  x: number,\r\n  y: number,\r\n  width: number,\r\n  height: number\r\n): b2Body => {\r\n  const bodyDef = new b2BodyDef();\r\n  bodyDef.type = b2BodyType.b2_dynamicBody;\r\n  bodyDef.position.Set(x + width / 2, y + height / 2);\r\n  const body = world.CreateBody(bodyDef);\r\n  const shape = new b2PolygonShape();\r\n  shape.SetAsBox(width * 0.5, height * 0.5);\r\n  body.SetAwake(false);\r\n  body.CreateFixture(shape);\r\n\r\n  return body;\r\n};\r\n\r\nconst WALL_COLOR = new Color(0.5, 0.5, 0.5, 1);\r\nconst METER_TO_WORLD = 100;\r\n\r\nexport const init = async () => {\r\n  const stage = createStage();\r\n  const canvas = stage.getCanvas();\r\n  const viewport = createViewport(canvas, WORLD_WIDTH, WORLD_HEIGHT);\r\n  const gl = viewport.getContext();\r\n  const camera = viewport.getCamera();\r\n  const batch = new PolygonBatch(gl);\r\n\r\n  camera.setYDown(true);\r\n  batch.setYDown(true);\r\n\r\n  const pig = await Texture.load(gl, \"./pig.png\");\r\n  const bird = await Texture.load(gl, \"./bird.png\");\r\n  const background = await Texture.load(gl, \"./background.png\");\r\n  const mapData = await fetch(\"./untitled.tmj\").then((res) => res.json());\r\n  const wallData = mapData.layers.find((l: any) => l.name === \"walls\").objects;\r\n  const shapeRenderer = new ShapeRenderer(gl);\r\n  const listener = new b2ContactListener();\r\n\r\n  const world = new b2World({\r\n    x: 0,\r\n    y: 10,\r\n  });\r\n\r\n  for (let wall of wallData) {\r\n    createWall(\r\n      world,\r\n      wall.x / METER_TO_WORLD,\r\n      wall.y / METER_TO_WORLD,\r\n      wall.width / METER_TO_WORLD,\r\n      wall.height / METER_TO_WORLD\r\n    );\r\n  }\r\n\r\n  let spaceOfEachBoxes = 0;\r\n  const BOX_SIZE = 0.5;\r\n  const boxes: b2Body[] = [];\r\n  for (let i = 0; i < 3; i++) {\r\n    boxes.push(\r\n      createBox(world, 8, (spaceOfEachBoxes += 1), BOX_SIZE, BOX_SIZE)\r\n    );\r\n  }\r\n\r\n  const BALL_RADIUS = 0.2;\r\n  const ball = createBall(world, 2, 3.5, BALL_RADIUS);\r\n  const originPosition = new Vector2(\r\n    ball.GetPosition().x * METER_TO_WORLD,\r\n    ball.GetPosition().y * METER_TO_WORLD\r\n  );\r\n  let slingPos = new Vector2(\r\n    ball.GetPosition().x * METER_TO_WORLD,\r\n    ball.GetPosition().y * METER_TO_WORLD\r\n  );\r\n\r\n  const inputHandler = new ViewportInputHandler(viewport);\r\n\r\n  inputHandler.addEventListener(InputEvent.TouchMove, () => {\r\n    if (inputHandler.isTouched()) {\r\n      slingPos = inputHandler.getTouchedWorldCoord();\r\n    }\r\n  });\r\n  inputHandler.addEventListener(InputEvent.TouchEnd, () => {\r\n    ball.SetType(b2BodyType.b2_dynamicBody);\r\n    ball.ApplyLinearImpulseToCenter(\r\n      {\r\n        x: (originPosition.x - slingPos.x) / METER_TO_WORLD,\r\n        y: (originPosition.y - slingPos.y) / METER_TO_WORLD,\r\n      },\r\n      true\r\n    );\r\n  });\r\n\r\n  gl.clearColor(0, 0, 0, 1);\r\n  createGameLoop((delta: number) => {\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    world.Step(delta, 8, 3);\r\n    batch.setProjection(camera.combined);\r\n\r\n    shapeRenderer.setProjection(camera.combined);\r\n    shapeRenderer.begin();\r\n    shapeRenderer.rect(true, 0, 0, WORLD_WIDTH, WORLD_HEIGHT, Color.WHITE);\r\n\r\n    for (let wall of wallData) {\r\n      shapeRenderer.rect(\r\n        true,\r\n        wall.x,\r\n        wall.y,\r\n        wall.width,\r\n        wall.height,\r\n        WALL_COLOR\r\n      );\r\n    }\r\n    shapeRenderer.rect(\r\n      true,\r\n      2 * METER_TO_WORLD,\r\n      3.5 * METER_TO_WORLD,\r\n      0.25 * METER_TO_WORLD,\r\n      0.7 * METER_TO_WORLD,\r\n      Color.MAGENTA\r\n    );\r\n    shapeRenderer.circle(\r\n      true,\r\n      ball.GetPosition().x * METER_TO_WORLD,\r\n      ball.GetPosition().y * METER_TO_WORLD,\r\n      BALL_RADIUS * METER_TO_WORLD,\r\n      Color.RED\r\n    );\r\n    shapeRenderer.end();\r\n\r\n    batch.begin();\r\n    batch.draw(background, 0, 0, WORLD_WIDTH, WORLD_HEIGHT);\r\n    batch.end();\r\n\r\n    shapeRenderer.begin();\r\n\r\n    shapeRenderer.circle(\r\n      true,\r\n      slingPos.x,\r\n      slingPos.y,\r\n      0.1 * METER_TO_WORLD,\r\n      Color.BLUE\r\n    );\r\n\r\n    for (let box of boxes) {\r\n      // shapeRenderer.rect(\r\n      //   true,\r\n      //   box.GetPosition().x * METER_TO_WORLD - (BOX_SIZE * METER_TO_WORLD) / 2,\r\n      //   box.GetPosition().y * METER_TO_WORLD - (BOX_SIZE * METER_TO_WORLD) / 2,\r\n      //   BOX_SIZE * METER_TO_WORLD,\r\n      //   BOX_SIZE * METER_TO_WORLD,\r\n      //   Color.GREEN\r\n      // );\r\n      // console.log(box.GetContactList());\r\n    }\r\n    shapeRenderer.end();\r\n\r\n    batch.begin();\r\n    for (let box of boxes) {\r\n      batch.draw(\r\n        pig,\r\n        box.GetPosition().x * METER_TO_WORLD - (BOX_SIZE * METER_TO_WORLD) / 2,\r\n        box.GetPosition().y * METER_TO_WORLD - (BOX_SIZE * METER_TO_WORLD) / 2,\r\n        BOX_SIZE * METER_TO_WORLD,\r\n        BOX_SIZE * METER_TO_WORLD\r\n      );\r\n      // console.log(box.GetContactList());\r\n    }\r\n\r\n    batch.draw(\r\n      bird,\r\n      ball.GetPosition().x * METER_TO_WORLD - 25,\r\n      ball.GetPosition().y * METER_TO_WORLD - 25,\r\n      BOX_SIZE * METER_TO_WORLD,\r\n      BOX_SIZE * METER_TO_WORLD\r\n    );\r\n\r\n    batch.end();\r\n  });\r\n};\r\ninit();\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}