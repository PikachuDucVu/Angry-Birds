{"ast":null,"code":"import { createStage, createViewport, createGameLoop, ShapeRenderer, Texture, PolygonBatch } from \"gdxts\";\n\nconst init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n  const texture = await Texture.load(gl, \"./charizard.png\");\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  let rotation = 0; // const ROTATION_SPEED = Math.PI * 2;\n\n  gl.clearColor(0, 0, 0, 1);\n  createGameLoop(delta => {\n    // rotation += ROTATION_SPEED * delta;\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    let scale = Math.abs(Math.sin(rotation));\n    batch.draw(characterTexture, 10, 10, 200, 200, 100, 100, rotation, scale, scale);\n    batch.end();\n  });\n};\n\ninit();\nexport {};","map":{"version":3,"names":["createStage","createViewport","createGameLoop","ShapeRenderer","Texture","PolygonBatch","init","stage","canvas","getCanvas","viewport","gl","getContext","texture","load","characterTexture","shapeRenderer","batch","camera","getCamera","rotation","clearColor","delta","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end","scale","Math","abs","sin","draw"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createStage,\n  createViewport,\n  createGameLoop,\n  ShapeRenderer,\n  Color,\n  Texture,\n  PolygonBatch,\n} from \"gdxts\";\n\nconst init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n\n  const texture = await Texture.load(gl, \"./charizard.png\");\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n\n  let rotation = 0;\n  // const ROTATION_SPEED = Math.PI * 2;\n  gl.clearColor(0, 0, 0, 1);\n  createGameLoop((delta: number) => {\n    // rotation += ROTATION_SPEED * delta;\n\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    let scale = Math.abs(Math.sin(rotation));\n    batch.draw(\n      characterTexture,\n      10,\n      10,\n      200,\n      200,\n      100,\n      100,\n      rotation,\n      scale,\n      scale\n    );\n    batch.end();\n  });\n};\ninit();\n\nexport {};\n"],"mappings":"AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,aAJF,EAMEC,OANF,EAOEC,YAPF,QAQO,OARP;;AAUA,MAAMC,IAAI,GAAG,YAAY;EACvB,MAAMC,KAAK,GAAGP,WAAW,EAAzB;EACA,MAAMQ,MAAM,GAAGD,KAAK,CAACE,SAAN,EAAf;EAEA,MAAMC,QAAQ,GAAGT,cAAc,CAACO,MAAD,EAAS,GAAT,EAAc,IAAd,CAA/B;EACA,MAAMG,EAAE,GAAGD,QAAQ,CAACE,UAAT,EAAX;EAEA,MAAMC,OAAO,GAAG,MAAMT,OAAO,CAACU,IAAR,CAAaH,EAAb,EAAiB,iBAAjB,CAAtB;EACA,MAAMI,gBAAgB,GAAG,MAAMX,OAAO,CAACU,IAAR,CAAaH,EAAb,EAAiB,mBAAjB,CAA/B;EAEA,MAAMK,aAAa,GAAG,IAAIb,aAAJ,CAAkBQ,EAAlB,CAAtB;EACA,MAAMM,KAAK,GAAG,IAAIZ,YAAJ,CAAiBM,EAAjB,CAAd;EACA,MAAMO,MAAM,GAAGR,QAAQ,CAACS,SAAT,EAAf;EAEA,IAAIC,QAAQ,GAAG,CAAf,CAduB,CAevB;;EACAT,EAAE,CAACU,UAAH,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;EACAnB,cAAc,CAAEoB,KAAD,IAAmB;IAChC;IAEAX,EAAE,CAACY,KAAH,CAASZ,EAAE,CAACa,gBAAZ;IACAR,aAAa,CAACS,aAAd,CAA4BP,MAAM,CAACQ,cAAP,CAAsBC,MAAlD;IACAX,aAAa,CAACY,KAAd;IACAZ,aAAa,CAACa,IAAd,CAAmB,IAAnB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,GAA/B,EAAoC,IAApC;IACAb,aAAa,CAACc,GAAd;IAEAb,KAAK,CAACQ,aAAN,CAAoBP,MAAM,CAACQ,cAAP,CAAsBC,MAA1C;IACAV,KAAK,CAACW,KAAN;IACA,IAAIG,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASd,QAAT,CAAT,CAAZ;IACAH,KAAK,CAACkB,IAAN,CACEpB,gBADF,EAEE,EAFF,EAGE,EAHF,EAIE,GAJF,EAKE,GALF,EAME,GANF,EAOE,GAPF,EAQEK,QARF,EASEW,KATF,EAUEA,KAVF;IAYAd,KAAK,CAACa,GAAN;EACD,CAzBa,CAAd;AA0BD,CA3CD;;AA4CAxB,IAAI;AAEJ"},"metadata":{},"sourceType":"module"}