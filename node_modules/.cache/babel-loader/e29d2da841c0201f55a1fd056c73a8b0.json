{"ast":null,"code":"import { createStage, createViewport, createGameLoop, ShapeRenderer, Texture, TextureRegion, PolygonBatch, Animation, PlayMode, ViewportInputHandler, InputEvent, Vector2 } from \"gdxts\";\n\nconst init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext(); // eslint-disable-next-line\n  // const texture = await Texture.load(gl, \"./charizard.png\");\n\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n  const walkAnimation = new Animation(regions.slice(0, 4), 0.2);\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  const characterPosition = new Vector2(250, 500);\n  let rotation = 0; // const ROTATION_SPEED = Math.PI * 2;\n\n  let i = 0;\n  let frame = 0;\n  let movingCharacter = false;\n  gl.clearColor(0, 0, 0, 1);\n  let nextPositon = new Vector2(250, 500);\n  let tempx = 0;\n  let tempy = 0; // let temp = characterPosition;\n\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    nextPositon = inputHandler.getTouchedWorldCoord();\n    rotation = Math.atan2(nextPositon.y - characterPosition.y, nextPositon.x - characterPosition.x) * 180 / Math.PI;\n    console.log(rotation);\n  });\n  const moveSpeed = 150;\n\n  function changePosition(delta) {\n    if (characterPosition.x < nextPositon.x) {\n      characterPosition.x = Math.min(characterPosition.x + delta * moveSpeed, nextPositon.x);\n    }\n\n    if (characterPosition.y < nextPositon.y) {\n      characterPosition.y = Math.min(characterPosition.y + delta * moveSpeed, nextPositon.y);\n    }\n\n    if (characterPosition.x > nextPositon.x) {\n      characterPosition.x = Math.max(characterPosition.x - delta * moveSpeed, nextPositon.x);\n    }\n\n    if (characterPosition.y > nextPositon.y) {\n      characterPosition.y = Math.max(characterPosition.y - delta * moveSpeed, nextPositon.y);\n    }\n  }\n\n  createGameLoop(delta => {\n    i += delta;\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n    let region = walkAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n\n    if (characterPosition.x !== nextPositon.x || characterPosition.y !== nextPositon.y) {\n      if (i > 0.1) {\n        console.log(rotation);\n        i = 0;\n        movingCharacter = true;\n\n        if (rotation >= 0 && rotation < 90) {\n          region = walkAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n\n          for (let i = 0; i < 4; i++) {\n            frame++;\n\n            if (frame === 4) {\n              frame = 0;\n            }\n          }\n        } else if (rotation >= 90 && rotation < 180) {\n          region = walkAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n\n          for (let i = 0; i < 4; i++) {\n            frame = 4;\n            frame++;\n\n            if (frame === 8) {\n              frame = 0;\n            }\n          }\n        }\n      }\n    } else {\n      frame = 0;\n      movingCharacter = false;\n    } // if (\n    //   rotation >= 0 &&\n    //   rotation < 90 &&\n    //   (characterPosition.x !== nextPositon.x ||\n    //     characterPosition.y !== nextPositon.y)\n    // ) {\n    //   // region = walkAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n    //   changePosition();\n    // } else if (\n    //   rotation >= 90 &&\n    //   rotation < 180 &&\n    //   (characterPosition.x !== nextPositon.x ||\n    //     characterPosition.y !== nextPositon.y)\n    // ) {\n    //   frame = frame++;\n    //   frame = (frame % 4) * 2;\n    //   region = walkAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n    //   changePosition();\n    // } else if (\n    //   rotation >= 180 &&\n    //   rotation < 270 &&\n    //   (characterPosition.x !== nextPositon.x ||\n    //     characterPosition.y !== nextPositon.y)\n    // ) {\n    //   frame = 8;\n    //   while (frame <= 12) {\n    //     frame++;\n    //     region = walkAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n    //   }\n    //   changePosition();\n    // }\n    // console.log(frame + \" \" + i);\n\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    changePosition(delta); // batch.draw(\n    //   characterTexture,\n    //   10,\n    //   10,\n    //   500,\n    //   500,\n    //   100,\n    //   100\n    //   // rotation,\n    //   // scale,\n    //   // scale\n    // );\n    // if (movingCharacter === false) {\n    //   characterPosition.set(nextPositon.x, nextPositon.y);\n    //   // console.log(characterPosition);\n    // }\n    // console.log(movingCharacter);\n\n    region.draw(batch, characterPosition.x - 50, characterPosition.y, 100, 100);\n    batch.end();\n  });\n};\n\ninit(); // initTest();\n\nexport {};","map":{"version":3,"names":["createStage","createViewport","createGameLoop","ShapeRenderer","Texture","TextureRegion","PolygonBatch","Animation","PlayMode","ViewportInputHandler","InputEvent","Vector2","init","stage","canvas","getCanvas","viewport","gl","getContext","characterTexture","load","regions","splitTexture","walkAnimation","slice","shapeRenderer","batch","camera","getCamera","inputHandler","characterPosition","rotation","i","frame","movingCharacter","clearColor","nextPositon","tempx","tempy","addEventListener","TouchStart","x","y","getTouchedWorldCoord","Math","atan2","PI","console","log","moveSpeed","changePosition","delta","min","max","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end","region","getKeyFrame","NORMAL","draw"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createStage,\n  createViewport,\n  createGameLoop,\n  ShapeRenderer,\n  Texture,\n  TextureRegion,\n  PolygonBatch,\n  Animation,\n  PlayMode,\n  ViewportInputHandler,\n  InputEvent,\n  Vector2,\n} from \"gdxts\";\n\nconst init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n\n  // eslint-disable-next-line\n  // const texture = await Texture.load(gl, \"./charizard.png\");\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n\n  const walkAnimation = new Animation(regions.slice(0, 4), 0.2);\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n\n  const inputHandler = new ViewportInputHandler(viewport);\n  const characterPosition = new Vector2(250, 500);\n\n  let rotation = 0;\n  // const ROTATION_SPEED = Math.PI * 2;\n  let i = 0;\n  let frame = 0;\n  let movingCharacter: boolean = false;\n  gl.clearColor(0, 0, 0, 1);\n\n  let nextPositon = new Vector2(250, 500);\n  let tempx = 0;\n  let tempy = 0;\n  // let temp = characterPosition;\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    nextPositon = inputHandler.getTouchedWorldCoord();\n    rotation =\n      (Math.atan2(\n        nextPositon.y - characterPosition.y,\n        nextPositon.x - characterPosition.x\n      ) *\n        180) /\n      Math.PI;\n    console.log(rotation);\n  });\n  const moveSpeed = 150;\n  function changePosition(delta: number) {\n    if (characterPosition.x < nextPositon.x) {\n      characterPosition.x = Math.min(\n        characterPosition.x + delta * moveSpeed,\n        nextPositon.x\n      );\n    }\n    if (characterPosition.y < nextPositon.y) {\n      characterPosition.y = Math.min(\n        characterPosition.y + delta * moveSpeed,\n        nextPositon.y\n      );\n    }\n    if (characterPosition.x > nextPositon.x) {\n      characterPosition.x = Math.max(\n        characterPosition.x - delta * moveSpeed,\n        nextPositon.x\n      );\n    }\n    if (characterPosition.y > nextPositon.y) {\n      characterPosition.y = Math.max(\n        characterPosition.y - delta * moveSpeed,\n        nextPositon.y\n      );\n    }\n  }\n\n  createGameLoop((delta: number) => {\n    i += delta;\n\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n    let region = walkAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n\n    if (\n      characterPosition.x !== nextPositon.x ||\n      characterPosition.y !== nextPositon.y\n    ) {\n      if (i > 0.1) {\n        console.log(rotation);\n        i = 0;\n        movingCharacter = true;\n        if (rotation >= 0 && rotation < 90) {\n          region = walkAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n          for (let i = 0; i < 4; i++) {\n            frame++;\n            if (frame === 4) {\n              frame = 0;\n            }\n          }\n        } else if (rotation >= 90 && rotation < 180) {\n          region = walkAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n          for (let i = 0; i < 4; i++) {\n            frame = 4;\n            frame++;\n            if (frame === 8) {\n              frame = 0;\n            }\n          }\n        }\n      }\n    } else {\n      frame = 0;\n      movingCharacter = false;\n    }\n\n    // if (\n    //   rotation >= 0 &&\n    //   rotation < 90 &&\n    //   (characterPosition.x !== nextPositon.x ||\n    //     characterPosition.y !== nextPositon.y)\n    // ) {\n    //   // region = walkAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n    //   changePosition();\n    // } else if (\n    //   rotation >= 90 &&\n    //   rotation < 180 &&\n    //   (characterPosition.x !== nextPositon.x ||\n    //     characterPosition.y !== nextPositon.y)\n    // ) {\n    //   frame = frame++;\n    //   frame = (frame % 4) * 2;\n    //   region = walkAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n    //   changePosition();\n    // } else if (\n    //   rotation >= 180 &&\n    //   rotation < 270 &&\n    //   (characterPosition.x !== nextPositon.x ||\n    //     characterPosition.y !== nextPositon.y)\n    // ) {\n    //   frame = 8;\n    //   while (frame <= 12) {\n    //     frame++;\n    //     region = walkAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n    //   }\n    //   changePosition();\n    // }\n\n    // console.log(frame + \" \" + i);\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    changePosition(delta);\n\n    // batch.draw(\n    //   characterTexture,\n    //   10,\n    //   10,\n    //   500,\n    //   500,\n    //   100,\n    //   100\n    //   // rotation,\n    //   // scale,\n    //   // scale\n    // );\n    // if (movingCharacter === false) {\n    //   characterPosition.set(nextPositon.x, nextPositon.y);\n    //   // console.log(characterPosition);\n    // }\n    // console.log(movingCharacter);\n    region.draw(batch, characterPosition.x - 50, characterPosition.y, 100, 100);\n    batch.end();\n  });\n};\ninit();\n\n// initTest();\n\nexport {};\n"],"mappings":"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AR;YACD;UACF;QACF;MACF;IACF,CA3BD,MA2BO;MACLA,KAAK,GAAG,CAAR;MACAC,eAAe,GAAG,KAAlB;IACD,CAxC+B,CA0ChC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;;;IAEAR,KAAK,CAAC8B,aAAN,CAAoB7B,MAAM,CAAC8B,cAAP,CAAsBC,MAA1C;IACAhC,KAAK,CAACiC,KAAN;IACAT,cAAc,CAACC,KAAD,CAAd,CA9EgC,CAgFhC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACAW,MAAM,CAACG,IAAP,CAAYvC,KAAZ,EAAmBI,iBAAiB,CAACW,CAAlB,GAAsB,EAAzC,EAA6CX,iBAAiB,CAACY,CAA/D,EAAkE,GAAlE,EAAuE,GAAvE;IACAhB,KAAK,CAACmC,GAAN;EACD,CAnGa,CAAd;AAoGD,CA1KD;;AA2KAjD,IAAI,G,CAEJ;;AAEA"},"metadata":{},"sourceType":"module"}