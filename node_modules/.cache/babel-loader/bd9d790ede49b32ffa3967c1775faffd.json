{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InputHandler = exports.InputEvent = void 0;\n\nconst events_1 = require(\"events\");\n\nconst Vector2_1 = require(\"./Vector2\");\n\nvar InputEvent;\n\n(function (InputEvent) {\n  InputEvent[\"TouchStart\"] = \"touchStart\";\n  InputEvent[\"TouchEnd\"] = \"touchEnd\";\n  InputEvent[\"TouchMove\"] = \"touchMove\";\n})(InputEvent = exports.InputEvent || (exports.InputEvent = {}));\n\nclass InputHandler {\n  constructor(canvas) {\n    this.screenCoord = new Vector2_1.Vector2();\n    this.worldCoord = new Vector2_1.Vector2();\n    this.canvas = canvas;\n    this.lastX = 0;\n    this.lastY = 0;\n    this.touched = false;\n    const emitter = this.emitter = new events_1.EventEmitter();\n\n    this.mouseDownHandler = evt => {\n      this.touched = true;\n      this.handleMove(evt);\n      emitter.emit('touchStart', this.getX(), this.getY());\n    };\n\n    this.mouseUpHandler = evt => {\n      this.touched = false;\n      emitter.emit('touchEnd', this.getX(), this.getY());\n    };\n\n    this.mouseMoveHandler = evt => {\n      this.handleMove(evt);\n      emitter.emit('touchMove', this.getX(), this.getY());\n    };\n\n    this.touchStartHandler = evt => {\n      evt.preventDefault(); // TODO: handle multi touch\n\n      let touch = evt.touches[0];\n      this.canvas.dispatchEvent(new MouseEvent('mousedown', {\n        clientX: touch.clientX,\n        clientY: touch.clientY\n      }));\n    };\n\n    this.touchEndHandler = evt => {\n      evt.preventDefault();\n      this.canvas.dispatchEvent(new MouseEvent('mouseup'));\n    };\n\n    this.touchMoveHandler = evt => {\n      evt.preventDefault();\n      let touch = evt.touches[0];\n      this.canvas.dispatchEvent(new MouseEvent('mousemove', {\n        clientX: touch.clientX,\n        clientY: touch.clientY\n      }));\n    };\n\n    this.canvas.addEventListener('mousedown', this.mouseDownHandler, false);\n    this.canvas.addEventListener('mouseup', this.mouseUpHandler, false);\n    this.canvas.addEventListener('mousemove', this.mouseMoveHandler, false);\n    this.canvas.addEventListener('touchstart', this.touchStartHandler, false);\n    this.canvas.addEventListener('touchend', this.touchEndHandler, false);\n    this.canvas.addEventListener('touchmove', this.touchMoveHandler, false);\n  }\n\n  cleanup() {\n    this.canvas.removeEventListener('mousedown', this.mouseDownHandler);\n    this.canvas.removeEventListener('mouseup', this.mouseUpHandler);\n    this.canvas.removeEventListener('mousemove', this.mouseMoveHandler);\n    this.canvas.removeEventListener('touchstart', this.touchStartHandler);\n    this.canvas.removeEventListener('touchend', this.touchEndHandler);\n    this.canvas.removeEventListener('touchmove', this.touchMoveHandler);\n  }\n\n  addEventListener(event, listener) {\n    this.emitter.addListener(event, listener);\n  }\n\n  handleMove(evt) {\n    const rect = this.canvas.getBoundingClientRect();\n    const x = evt.clientX - rect.left;\n    const y = evt.clientY - rect.top;\n    this.lastX = x;\n    this.lastY = y;\n  }\n\n  getX() {\n    return this.lastX;\n  }\n\n  getY() {\n    return this.lastY;\n  }\n\n  isTouched() {\n    return this.touched;\n  }\n\n  getTouchedWorldCoord(camera) {\n    this.screenCoord.set(this.getX(), this.getY());\n    camera.unprojectVector2(this.worldCoord, this.screenCoord);\n    return this.worldCoord;\n  }\n\n}\n\nexports.InputHandler = InputHandler;","map":{"version":3,"names":["Object","defineProperty","exports","value","InputHandler","InputEvent","events_1","require","Vector2_1","constructor","canvas","screenCoord","Vector2","worldCoord","lastX","lastY","touched","emitter","EventEmitter","mouseDownHandler","evt","handleMove","emit","getX","getY","mouseUpHandler","mouseMoveHandler","touchStartHandler","preventDefault","touch","touches","dispatchEvent","MouseEvent","clientX","clientY","touchEndHandler","touchMoveHandler","addEventListener","cleanup","removeEventListener","event","listener","addListener","rect","getBoundingClientRect","x","left","y","top","isTouched","getTouchedWorldCoord","camera","set","unprojectVector2"],"sources":["D:/projects/test-game/node_modules/gdxts/dist/lib/InputHandler.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.InputHandler = exports.InputEvent = void 0;\r\nconst events_1 = require(\"events\");\r\nconst Vector2_1 = require(\"./Vector2\");\r\nvar InputEvent;\r\n(function (InputEvent) {\r\n    InputEvent[\"TouchStart\"] = \"touchStart\";\r\n    InputEvent[\"TouchEnd\"] = \"touchEnd\";\r\n    InputEvent[\"TouchMove\"] = \"touchMove\";\r\n})(InputEvent = exports.InputEvent || (exports.InputEvent = {}));\r\nclass InputHandler {\r\n    constructor(canvas) {\r\n        this.screenCoord = new Vector2_1.Vector2();\r\n        this.worldCoord = new Vector2_1.Vector2();\r\n        this.canvas = canvas;\r\n        this.lastX = 0;\r\n        this.lastY = 0;\r\n        this.touched = false;\r\n        const emitter = (this.emitter = new events_1.EventEmitter());\r\n        this.mouseDownHandler = evt => {\r\n            this.touched = true;\r\n            this.handleMove(evt);\r\n            emitter.emit('touchStart', this.getX(), this.getY());\r\n        };\r\n        this.mouseUpHandler = evt => {\r\n            this.touched = false;\r\n            emitter.emit('touchEnd', this.getX(), this.getY());\r\n        };\r\n        this.mouseMoveHandler = evt => {\r\n            this.handleMove(evt);\r\n            emitter.emit('touchMove', this.getX(), this.getY());\r\n        };\r\n        this.touchStartHandler = evt => {\r\n            evt.preventDefault();\r\n            // TODO: handle multi touch\r\n            let touch = evt.touches[0];\r\n            this.canvas.dispatchEvent(new MouseEvent('mousedown', {\r\n                clientX: touch.clientX,\r\n                clientY: touch.clientY\r\n            }));\r\n        };\r\n        this.touchEndHandler = evt => {\r\n            evt.preventDefault();\r\n            this.canvas.dispatchEvent(new MouseEvent('mouseup'));\r\n        };\r\n        this.touchMoveHandler = evt => {\r\n            evt.preventDefault();\r\n            let touch = evt.touches[0];\r\n            this.canvas.dispatchEvent(new MouseEvent('mousemove', {\r\n                clientX: touch.clientX,\r\n                clientY: touch.clientY\r\n            }));\r\n        };\r\n        this.canvas.addEventListener('mousedown', this.mouseDownHandler, false);\r\n        this.canvas.addEventListener('mouseup', this.mouseUpHandler, false);\r\n        this.canvas.addEventListener('mousemove', this.mouseMoveHandler, false);\r\n        this.canvas.addEventListener('touchstart', this.touchStartHandler, false);\r\n        this.canvas.addEventListener('touchend', this.touchEndHandler, false);\r\n        this.canvas.addEventListener('touchmove', this.touchMoveHandler, false);\r\n    }\r\n    cleanup() {\r\n        this.canvas.removeEventListener('mousedown', this.mouseDownHandler);\r\n        this.canvas.removeEventListener('mouseup', this.mouseUpHandler);\r\n        this.canvas.removeEventListener('mousemove', this.mouseMoveHandler);\r\n        this.canvas.removeEventListener('touchstart', this.touchStartHandler);\r\n        this.canvas.removeEventListener('touchend', this.touchEndHandler);\r\n        this.canvas.removeEventListener('touchmove', this.touchMoveHandler);\r\n    }\r\n    addEventListener(event, listener) {\r\n        this.emitter.addListener(event, listener);\r\n    }\r\n    handleMove(evt) {\r\n        const rect = this.canvas.getBoundingClientRect();\r\n        const x = evt.clientX - rect.left;\r\n        const y = evt.clientY - rect.top;\r\n        this.lastX = x;\r\n        this.lastY = y;\r\n    }\r\n    getX() {\r\n        return this.lastX;\r\n    }\r\n    getY() {\r\n        return this.lastY;\r\n    }\r\n    isTouched() {\r\n        return this.touched;\r\n    }\r\n    getTouchedWorldCoord(camera) {\r\n        this.screenCoord.set(this.getX(), this.getY());\r\n        camera.unprojectVector2(this.worldCoord, this.screenCoord);\r\n        return this.worldCoord;\r\n    }\r\n}\r\nexports.InputHandler = InputHandler;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}