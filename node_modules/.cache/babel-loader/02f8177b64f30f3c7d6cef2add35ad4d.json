{"ast":null,"code":"import { createGameLoop, createStage, createViewport, PolygonBatch, ShapeRenderer, Texture, Color } from \"gdxts\";\nconst ROWS = 24;\nconst COLS = 12;\nconst GAME_WIDTH = 1500;\nconst GAME_HEIGHT = 2000;\nexport const init3 = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, GAME_WIDTH, GAME_HEIGHT);\n  const gl = viewport.getContext();\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const bgRight = await Texture.load(gl, \"./bg1.png\");\n  const block = await Texture.load(gl, \"./borderBlock.png\");\n  const mainBlock = await Texture.load(gl, \"./GreenBlock.png\");\n  const black = new Color(0, 0, 0, 1);\n  const SQUARE_SIZE = 83;\n  let map = [];\n  let delayTime = 0; //tetrominoes\n  //I\n\n  const iBlock = [[[0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0]]]; //L\n\n  const lBlock = [[[0, 0, 1], [1, 1, 1], [0, 0, 0]], [[0, 1, 0], [0, 1, 0], [0, 1, 1]], [[0, 0, 0], [1, 1, 1], [1, 0, 0]], [[1, 1, 0], [0, 1, 0], [0, 1, 0]]]; //L-reverse\n\n  const lReverseBlock = [[[1, 0, 0], [1, 1, 1], [0, 0, 0]], [[0, 1, 1], [0, 1, 0], [0, 1, 0]], [[0, 0, 0], [1, 1, 1], [0, 0, 1]], [[1, 1, 0], [0, 1, 0], [0, 1, 0]]]; // Square\n\n  const sBlock = [[1, 1], [1, 1]]; // Z\n\n  const zBlock = [[[0, 1, 1], [1, 1, 0], [0, 0, 0]], [[0, 1, 0], [0, 1, 1], [0, 0, 1]]]; // Z-reverse\n\n  const zReverseBlock = [[[1, 1, 0], [0, 1, 1], [0, 0, 0]], [[0, 0, 1], [0, 1, 1], [0, 1, 0]]]; // T\n\n  const tBlock = [[[0, 1, 0], [1, 1, 1], [0, 0, 0]], [[0, 1, 0], [0, 1, 1], [0, 1, 0]], [[0, 0, 0], [1, 1, 1], [0, 1, 0]], [[0, 1, 0], [1, 1, 0], [0, 1, 0]]];\n  let currentBlock = iBlock[0];\n  console.log(currentBlock);\n\n  function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  function mapGame() {\n    for (let row = 0; row < ROWS; row++) {\n      for (let col = 0; col < COLS; col++) {\n        drawSquare(col, row);\n      }\n    }\n\n    console.log(map);\n  }\n\n  function drawSquare(x, y) {\n    batch.begin();\n    batch.draw(mainBlock, SQUARE_SIZE * x, SQUARE_SIZE * y, SQUARE_SIZE, SQUARE_SIZE);\n    batch.end();\n  }\n\n  mapGame();\n  createGameLoop(delta => {\n    delayTime += delta;\n\n    if (delayTime >= 0.5) {\n      delayTime = 0;\n    }\n\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 1000, 2000, black);\n    shapeRenderer.end(); //draw border\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(bgRight, 1000, 0, 500, 2000);\n    batch.end();\n\n    for (let row = 0; row < currentBlock.length; row++) {\n      for (let col = 0; col < currentBlock[row].length; col++) {\n        if (currentBlock[row][col]) {\n          drawSquare(col, row);\n        }\n      }\n    }\n  });\n};","map":{"version":3,"names":["createGameLoop","createStage","createViewport","PolygonBatch","ShapeRenderer","Texture","Color","ROWS","COLS","GAME_WIDTH","GAME_HEIGHT","init3","stage","canvas","getCanvas","viewport","gl","getContext","shapeRenderer","batch","camera","getCamera","bgRight","load","block","mainBlock","black","SQUARE_SIZE","map","delayTime","iBlock","lBlock","lReverseBlock","sBlock","zBlock","zReverseBlock","tBlock","currentBlock","console","log","getRandomInt","min","max","Math","floor","random","mapGame","row","col","drawSquare","x","y","begin","draw","end","delta","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","rect","length"],"sources":["D:/projects/test-game/src/index3.ts"],"sourcesContent":["import {\r\n  createGameLoop,\r\n  createStage,\r\n  createViewport,\r\n  PolygonBatch,\r\n  ShapeRenderer,\r\n  Texture,\r\n  Vector2,\r\n  BitmapFont,\r\n  TextureRegion,\r\n  Color,\r\n} from \"gdxts\";\r\n\r\nconst ROWS = 24;\r\nconst COLS = 12;\r\nconst GAME_WIDTH = 1500;\r\nconst GAME_HEIGHT = 2000;\r\n\r\nexport const init3 = async () => {\r\n  const stage = createStage();\r\n  const canvas = stage.getCanvas();\r\n  const viewport = createViewport(canvas, GAME_WIDTH, GAME_HEIGHT);\r\n  const gl = viewport.getContext();\r\n  const shapeRenderer = new ShapeRenderer(gl);\r\n  const batch = new PolygonBatch(gl);\r\n  const camera = viewport.getCamera();\r\n\r\n  const bgRight = await Texture.load(gl, \"./bg1.png\");\r\n  const block = await Texture.load(gl, \"./borderBlock.png\");\r\n  const mainBlock = await Texture.load(gl, \"./GreenBlock.png\");\r\n  const black = new Color(0, 0, 0, 1);\r\n  const SQUARE_SIZE = 83;\r\n\r\n  let map: any = [];\r\n  let delayTime = 0;\r\n\r\n  //tetrominoes\r\n  //I\r\n  const iBlock = [\r\n    [\r\n      [0, 0, 0, 0],\r\n      [1, 1, 1, 1],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n    ],\r\n    [\r\n      [0, 1, 0, 0],\r\n      [0, 1, 0, 0],\r\n      [0, 1, 0, 0],\r\n      [0, 1, 0, 0],\r\n    ],\r\n  ];\r\n\r\n  //L\r\n  const lBlock = [\r\n    [\r\n      [0, 0, 1],\r\n      [1, 1, 1],\r\n      [0, 0, 0],\r\n    ],\r\n    [\r\n      [0, 1, 0],\r\n      [0, 1, 0],\r\n      [0, 1, 1],\r\n    ],\r\n    [\r\n      [0, 0, 0],\r\n      [1, 1, 1],\r\n      [1, 0, 0],\r\n    ],\r\n    [\r\n      [1, 1, 0],\r\n      [0, 1, 0],\r\n      [0, 1, 0],\r\n    ],\r\n  ];\r\n\r\n  //L-reverse\r\n  const lReverseBlock = [\r\n    [\r\n      [1, 0, 0],\r\n      [1, 1, 1],\r\n      [0, 0, 0],\r\n    ],\r\n    [\r\n      [0, 1, 1],\r\n      [0, 1, 0],\r\n      [0, 1, 0],\r\n    ],\r\n    [\r\n      [0, 0, 0],\r\n      [1, 1, 1],\r\n      [0, 0, 1],\r\n    ],\r\n    [\r\n      [1, 1, 0],\r\n      [0, 1, 0],\r\n      [0, 1, 0],\r\n    ],\r\n  ];\r\n\r\n  // Square\r\n  const sBlock = [\r\n    [1, 1],\r\n    [1, 1],\r\n  ];\r\n\r\n  // Z\r\n  const zBlock = [\r\n    [\r\n      [0, 1, 1],\r\n      [1, 1, 0],\r\n      [0, 0, 0],\r\n    ],\r\n    [\r\n      [0, 1, 0],\r\n      [0, 1, 1],\r\n      [0, 0, 1],\r\n    ],\r\n  ];\r\n\r\n  // Z-reverse\r\n  const zReverseBlock = [\r\n    [\r\n      [1, 1, 0],\r\n      [0, 1, 1],\r\n      [0, 0, 0],\r\n    ],\r\n    [\r\n      [0, 0, 1],\r\n      [0, 1, 1],\r\n      [0, 1, 0],\r\n    ],\r\n  ];\r\n\r\n  // T\r\n  const tBlock = [\r\n    [\r\n      [0, 1, 0],\r\n      [1, 1, 1],\r\n      [0, 0, 0],\r\n    ],\r\n    [\r\n      [0, 1, 0],\r\n      [0, 1, 1],\r\n      [0, 1, 0],\r\n    ],\r\n    [\r\n      [0, 0, 0],\r\n      [1, 1, 1],\r\n      [0, 1, 0],\r\n    ],\r\n    [\r\n      [0, 1, 0],\r\n      [1, 1, 0],\r\n      [0, 1, 0],\r\n    ],\r\n  ];\r\n\r\n  let currentBlock = iBlock[0];\r\n\r\n  console.log(currentBlock);\r\n\r\n  function getRandomInt(min: number, max: number) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  }\r\n\r\n  function mapGame() {\r\n    for (let row = 0; row < ROWS; row++) {\r\n      for (let col = 0; col < COLS; col++) {\r\n        drawSquare(col, row);\r\n      }\r\n    }\r\n    console.log(map);\r\n  }\r\n  function drawSquare(x: number, y: number) {\r\n    batch.begin();\r\n    batch.draw(\r\n      mainBlock,\r\n      SQUARE_SIZE * x,\r\n      SQUARE_SIZE * y,\r\n      SQUARE_SIZE,\r\n      SQUARE_SIZE\r\n    );\r\n    batch.end();\r\n  }\r\n\r\n  mapGame();\r\n\r\n  createGameLoop((delta: number) => {\r\n    delayTime += delta;\r\n    if (delayTime >= 0.5) {\r\n      delayTime = 0;\r\n    }\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    shapeRenderer.setProjection(camera.projectionView.values);\r\n    shapeRenderer.begin();\r\n    shapeRenderer.rect(true, 0, 0, 1000, 2000, black);\r\n    shapeRenderer.end();\r\n\r\n    //draw border\r\n    batch.setProjection(camera.projectionView.values);\r\n    batch.begin();\r\n    batch.draw(bgRight, 1000, 0, 500, 2000);\r\n    batch.end();\r\n\r\n    for (let row = 0; row < currentBlock.length; row++) {\r\n      for (let col = 0; col < currentBlock[row].length; col++) {\r\n        if (currentBlock[row][col]) {\r\n          drawSquare(col, row);\r\n        }\r\n      }\r\n    }\r\n  });\r\n};\r\n"],"mappings":"AAAA,SACEA,cADF,EAEEC,WAFF,EAGEC,cAHF,EAIEC,YAJF,EAKEC,aALF,EAMEC,OANF,EAUEC,KAVF,QAWO,OAXP;AAaA,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,UAAU,GAAG,IAAnB;AACA,MAAMC,WAAW,GAAG,IAApB;AAEA,OAAO,MAAMC,KAAK,GAAG,YAAY;EAC/B,MAAMC,KAAK,GAAGX,WAAW,EAAzB;EACA,MAAMY,MAAM,GAAGD,KAAK,CAACE,SAAN,EAAf;EACA,MAAMC,QAAQ,GAAGb,cAAc,CAACW,MAAD,EAASJ,UAAT,EAAqBC,WAArB,CAA/B;EACA,MAAMM,EAAE,GAAGD,QAAQ,CAACE,UAAT,EAAX;EACA,MAAMC,aAAa,GAAG,IAAId,aAAJ,CAAkBY,EAAlB,CAAtB;EACA,MAAMG,KAAK,GAAG,IAAIhB,YAAJ,CAAiBa,EAAjB,CAAd;EACA,MAAMI,MAAM,GAAGL,QAAQ,CAACM,SAAT,EAAf;EAEA,MAAMC,OAAO,GAAG,MAAMjB,OAAO,CAACkB,IAAR,CAAaP,EAAb,EAAiB,WAAjB,CAAtB;EACA,MAAMQ,KAAK,GAAG,MAAMnB,OAAO,CAACkB,IAAR,CAAaP,EAAb,EAAiB,mBAAjB,CAApB;EACA,MAAMS,SAAS,GAAG,MAAMpB,OAAO,CAACkB,IAAR,CAAaP,EAAb,EAAiB,kBAAjB,CAAxB;EACA,MAAMU,KAAK,GAAG,IAAIpB,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAd;EACA,MAAMqB,WAAW,GAAG,EAApB;EAEA,IAAIC,GAAQ,GAAG,EAAf;EACA,IAAIC,SAAS,GAAG,CAAhB,CAhB+B,CAkB/B;EACA;;EACA,MAAMC,MAAM,GAAG,CACb,CACE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADF,EAEE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAFF,EAGE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAHF,EAIE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAJF,CADa,EAOb,CACE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADF,EAEE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAFF,EAGE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAHF,EAIE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAJF,CAPa,CAAf,CApB+B,CAmC/B;;EACA,MAAMC,MAAM,GAAG,CACb,CACE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADF,EAEE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFF,EAGE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHF,CADa,EAMb,CACE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADF,EAEE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFF,EAGE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHF,CANa,EAWb,CACE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADF,EAEE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFF,EAGE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHF,CAXa,EAgBb,CACE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADF,EAEE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFF,EAGE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHF,CAhBa,CAAf,CApC+B,CA2D/B;;EACA,MAAMC,aAAa,GAAG,CACpB,CACE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADF,EAEE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFF,EAGE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHF,CADoB,EAMpB,CACE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADF,EAEE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFF,EAGE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHF,CANoB,EAWpB,CACE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADF,EAEE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFF,EAGE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHF,CAXoB,EAgBpB,CACE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADF,EAEE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFF,EAGE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHF,CAhBoB,CAAtB,CA5D+B,CAmF/B;;EACA,MAAMC,MAAM,GAAG,CACb,CAAC,CAAD,EAAI,CAAJ,CADa,EAEb,CAAC,CAAD,EAAI,CAAJ,CAFa,CAAf,CApF+B,CAyF/B;;EACA,MAAMC,MAAM,GAAG,CACb,CACE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADF,EAEE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFF,EAGE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHF,CADa,EAMb,CACE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADF,EAEE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFF,EAGE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHF,CANa,CAAf,CA1F+B,CAuG/B;;EACA,MAAMC,aAAa,GAAG,CACpB,CACE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADF,EAEE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFF,EAGE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHF,CADoB,EAMpB,CACE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADF,EAEE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFF,EAGE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHF,CANoB,CAAtB,CAxG+B,CAqH/B;;EACA,MAAMC,MAAM,GAAG,CACb,CACE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADF,EAEE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFF,EAGE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHF,CADa,EAMb,CACE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADF,EAEE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFF,EAGE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHF,CANa,EAWb,CACE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADF,EAEE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFF,EAGE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHF,CAXa,EAgBb,CACE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADF,EAEE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFF,EAGE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHF,CAhBa,CAAf;EAuBA,IAAIC,YAAY,GAAGP,MAAM,CAAC,CAAD,CAAzB;EAEAQ,OAAO,CAACC,GAAR,CAAYF,YAAZ;;EAEA,SAASG,YAAT,CAAsBC,GAAtB,EAAmCC,GAAnC,EAAgD;IAC9C,OAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,CAAX,IAA0CA,GAAjD;EACD;;EAED,SAASK,OAAT,GAAmB;IACjB,KAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGxC,IAAxB,EAA8BwC,GAAG,EAAjC,EAAqC;MACnC,KAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGxC,IAAxB,EAA8BwC,GAAG,EAAjC,EAAqC;QACnCC,UAAU,CAACD,GAAD,EAAMD,GAAN,CAAV;MACD;IACF;;IACDT,OAAO,CAACC,GAAR,CAAYX,GAAZ;EACD;;EACD,SAASqB,UAAT,CAAoBC,CAApB,EAA+BC,CAA/B,EAA0C;IACxChC,KAAK,CAACiC,KAAN;IACAjC,KAAK,CAACkC,IAAN,CACE5B,SADF,EAEEE,WAAW,GAAGuB,CAFhB,EAGEvB,WAAW,GAAGwB,CAHhB,EAIExB,WAJF,EAKEA,WALF;IAOAR,KAAK,CAACmC,GAAN;EACD;;EAEDR,OAAO;EAEP9C,cAAc,CAAEuD,KAAD,IAAmB;IAChC1B,SAAS,IAAI0B,KAAb;;IACA,IAAI1B,SAAS,IAAI,GAAjB,EAAsB;MACpBA,SAAS,GAAG,CAAZ;IACD;;IACDb,EAAE,CAACwC,KAAH,CAASxC,EAAE,CAACyC,gBAAZ;IACAvC,aAAa,CAACwC,aAAd,CAA4BtC,MAAM,CAACuC,cAAP,CAAsBC,MAAlD;IACA1C,aAAa,CAACkC,KAAd;IACAlC,aAAa,CAAC2C,IAAd,CAAmB,IAAnB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,IAA/B,EAAqC,IAArC,EAA2CnC,KAA3C;IACAR,aAAa,CAACoC,GAAd,GATgC,CAWhC;;IACAnC,KAAK,CAACuC,aAAN,CAAoBtC,MAAM,CAACuC,cAAP,CAAsBC,MAA1C;IACAzC,KAAK,CAACiC,KAAN;IACAjC,KAAK,CAACkC,IAAN,CAAW/B,OAAX,EAAoB,IAApB,EAA0B,CAA1B,EAA6B,GAA7B,EAAkC,IAAlC;IACAH,KAAK,CAACmC,GAAN;;IAEA,KAAK,IAAIP,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGV,YAAY,CAACyB,MAArC,EAA6Cf,GAAG,EAAhD,EAAoD;MAClD,KAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGX,YAAY,CAACU,GAAD,CAAZ,CAAkBe,MAA1C,EAAkDd,GAAG,EAArD,EAAyD;QACvD,IAAIX,YAAY,CAACU,GAAD,CAAZ,CAAkBC,GAAlB,CAAJ,EAA4B;UAC1BC,UAAU,CAACD,GAAD,EAAMD,GAAN,CAAV;QACD;MACF;IACF;EACF,CAxBa,CAAd;AAyBD,CApMM"},"metadata":{},"sourceType":"module"}