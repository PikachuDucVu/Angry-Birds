{"ast":null,"code":"// Generated by Haxe 3.4.0 (git build development @ d3955c6)\n// with \"haxe -js bin\\hxDaedalus.js --macro include('hxDaedalus') --macro include('hxPixels') --macro include('wings.jsCanvas')\"\n(function ($hx_exports, $global) {\n  \"use strict\";\n\n  $hx_exports[\"wings\"] = $hx_exports[\"wings\"] || {};\n  $hx_exports[\"wings\"][\"jsCanvas\"] = $hx_exports[\"wings\"][\"jsCanvas\"] || {};\n  ;\n  $hx_exports[\"wings\"][\"core\"] = $hx_exports[\"wings\"][\"core\"] || {};\n  $hx_exports[\"hxPixels\"] = $hx_exports[\"hxPixels\"] || {};\n  $hx_exports[\"hxPixels\"][\"_Pixels\"] = $hx_exports[\"hxPixels\"][\"_Pixels\"] || {};\n  $hx_exports[\"hxDaedalus\"] = $hx_exports[\"hxDaedalus\"] || {};\n  $hx_exports[\"hxDaedalus\"][\"view\"] = $hx_exports[\"hxDaedalus\"][\"view\"] || {};\n  ;\n  $hx_exports[\"hxDaedalus\"][\"iterators\"] = $hx_exports[\"hxDaedalus\"][\"iterators\"] || {};\n  ;\n  $hx_exports[\"hxDaedalus\"][\"factories\"] = $hx_exports[\"hxDaedalus\"][\"factories\"] || {};\n  ;\n  $hx_exports[\"hxDaedalus\"][\"data\"] = $hx_exports[\"hxDaedalus\"][\"data\"] || {};\n  $hx_exports[\"hxDaedalus\"][\"data\"][\"math\"] = $hx_exports[\"hxDaedalus\"][\"data\"][\"math\"] || {};\n  ;\n  $hx_exports[\"hxDaedalus\"][\"data\"][\"graph\"] = $hx_exports[\"hxDaedalus\"][\"data\"][\"graph\"] || {};\n  ;\n  $hx_exports[\"hxDaedalus\"][\"ai\"] = $hx_exports[\"hxDaedalus\"][\"ai\"] || {};\n  $hx_exports[\"hxDaedalus\"][\"ai\"][\"trajectory\"] = $hx_exports[\"hxDaedalus\"][\"ai\"][\"trajectory\"] || {};\n\n  var $estr = function () {\n    return js_Boot.__string_rec(this, '');\n  };\n\n  function $extend(from, fields) {\n    function Inherit() {}\n\n    Inherit.prototype = from;\n    var proto = new Inherit();\n\n    for (var name in fields) proto[name] = fields[name];\n\n    if (fields.toString !== Object.prototype.toString) proto.toString = fields.toString;\n    return proto;\n  }\n\n  var HxOverrides = function () {};\n\n  HxOverrides.__name__ = true;\n\n  HxOverrides.cca = function (s, index) {\n    var x = s.charCodeAt(index);\n\n    if (x != x) {\n      return undefined;\n    }\n\n    return x;\n  };\n\n  HxOverrides.substr = function (s, pos, len) {\n    if (len == null) {\n      len = s.length;\n    } else if (len < 0) {\n      if (pos == 0) {\n        len = s.length + len;\n      } else {\n        return \"\";\n      }\n    }\n\n    return s.substr(pos, len);\n  };\n\n  Math.__name__ = true;\n\n  var Std = function () {};\n\n  Std.__name__ = true;\n\n  Std.string = function (s) {\n    return js_Boot.__string_rec(s, \"\");\n  };\n\n  Std.parseInt = function (x) {\n    var v = parseInt(x, 10);\n\n    if (v == 0 && (HxOverrides.cca(x, 1) == 120 || HxOverrides.cca(x, 1) == 88)) {\n      v = parseInt(x);\n    }\n\n    if (isNaN(v)) {\n      return null;\n    }\n\n    return v;\n  };\n\n  var StringTools = function () {};\n\n  StringTools.__name__ = true;\n\n  StringTools.hex = function (n, digits) {\n    var s = \"\";\n    var hexChars = \"0123456789ABCDEF\";\n\n    while (true) {\n      s = hexChars.charAt(n & 15) + s;\n      n >>>= 4;\n\n      if (!(n > 0)) {\n        break;\n      }\n    }\n\n    if (digits != null) {\n      while (s.length < digits) s = \"0\" + s;\n    }\n\n    return s;\n  };\n\n  var haxe_IMap = function () {};\n\n  haxe_IMap.__name__ = true;\n\n  var haxe_ds_ObjectMap = function () {\n    this.h = {\n      __keys__: {}\n    };\n  };\n\n  haxe_ds_ObjectMap.__name__ = true;\n  haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];\n  haxe_ds_ObjectMap.prototype = {\n    set: function (key, value) {\n      var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);\n      this.h[id] = value;\n      this.h.__keys__[id] = key;\n    },\n    __class__: haxe_ds_ObjectMap\n  };\n\n  var haxe_ds_StringMap = function () {\n    this.h = {};\n  };\n\n  haxe_ds_StringMap.__name__ = true;\n  haxe_ds_StringMap.__interfaces__ = [haxe_IMap];\n  haxe_ds_StringMap.prototype = {\n    setReserved: function (key, value) {\n      if (this.rh == null) {\n        this.rh = {};\n      }\n\n      this.rh[\"$\" + key] = value;\n    },\n    getReserved: function (key) {\n      if (this.rh == null) {\n        return null;\n      } else {\n        return this.rh[\"$\" + key];\n      }\n    },\n    __class__: haxe_ds_StringMap\n  };\n\n  var haxe_io_Bytes = function (data) {\n    this.length = data.byteLength;\n    this.b = new Uint8Array(data);\n    this.b.bufferValue = data;\n    data.hxBytes = this;\n    data.bytes = this.b;\n  };\n\n  haxe_io_Bytes.__name__ = true;\n  haxe_io_Bytes.prototype = {\n    blit: function (pos, src, srcpos, len) {\n      if (pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {\n        throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);\n      }\n\n      if (srcpos == 0 && len == src.b.byteLength) {\n        this.b.set(src.b, pos);\n      } else {\n        this.b.set(src.b.subarray(srcpos, srcpos + len), pos);\n      }\n    },\n    __class__: haxe_io_Bytes\n  };\n  var haxe_io_Error = {\n    __ename__: true,\n    __constructs__: [\"Blocked\", \"Overflow\", \"OutsideBounds\", \"Custom\"]\n  };\n  haxe_io_Error.Blocked = [\"Blocked\", 0];\n  haxe_io_Error.Blocked.toString = $estr;\n  haxe_io_Error.Blocked.__enum__ = haxe_io_Error;\n  haxe_io_Error.Overflow = [\"Overflow\", 1];\n  haxe_io_Error.Overflow.toString = $estr;\n  haxe_io_Error.Overflow.__enum__ = haxe_io_Error;\n  haxe_io_Error.OutsideBounds = [\"OutsideBounds\", 2];\n  haxe_io_Error.OutsideBounds.toString = $estr;\n  haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;\n\n  haxe_io_Error.Custom = function (e) {\n    var $x = [\"Custom\", 3, e];\n    $x.__enum__ = haxe_io_Error;\n    $x.toString = $estr;\n    return $x;\n  };\n\n  var hxDaedalus_ai_AStar = $hx_exports[\"hxDaedalus\"][\"ai\"][\"AStar\"] = function () {\n    this.iterEdge = new hxDaedalus_iterators_FromFaceToInnerEdges();\n  };\n\n  hxDaedalus_ai_AStar.__name__ = true;\n  hxDaedalus_ai_AStar.prototype = {\n    dispose: function () {\n      this._mesh = null;\n      this.closedFaces = null;\n      this.sortedOpenedFaces = null;\n      this.openedFaces = null;\n      this.entryEdges = null;\n      this.entryX = null;\n      this.entryY = null;\n      this.scoreF = null;\n      this.scoreG = null;\n      this.scoreH = null;\n      this.predecessor = null;\n    },\n    get_radius: function () {\n      return this._radius;\n    },\n    set_radius: function (value) {\n      this._radius = value;\n      this.radiusSquared = this._radius * this._radius;\n      this.diameter = this._radius * 2;\n      this.diameterSquared = this.diameter * this.diameter;\n      return value;\n    },\n    set_mesh: function (value) {\n      this._mesh = value;\n      return value;\n    },\n    findPath: function (fromX, fromY, toX, toY, resultListFaces, resultListEdges) {\n      this.closedFaces = new haxe_ds_ObjectMap();\n      this.sortedOpenedFaces = [];\n      this.openedFaces = new haxe_ds_ObjectMap();\n      this.entryEdges = new haxe_ds_ObjectMap();\n      this.entryX = new haxe_ds_ObjectMap();\n      this.entryY = new haxe_ds_ObjectMap();\n      this.scoreF = new haxe_ds_ObjectMap();\n      this.scoreG = new haxe_ds_ObjectMap();\n      this.scoreH = new haxe_ds_ObjectMap();\n      this.predecessor = new haxe_ds_ObjectMap();\n      var loc;\n      var locEdge;\n      var locVertex;\n      var distance;\n      var p1;\n      var p2;\n      var p3;\n      loc = hxDaedalus_data_math_Geom2D.locatePosition(fromX, fromY, this._mesh);\n\n      switch (loc[1]) {\n        case 0:\n          var vertex = loc[2];\n          locVertex = vertex;\n          return;\n\n        case 1:\n          var edge = loc[2];\n          locEdge = edge;\n\n          if (locEdge.get_isConstrained()) {\n            return;\n          }\n\n          this.fromFace = locEdge.get_leftFace();\n          break;\n\n        case 2:\n          var face = loc[2];\n          this.fromFace = face;\n          break;\n\n        case 3:\n          break;\n      }\n\n      loc = hxDaedalus_data_math_Geom2D.locatePosition(toX, toY, this._mesh);\n\n      switch (loc[1]) {\n        case 0:\n          var vertex1 = loc[2];\n          locVertex = vertex1;\n          this.toFace = locVertex.get_edge().get_leftFace();\n          break;\n\n        case 1:\n          var edge1 = loc[2];\n          locEdge = edge1;\n          this.toFace = locEdge.get_leftFace();\n          break;\n\n        case 2:\n          var face1 = loc[2];\n          this.toFace = face1;\n          break;\n\n        case 3:\n          break;\n      }\n\n      this.sortedOpenedFaces.push(this.fromFace);\n      this.entryEdges.set(this.fromFace, null);\n      this.entryX.set(this.fromFace, fromX);\n      this.entryY.set(this.fromFace, fromY);\n      this.scoreG.set(this.fromFace, 0);\n      var dist = Math.sqrt((toX - fromX) * (toX - fromX) + (toY - fromY) * (toY - fromY));\n      this.scoreH.set(this.fromFace, dist);\n      this.scoreF.set(this.fromFace, dist);\n      var innerEdge;\n      var neighbourFace;\n      var f;\n      var g;\n      var h;\n      var fromPoint = new hxDaedalus_data_math_Point2D();\n      var entryPoint = new hxDaedalus_data_math_Point2D();\n      var distancePoint = new hxDaedalus_data_math_Point2D();\n      var fillDatas;\n\n      while (true) {\n        if (this.sortedOpenedFaces.length == 0) {\n          this.curFace = null;\n          break;\n        }\n\n        this.curFace = this.sortedOpenedFaces.pop();\n\n        if (this.curFace == this.toFace) {\n          break;\n        }\n\n        this.iterEdge.set_fromFace(this.curFace);\n\n        while (true) {\n          innerEdge = this.iterEdge.next();\n\n          if (!(innerEdge != null)) {\n            break;\n          }\n\n          if (innerEdge.get_isConstrained()) {\n            continue;\n          }\n\n          neighbourFace = innerEdge.get_rightFace();\n\n          if (!this.closedFaces.h[neighbourFace.__id__]) {\n            if (this.curFace != this.fromFace && this._radius > 0 && !this.isWalkableByRadius(this.entryEdges.h[this.curFace.__id__], this.curFace, innerEdge)) {\n              continue;\n            }\n\n            fromPoint.x = this.entryX.h[this.curFace.__id__];\n            fromPoint.y = this.entryY.h[this.curFace.__id__];\n            entryPoint.x = (innerEdge.get_originVertex().get_pos().x + innerEdge.get_destinationVertex().get_pos().x) / 2;\n            entryPoint.y = (innerEdge.get_originVertex().get_pos().y + innerEdge.get_destinationVertex().get_pos().y) / 2;\n            distancePoint.x = entryPoint.x - toX;\n            distancePoint.y = entryPoint.y - toY;\n            h = distancePoint.get_length();\n            distancePoint.x = fromPoint.x - entryPoint.x;\n            distancePoint.y = fromPoint.y - entryPoint.y;\n            g = this.scoreG.h[this.curFace.__id__] + distancePoint.get_length();\n            f = h + g;\n            fillDatas = false;\n\n            if (this.openedFaces.h[neighbourFace.__id__] == null || !this.openedFaces.h[neighbourFace.__id__]) {\n              this.sortedOpenedFaces.push(neighbourFace);\n              this.openedFaces.set(neighbourFace, true);\n              fillDatas = true;\n            } else if (this.scoreF.h[neighbourFace.__id__] > f) {\n              fillDatas = true;\n            }\n\n            if (fillDatas) {\n              this.entryEdges.set(neighbourFace, innerEdge);\n              var v = entryPoint.x;\n              this.entryX.set(neighbourFace, v);\n              var v1 = entryPoint.y;\n              this.entryY.set(neighbourFace, v1);\n              this.scoreF.set(neighbourFace, f);\n              this.scoreG.set(neighbourFace, g);\n              this.scoreH.set(neighbourFace, h);\n              var v2 = this.curFace;\n              this.predecessor.set(neighbourFace, v2);\n            }\n          }\n        }\n\n        this.openedFaces.set(this.curFace, false);\n        this.closedFaces.set(this.curFace, true);\n        this.sortedOpenedFaces.sort($bind(this, this.sortingFaces));\n      }\n\n      if (this.curFace == null) {\n        return;\n      }\n\n      resultListFaces.push(this.curFace);\n\n      while (this.curFace != this.fromFace) {\n        resultListEdges.unshift(this.entryEdges.h[this.curFace.__id__]);\n        this.curFace = this.predecessor.h[this.curFace.__id__];\n        resultListFaces.unshift(this.curFace);\n      }\n    },\n    sortingFaces: function (a, b) {\n      if (this.scoreF.h[a.__id__] == this.scoreF.h[b.__id__]) {\n        return 0;\n      } else if (this.scoreF.h[a.__id__] < this.scoreF.h[b.__id__]) {\n        return 1;\n      } else {\n        return -1;\n      }\n    },\n    isWalkableByRadius: function (fromEdge, throughFace, toEdge) {\n      var vA = null;\n      var vB = null;\n      var vC = null;\n\n      if (fromEdge.get_originVertex() == toEdge.get_originVertex()) {\n        vA = fromEdge.get_destinationVertex();\n        vB = toEdge.get_destinationVertex();\n        vC = fromEdge.get_originVertex();\n      } else if (fromEdge.get_destinationVertex() == toEdge.get_destinationVertex()) {\n        vA = fromEdge.get_originVertex();\n        vB = toEdge.get_originVertex();\n        vC = fromEdge.get_destinationVertex();\n      } else if (fromEdge.get_originVertex() == toEdge.get_destinationVertex()) {\n        vA = fromEdge.get_destinationVertex();\n        vB = toEdge.get_originVertex();\n        vC = fromEdge.get_originVertex();\n      } else if (fromEdge.get_destinationVertex() == toEdge.get_originVertex()) {\n        vA = fromEdge.get_originVertex();\n        vB = toEdge.get_destinationVertex();\n        vC = fromEdge.get_destinationVertex();\n      }\n\n      var dot;\n      var result;\n      var distSquared;\n      dot = (vC.get_pos().x - vA.get_pos().x) * (vB.get_pos().x - vA.get_pos().x) + (vC.get_pos().y - vA.get_pos().y) * (vB.get_pos().y - vA.get_pos().y);\n\n      if (dot <= 0) {\n        distSquared = (vC.get_pos().x - vA.get_pos().x) * (vC.get_pos().x - vA.get_pos().x) + (vC.get_pos().y - vA.get_pos().y) * (vC.get_pos().y - vA.get_pos().y);\n\n        if (distSquared >= this.diameterSquared) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n\n      dot = (vC.get_pos().x - vB.get_pos().x) * (vA.get_pos().x - vB.get_pos().x) + (vC.get_pos().y - vB.get_pos().y) * (vA.get_pos().y - vB.get_pos().y);\n\n      if (dot <= 0) {\n        distSquared = (vC.get_pos().x - vB.get_pos().x) * (vC.get_pos().x - vB.get_pos().x) + (vC.get_pos().y - vB.get_pos().y) * (vC.get_pos().y - vB.get_pos().y);\n\n        if (distSquared >= this.diameterSquared) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n\n      var adjEdge;\n\n      if (throughFace.get_edge() != fromEdge && throughFace.get_edge().get_oppositeEdge() != fromEdge && throughFace.get_edge() != toEdge && throughFace.get_edge().get_oppositeEdge() != toEdge) {\n        adjEdge = throughFace.get_edge();\n      } else if (throughFace.get_edge().get_nextLeftEdge() != fromEdge && throughFace.get_edge().get_nextLeftEdge().get_oppositeEdge() != fromEdge && throughFace.get_edge().get_nextLeftEdge() != toEdge && throughFace.get_edge().get_nextLeftEdge().get_oppositeEdge() != toEdge) {\n        adjEdge = throughFace.get_edge().get_nextLeftEdge();\n      } else {\n        adjEdge = throughFace.get_edge().get_prevLeftEdge();\n      }\n\n      if (adjEdge.get_isConstrained()) {\n        var proj = new hxDaedalus_data_math_Point2D(vC.get_pos().x, vC.get_pos().y);\n        hxDaedalus_data_math_Geom2D.projectOrthogonaly(proj, adjEdge);\n        distSquared = (proj.x - vC.get_pos().x) * (proj.x - vC.get_pos().x) + (proj.y - vC.get_pos().y) * (proj.y - vC.get_pos().y);\n\n        if (distSquared >= this.diameterSquared) {\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        var distSquaredA = (vC.get_pos().x - vA.get_pos().x) * (vC.get_pos().x - vA.get_pos().x) + (vC.get_pos().y - vA.get_pos().y) * (vC.get_pos().y - vA.get_pos().y);\n        var distSquaredB = (vC.get_pos().x - vB.get_pos().x) * (vC.get_pos().x - vB.get_pos().x) + (vC.get_pos().y - vB.get_pos().y) * (vC.get_pos().y - vB.get_pos().y);\n\n        if (distSquaredA < this.diameterSquared || distSquaredB < this.diameterSquared) {\n          return false;\n        } else {\n          var vFaceToCheck = [];\n          var vFaceIsFromEdge = [];\n          var facesDone = new haxe_ds_ObjectMap();\n          vFaceIsFromEdge.push(adjEdge);\n\n          if (adjEdge.get_leftFace() == throughFace) {\n            vFaceToCheck.push(adjEdge.get_rightFace());\n            facesDone.set(adjEdge.get_rightFace(), true);\n          } else {\n            vFaceToCheck.push(adjEdge.get_leftFace());\n            facesDone.set(adjEdge.get_leftFace(), true);\n          }\n\n          var currFace;\n          var faceFromEdge;\n          var currEdgeA;\n          var nextFaceA;\n          var currEdgeB;\n          var nextFaceB;\n\n          while (vFaceToCheck.length > 0) {\n            currFace = vFaceToCheck.shift();\n            faceFromEdge = vFaceIsFromEdge.shift();\n\n            if (currFace.get_edge() == faceFromEdge || currFace.get_edge() == faceFromEdge.get_oppositeEdge()) {\n              currEdgeA = currFace.get_edge().get_nextLeftEdge();\n              currEdgeB = currFace.get_edge().get_nextLeftEdge().get_nextLeftEdge();\n            } else if (currFace.get_edge().get_nextLeftEdge() == faceFromEdge || currFace.get_edge().get_nextLeftEdge() == faceFromEdge.get_oppositeEdge()) {\n              currEdgeA = currFace.get_edge();\n              currEdgeB = currFace.get_edge().get_nextLeftEdge().get_nextLeftEdge();\n            } else {\n              currEdgeA = currFace.get_edge();\n              currEdgeB = currFace.get_edge().get_nextLeftEdge();\n            }\n\n            if (currEdgeA.get_leftFace() == currFace) {\n              nextFaceA = currEdgeA.get_rightFace();\n            } else {\n              nextFaceA = currEdgeA.get_leftFace();\n            }\n\n            if (currEdgeB.get_leftFace() == currFace) {\n              nextFaceB = currEdgeB.get_rightFace();\n            } else {\n              nextFaceB = currEdgeB.get_leftFace();\n            }\n\n            if (!facesDone.h[nextFaceA.__id__] && hxDaedalus_data_math_Geom2D.distanceSquaredVertexToEdge(vC, currEdgeA) < this.diameterSquared) {\n              if (currEdgeA.get_isConstrained()) {\n                return false;\n              } else {\n                vFaceToCheck.push(nextFaceA);\n                vFaceIsFromEdge.push(currEdgeA);\n                facesDone.set(nextFaceA, true);\n              }\n            }\n\n            if (!facesDone.h[nextFaceB.__id__] && hxDaedalus_data_math_Geom2D.distanceSquaredVertexToEdge(vC, currEdgeB) < this.diameterSquared) {\n              if (currEdgeB.get_isConstrained()) {\n                return false;\n              } else {\n                vFaceToCheck.push(nextFaceB);\n                vFaceIsFromEdge.push(currEdgeB);\n                facesDone.set(nextFaceB, true);\n              }\n            }\n          }\n\n          return true;\n        }\n      }\n    },\n    __class__: hxDaedalus_ai_AStar\n  };\n\n  var hxDaedalus_ai_EntityAI = $hx_exports[\"hxDaedalus\"][\"ai\"][\"EntityAI\"] = function () {\n    this._radius = 10;\n    this.x = this.y = 0;\n    this.dirNormX = 1;\n    this.dirNormY = 0;\n  };\n\n  hxDaedalus_ai_EntityAI.__name__ = true;\n  hxDaedalus_ai_EntityAI.prototype = {\n    buildApproximation: function () {\n      this._approximateObject = new hxDaedalus_data_Object();\n\n      this._approximateObject.get_matrix().translate(this.x, this.y);\n\n      var coordinates = [];\n\n      this._approximateObject.set_coordinates(coordinates);\n\n      if (this._radius == 0) {\n        return;\n      }\n\n      var _g = 0;\n\n      while (_g < 6) {\n        var i = _g++;\n        coordinates.push(this._radius * Math.cos(2 * Math.PI * i / 6));\n        coordinates.push(this._radius * Math.sin(2 * Math.PI * i / 6));\n        coordinates.push(this._radius * Math.cos(2 * Math.PI * (i + 1) / 6));\n        coordinates.push(this._radius * Math.sin(2 * Math.PI * (i + 1) / 6));\n      }\n    },\n    get_approximateObject: function () {\n      this._approximateObject.get_matrix().identity();\n\n      this._approximateObject.get_matrix().translate(this.x, this.y);\n\n      return this._approximateObject;\n    },\n    get_radius: function () {\n      return this._radius;\n    },\n    get_radiusSquared: function () {\n      return this._radiusSquared;\n    },\n    set_radius: function (value) {\n      this._radius = value;\n      this._radiusSquared = this._radius * this._radius;\n      return value;\n    },\n    __class__: hxDaedalus_ai_EntityAI\n  };\n\n  var hxDaedalus_ai_Funnel = $hx_exports[\"hxDaedalus\"][\"ai\"][\"Funnel\"] = function () {\n    this._currPoolPointsIndex = 0;\n    this._poolPointsSize = 3000;\n    this._numSamplesCircle = 16;\n    this._radiusSquared = 0;\n    this._radius = 0;\n    this._poolPoints = [];\n    var _g1 = 0;\n    var _g = this._poolPointsSize;\n\n    while (_g1 < _g) {\n      var i = _g1++;\n\n      this._poolPoints.push(new hxDaedalus_data_math_Point2D());\n    }\n  };\n\n  hxDaedalus_ai_Funnel.__name__ = true;\n  hxDaedalus_ai_Funnel.prototype = {\n    dispose: function () {\n      this._sampleCircle = null;\n    },\n    getPoint: function (x, y) {\n      if (y == null) {\n        y = 0;\n      }\n\n      if (x == null) {\n        x = 0;\n      }\n\n      this.__point = this._poolPoints[this._currPoolPointsIndex];\n\n      this.__point.setXY(x, y);\n\n      this._currPoolPointsIndex++;\n\n      if (this._currPoolPointsIndex == this._poolPointsSize) {\n        this._poolPoints.push(new hxDaedalus_data_math_Point2D());\n\n        this._poolPointsSize++;\n      }\n\n      return this.__point;\n    },\n    getCopyPoint: function (pointToCopy) {\n      return this.getPoint(pointToCopy.x, pointToCopy.y);\n    },\n    get_radius: function () {\n      return this._radius;\n    },\n    set_radius: function (value) {\n      this._radius = Math.max(0, value);\n      this._radiusSquared = this._radius * this._radius;\n      this._sampleCircle = [];\n\n      if (this.get_radius() == 0) {\n        return 0;\n      }\n\n      var _g1 = 0;\n      var _g = this._numSamplesCircle;\n\n      while (_g1 < _g) {\n        var i = _g1++;\n\n        this._sampleCircle.push(new hxDaedalus_data_math_Point2D(this._radius * Math.cos(-2 * Math.PI * i / this._numSamplesCircle), this._radius * Math.sin(-2 * Math.PI * i / this._numSamplesCircle)));\n      }\n\n      this._sampleCircleDistanceSquared = (this._sampleCircle[0].x - this._sampleCircle[1].x) * (this._sampleCircle[0].x - this._sampleCircle[1].x) + (this._sampleCircle[0].y - this._sampleCircle[1].y) * (this._sampleCircle[0].y - this._sampleCircle[1].y);\n      return this._radius;\n    },\n    findPath: function (fromX, fromY, toX, toY, listFaces, listEdges, resultPath) {\n      this._currPoolPointsIndex = 0;\n\n      if (this._radius > 0) {\n        var checkFace = listFaces[0];\n        var distanceSquared;\n        var distance;\n        var p1;\n        var p2;\n        var p3;\n        p1 = checkFace.get_edge().get_originVertex().get_pos();\n        p2 = checkFace.get_edge().get_destinationVertex().get_pos();\n        p3 = checkFace.get_edge().get_nextLeftEdge().get_destinationVertex().get_pos();\n        distanceSquared = (p1.x - fromX) * (p1.x - fromX) + (p1.y - fromY) * (p1.y - fromY);\n\n        if (distanceSquared <= this._radiusSquared) {\n          distance = Math.sqrt(distanceSquared);\n          fromX = this._radius * 1.01 * ((fromX - p1.x) / distance) + p1.x;\n          fromY = this._radius * 1.01 * ((fromY - p1.y) / distance) + p1.y;\n        } else {\n          distanceSquared = (p2.x - fromX) * (p2.x - fromX) + (p2.y - fromY) * (p2.y - fromY);\n\n          if (distanceSquared <= this._radiusSquared) {\n            distance = Math.sqrt(distanceSquared);\n            fromX = this._radius * 1.01 * ((fromX - p2.x) / distance) + p2.x;\n            fromY = this._radius * 1.01 * ((fromY - p2.y) / distance) + p2.y;\n          } else {\n            distanceSquared = (p3.x - fromX) * (p3.x - fromX) + (p3.y - fromY) * (p3.y - fromY);\n\n            if (distanceSquared <= this._radiusSquared) {\n              distance = Math.sqrt(distanceSquared);\n              fromX = this._radius * 1.01 * ((fromX - p3.x) / distance) + p3.x;\n              fromY = this._radius * 1.01 * ((fromY - p3.y) / distance) + p3.y;\n            }\n          }\n        }\n\n        checkFace = listFaces[listFaces.length - 1];\n        p1 = checkFace.get_edge().get_originVertex().get_pos();\n        p2 = checkFace.get_edge().get_destinationVertex().get_pos();\n        p3 = checkFace.get_edge().get_nextLeftEdge().get_destinationVertex().get_pos();\n        distanceSquared = (p1.x - toX) * (p1.x - toX) + (p1.y - toY) * (p1.y - toY);\n\n        if (distanceSquared <= this._radiusSquared) {\n          distance = Math.sqrt(distanceSquared);\n          toX = this._radius * 1.01 * ((toX - p1.x) / distance) + p1.x;\n          toY = this._radius * 1.01 * ((toY - p1.y) / distance) + p1.y;\n        } else {\n          distanceSquared = (p2.x - toX) * (p2.x - toX) + (p2.y - toY) * (p2.y - toY);\n\n          if (distanceSquared <= this._radiusSquared) {\n            distance = Math.sqrt(distanceSquared);\n            toX = this._radius * 1.01 * ((toX - p2.x) / distance) + p2.x;\n            toY = this._radius * 1.01 * ((toY - p2.y) / distance) + p2.y;\n          } else {\n            distanceSquared = (p3.x - toX) * (p3.x - toX) + (p3.y - toY) * (p3.y - toY);\n\n            if (distanceSquared <= this._radiusSquared) {\n              distance = Math.sqrt(distanceSquared);\n              toX = this._radius * 1.01 * ((toX - p3.x) / distance) + p3.x;\n              toY = this._radius * 1.01 * ((toY - p3.y) / distance) + p3.y;\n            }\n          }\n        }\n      }\n\n      var startPoint;\n      var endPoint;\n      startPoint = new hxDaedalus_data_math_Point2D(fromX, fromY);\n      endPoint = new hxDaedalus_data_math_Point2D(toX, toY);\n\n      if (listFaces.length == 1) {\n        resultPath.push(startPoint.x);\n        resultPath.push(startPoint.y);\n        resultPath.push(endPoint.x);\n        resultPath.push(endPoint.y);\n        return;\n      }\n\n      var i;\n      var j;\n      var k;\n      var currEdge = null;\n      var currVertex = null;\n      var direction;\n\n      var _g = hxDaedalus_data_math_Geom2D.isInFace(fromX, fromY, listFaces[0]);\n\n      if (_g[1] == 1) {\n        var edge = _g[2];\n\n        if (listEdges[0] == edge) {\n          listEdges.shift();\n          listFaces.shift();\n        }\n      }\n\n      var funnelLeft = [];\n      var funnelRight = [];\n      funnelLeft.push(startPoint);\n      funnelRight.push(startPoint);\n      var verticesDoneSide = new haxe_ds_ObjectMap();\n      var pointsList = [];\n      var pointSides = new haxe_ds_ObjectMap();\n      var pointSuccessor = new haxe_ds_ObjectMap();\n      pointSides.set(startPoint, 0);\n      currEdge = listEdges[0];\n      var relativPos = hxDaedalus_data_math_Geom2D.getRelativePosition2(fromX, fromY, currEdge);\n      var prevPoint;\n      var newPointA;\n      var newPointB;\n      newPointA = this.getCopyPoint(currEdge.get_destinationVertex().get_pos());\n      newPointB = this.getCopyPoint(currEdge.get_originVertex().get_pos());\n      pointsList.push(newPointA);\n      pointsList.push(newPointB);\n      pointSuccessor.set(startPoint, newPointA);\n      pointSuccessor.set(newPointA, newPointB);\n      prevPoint = newPointB;\n\n      if (relativPos == 1) {\n        pointSides.set(newPointA, 1);\n        pointSides.set(newPointB, -1);\n        verticesDoneSide.set(currEdge.get_destinationVertex(), 1);\n        verticesDoneSide.set(currEdge.get_originVertex(), -1);\n      } else if (relativPos == -1) {\n        pointSides.set(newPointA, -1);\n        pointSides.set(newPointB, 1);\n        verticesDoneSide.set(currEdge.get_destinationVertex(), -1);\n        verticesDoneSide.set(currEdge.get_originVertex(), 1);\n      }\n\n      var fromVertex = listEdges[0].get_originVertex();\n      var fromFromVertex = listEdges[0].get_destinationVertex();\n      var _g2 = 1;\n      var _g1 = listEdges.length;\n\n      while (_g2 < _g1) {\n        var i1 = _g2++;\n        currEdge = listEdges[i1];\n\n        if (currEdge.get_originVertex() == fromVertex) {\n          currVertex = currEdge.get_destinationVertex();\n        } else if (currEdge.get_destinationVertex() == fromVertex) {\n          currVertex = currEdge.get_originVertex();\n        } else if (currEdge.get_originVertex() == fromFromVertex) {\n          currVertex = currEdge.get_destinationVertex();\n          fromVertex = fromFromVertex;\n        } else if (currEdge.get_destinationVertex() == fromFromVertex) {\n          currVertex = currEdge.get_originVertex();\n          fromVertex = fromFromVertex;\n        }\n\n        newPointA = this.getCopyPoint(currVertex.get_pos());\n        pointsList.push(newPointA);\n        direction = -verticesDoneSide.h[fromVertex.__id__];\n        pointSides.set(newPointA, direction);\n        pointSuccessor.set(prevPoint, newPointA);\n        verticesDoneSide.set(currVertex, direction);\n        prevPoint = newPointA;\n        fromFromVertex = fromVertex;\n        fromVertex = currVertex;\n      }\n\n      pointSuccessor.set(prevPoint, endPoint);\n      pointSides.set(endPoint, 0);\n      var pathPoints = [];\n      var pathSides = new haxe_ds_ObjectMap();\n      pathPoints.push(startPoint);\n      pathSides.set(startPoint, 0);\n      var currPos;\n      var _g21 = 0;\n      var _g11 = pointsList.length;\n\n      while (_g21 < _g11) {\n        var i2 = _g21++;\n        currPos = pointsList[i2];\n\n        if (pointSides.h[currPos.__id__] == -1) {\n          j = funnelLeft.length - 2;\n\n          while (j >= 0) {\n            direction = hxDaedalus_data_math_Geom2D.getDirection(funnelLeft[j].x, funnelLeft[j].y, funnelLeft[j + 1].x, funnelLeft[j + 1].y, currPos.x, currPos.y);\n\n            if (direction != -1) {\n              funnelLeft.shift();\n              var _g4 = 0;\n              var _g3 = j;\n\n              while (_g4 < _g3) {\n                var k1 = _g4++;\n                pathPoints.push(funnelLeft[0]);\n                pathSides.set(funnelLeft[0], 1);\n                funnelLeft.shift();\n              }\n\n              pathPoints.push(funnelLeft[0]);\n              pathSides.set(funnelLeft[0], 1);\n              funnelRight.splice(0, funnelRight.length);\n              funnelRight.push(funnelLeft[0]);\n              funnelRight.push(currPos);\n              break;\n            }\n\n            --j;\n          }\n\n          funnelRight.push(currPos);\n          j = funnelRight.length - 3;\n\n          while (j >= 0) {\n            direction = hxDaedalus_data_math_Geom2D.getDirection(funnelRight[j].x, funnelRight[j].y, funnelRight[j + 1].x, funnelRight[j + 1].y, currPos.x, currPos.y);\n\n            if (direction == -1) {\n              break;\n            } else {\n              funnelRight.splice(j + 1, 1);\n            }\n\n            --j;\n          }\n        } else {\n          j = funnelRight.length - 2;\n\n          while (j >= 0) {\n            direction = hxDaedalus_data_math_Geom2D.getDirection(funnelRight[j].x, funnelRight[j].y, funnelRight[j + 1].x, funnelRight[j + 1].y, currPos.x, currPos.y);\n\n            if (direction != 1) {\n              funnelRight.shift();\n              var _g41 = 0;\n              var _g31 = j;\n\n              while (_g41 < _g31) {\n                var k2 = _g41++;\n                pathPoints.push(funnelRight[0]);\n                pathSides.set(funnelRight[0], -1);\n                funnelRight.shift();\n              }\n\n              pathPoints.push(funnelRight[0]);\n              pathSides.set(funnelRight[0], -1);\n              funnelLeft.splice(0, funnelLeft.length);\n              funnelLeft.push(funnelRight[0]);\n              funnelLeft.push(currPos);\n              break;\n            }\n\n            --j;\n          }\n\n          funnelLeft.push(currPos);\n          j = funnelLeft.length - 3;\n\n          while (j >= 0) {\n            direction = hxDaedalus_data_math_Geom2D.getDirection(funnelLeft[j].x, funnelLeft[j].y, funnelLeft[j + 1].x, funnelLeft[j + 1].y, currPos.x, currPos.y);\n\n            if (direction == 1) {\n              break;\n            } else {\n              funnelLeft.splice(j + 1, 1);\n            }\n\n            --j;\n          }\n        }\n      }\n\n      var blocked = false;\n      j = funnelRight.length - 2;\n\n      while (j >= 0) {\n        direction = hxDaedalus_data_math_Geom2D.getDirection(funnelRight[j].x, funnelRight[j].y, funnelRight[j + 1].x, funnelRight[j + 1].y, toX, toY);\n\n        if (direction != 1) {\n          funnelRight.shift();\n          var _g22 = 0;\n\n          var _g12 = j + 1;\n\n          while (_g22 < _g12) {\n            var k3 = _g22++;\n            pathPoints.push(funnelRight[0]);\n            pathSides.set(funnelRight[0], -1);\n            funnelRight.shift();\n          }\n\n          pathPoints.push(endPoint);\n          pathSides.set(endPoint, 0);\n          blocked = true;\n          break;\n        }\n\n        --j;\n      }\n\n      if (!blocked) {\n        j = funnelLeft.length - 2;\n\n        while (j >= 0) {\n          direction = hxDaedalus_data_math_Geom2D.getDirection(funnelLeft[j].x, funnelLeft[j].y, funnelLeft[j + 1].x, funnelLeft[j + 1].y, toX, toY);\n\n          if (direction != -1) {\n            funnelLeft.shift();\n            var _g23 = 0;\n\n            var _g13 = j + 1;\n\n            while (_g23 < _g13) {\n              var k4 = _g23++;\n              pathPoints.push(funnelLeft[0]);\n              pathSides.set(funnelLeft[0], 1);\n              funnelLeft.shift();\n            }\n\n            pathPoints.push(endPoint);\n            pathSides.set(endPoint, 0);\n            blocked = true;\n            break;\n          }\n\n          --j;\n        }\n      }\n\n      if (!blocked) {\n        pathPoints.push(endPoint);\n        pathSides.set(endPoint, 0);\n        blocked = true;\n      }\n\n      var adjustedPoints = [];\n\n      if (this.get_radius() > 0) {\n        var newPath = [];\n\n        if (pathPoints.length == 2) {\n          this.adjustWithTangents(pathPoints[0], false, pathPoints[1], false, pointSides, pointSuccessor, newPath, adjustedPoints);\n        } else if (pathPoints.length > 2) {\n          this.adjustWithTangents(pathPoints[0], false, pathPoints[1], true, pointSides, pointSuccessor, newPath, adjustedPoints);\n\n          if (pathPoints.length > 3) {\n            var _g24 = 1;\n\n            var _g14 = pathPoints.length - 3 + 1;\n\n            while (_g24 < _g14) {\n              var i3 = _g24++;\n              this.adjustWithTangents(pathPoints[i3], true, pathPoints[i3 + 1], true, pointSides, pointSuccessor, newPath, adjustedPoints);\n            }\n          }\n\n          var pathLength = pathPoints.length;\n          this.adjustWithTangents(pathPoints[pathLength - 2], true, pathPoints[pathLength - 1], false, pointSides, pointSuccessor, newPath, adjustedPoints);\n        }\n\n        newPath.push(endPoint);\n        this.checkAdjustedPath(newPath, adjustedPoints, pointSides);\n        var smoothPoints = [];\n        i = newPath.length - 2;\n\n        while (i >= 1) {\n          this.smoothAngle(adjustedPoints[i * 2 - 1], newPath[i], adjustedPoints[i * 2], pointSides.h[newPath[i].__id__], smoothPoints);\n\n          while (smoothPoints.length != 0) {\n            var temp = i * 2;\n            adjustedPoints.splice(temp, 0);\n            var x = smoothPoints.pop();\n            adjustedPoints.splice(temp, 0, x);\n          }\n\n          --i;\n        }\n      } else {\n        adjustedPoints = pathPoints;\n      }\n\n      var _g25 = 0;\n      var _g15 = adjustedPoints.length;\n\n      while (_g25 < _g15) {\n        var i4 = _g25++;\n        resultPath.push(adjustedPoints[i4].x);\n        resultPath.push(adjustedPoints[i4].y);\n      }\n    },\n    adjustWithTangents: function (p1, applyRadiusToP1, p2, applyRadiusToP2, pointSides, pointSuccessor, newPath, adjustedPoints) {\n      var tangentsResult = [];\n      var side1 = pointSides.h[p1.__id__];\n      var side2 = pointSides.h[p2.__id__];\n      var pTangent1 = null;\n      var pTangent2 = null;\n\n      if (!applyRadiusToP1 && !applyRadiusToP2) {\n        pTangent1 = p1;\n        pTangent2 = p2;\n      } else if (!applyRadiusToP1) {\n        if (hxDaedalus_data_math_Geom2D.tangentsPointToCircle(p1.x, p1.y, p2.x, p2.y, this._radius, tangentsResult)) {\n          if (side2 == 1) {\n            pTangent1 = p1;\n            pTangent2 = this.getPoint(tangentsResult[2], tangentsResult[3]);\n          } else {\n            pTangent1 = p1;\n            pTangent2 = this.getPoint(tangentsResult[0], tangentsResult[1]);\n          }\n        } else {\n          return;\n        }\n      } else if (!applyRadiusToP2) {\n        if (hxDaedalus_data_math_Geom2D.tangentsPointToCircle(p2.x, p2.y, p1.x, p1.y, this._radius, tangentsResult)) {\n          if (tangentsResult.length > 0) {\n            if (side1 == 1) {\n              pTangent1 = this.getPoint(tangentsResult[0], tangentsResult[1]);\n              pTangent2 = p2;\n            } else {\n              pTangent1 = this.getPoint(tangentsResult[2], tangentsResult[3]);\n              pTangent2 = p2;\n            }\n          }\n        } else {\n          return;\n        }\n      } else if (side1 == 1 && side2 == 1) {\n        hxDaedalus_data_math_Geom2D.tangentsParalCircleToCircle(this._radius, p1.x, p1.y, p2.x, p2.y, tangentsResult);\n        pTangent1 = this.getPoint(tangentsResult[2], tangentsResult[3]);\n        pTangent2 = this.getPoint(tangentsResult[4], tangentsResult[5]);\n      } else if (side1 == -1 && side2 == -1) {\n        hxDaedalus_data_math_Geom2D.tangentsParalCircleToCircle(this._radius, p1.x, p1.y, p2.x, p2.y, tangentsResult);\n        pTangent1 = this.getPoint(tangentsResult[0], tangentsResult[1]);\n        pTangent2 = this.getPoint(tangentsResult[6], tangentsResult[7]);\n      } else if (side1 == 1 && side2 == -1) {\n        if (hxDaedalus_data_math_Geom2D.tangentsCrossCircleToCircle(this._radius, p1.x, p1.y, p2.x, p2.y, tangentsResult)) {\n          pTangent1 = this.getPoint(tangentsResult[2], tangentsResult[3]);\n          pTangent2 = this.getPoint(tangentsResult[6], tangentsResult[7]);\n        } else {\n          return;\n        }\n      } else if (hxDaedalus_data_math_Geom2D.tangentsCrossCircleToCircle(this._radius, p1.x, p1.y, p2.x, p2.y, tangentsResult)) {\n        pTangent1 = this.getPoint(tangentsResult[0], tangentsResult[1]);\n        pTangent2 = this.getPoint(tangentsResult[4], tangentsResult[5]);\n      } else {\n        return;\n      }\n\n      var successor = pointSuccessor.h[p1.__id__];\n      var distance;\n\n      while (successor != p2) {\n        distance = hxDaedalus_data_math_Geom2D.distanceSquaredPointToSegment(successor.x, successor.y, pTangent1.x, pTangent1.y, pTangent2.x, pTangent2.y);\n\n        if (distance < this._radiusSquared) {\n          this.adjustWithTangents(p1, applyRadiusToP1, successor, true, pointSides, pointSuccessor, newPath, adjustedPoints);\n          this.adjustWithTangents(successor, true, p2, applyRadiusToP2, pointSides, pointSuccessor, newPath, adjustedPoints);\n          return;\n        } else {\n          successor = pointSuccessor.h[successor.__id__];\n        }\n      }\n\n      adjustedPoints.push(pTangent1);\n      adjustedPoints.push(pTangent2);\n      newPath.push(p1);\n    },\n    checkAdjustedPath: function (newPath, adjustedPoints, pointSides) {\n      var needCheck = true;\n      var point0;\n      var point0Side;\n      var point1;\n      var point1Side;\n      var point2;\n      var point2Side;\n      var pt1;\n      var pt2;\n      var pt3;\n      var dot;\n      var tangentsResult = [];\n      var pTangent1 = null;\n      var pTangent2 = null;\n\n      while (needCheck) {\n        needCheck = false;\n        var i = 2;\n\n        while (i < newPath.length) {\n          point2 = newPath[i];\n          point2Side = pointSides.h[point2.__id__];\n          point1 = newPath[i - 1];\n          point1Side = pointSides.h[point1.__id__];\n          point0 = newPath[i - 2];\n          point0Side = pointSides.h[point0.__id__];\n\n          if (point1Side == point2Side) {\n            pt1 = adjustedPoints[(i - 2) * 2];\n            pt2 = adjustedPoints[(i - 1) * 2 - 1];\n            pt3 = adjustedPoints[(i - 1) * 2];\n            dot = (pt1.x - pt2.x) * (pt3.x - pt2.x) + (pt1.y - pt2.y) * (pt3.y - pt2.y);\n\n            if (dot > 0) {\n              if (i == 2) {\n                hxDaedalus_data_math_Geom2D.tangentsPointToCircle(point0.x, point0.y, point2.x, point2.y, this._radius, tangentsResult);\n\n                if (point2Side == 1) {\n                  pTangent1 = point0;\n                  pTangent2 = this.getPoint(tangentsResult[2], tangentsResult[3]);\n                } else {\n                  pTangent1 = point0;\n                  pTangent2 = this.getPoint(tangentsResult[0], tangentsResult[1]);\n                }\n              } else if (i == newPath.length - 1) {\n                hxDaedalus_data_math_Geom2D.tangentsPointToCircle(point2.x, point2.y, point0.x, point0.y, this._radius, tangentsResult);\n\n                if (point0Side == 1) {\n                  pTangent1 = this.getPoint(tangentsResult[0], tangentsResult[1]);\n                  pTangent2 = point2;\n                } else {\n                  pTangent1 = this.getPoint(tangentsResult[2], tangentsResult[3]);\n                  pTangent2 = point2;\n                }\n              } else if (point0Side == 1 && point2Side == -1) {\n                hxDaedalus_data_math_Geom2D.tangentsCrossCircleToCircle(this._radius, point0.x, point0.y, point2.x, point2.y, tangentsResult);\n                pTangent1 = this.getPoint(tangentsResult[2], tangentsResult[3]);\n                pTangent2 = this.getPoint(tangentsResult[6], tangentsResult[7]);\n              } else if (point0Side == -1 && point2Side == 1) {\n                hxDaedalus_data_math_Geom2D.tangentsCrossCircleToCircle(this._radius, point0.x, point0.y, point2.x, point2.y, tangentsResult);\n                pTangent1 = this.getPoint(tangentsResult[0], tangentsResult[1]);\n                pTangent2 = this.getPoint(tangentsResult[4], tangentsResult[5]);\n              } else if (point0Side == 1 && point2Side == 1) {\n                hxDaedalus_data_math_Geom2D.tangentsParalCircleToCircle(this._radius, point0.x, point0.y, point2.x, point2.y, tangentsResult);\n                pTangent1 = this.getPoint(tangentsResult[2], tangentsResult[3]);\n                pTangent2 = this.getPoint(tangentsResult[4], tangentsResult[5]);\n              } else if (point0Side == -1 && point2Side == -1) {\n                hxDaedalus_data_math_Geom2D.tangentsParalCircleToCircle(this._radius, point0.x, point0.y, point2.x, point2.y, tangentsResult);\n                pTangent1 = this.getPoint(tangentsResult[0], tangentsResult[1]);\n                pTangent2 = this.getPoint(tangentsResult[6], tangentsResult[7]);\n              }\n\n              var temp = (i - 2) * 2;\n              adjustedPoints.splice(temp, 1);\n              adjustedPoints.splice(temp, 0, pTangent1);\n              temp = i * 2 - 1;\n              adjustedPoints.splice(temp, 1);\n              adjustedPoints.splice(temp, 0, pTangent2);\n              newPath.splice(i - 1, 1);\n              adjustedPoints.splice((i - 1) * 2 - 1, 2);\n              tangentsResult.splice(0, tangentsResult.length);\n              --i;\n            }\n          }\n\n          ++i;\n        }\n      }\n    },\n    smoothAngle: function (prevPoint, pointToSmooth, nextPoint, side, encirclePoints) {\n      var angleType = hxDaedalus_data_math_Geom2D.getDirection(prevPoint.x, prevPoint.y, pointToSmooth.x, pointToSmooth.y, nextPoint.x, nextPoint.y);\n      var distanceSquared = (prevPoint.x - nextPoint.x) * (prevPoint.x - nextPoint.x) + (prevPoint.y - nextPoint.y) * (prevPoint.y - nextPoint.y);\n\n      if (distanceSquared <= this._sampleCircleDistanceSquared) {\n        return;\n      }\n\n      var index = 0;\n      var side1;\n      var side2;\n      var pointInArea;\n      var xToCheck;\n      var yToCheck;\n      var _g1 = 0;\n      var _g = this._numSamplesCircle;\n\n      while (_g1 < _g) {\n        var i = _g1++;\n        pointInArea = false;\n        xToCheck = pointToSmooth.x + this._sampleCircle[i].x;\n        yToCheck = pointToSmooth.y + this._sampleCircle[i].y;\n        side1 = hxDaedalus_data_math_Geom2D.getDirection(prevPoint.x, prevPoint.y, pointToSmooth.x, pointToSmooth.y, xToCheck, yToCheck);\n        side2 = hxDaedalus_data_math_Geom2D.getDirection(pointToSmooth.x, pointToSmooth.y, nextPoint.x, nextPoint.y, xToCheck, yToCheck);\n\n        if (side == 1) {\n          if (angleType == -1) {\n            if (side1 == -1 && side2 == -1) {\n              pointInArea = true;\n            }\n          } else if (side1 == -1 || side2 == -1) {\n            pointInArea = true;\n          }\n        } else if (angleType == 1) {\n          if (side1 == 1 && side2 == 1) {\n            pointInArea = true;\n          }\n        } else if (side1 == 1 || side2 == 1) {\n          pointInArea = true;\n        }\n\n        if (pointInArea) {\n          encirclePoints.splice(index, 0);\n          var x = new hxDaedalus_data_math_Point2D(xToCheck, yToCheck);\n          encirclePoints.splice(index, 0, x);\n          ++index;\n        } else {\n          index = 0;\n        }\n      }\n\n      if (side == -1) {\n        encirclePoints.reverse();\n      }\n    },\n    __class__: hxDaedalus_ai_Funnel\n  };\n\n  var hxDaedalus_ai_PathFinder = $hx_exports[\"hxDaedalus\"][\"ai\"][\"PathFinder\"] = function () {\n    this.astar = new hxDaedalus_ai_AStar();\n    this.funnel = new hxDaedalus_ai_Funnel();\n    this.listFaces = [];\n    this.listEdges = [];\n  };\n\n  hxDaedalus_ai_PathFinder.__name__ = true;\n  hxDaedalus_ai_PathFinder.prototype = {\n    dispose: function () {\n      this._mesh = null;\n      this.astar.dispose();\n      this.astar = null;\n      this.funnel.dispose();\n      this.funnel = null;\n      this.listEdges = null;\n      this.listFaces = null;\n    },\n    get_mesh: function () {\n      return this._mesh;\n    },\n    set_mesh: function (value) {\n      this._mesh = value;\n      this.astar.set_mesh(this._mesh);\n      return value;\n    },\n    findPath: function (toX, toY, resultPath) {\n      resultPath.splice(0, resultPath.length);\n      var cond = this._mesh == null;\n      var cond1 = this.entity == null;\n\n      if (hxDaedalus_data_math_Geom2D.isCircleIntersectingAnyConstraint(toX, toY, this.entity.get_radius(), this._mesh)) {\n        return;\n      }\n\n      this.astar.set_radius(this.entity.get_radius());\n      this.funnel.set_radius(this.entity.get_radius());\n      this.listFaces.splice(0, this.listFaces.length);\n      this.listEdges.splice(0, this.listEdges.length);\n      this.astar.findPath(this.entity.x, this.entity.y, toX, toY, this.listFaces, this.listEdges);\n\n      if (this.listFaces.length == 0) {\n        return;\n      }\n\n      this.funnel.findPath(this.entity.x, this.entity.y, toX, toY, this.listFaces, this.listEdges, resultPath);\n    },\n    __class__: hxDaedalus_ai_PathFinder\n  };\n\n  var hxDaedalus_ai_trajectory_LinearPathSampler = $hx_exports[\"hxDaedalus\"][\"ai\"][\"trajectory\"][\"LinearPathSampler\"] = function () {\n    this._samplingDistanceSquared = 1;\n    this._samplingDistance = 1;\n    this._preCompX = [];\n    this._preCompY = [];\n  };\n\n  hxDaedalus_ai_trajectory_LinearPathSampler.__name__ = true;\n\n  hxDaedalus_ai_trajectory_LinearPathSampler.pythag = function (a, b) {\n    return Math.sqrt(a * a + b * b);\n  };\n\n  hxDaedalus_ai_trajectory_LinearPathSampler.prototype = {\n    dispose: function () {\n      this.entity = null;\n      this._path = null;\n      this._preCompX = null;\n      this._preCompY = null;\n    },\n    get_x: function () {\n      return this._currentX;\n    },\n    get_y: function () {\n      return this._currentY;\n    },\n    get_hasPrev: function () {\n      return this._hasPrev;\n    },\n    get_hasNext: function () {\n      return this._hasNext;\n    },\n    get_count: function () {\n      return this._count;\n    },\n    set_count: function (value) {\n      this._count = value;\n\n      if (this._count < 0) {\n        this._count = 0;\n      }\n\n      if (this._count > this.get_countMax() - 1) {\n        this._count = this.get_countMax() - 1;\n      }\n\n      this._hasPrev = this._count == 0 ? false : true;\n      this._hasNext = this._count == this.get_countMax() - 1 ? false : true;\n      this._currentX = this._preCompX[this._count];\n      this._currentY = this._preCompY[this._count];\n      this.updateEntity();\n      return this._count;\n    },\n    get_countMax: function () {\n      return this._preCompX.length - 1;\n    },\n    get_samplingDistance: function () {\n      return this._samplingDistance;\n    },\n    set_samplingDistance: function (value) {\n      this._samplingDistance = value;\n      this._samplingDistanceSquared = this._samplingDistance * this._samplingDistance;\n      return value;\n    },\n    set_path: function (value) {\n      this._path = value;\n      this._preComputed = false;\n      this.reset();\n      return value;\n    },\n    reset: function () {\n      if (this._path.length > 0) {\n        var cond = (this._path.length & 1) == 0;\n        this._currentX = this._path[0];\n        this._currentY = this._path[1];\n        this._iPrev = 0;\n        this._iNext = 2;\n        this._hasPrev = false;\n        this._hasNext = true;\n        this._count = 0;\n        this.updateEntity();\n      } else {\n        this._hasPrev = false;\n        this._hasNext = false;\n        this._count = 0;\n      }\n    },\n    preCompute: function () {\n      this._preCompX.splice(0, this._preCompX.length);\n\n      this._preCompY.splice(0, this._preCompY.length);\n\n      this._count = 0;\n\n      this._preCompX.push(this._currentX);\n\n      this._preCompY.push(this._currentY);\n\n      this._preComputed = false;\n\n      while (this.next()) {\n        this._preCompX.push(this._currentX);\n\n        this._preCompY.push(this._currentY);\n      }\n\n      this.reset();\n      this._preComputed = true;\n    },\n    prev: function () {\n      if (!this._hasPrev) {\n        return false;\n      }\n\n      this._hasNext = true;\n\n      if (this._preComputed) {\n        this._count--;\n\n        if (this._count == 0) {\n          this._hasPrev = false;\n        }\n\n        this._currentX = this._preCompX[this._count];\n        this._currentY = this._preCompY[this._count];\n        this.updateEntity();\n        return true;\n      }\n\n      var remainingDist = this._samplingDistance;\n      var dist = 0;\n\n      while (true) {\n        var pathPrev = this._path[this._iPrev];\n        var pathPrev1 = this._path[this._iPrev + 1];\n        var a = this._currentX - pathPrev;\n        var b = this._currentY - pathPrev1;\n        dist = Math.sqrt(a * a + b * b);\n\n        if (dist < remainingDist) {\n          remainingDist -= dist;\n          this._iPrev -= 2;\n          this._iNext -= 2;\n\n          if (this._iNext == 0) {\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n\n      if (this._iNext == 0) {\n        this._currentX = this._path[0];\n        this._currentY = this._path[1];\n        this._hasPrev = false;\n        this._iNext = 2;\n        this._iPrev = 0;\n        this.updateEntity();\n        return true;\n      } else {\n        this._currentX += (this._path[this._iPrev] - this._currentX) * remainingDist / dist;\n        this._currentY += (this._path[this._iPrev + 1] - this._currentY) * remainingDist / dist;\n        this.updateEntity();\n        return true;\n      }\n    },\n    next: function () {\n      if (!this._hasNext) {\n        return false;\n      }\n\n      this._hasPrev = true;\n\n      if (this._preComputed) {\n        this._count++;\n\n        if (this._count == this._preCompX.length - 1) {\n          this._hasNext = false;\n        }\n\n        this._currentX = this._preCompX[this._count];\n        this._currentY = this._preCompY[this._count];\n        this.updateEntity();\n        return true;\n      }\n\n      var remainingDist = this._samplingDistance;\n      var dist = 0;\n\n      while (true) {\n        var pathNext = this._path[this._iNext];\n        var pathNext1 = this._path[this._iNext + 1];\n        var a = this._currentX - pathNext;\n        var b = this._currentY - pathNext1;\n        dist = Math.sqrt(a * a + b * b);\n\n        if (dist < remainingDist) {\n          remainingDist -= dist;\n          this._currentX = this._path[this._iNext];\n          this._currentY = this._path[this._iNext + 1];\n          this._iPrev += 2;\n          this._iNext += 2;\n\n          if (this._iNext == this._path.length) {\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n\n      if (this._iNext == this._path.length) {\n        this._currentX = this._path[this._iPrev];\n        this._currentY = this._path[this._iPrev + 1];\n        this._hasNext = false;\n        this._iNext = this._path.length - 2;\n        this._iPrev = this._iNext - 2;\n        this.updateEntity();\n        return true;\n      } else {\n        this._currentX += (this._path[this._iNext] - this._currentX) * remainingDist / dist;\n        this._currentY += (this._path[this._iNext + 1] - this._currentY) * remainingDist / dist;\n        this.updateEntity();\n        return true;\n      }\n    },\n    updateEntity: function () {\n      if (this.entity == null) {\n        return;\n      }\n\n      var cond = isNaN(this._currentX) && isNaN(this._currentY);\n      this.entity.x = this._currentX;\n      this.entity.y = this._currentY;\n    },\n    __class__: hxDaedalus_ai_trajectory_LinearPathSampler\n  };\n\n  var hxDaedalus_ai_trajectory_PathIterator = $hx_exports[\"hxDaedalus\"][\"ai\"][\"trajectory\"][\"PathIterator\"] = function () {};\n\n  hxDaedalus_ai_trajectory_PathIterator.__name__ = true;\n  hxDaedalus_ai_trajectory_PathIterator.prototype = {\n    get_entity: function () {\n      return this._entity;\n    },\n    set_entity: function (value) {\n      this._entity = value;\n      return value;\n    },\n    get_x: function () {\n      return this._currentX;\n    },\n    get_y: function () {\n      return this._currentY;\n    },\n    get_hasPrev: function () {\n      return this._hasPrev;\n    },\n    get_hasNext: function () {\n      return this._hasNext;\n    },\n    get_count: function () {\n      return this._count;\n    },\n    get_countMax: function () {\n      return this._countMax;\n    },\n    set_path: function (value) {\n      this._path = value;\n      this._countMax = this._path.length / 2 | 0;\n      this.reset();\n      return value;\n    },\n    reset: function () {\n      this._count = 0;\n      this._currentX = this._path[this._count];\n      this._currentY = this._path[this._count + 1];\n      this.updateEntity();\n      this._hasPrev = false;\n      this._hasNext = this._path.length > 2;\n    },\n    prev: function () {\n      if (!this._hasPrev) {\n        return false;\n      }\n\n      this._hasNext = true;\n      this._count--;\n      this._currentX = this._path[this._count * 2];\n      this._currentY = this._path[this._count * 2 + 1];\n      this.updateEntity();\n\n      if (this._count == 0) {\n        this._hasPrev = false;\n      }\n\n      return true;\n    },\n    next: function () {\n      if (!this._hasNext) {\n        return false;\n      }\n\n      this._hasPrev = true;\n      this._count++;\n      this._currentX = this._path[this._count * 2];\n      this._currentY = this._path[this._count * 2 + 1];\n      this.updateEntity();\n\n      if ((this._count + 1) * 2 == this._path.length) {\n        this._hasNext = false;\n      }\n\n      return true;\n    },\n    updateEntity: function () {\n      if (this._entity == null) {\n        return;\n      }\n\n      this._entity.x = this._currentX;\n      this._entity.y = this._currentY;\n    },\n    __class__: hxDaedalus_ai_trajectory_PathIterator\n  };\n\n  var hxDaedalus_data_Constants = $hx_exports[\"hxDaedalus\"][\"data\"][\"Constants\"] = function () {};\n\n  hxDaedalus_data_Constants.__name__ = true;\n\n  var hxDaedalus_data_ConstraintSegment = $hx_exports[\"hxDaedalus\"][\"data\"][\"ConstraintSegment\"] = function () {\n    this._id = hxDaedalus_data_ConstraintSegment.INC;\n    hxDaedalus_data_ConstraintSegment.INC++;\n    this._edges = [];\n  };\n\n  hxDaedalus_data_ConstraintSegment.__name__ = true;\n  hxDaedalus_data_ConstraintSegment.prototype = {\n    get_id: function () {\n      return this._id;\n    },\n    addEdge: function (edge) {\n      if (this._edges.indexOf(edge) == -1 && this._edges.indexOf(edge.get_oppositeEdge()) == -1) {\n        this._edges.push(edge);\n      }\n    },\n    removeEdge: function (edge) {\n      var index = this._edges.indexOf(edge);\n\n      if (index == -1) {\n        index = this._edges.indexOf(edge.get_oppositeEdge());\n      }\n\n      if (index != -1) {\n        this._edges.splice(index, 1);\n      }\n    },\n    get_edges: function () {\n      return this._edges;\n    },\n    dispose: function () {\n      this._edges = null;\n      this.fromShape = null;\n    },\n    toString: function () {\n      return \"seg_id \" + this._id;\n    },\n    __class__: hxDaedalus_data_ConstraintSegment\n  };\n\n  var hxDaedalus_data_ConstraintShape = $hx_exports[\"hxDaedalus\"][\"data\"][\"ConstraintShape\"] = function () {\n    this._id = hxDaedalus_data_ConstraintShape.INC;\n    hxDaedalus_data_ConstraintShape.INC++;\n    this.segments = [];\n  };\n\n  hxDaedalus_data_ConstraintShape.__name__ = true;\n  hxDaedalus_data_ConstraintShape.prototype = {\n    get_id: function () {\n      return this._id;\n    },\n    dispose: function () {\n      while (this.segments.length > 0) this.segments.pop().dispose();\n\n      this.segments = null;\n    },\n    __class__: hxDaedalus_data_ConstraintShape\n  };\n\n  var hxDaedalus_data_Edge = $hx_exports[\"hxDaedalus\"][\"data\"][\"Edge\"] = function () {\n    this.colorDebug = -1;\n    this._id = hxDaedalus_data_Edge.INC;\n    hxDaedalus_data_Edge.INC++;\n    this.fromConstraintSegments = [];\n  };\n\n  hxDaedalus_data_Edge.__name__ = true;\n  hxDaedalus_data_Edge.prototype = {\n    get_id: function () {\n      return this._id;\n    },\n    get_isReal: function () {\n      return this._isReal;\n    },\n    get_isConstrained: function () {\n      return this._isConstrained;\n    },\n    setDatas: function (originVertex, oppositeEdge, nextLeftEdge, leftFace, isReal, isConstrained) {\n      if (isConstrained == null) {\n        isConstrained = false;\n      }\n\n      if (isReal == null) {\n        isReal = true;\n      }\n\n      this._isConstrained = isConstrained;\n      this._isReal = isReal;\n      this._originVertex = originVertex;\n      this._oppositeEdge = oppositeEdge;\n      this._nextLeftEdge = nextLeftEdge;\n      this._leftFace = leftFace;\n    },\n    addFromConstraintSegment: function (segment) {\n      if (this.fromConstraintSegments.indexOf(segment) == -1) {\n        this.fromConstraintSegments.push(segment);\n      }\n    },\n    removeFromConstraintSegment: function (segment) {\n      var index = this.fromConstraintSegments.indexOf(segment);\n\n      if (index != -1) {\n        this.fromConstraintSegments.splice(index, 1);\n      }\n    },\n    set_originVertex: function (value) {\n      this._originVertex = value;\n      return value;\n    },\n    set_nextLeftEdge: function (value) {\n      this._nextLeftEdge = value;\n      return value;\n    },\n    set_leftFace: function (value) {\n      this._leftFace = value;\n      return value;\n    },\n    set_isConstrained: function (value) {\n      this._isConstrained = value;\n      return value;\n    },\n    dispose: function () {\n      this._originVertex = null;\n      this._oppositeEdge = null;\n      this._nextLeftEdge = null;\n      this._leftFace = null;\n      this.fromConstraintSegments = null;\n    },\n    get_originVertex: function () {\n      return this._originVertex;\n    },\n    get_destinationVertex: function () {\n      return this.get_oppositeEdge().get_originVertex();\n    },\n    get_oppositeEdge: function () {\n      return this._oppositeEdge;\n    },\n    get_nextLeftEdge: function () {\n      return this._nextLeftEdge;\n    },\n    get_prevLeftEdge: function () {\n      return this._nextLeftEdge.get_nextLeftEdge();\n    },\n    get_nextRightEdge: function () {\n      return this._oppositeEdge.get_nextLeftEdge().get_nextLeftEdge().get_oppositeEdge();\n    },\n    get_prevRightEdge: function () {\n      return this._oppositeEdge.get_nextLeftEdge().get_oppositeEdge();\n    },\n    get_rotLeftEdge: function () {\n      return this._nextLeftEdge.get_nextLeftEdge().get_oppositeEdge();\n    },\n    get_rotRightEdge: function () {\n      return this._oppositeEdge.get_nextLeftEdge();\n    },\n    get_leftFace: function () {\n      return this._leftFace;\n    },\n    get_rightFace: function () {\n      return this._oppositeEdge.get_leftFace();\n    },\n    toString: function () {\n      return \"edge \" + this.get_originVertex().get_id() + \" - \" + this.get_destinationVertex().get_id();\n    },\n    __class__: hxDaedalus_data_Edge\n  };\n\n  var hxDaedalus_data_Face = $hx_exports[\"hxDaedalus\"][\"data\"][\"Face\"] = function () {\n    this.colorDebug = -1;\n    this._id = hxDaedalus_data_Face.INC;\n    hxDaedalus_data_Face.INC++;\n  };\n\n  hxDaedalus_data_Face.__name__ = true;\n  hxDaedalus_data_Face.prototype = {\n    get_id: function () {\n      return this._id;\n    },\n    get_isReal: function () {\n      return this._isReal;\n    },\n    set_datas: function (edge) {\n      this._isReal = true;\n      this._edge = edge;\n    },\n    setDatas: function (edge, isReal) {\n      if (isReal == null) {\n        isReal = true;\n      }\n\n      this._isReal = isReal;\n      this._edge = edge;\n    },\n    dispose: function () {\n      this._edge = null;\n    },\n    get_edge: function () {\n      return this._edge;\n    },\n    __class__: hxDaedalus_data_Face\n  };\n\n  var hxDaedalus_data_Mesh = $hx_exports[\"hxDaedalus\"][\"data\"][\"Mesh\"] = function (width, height) {\n    this.__objectsUpdateInProgress = false;\n    this.__edgesToCheck = null;\n    this.__centerVertex = null;\n    this._objects = null;\n    this._constraintShapes = null;\n    this._faces = null;\n    this._edges = null;\n    this._vertices = null;\n    this._clipping = false;\n    this._height = 0;\n    this._width = 0;\n    this._id = hxDaedalus_data_Mesh.INC;\n    hxDaedalus_data_Mesh.INC++;\n    this._width = width;\n    this._height = height;\n    this._clipping = true;\n    this._vertices = [];\n    this._edges = [];\n    this._faces = [];\n    this._constraintShapes = [];\n    this._objects = [];\n    this.__edgesToCheck = [];\n  };\n\n  hxDaedalus_data_Mesh.__name__ = true;\n  hxDaedalus_data_Mesh.prototype = {\n    get_height: function () {\n      return this._height;\n    },\n    get_width: function () {\n      return this._width;\n    },\n    get_clipping: function () {\n      return this._clipping;\n    },\n    set_clipping: function (value) {\n      this._clipping = value;\n      return value;\n    },\n    get_id: function () {\n      return this._id;\n    },\n    dispose: function () {\n      while (this._vertices.length > 0) this._vertices.pop().dispose();\n\n      this._vertices = null;\n\n      while (this._edges.length > 0) this._edges.pop().dispose();\n\n      this._edges = null;\n\n      while (this._faces.length > 0) this._faces.pop().dispose();\n\n      this._faces = null;\n\n      while (this._constraintShapes.length > 0) this._constraintShapes.pop().dispose();\n\n      this._constraintShapes = null;\n\n      while (this._objects.length > 0) this._objects.pop().dispose();\n\n      this._objects = null;\n      this.__edgesToCheck = null;\n      this.__centerVertex = null;\n    },\n    get___constraintShapes: function () {\n      return this._constraintShapes;\n    },\n    buildFromRecord: function (rec) {\n      var positions = rec.split(\";\");\n      var i = 0;\n\n      while (i < positions.length) {\n        this.insertConstraintSegment(parseFloat(positions[i]), parseFloat(positions[i + 1]), parseFloat(positions[i + 2]), parseFloat(positions[i + 3]));\n        i += 4;\n      }\n    },\n    insertObject: function (object) {\n      if (object.get_constraintShape() != null) {\n        this.deleteObject(object);\n      }\n\n      var shape = new hxDaedalus_data_ConstraintShape();\n      var segment;\n      var coordinates = object.get_coordinates();\n      var m = object.get_matrix();\n      object.updateMatrixFromValues();\n      var x1;\n      var y1;\n      var x2;\n      var y2;\n      var transfx1;\n      var transfy1;\n      var transfx2;\n      var transfy2;\n      var i = 0;\n\n      while (i < coordinates.length) {\n        x1 = coordinates[i];\n        y1 = coordinates[i + 1];\n        x2 = coordinates[i + 2];\n        y2 = coordinates[i + 3];\n        transfx1 = m.transformX(x1, y1);\n        transfy1 = m.transformY(x1, y1);\n        transfx2 = m.transformX(x2, y2);\n        transfy2 = m.transformY(x2, y2);\n        segment = this.insertConstraintSegment(transfx1, transfy1, transfx2, transfy2);\n\n        if (segment != null) {\n          segment.fromShape = shape;\n          shape.segments.push(segment);\n        }\n\n        i += 4;\n      }\n\n      this._constraintShapes.push(shape);\n\n      object.set_constraintShape(shape);\n\n      if (!this.__objectsUpdateInProgress) {\n        this._objects.push(object);\n      }\n    },\n    deleteObject: function (object) {\n      if (object.get_constraintShape() == null) {\n        return;\n      }\n\n      this.deleteConstraintShape(object.get_constraintShape());\n      object.set_constraintShape(null);\n\n      if (!this.__objectsUpdateInProgress) {\n        var index = this._objects.indexOf(object);\n\n        this._objects.splice(index, 1);\n      }\n    },\n    updateObjects: function () {\n      this.__objectsUpdateInProgress = true;\n      var _g1 = 0;\n      var _g = this._objects.length;\n\n      while (_g1 < _g) {\n        var i = _g1++;\n\n        if (this._objects[i].get_hasChanged()) {\n          this.deleteObject(this._objects[i]);\n          this.insertObject(this._objects[i]);\n\n          this._objects[i].set_hasChanged(false);\n        }\n      }\n\n      this.__objectsUpdateInProgress = false;\n    },\n    insertConstraintShape: function (coordinates) {\n      var shape = new hxDaedalus_data_ConstraintShape();\n      var segment = null;\n      var i = 0;\n\n      while (i < coordinates.length) {\n        segment = this.insertConstraintSegment(coordinates[i], coordinates[i + 1], coordinates[i + 2], coordinates[i + 3]);\n\n        if (segment != null) {\n          segment.fromShape = shape;\n          shape.segments.push(segment);\n        }\n\n        i += 4;\n      }\n\n      this._constraintShapes.push(shape);\n\n      return shape;\n    },\n    deleteConstraintShape: function (shape) {\n      var _g1 = 0;\n      var _g = shape.segments.length;\n\n      while (_g1 < _g) {\n        var i = _g1++;\n        this.deleteConstraintSegment(shape.segments[i]);\n      }\n\n      shape.dispose();\n\n      this._constraintShapes.splice(this._constraintShapes.indexOf(shape), 1);\n    },\n    insertConstraintSegment: function (x1, y1, x2, y2) {\n      var p1pos = this.findPositionFromBounds(x1, y1);\n      var p2pos = this.findPositionFromBounds(x2, y2);\n      var newX1 = x1;\n      var newY1 = y1;\n      var newX2 = x2;\n      var newY2 = y2;\n\n      if (this._clipping && (p1pos != 0 || p2pos != 0)) {\n        var intersectPoint = new hxDaedalus_data_math_Point2D();\n\n        if (p1pos != 0 && p2pos != 0) {\n          if (x1 <= 0 && x2 <= 0 || x1 >= this._width && x2 >= this._width || y1 <= 0 && y2 <= 0 || y1 >= this._height && y2 >= this._height) {\n            return null;\n          }\n\n          if (p1pos == 8 && p2pos == 4 || p1pos == 4 && p2pos == 8) {\n            hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, 0, 0, 0, this._height, intersectPoint);\n            newX1 = intersectPoint.x;\n            newY1 = intersectPoint.y;\n            hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, this._width, 0, this._width, this._height, intersectPoint);\n            newX2 = intersectPoint.x;\n            newY2 = intersectPoint.y;\n          } else if (p1pos == 2 && p2pos == 6 || p1pos == 6 && p2pos == 2) {\n            hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, 0, 0, this._width, 0, intersectPoint);\n            newX1 = intersectPoint.x;\n            newY1 = intersectPoint.y;\n            hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, 0, this._height, this._width, this._height, intersectPoint);\n            newX2 = intersectPoint.x;\n            newY2 = intersectPoint.y;\n          } else if (p1pos == 2 && p2pos == 8 || p1pos == 8 && p2pos == 2) {\n            if (hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, 0, 0, this._width, 0, intersectPoint)) {\n              newX1 = intersectPoint.x;\n              newY1 = intersectPoint.y;\n              hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, 0, 0, 0, this._height, intersectPoint);\n              newX2 = intersectPoint.x;\n              newY2 = intersectPoint.y;\n            } else {\n              return null;\n            }\n          } else if (p1pos == 2 && p2pos == 4 || p1pos == 4 && p2pos == 2) {\n            if (hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, 0, 0, this._width, 0, intersectPoint)) {\n              newX1 = intersectPoint.x;\n              newY1 = intersectPoint.y;\n              hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, this._width, 0, this._width, this._height, intersectPoint);\n              newX2 = intersectPoint.x;\n              newY2 = intersectPoint.y;\n            } else {\n              return null;\n            }\n          } else if (p1pos == 6 && p2pos == 4 || p1pos == 4 && p2pos == 6) {\n            if (hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, 0, this._height, this._width, this._height, intersectPoint)) {\n              newX1 = intersectPoint.x;\n              newY1 = intersectPoint.y;\n              hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, this._width, 0, this._width, this._height, intersectPoint);\n              newX2 = intersectPoint.x;\n              newY2 = intersectPoint.y;\n            } else {\n              return null;\n            }\n          } else if (p1pos == 8 && p2pos == 6 || p1pos == 6 && p2pos == 8) {\n            if (hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, 0, this._height, this._width, this._height, intersectPoint)) {\n              newX1 = intersectPoint.x;\n              newY1 = intersectPoint.y;\n              hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, 0, 0, 0, this._height, intersectPoint);\n              newX2 = intersectPoint.x;\n              newY2 = intersectPoint.y;\n            } else {\n              return null;\n            }\n          } else {\n            var firstDone = false;\n            var secondDone = false;\n\n            if (hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, 0, 0, this._width, 0, intersectPoint)) {\n              newX1 = intersectPoint.x;\n              newY1 = intersectPoint.y;\n              firstDone = true;\n            }\n\n            if (hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, this._width, 0, this._width, this._height, intersectPoint)) {\n              if (!firstDone) {\n                newX1 = intersectPoint.x;\n                newY1 = intersectPoint.y;\n                firstDone = true;\n              } else {\n                newX2 = intersectPoint.x;\n                newY2 = intersectPoint.y;\n                secondDone = true;\n              }\n            }\n\n            if (!secondDone && hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, 0, this._height, this._width, this._height, intersectPoint)) {\n              if (!firstDone) {\n                newX1 = intersectPoint.x;\n                newY1 = intersectPoint.y;\n                firstDone = true;\n              } else {\n                newX2 = intersectPoint.x;\n                newY2 = intersectPoint.y;\n                secondDone = true;\n              }\n            }\n\n            if (!secondDone && hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, 0, 0, 0, this._height, intersectPoint)) {\n              newX2 = intersectPoint.x;\n              newY2 = intersectPoint.y;\n            }\n\n            if (!firstDone) {\n              return null;\n            }\n          }\n        } else {\n          if (p1pos == 2 || p2pos == 2) {\n            hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, 0, 0, this._width, 0, intersectPoint);\n          } else if (p1pos == 4 || p2pos == 4) {\n            hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, this._width, 0, this._width, this._height, intersectPoint);\n          } else if (p1pos == 6 || p2pos == 6) {\n            hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, 0, this._height, this._width, this._height, intersectPoint);\n          } else if (p1pos == 8 || p2pos == 8) {\n            hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, 0, 0, 0, this._height, intersectPoint);\n          } else if (!hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, 0, 0, this._width, 0, intersectPoint)) {\n            if (!hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, this._width, 0, this._width, this._height, intersectPoint)) {\n              if (!hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, 0, this._height, this._width, this._height, intersectPoint)) {\n                hxDaedalus_data_math_Geom2D.intersections2segments(x1, y1, x2, y2, 0, 0, 0, this._height, intersectPoint);\n              }\n            }\n          }\n\n          if (p1pos == 0) {\n            newX1 = x1;\n            newY1 = y1;\n          } else {\n            newX1 = x2;\n            newY1 = y2;\n          }\n\n          newX2 = intersectPoint.x;\n          newY2 = intersectPoint.y;\n        }\n      }\n\n      var vertexDown = this.insertVertex(newX1, newY1);\n\n      if (vertexDown == null) {\n        return null;\n      }\n\n      var vertexUp = this.insertVertex(newX2, newY2);\n\n      if (vertexUp == null) {\n        return null;\n      }\n\n      if (vertexDown == vertexUp) {\n        return null;\n      }\n\n      var iterVertexToOutEdges = new hxDaedalus_iterators_FromVertexToOutgoingEdges();\n      var currVertex;\n      var currEdge;\n      var i;\n      var segment = new hxDaedalus_data_ConstraintSegment();\n      var tempEdgeDownUp = new hxDaedalus_data_Edge();\n      var tempSdgeUpDown = new hxDaedalus_data_Edge();\n      tempEdgeDownUp.setDatas(vertexDown, tempSdgeUpDown, null, null, true, true);\n      tempSdgeUpDown.setDatas(vertexUp, tempEdgeDownUp, null, null, true, true);\n      var intersectedEdges = [];\n      var leftBoundingEdges = [];\n      var rightBoundingEdges = [];\n      var currObjet;\n      var pIntersect = new hxDaedalus_data_math_Point2D();\n      var edgeLeft;\n      var newEdgeDownUp;\n      var newEdgeUpDown;\n      var done;\n      currVertex = vertexDown;\n      currObjet = hxDaedalus_data_math_Intersection.EVertex(currVertex);\n\n      while (true) {\n        done = false;\n\n        switch (currObjet[1]) {\n          case 0:\n            var vertex = currObjet[2];\n            currVertex = vertex;\n            iterVertexToOutEdges.set_fromVertex(currVertex);\n\n            while (true) {\n              currEdge = iterVertexToOutEdges.next();\n\n              if (!(currEdge != null)) {\n                break;\n              }\n\n              if (currEdge.get_destinationVertex() == vertexUp) {\n                if (!currEdge.get_isConstrained()) {\n                  currEdge.set_isConstrained(true);\n                  currEdge.get_oppositeEdge().set_isConstrained(true);\n                }\n\n                currEdge.addFromConstraintSegment(segment);\n                currEdge.get_oppositeEdge().fromConstraintSegments = currEdge.fromConstraintSegments;\n                vertexDown.addFromConstraintSegment(segment);\n                vertexUp.addFromConstraintSegment(segment);\n                segment.addEdge(currEdge);\n                return segment;\n              }\n\n              if (hxDaedalus_data_math_Geom2D.distanceSquaredVertexToEdge(currEdge.get_destinationVertex(), tempEdgeDownUp) <= 0.0001) {\n                if (!currEdge.get_isConstrained()) {\n                  currEdge.set_isConstrained(true);\n                  currEdge.get_oppositeEdge().set_isConstrained(true);\n                }\n\n                currEdge.addFromConstraintSegment(segment);\n                currEdge.get_oppositeEdge().fromConstraintSegments = currEdge.fromConstraintSegments;\n                vertexDown.addFromConstraintSegment(segment);\n                segment.addEdge(currEdge);\n                vertexDown = currEdge.get_destinationVertex();\n                tempEdgeDownUp.set_originVertex(vertexDown);\n                currObjet = hxDaedalus_data_math_Intersection.EVertex(vertexDown);\n                done = true;\n                break;\n              }\n            }\n\n            if (done) {\n              continue;\n            }\n\n            iterVertexToOutEdges.set_fromVertex(currVertex);\n\n            while (true) {\n              currEdge = iterVertexToOutEdges.next();\n\n              if (!(currEdge != null)) {\n                break;\n              }\n\n              currEdge = currEdge.get_nextLeftEdge();\n\n              if (hxDaedalus_data_math_Geom2D.intersections2edges(currEdge, tempEdgeDownUp, pIntersect)) {\n                if (currEdge.get_isConstrained()) {\n                  vertexDown = this.splitEdge(currEdge, pIntersect.x, pIntersect.y);\n                  iterVertexToOutEdges.set_fromVertex(currVertex);\n\n                  while (true) {\n                    currEdge = iterVertexToOutEdges.next();\n\n                    if (!(currEdge != null)) {\n                      break;\n                    }\n\n                    if (currEdge.get_destinationVertex() == vertexDown) {\n                      currEdge.set_isConstrained(true);\n                      currEdge.get_oppositeEdge().set_isConstrained(true);\n                      currEdge.addFromConstraintSegment(segment);\n                      currEdge.get_oppositeEdge().fromConstraintSegments = currEdge.fromConstraintSegments;\n                      segment.addEdge(currEdge);\n                      break;\n                    }\n                  }\n\n                  currVertex.addFromConstraintSegment(segment);\n                  tempEdgeDownUp.set_originVertex(vertexDown);\n                  currObjet = hxDaedalus_data_math_Intersection.EVertex(vertexDown);\n                } else {\n                  intersectedEdges.push(currEdge);\n                  leftBoundingEdges.unshift(currEdge.get_nextLeftEdge());\n                  rightBoundingEdges.push(currEdge.get_prevLeftEdge());\n                  currEdge = currEdge.get_oppositeEdge();\n                  currObjet = hxDaedalus_data_math_Intersection.EEdge(currEdge);\n                }\n\n                break;\n              }\n            }\n\n            break;\n\n          case 1:\n            var edge = currObjet[2];\n            currEdge = edge;\n            edgeLeft = currEdge.get_nextLeftEdge();\n\n            if (edgeLeft.get_destinationVertex() == vertexUp) {\n              leftBoundingEdges.unshift(edgeLeft.get_nextLeftEdge());\n              rightBoundingEdges.push(edgeLeft);\n              newEdgeDownUp = new hxDaedalus_data_Edge();\n              newEdgeUpDown = new hxDaedalus_data_Edge();\n              newEdgeDownUp.setDatas(vertexDown, newEdgeUpDown, null, null, true, true);\n              newEdgeUpDown.setDatas(vertexUp, newEdgeDownUp, null, null, true, true);\n              leftBoundingEdges.push(newEdgeDownUp);\n              rightBoundingEdges.push(newEdgeUpDown);\n              this.insertNewConstrainedEdge(segment, newEdgeDownUp, intersectedEdges, leftBoundingEdges, rightBoundingEdges);\n              return segment;\n            } else if (hxDaedalus_data_math_Geom2D.distanceSquaredVertexToEdge(edgeLeft.get_destinationVertex(), tempEdgeDownUp) <= 0.0001) {\n              leftBoundingEdges.unshift(edgeLeft.get_nextLeftEdge());\n              rightBoundingEdges.push(edgeLeft);\n              newEdgeDownUp = new hxDaedalus_data_Edge();\n              newEdgeUpDown = new hxDaedalus_data_Edge();\n              newEdgeDownUp.setDatas(vertexDown, newEdgeUpDown, null, null, true, true);\n              newEdgeUpDown.setDatas(edgeLeft.get_destinationVertex(), newEdgeDownUp, null, null, true, true);\n              leftBoundingEdges.push(newEdgeDownUp);\n              rightBoundingEdges.push(newEdgeUpDown);\n              this.insertNewConstrainedEdge(segment, newEdgeDownUp, intersectedEdges, leftBoundingEdges, rightBoundingEdges);\n              intersectedEdges.splice(0, intersectedEdges.length);\n              leftBoundingEdges.splice(0, leftBoundingEdges.length);\n              rightBoundingEdges.splice(0, rightBoundingEdges.length);\n              vertexDown = edgeLeft.get_destinationVertex();\n              tempEdgeDownUp.set_originVertex(vertexDown);\n              currObjet = hxDaedalus_data_math_Intersection.EVertex(vertexDown);\n            } else if (hxDaedalus_data_math_Geom2D.intersections2edges(edgeLeft, tempEdgeDownUp, pIntersect)) {\n              if (edgeLeft.get_isConstrained()) {\n                currVertex = this.splitEdge(edgeLeft, pIntersect.x, pIntersect.y);\n                iterVertexToOutEdges.set_fromVertex(currVertex);\n\n                while (true) {\n                  currEdge = iterVertexToOutEdges.next();\n\n                  if (!(currEdge != null)) {\n                    break;\n                  }\n\n                  if (currEdge.get_destinationVertex() == leftBoundingEdges[0].get_originVertex()) {\n                    leftBoundingEdges.unshift(currEdge);\n                  }\n\n                  if (currEdge.get_destinationVertex() == rightBoundingEdges[rightBoundingEdges.length - 1].get_destinationVertex()) {\n                    rightBoundingEdges.push(currEdge.get_oppositeEdge());\n                  }\n                }\n\n                newEdgeDownUp = new hxDaedalus_data_Edge();\n                newEdgeUpDown = new hxDaedalus_data_Edge();\n                newEdgeDownUp.setDatas(vertexDown, newEdgeUpDown, null, null, true, true);\n                newEdgeUpDown.setDatas(currVertex, newEdgeDownUp, null, null, true, true);\n                leftBoundingEdges.push(newEdgeDownUp);\n                rightBoundingEdges.push(newEdgeUpDown);\n                this.insertNewConstrainedEdge(segment, newEdgeDownUp, intersectedEdges, leftBoundingEdges, rightBoundingEdges);\n                intersectedEdges.splice(0, intersectedEdges.length);\n                leftBoundingEdges.splice(0, leftBoundingEdges.length);\n                rightBoundingEdges.splice(0, rightBoundingEdges.length);\n                vertexDown = currVertex;\n                tempEdgeDownUp.set_originVertex(vertexDown);\n                currObjet = hxDaedalus_data_math_Intersection.EVertex(vertexDown);\n              } else {\n                intersectedEdges.push(edgeLeft);\n                leftBoundingEdges.unshift(edgeLeft.get_nextLeftEdge());\n                currEdge = edgeLeft.get_oppositeEdge();\n                currObjet = hxDaedalus_data_math_Intersection.EEdge(currEdge);\n              }\n            } else {\n              edgeLeft = edgeLeft.get_nextLeftEdge();\n              hxDaedalus_data_math_Geom2D.intersections2edges(edgeLeft, tempEdgeDownUp, pIntersect);\n\n              if (edgeLeft.get_isConstrained()) {\n                currVertex = this.splitEdge(edgeLeft, pIntersect.x, pIntersect.y);\n                iterVertexToOutEdges.set_fromVertex(currVertex);\n\n                while (true) {\n                  currEdge = iterVertexToOutEdges.next();\n\n                  if (!(currEdge != null)) {\n                    break;\n                  }\n\n                  if (currEdge.get_destinationVertex() == leftBoundingEdges[0].get_originVertex()) {\n                    leftBoundingEdges.unshift(currEdge);\n                  }\n\n                  if (currEdge.get_destinationVertex() == rightBoundingEdges[rightBoundingEdges.length - 1].get_destinationVertex()) {\n                    rightBoundingEdges.push(currEdge.get_oppositeEdge());\n                  }\n                }\n\n                newEdgeDownUp = new hxDaedalus_data_Edge();\n                newEdgeUpDown = new hxDaedalus_data_Edge();\n                newEdgeDownUp.setDatas(vertexDown, newEdgeUpDown, null, null, true, true);\n                newEdgeUpDown.setDatas(currVertex, newEdgeDownUp, null, null, true, true);\n                leftBoundingEdges.push(newEdgeDownUp);\n                rightBoundingEdges.push(newEdgeUpDown);\n                this.insertNewConstrainedEdge(segment, newEdgeDownUp, intersectedEdges, leftBoundingEdges, rightBoundingEdges);\n                intersectedEdges.splice(0, intersectedEdges.length);\n                leftBoundingEdges.splice(0, leftBoundingEdges.length);\n                rightBoundingEdges.splice(0, rightBoundingEdges.length);\n                vertexDown = currVertex;\n                tempEdgeDownUp.set_originVertex(vertexDown);\n                currObjet = hxDaedalus_data_math_Intersection.EVertex(vertexDown);\n              } else {\n                intersectedEdges.push(edgeLeft);\n                rightBoundingEdges.push(edgeLeft.get_prevLeftEdge());\n                currEdge = edgeLeft.get_oppositeEdge();\n                currObjet = hxDaedalus_data_math_Intersection.EEdge(currEdge);\n              }\n            }\n\n            break;\n\n          case 2:\n            var face = currObjet[2];\n            break;\n\n          case 3:\n            break;\n        }\n      }\n    },\n    insertNewConstrainedEdge: function (fromSegment, edgeDownUp, intersectedEdges, leftBoundingEdges, rightBoundingEdges) {\n      this._edges.push(edgeDownUp);\n\n      this._edges.push(edgeDownUp.get_oppositeEdge());\n\n      edgeDownUp.addFromConstraintSegment(fromSegment);\n      edgeDownUp.get_oppositeEdge().fromConstraintSegments = edgeDownUp.fromConstraintSegments;\n      fromSegment.addEdge(edgeDownUp);\n      edgeDownUp.get_originVertex().addFromConstraintSegment(fromSegment);\n      edgeDownUp.get_destinationVertex().addFromConstraintSegment(fromSegment);\n      this.untriangulate(intersectedEdges);\n      this.triangulate(leftBoundingEdges, true);\n      this.triangulate(rightBoundingEdges, true);\n    },\n    deleteConstraintSegment: function (segment) {\n      var i;\n      var vertexToDelete = [];\n      var edge = null;\n      var vertex;\n      var fromConstraintSegment;\n      var _g1 = 0;\n      var _g = segment.get_edges().length;\n\n      while (_g1 < _g) {\n        var i1 = _g1++;\n        edge = segment.get_edges()[i1];\n        edge.removeFromConstraintSegment(segment);\n\n        if (edge.fromConstraintSegments.length == 0) {\n          edge.set_isConstrained(false);\n          edge.get_oppositeEdge().set_isConstrained(false);\n        }\n\n        vertex = edge.get_originVertex();\n        vertex.removeFromConstraintSegment(segment);\n        vertexToDelete.push(vertex);\n      }\n\n      vertex = edge.get_destinationVertex();\n      vertex.removeFromConstraintSegment(segment);\n      vertexToDelete.push(vertex);\n      var _g11 = 0;\n      var _g2 = vertexToDelete.length;\n\n      while (_g11 < _g2) {\n        var i2 = _g11++;\n        this.deleteVertex(vertexToDelete[i2]);\n      }\n\n      segment.dispose();\n    },\n    check: function () {\n      var _g1 = 0;\n      var _g = this._edges.length;\n\n      while (_g1 < _g) {\n        var i = _g1++;\n\n        if (this._edges[i].get_nextLeftEdge() == null) {\n          return;\n        }\n      }\n    },\n    insertVertex: function (x, y) {\n      if (x < 0 || y < 0 || x > this._width || y > this._height) {\n        return null;\n      }\n\n      this.__edgesToCheck.splice(0, this.__edgesToCheck.length);\n\n      var inObject = hxDaedalus_data_math_Geom2D.locatePosition(x, y, this);\n      var newVertex = null;\n\n      switch (inObject[1]) {\n        case 0:\n          var vertex = inObject[2];\n          newVertex = vertex;\n          break;\n\n        case 1:\n          var edge = inObject[2];\n          newVertex = this.splitEdge(edge, x, y);\n          break;\n\n        case 2:\n          var face = inObject[2];\n          newVertex = this.splitFace(face, x, y);\n          break;\n\n        case 3:\n          break;\n      }\n\n      this.restoreAsDelaunay();\n      return newVertex;\n    },\n    flipEdge: function (edge) {\n      var eBot_Top = edge;\n      var eTop_Bot = edge.get_oppositeEdge();\n      var eLeft_Right = new hxDaedalus_data_Edge();\n      var eRight_Left = new hxDaedalus_data_Edge();\n      var eTop_Left = eBot_Top.get_nextLeftEdge();\n      var eLeft_Bot = eTop_Left.get_nextLeftEdge();\n      var eBot_Right = eTop_Bot.get_nextLeftEdge();\n      var eRight_Top = eBot_Right.get_nextLeftEdge();\n      var vBot = eBot_Top.get_originVertex();\n      var vTop = eTop_Bot.get_originVertex();\n      var vLeft = eLeft_Bot.get_originVertex();\n      var vRight = eRight_Top.get_originVertex();\n      var fLeft = eBot_Top.get_leftFace();\n      var fRight = eTop_Bot.get_leftFace();\n      var fBot = new hxDaedalus_data_Face();\n      var fTop = new hxDaedalus_data_Face();\n\n      this._edges.push(eLeft_Right);\n\n      this._edges.push(eRight_Left);\n\n      this._faces.push(fTop);\n\n      this._faces.push(fBot);\n\n      eLeft_Right.setDatas(vLeft, eRight_Left, eRight_Top, fTop, edge.get_isReal(), edge.get_isConstrained());\n      eRight_Left.setDatas(vRight, eLeft_Right, eLeft_Bot, fBot, edge.get_isReal(), edge.get_isConstrained());\n      fTop.setDatas(eLeft_Right);\n      fBot.setDatas(eRight_Left);\n\n      if (vTop.get_edge() == eTop_Bot) {\n        vTop.setDatas(eTop_Left);\n      }\n\n      if (vBot.get_edge() == eBot_Top) {\n        vBot.setDatas(eBot_Right);\n      }\n\n      eTop_Left.set_nextLeftEdge(eLeft_Right);\n      eTop_Left.set_leftFace(fTop);\n      eLeft_Bot.set_nextLeftEdge(eBot_Right);\n      eLeft_Bot.set_leftFace(fBot);\n      eBot_Right.set_nextLeftEdge(eRight_Left);\n      eBot_Right.set_leftFace(fBot);\n      eRight_Top.set_nextLeftEdge(eTop_Left);\n      eRight_Top.set_leftFace(fTop);\n      eBot_Top.dispose();\n      eTop_Bot.dispose();\n\n      this._edges.splice(this._edges.indexOf(eBot_Top), 1);\n\n      this._edges.splice(this._edges.indexOf(eTop_Bot), 1);\n\n      fLeft.dispose();\n      fRight.dispose();\n\n      this._faces.splice(this._faces.indexOf(fLeft), 1);\n\n      this._faces.splice(this._faces.indexOf(fRight), 1);\n\n      return eRight_Left;\n    },\n    splitEdge: function (edge, x, y) {\n      this.__edgesToCheck.splice(0, this.__edgesToCheck.length);\n\n      var eLeft_Right = edge;\n      var eRight_Left = eLeft_Right.get_oppositeEdge();\n      var eRight_Top = eLeft_Right.get_nextLeftEdge();\n      var eTop_Left = eRight_Top.get_nextLeftEdge();\n      var eLeft_Bot = eRight_Left.get_nextLeftEdge();\n      var eBot_Right = eLeft_Bot.get_nextLeftEdge();\n      var vTop = eTop_Left.get_originVertex();\n      var vLeft = eLeft_Right.get_originVertex();\n      var vBot = eBot_Right.get_originVertex();\n      var vRight = eRight_Left.get_originVertex();\n      var fTop = eLeft_Right.get_leftFace();\n      var fBot = eRight_Left.get_leftFace();\n\n      if ((vLeft.get_pos().x - x) * (vLeft.get_pos().x - x) + (vLeft.get_pos().y - y) * (vLeft.get_pos().y - y) <= 0.0001) {\n        return vLeft;\n      }\n\n      if ((vRight.get_pos().x - x) * (vRight.get_pos().x - x) + (vRight.get_pos().y - y) * (vRight.get_pos().y - y) <= 0.0001) {\n        return vRight;\n      }\n\n      var vCenter = new hxDaedalus_data_Vertex();\n      var eTop_Center = new hxDaedalus_data_Edge();\n      var eCenter_Top = new hxDaedalus_data_Edge();\n      var eBot_Center = new hxDaedalus_data_Edge();\n      var eCenter_Bot = new hxDaedalus_data_Edge();\n      var eLeft_Center = new hxDaedalus_data_Edge();\n      var eCenter_Left = new hxDaedalus_data_Edge();\n      var eRight_Center = new hxDaedalus_data_Edge();\n      var eCenter_Right = new hxDaedalus_data_Edge();\n      var fTopLeft = new hxDaedalus_data_Face();\n      var fBotLeft = new hxDaedalus_data_Face();\n      var fBotRight = new hxDaedalus_data_Face();\n      var fTopRight = new hxDaedalus_data_Face();\n\n      this._vertices.push(vCenter);\n\n      this._edges.push(eCenter_Top);\n\n      this._edges.push(eTop_Center);\n\n      this._edges.push(eCenter_Left);\n\n      this._edges.push(eLeft_Center);\n\n      this._edges.push(eCenter_Bot);\n\n      this._edges.push(eBot_Center);\n\n      this._edges.push(eCenter_Right);\n\n      this._edges.push(eRight_Center);\n\n      this._faces.push(fTopRight);\n\n      this._faces.push(fBotRight);\n\n      this._faces.push(fBotLeft);\n\n      this._faces.push(fTopLeft);\n\n      vCenter.setDatas(fTop.get_isReal() ? eCenter_Top : eCenter_Bot);\n      vCenter.get_pos().x = x;\n      vCenter.get_pos().y = y;\n      hxDaedalus_data_math_Geom2D.projectOrthogonaly(vCenter.get_pos(), eLeft_Right);\n      eCenter_Top.setDatas(vCenter, eTop_Center, eTop_Left, fTopLeft, fTop.get_isReal());\n      eTop_Center.setDatas(vTop, eCenter_Top, eCenter_Right, fTopRight, fTop.get_isReal());\n      eCenter_Left.setDatas(vCenter, eLeft_Center, eLeft_Bot, fBotLeft, edge.get_isReal(), edge.get_isConstrained());\n      eLeft_Center.setDatas(vLeft, eCenter_Left, eCenter_Top, fTopLeft, edge.get_isReal(), edge.get_isConstrained());\n      eCenter_Bot.setDatas(vCenter, eBot_Center, eBot_Right, fBotRight, fBot.get_isReal());\n      eBot_Center.setDatas(vBot, eCenter_Bot, eCenter_Left, fBotLeft, fBot.get_isReal());\n      eCenter_Right.setDatas(vCenter, eRight_Center, eRight_Top, fTopRight, edge.get_isReal(), edge.get_isConstrained());\n      eRight_Center.setDatas(vRight, eCenter_Right, eCenter_Bot, fBotRight, edge.get_isReal(), edge.get_isConstrained());\n      fTopLeft.setDatas(eCenter_Top, fTop.get_isReal());\n      fBotLeft.setDatas(eCenter_Left, fBot.get_isReal());\n      fBotRight.setDatas(eCenter_Bot, fBot.get_isReal());\n      fTopRight.setDatas(eCenter_Right, fTop.get_isReal());\n\n      if (vLeft.get_edge() == eLeft_Right) {\n        vLeft.setDatas(eLeft_Center);\n      }\n\n      if (vRight.get_edge() == eRight_Left) {\n        vRight.setDatas(eRight_Center);\n      }\n\n      eTop_Left.set_nextLeftEdge(eLeft_Center);\n      eTop_Left.set_leftFace(fTopLeft);\n      eLeft_Bot.set_nextLeftEdge(eBot_Center);\n      eLeft_Bot.set_leftFace(fBotLeft);\n      eBot_Right.set_nextLeftEdge(eRight_Center);\n      eBot_Right.set_leftFace(fBotRight);\n      eRight_Top.set_nextLeftEdge(eTop_Center);\n      eRight_Top.set_leftFace(fTopRight);\n\n      if (eLeft_Right.get_isConstrained()) {\n        var fromSegments = eLeft_Right.fromConstraintSegments;\n        eLeft_Center.fromConstraintSegments = fromSegments.slice(0);\n        eCenter_Left.fromConstraintSegments = eLeft_Center.fromConstraintSegments;\n        eCenter_Right.fromConstraintSegments = fromSegments.slice(0);\n        eRight_Center.fromConstraintSegments = eCenter_Right.fromConstraintSegments;\n        var edges;\n        var index;\n        var _g1 = 0;\n        var _g = eLeft_Right.fromConstraintSegments.length;\n\n        while (_g1 < _g) {\n          var i = _g1++;\n          edges = eLeft_Right.fromConstraintSegments[i].get_edges();\n          index = edges.indexOf(eLeft_Right);\n\n          if (index != -1) {\n            edges.splice(index, 1);\n            edges.splice(index, 0, eLeft_Center);\n            edges.splice(index + 1, 0, eCenter_Right);\n          } else {\n            index = edges.indexOf(eRight_Left);\n            edges.splice(index, 1);\n            edges.splice(index, 0, eRight_Center);\n            edges.splice(index + 1, 0, eCenter_Left);\n          }\n        }\n\n        vCenter.set_fromConstraintSegments(fromSegments.slice(0));\n      }\n\n      eLeft_Right.dispose();\n      eRight_Left.dispose();\n\n      this._edges.splice(this._edges.indexOf(eLeft_Right), 1);\n\n      this._edges.splice(this._edges.indexOf(eRight_Left), 1);\n\n      fTop.dispose();\n      fBot.dispose();\n\n      this._faces.splice(this._faces.indexOf(fTop), 1);\n\n      this._faces.splice(this._faces.indexOf(fBot), 1);\n\n      this.__centerVertex = vCenter;\n\n      this.__edgesToCheck.push(eTop_Left);\n\n      this.__edgesToCheck.push(eLeft_Bot);\n\n      this.__edgesToCheck.push(eBot_Right);\n\n      this.__edgesToCheck.push(eRight_Top);\n\n      return vCenter;\n    },\n    splitFace: function (face, x, y) {\n      this.__edgesToCheck.splice(0, this.__edgesToCheck.length);\n\n      var eTop_Left = face.get_edge();\n      var eLeft_Right = eTop_Left.get_nextLeftEdge();\n      var eRight_Top = eLeft_Right.get_nextLeftEdge();\n      var vTop = eTop_Left.get_originVertex();\n      var vLeft = eLeft_Right.get_originVertex();\n      var vRight = eRight_Top.get_originVertex();\n      var vCenter = new hxDaedalus_data_Vertex();\n      var eTop_Center = new hxDaedalus_data_Edge();\n      var eCenter_Top = new hxDaedalus_data_Edge();\n      var eLeft_Center = new hxDaedalus_data_Edge();\n      var eCenter_Left = new hxDaedalus_data_Edge();\n      var eRight_Center = new hxDaedalus_data_Edge();\n      var eCenter_Right = new hxDaedalus_data_Edge();\n      var fTopLeft = new hxDaedalus_data_Face();\n      var fBot = new hxDaedalus_data_Face();\n      var fTopRight = new hxDaedalus_data_Face();\n\n      this._vertices.push(vCenter);\n\n      this._edges.push(eTop_Center);\n\n      this._edges.push(eCenter_Top);\n\n      this._edges.push(eLeft_Center);\n\n      this._edges.push(eCenter_Left);\n\n      this._edges.push(eRight_Center);\n\n      this._edges.push(eCenter_Right);\n\n      this._faces.push(fTopLeft);\n\n      this._faces.push(fBot);\n\n      this._faces.push(fTopRight);\n\n      vCenter.setDatas(eCenter_Top);\n      vCenter.get_pos().x = x;\n      vCenter.get_pos().y = y;\n      eTop_Center.setDatas(vTop, eCenter_Top, eCenter_Right, fTopRight);\n      eCenter_Top.setDatas(vCenter, eTop_Center, eTop_Left, fTopLeft);\n      eLeft_Center.setDatas(vLeft, eCenter_Left, eCenter_Top, fTopLeft);\n      eCenter_Left.setDatas(vCenter, eLeft_Center, eLeft_Right, fBot);\n      eRight_Center.setDatas(vRight, eCenter_Right, eCenter_Left, fBot);\n      eCenter_Right.setDatas(vCenter, eRight_Center, eRight_Top, fTopRight);\n      fTopLeft.setDatas(eCenter_Top);\n      fBot.setDatas(eCenter_Left);\n      fTopRight.setDatas(eCenter_Right);\n      eTop_Left.set_nextLeftEdge(eLeft_Center);\n      eTop_Left.set_leftFace(fTopLeft);\n      eLeft_Right.set_nextLeftEdge(eRight_Center);\n      eLeft_Right.set_leftFace(fBot);\n      eRight_Top.set_nextLeftEdge(eTop_Center);\n      eRight_Top.set_leftFace(fTopRight);\n      face.dispose();\n\n      this._faces.splice(this._faces.indexOf(face), 1);\n\n      this.__centerVertex = vCenter;\n\n      this.__edgesToCheck.push(eTop_Left);\n\n      this.__edgesToCheck.push(eLeft_Right);\n\n      this.__edgesToCheck.push(eRight_Top);\n\n      return vCenter;\n    },\n    restoreAsDelaunay: function () {\n      var edge;\n\n      while (this.__edgesToCheck.length > 0) {\n        edge = this.__edgesToCheck.shift();\n\n        if (edge.get_isReal() && !edge.get_isConstrained() && !hxDaedalus_data_math_Geom2D.isDelaunay(edge)) {\n          if (edge.get_nextLeftEdge().get_destinationVertex() == this.__centerVertex) {\n            this.__edgesToCheck.push(edge.get_nextRightEdge());\n\n            this.__edgesToCheck.push(edge.get_prevRightEdge());\n          } else {\n            this.__edgesToCheck.push(edge.get_nextLeftEdge());\n\n            this.__edgesToCheck.push(edge.get_prevLeftEdge());\n          }\n\n          this.flipEdge(edge);\n        }\n      }\n    },\n    deleteVertex: function (vertex) {\n      var i;\n      var freeOfConstraint;\n      var iterEdges = new hxDaedalus_iterators_FromVertexToOutgoingEdges();\n      iterEdges.set_fromVertex(vertex);\n      iterEdges.realEdgesOnly = false;\n      var edge;\n      var outgoingEdges = [];\n      freeOfConstraint = vertex.get_fromConstraintSegments().length == 0;\n      var bound = [];\n      var realA = false;\n      var realB = false;\n      var boundA = [];\n      var boundB = [];\n\n      if (freeOfConstraint) {\n        while (true) {\n          edge = iterEdges.next();\n\n          if (!(edge != null)) {\n            break;\n          }\n\n          outgoingEdges.push(edge);\n          bound.push(edge.get_nextLeftEdge());\n        }\n      } else {\n        var edges;\n        var _g1 = 0;\n        var _g = vertex.get_fromConstraintSegments().length;\n\n        while (_g1 < _g) {\n          var i1 = _g1++;\n          edges = vertex.get_fromConstraintSegments()[i1].get_edges();\n\n          if (edges[0].get_originVertex() == vertex || edges[edges.length - 1].get_destinationVertex() == vertex) {\n            return false;\n          }\n        }\n\n        var count = 0;\n\n        while (true) {\n          edge = iterEdges.next();\n\n          if (!(edge != null)) {\n            break;\n          }\n\n          outgoingEdges.push(edge);\n\n          if (edge.get_isConstrained()) {\n            ++count;\n\n            if (count > 2) {\n              return false;\n            }\n          }\n        }\n\n        boundA = [];\n        boundB = [];\n        var constrainedEdgeA = null;\n        var constrainedEdgeB = null;\n        var edgeA = new hxDaedalus_data_Edge();\n        var edgeB = new hxDaedalus_data_Edge();\n\n        this._edges.push(edgeA);\n\n        this._edges.push(edgeB);\n\n        var _g11 = 0;\n        var _g2 = outgoingEdges.length;\n\n        while (_g11 < _g2) {\n          var i2 = _g11++;\n          edge = outgoingEdges[i2];\n\n          if (edge.get_isConstrained()) {\n            if (constrainedEdgeA == null) {\n              edgeB.setDatas(edge.get_destinationVertex(), edgeA, null, null, true, true);\n              boundA.push(edgeA);\n              boundA.push(edge.get_nextLeftEdge());\n              boundB.push(edgeB);\n              constrainedEdgeA = edge;\n            } else if (constrainedEdgeB == null) {\n              edgeA.setDatas(edge.get_destinationVertex(), edgeB, null, null, true, true);\n              boundB.push(edge.get_nextLeftEdge());\n              constrainedEdgeB = edge;\n            }\n          } else if (constrainedEdgeA == null) {\n            boundB.push(edge.get_nextLeftEdge());\n          } else if (constrainedEdgeB == null) {\n            boundA.push(edge.get_nextLeftEdge());\n          } else {\n            boundB.push(edge.get_nextLeftEdge());\n          }\n        }\n\n        realA = constrainedEdgeA.get_leftFace().get_isReal();\n        realB = constrainedEdgeB.get_leftFace().get_isReal();\n        edgeA.fromConstraintSegments = constrainedEdgeA.fromConstraintSegments.slice(0);\n        edgeB.fromConstraintSegments = edgeA.fromConstraintSegments;\n        var index;\n        var _g12 = 0;\n        var _g3 = vertex.get_fromConstraintSegments().length;\n\n        while (_g12 < _g3) {\n          var i3 = _g12++;\n          edges = vertex.get_fromConstraintSegments()[i3].get_edges();\n          index = edges.indexOf(constrainedEdgeA);\n\n          if (index != -1) {\n            edges.splice(index - 1, 2);\n            edges.splice(index - 1, 0, edgeA);\n          } else {\n            var index2 = edges.indexOf(constrainedEdgeB) - 1;\n            edges.splice(index2, 2);\n            edges.splice(index2, 0, edgeB);\n          }\n        }\n      }\n\n      var faceToDelete;\n      var _g13 = 0;\n      var _g4 = outgoingEdges.length;\n\n      while (_g13 < _g4) {\n        var i4 = _g13++;\n        edge = outgoingEdges[i4];\n        faceToDelete = edge.get_leftFace();\n\n        this._faces.splice(this._faces.indexOf(faceToDelete), 1);\n\n        faceToDelete.dispose();\n        edge.get_destinationVertex().set_edge(edge.get_nextLeftEdge());\n\n        this._edges.splice(this._edges.indexOf(edge.get_oppositeEdge()), 1);\n\n        edge.get_oppositeEdge().dispose();\n\n        this._edges.splice(this._edges.indexOf(edge), 1);\n\n        edge.dispose();\n      }\n\n      this._vertices.splice(this._vertices.indexOf(vertex), 1);\n\n      vertex.dispose();\n\n      if (freeOfConstraint) {\n        this.triangulate(bound, true);\n      } else {\n        this.triangulate(boundA, realA);\n        this.triangulate(boundB, realB);\n      }\n\n      return true;\n    },\n    untriangulate: function (edgesList) {\n      var i;\n      var verticesCleaned = new haxe_ds_ObjectMap();\n      var currEdge;\n      var outEdge;\n      var _g1 = 0;\n      var _g = edgesList.length;\n\n      while (_g1 < _g) {\n        var i1 = _g1++;\n        currEdge = edgesList[i1];\n        var key = currEdge.get_originVertex();\n\n        if (verticesCleaned.h[key.__id__] == null) {\n          currEdge.get_originVertex().set_edge(currEdge.get_prevLeftEdge().get_oppositeEdge());\n          verticesCleaned.set(currEdge.get_originVertex(), true);\n        }\n\n        var key1 = currEdge.get_destinationVertex();\n\n        if (verticesCleaned.h[key1.__id__] == null) {\n          currEdge.get_destinationVertex().set_edge(currEdge.get_nextLeftEdge());\n          verticesCleaned.set(currEdge.get_destinationVertex(), true);\n        }\n\n        this._faces.splice(this._faces.indexOf(currEdge.get_leftFace()), 1);\n\n        currEdge.get_leftFace().dispose();\n\n        if (i1 == edgesList.length - 1) {\n          this._faces.splice(this._faces.indexOf(currEdge.get_rightFace()), 1);\n\n          currEdge.get_rightFace().dispose();\n        }\n      }\n\n      var _g11 = 0;\n      var _g2 = edgesList.length;\n\n      while (_g11 < _g2) {\n        var i2 = _g11++;\n        currEdge = edgesList[i2];\n\n        this._edges.splice(this._edges.indexOf(currEdge.get_oppositeEdge()), 1);\n\n        this._edges.splice(this._edges.indexOf(currEdge), 1);\n\n        currEdge.get_oppositeEdge().dispose();\n        currEdge.dispose();\n      }\n    },\n    triangulate: function (bound, isReal) {\n      if (bound.length < 2) {\n        return;\n      } else if (bound.length == 2) {\n        var value = \"  - edge0: \" + bound[0].get_originVertex().get_id() + \" -> \" + bound[0].get_destinationVertex().get_id();\n        var value1 = \"  - edge1: \" + bound[1].get_originVertex().get_id() + \" -> \" + bound[1].get_destinationVertex().get_id();\n        return;\n      } else if (bound.length == 3) {\n        var f = new hxDaedalus_data_Face();\n        f.setDatas(bound[0], isReal);\n\n        this._faces.push(f);\n\n        bound[0].set_leftFace(f);\n        bound[1].set_leftFace(f);\n        bound[2].set_leftFace(f);\n        bound[0].set_nextLeftEdge(bound[1]);\n        bound[1].set_nextLeftEdge(bound[2]);\n        bound[2].set_nextLeftEdge(bound[0]);\n      } else {\n        var baseEdge = bound[0];\n        var vertexA = baseEdge.get_originVertex();\n        var vertexB = baseEdge.get_destinationVertex();\n        var vertexC;\n        var vertexCheck;\n        var circumcenter = new hxDaedalus_data_math_Point2D();\n        var radiusSquared;\n        var distanceSquared;\n        var isDelaunay = false;\n        var index = 0;\n        var i;\n        var _g1 = 2;\n        var _g = bound.length;\n\n        while (_g1 < _g) {\n          var i1 = _g1++;\n          vertexC = bound[i1].get_originVertex();\n\n          if (hxDaedalus_data_math_Geom2D.getRelativePosition2(vertexC.get_pos().x, vertexC.get_pos().y, baseEdge) == 1) {\n            index = i1;\n            isDelaunay = true;\n            hxDaedalus_data_math_Geom2D.getCircumcenter(vertexA.get_pos().x, vertexA.get_pos().y, vertexB.get_pos().x, vertexB.get_pos().y, vertexC.get_pos().x, vertexC.get_pos().y, circumcenter);\n            radiusSquared = (vertexA.get_pos().x - circumcenter.x) * (vertexA.get_pos().x - circumcenter.x) + (vertexA.get_pos().y - circumcenter.y) * (vertexA.get_pos().y - circumcenter.y);\n            radiusSquared -= 0.0001;\n            var _g3 = 2;\n            var _g2 = bound.length;\n\n            while (_g3 < _g2) {\n              var j = _g3++;\n\n              if (j != i1) {\n                vertexCheck = bound[j].get_originVertex();\n                distanceSquared = (vertexCheck.get_pos().x - circumcenter.x) * (vertexCheck.get_pos().x - circumcenter.x) + (vertexCheck.get_pos().y - circumcenter.y) * (vertexCheck.get_pos().y - circumcenter.y);\n\n                if (distanceSquared < radiusSquared) {\n                  isDelaunay = false;\n                  break;\n                }\n              }\n            }\n\n            if (isDelaunay) {\n              break;\n            }\n          }\n        }\n\n        if (!isDelaunay) {\n          var s = \"\";\n          var _g11 = 0;\n          var _g4 = bound.length;\n\n          while (_g11 < _g4) {\n            var i2 = _g11++;\n            s += bound[i2].get_originVertex().get_pos().x + \" , \";\n            s += bound[i2].get_originVertex().get_pos().y + \" , \";\n            s += bound[i2].get_destinationVertex().get_pos().x + \" , \";\n            s += bound[i2].get_destinationVertex().get_pos().y + \" , \";\n          }\n\n          index = 2;\n        }\n\n        var edgeA = null;\n        var edgeAopp = null;\n        var edgeB = null;\n        var edgeBopp;\n        var boundA;\n        var boundM;\n        var boundB;\n\n        if (index < bound.length - 1) {\n          edgeA = new hxDaedalus_data_Edge();\n          edgeAopp = new hxDaedalus_data_Edge();\n\n          this._edges.push(edgeA);\n\n          this._edges.push(edgeAopp);\n\n          edgeA.setDatas(vertexA, edgeAopp, null, null, isReal, false);\n          edgeAopp.setDatas(bound[index].get_originVertex(), edgeA, null, null, isReal, false);\n          boundA = bound.slice(index);\n          boundA.push(edgeA);\n          this.triangulate(boundA, isReal);\n        }\n\n        if (index > 2) {\n          edgeB = new hxDaedalus_data_Edge();\n          edgeBopp = new hxDaedalus_data_Edge();\n\n          this._edges.push(edgeB);\n\n          this._edges.push(edgeBopp);\n\n          edgeB.setDatas(bound[1].get_originVertex(), edgeBopp, null, null, isReal, false);\n          edgeBopp.setDatas(bound[index].get_originVertex(), edgeB, null, null, isReal, false);\n          boundB = bound.slice(1, index);\n          boundB.push(edgeBopp);\n          this.triangulate(boundB, isReal);\n        }\n\n        if (index == 2) {\n          boundM = [baseEdge, bound[1], edgeAopp];\n        } else if (index == bound.length - 1) {\n          boundM = [baseEdge, edgeB, bound[index]];\n        } else {\n          boundM = [baseEdge, edgeB, edgeAopp];\n        }\n\n        this.triangulate(boundM, isReal);\n      }\n    },\n    findPositionFromBounds: function (x, y) {\n      if (x <= 0) {\n        if (y <= 0) {\n          return 1;\n        } else if (y >= this._height) {\n          return 7;\n        } else {\n          return 8;\n        }\n      } else if (x >= this._width) {\n        if (y <= 0) {\n          return 3;\n        } else if (y >= this._height) {\n          return 5;\n        } else {\n          return 4;\n        }\n      } else if (y <= 0) {\n        return 2;\n      } else if (y >= this._height) {\n        return 6;\n      } else {\n        return 0;\n      }\n    },\n    debug: function () {\n      var i;\n      var _g1 = 0;\n      var _g = this._vertices.length;\n\n      while (_g1 < _g) {\n        var i1 = _g1++;\n\n        var value = \"-- vertex \" + this._vertices[i1].get_id();\n\n        var value1 = \"  edge \" + this._vertices[i1].get_edge().get_id() + \" - \" + Std.string(this._vertices[i1].get_edge());\n        var value2 = \"  edge isReal: \" + Std.string(this._vertices[i1].get_edge().get_isReal());\n      }\n\n      var _g11 = 0;\n      var _g2 = this._edges.length;\n\n      while (_g11 < _g2) {\n        var i2 = _g11++;\n        var value3 = \"-- edge \" + Std.string(this._edges[i2]);\n        var value4 = \"  isReal \" + this._edges[i2].get_id() + \" - \" + Std.string(this._edges[i2].get_isReal());\n        var value5 = \"  nextLeftEdge \" + Std.string(this._edges[i2].get_nextLeftEdge());\n        var value6 = \"  oppositeEdge \" + Std.string(this._edges[i2].get_oppositeEdge());\n      }\n    },\n    getVerticesAndEdges: function () {\n      var res = {\n        vertices: [],\n        edges: []\n      };\n      var vertex;\n      var incomingEdge;\n      var holdingFace;\n      var iterVertices = new hxDaedalus_iterators_FromMeshToVertices();\n      iterVertices.set_fromMesh(this);\n      var iterEdges = new hxDaedalus_iterators_FromVertexToIncomingEdges();\n      var dictVerticesDone = new haxe_ds_ObjectMap();\n\n      while (true) {\n        vertex = iterVertices.next();\n\n        if (!(vertex != null)) {\n          break;\n        }\n\n        dictVerticesDone.set(vertex, true);\n\n        if (!!(vertex.get_pos().x < 0 || vertex.get_pos().x > this.get_width() || vertex.get_pos().y < 0 || vertex.get_pos().y > this.get_height())) {\n          continue;\n        }\n\n        res.vertices.push(vertex);\n        iterEdges.set_fromVertex(vertex);\n\n        while (true) {\n          incomingEdge = iterEdges.next();\n\n          if (!(incomingEdge != null)) {\n            break;\n          }\n\n          var key = incomingEdge.get_originVertex();\n\n          if (!dictVerticesDone.h[key.__id__]) {\n            res.edges.push(incomingEdge);\n          }\n        }\n      }\n\n      return res;\n    },\n    vertexIsInsideAABB: function (vertex, mesh) {\n      return !(vertex.get_pos().x < 0 || vertex.get_pos().x > mesh.get_width() || vertex.get_pos().y < 0 || vertex.get_pos().y > mesh.get_height());\n    },\n    __class__: hxDaedalus_data_Mesh\n  };\n\n  var hxDaedalus_data_Object = $hx_exports[\"hxDaedalus\"][\"data\"][\"Object\"] = function () {\n    this._id = hxDaedalus_data_Object.INC;\n    hxDaedalus_data_Object.INC++;\n    this._pivotX = 0;\n    this._pivotY = 0;\n    this._matrix = new hxDaedalus_data_math_Matrix2D();\n    this._scaleX = 1;\n    this._scaleY = 1;\n    this._rotation = 0;\n    this._x = 0;\n    this._y = 0;\n    this._coordinates = [];\n    this._hasChanged = false;\n  };\n\n  hxDaedalus_data_Object.__name__ = true;\n  hxDaedalus_data_Object.prototype = {\n    get_id: function () {\n      return this._id;\n    },\n    dispose: function () {\n      this._matrix = null;\n      this._coordinates = null;\n      this._constraintShape = null;\n    },\n    updateValuesFromMatrix: function () {},\n    updateMatrixFromValues: function () {\n      this._matrix.identity();\n\n      this._matrix.translate(-this._pivotX, -this._pivotY);\n\n      this._matrix.scale(this._scaleX, this._scaleY);\n\n      this._matrix.rotate(this._rotation);\n\n      this._matrix.translate(this._x, this._y);\n    },\n    get_pivotX: function () {\n      return this._pivotX;\n    },\n    set_pivotX: function (value) {\n      this._pivotX = value;\n      this._hasChanged = true;\n      return value;\n    },\n    get_pivotY: function () {\n      return this._pivotY;\n    },\n    set_pivotY: function (value) {\n      this._pivotY = value;\n      this._hasChanged = true;\n      return value;\n    },\n    get_scaleX: function () {\n      return this._scaleX;\n    },\n    set_scaleX: function (value) {\n      if (this._scaleX != value) {\n        this._scaleX = value;\n        this._hasChanged = true;\n      }\n\n      return value;\n    },\n    get_scaleY: function () {\n      return this._scaleY;\n    },\n    set_scaleY: function (value) {\n      if (this._scaleY != value) {\n        this._scaleY = value;\n        this._hasChanged = true;\n      }\n\n      return value;\n    },\n    get_rotation: function () {\n      return this._rotation;\n    },\n    set_rotation: function (value) {\n      if (this._rotation != value) {\n        this._rotation = value;\n        this._hasChanged = true;\n      }\n\n      return value;\n    },\n    get_x: function () {\n      return this._x;\n    },\n    set_x: function (value) {\n      if (this._x != value) {\n        this._x = value;\n        this._hasChanged = true;\n      }\n\n      return value;\n    },\n    get_y: function () {\n      return this._y;\n    },\n    set_y: function (value) {\n      if (this._y != value) {\n        this._y = value;\n        this._hasChanged = true;\n      }\n\n      return value;\n    },\n    get_matrix: function () {\n      return this._matrix;\n    },\n    set_matrix: function (value) {\n      this._matrix = value;\n      this._hasChanged = true;\n      return value;\n    },\n    get_coordinates: function () {\n      return this._coordinates;\n    },\n    set_coordinates: function (value) {\n      this._coordinates = value;\n      this._hasChanged = true;\n      return value;\n    },\n    get_constraintShape: function () {\n      return this._constraintShape;\n    },\n    set_constraintShape: function (value) {\n      this._constraintShape = value;\n      this._hasChanged = true;\n      return value;\n    },\n    get_hasChanged: function () {\n      return this._hasChanged;\n    },\n    set_hasChanged: function (value) {\n      this._hasChanged = value;\n      return value;\n    },\n    get_edges: function () {\n      var res = [];\n      var seg = this._constraintShape.segments;\n      var _g1 = 0;\n      var _g = seg.length;\n\n      while (_g1 < _g) {\n        var i = _g1++;\n        var _g3 = 0;\n        var _g2 = seg[i].get_edges().length;\n\n        while (_g3 < _g2) {\n          var j = _g3++;\n          res.push(seg[i].get_edges()[j]);\n        }\n      }\n\n      return res;\n    },\n    __class__: hxDaedalus_data_Object\n  };\n\n  var hxDaedalus_data_Vertex = $hx_exports[\"hxDaedalus\"][\"data\"][\"Vertex\"] = function () {\n    this.colorDebug = -1;\n    this._id = hxDaedalus_data_Vertex.INC;\n    hxDaedalus_data_Vertex.INC++;\n    this._pos = new hxDaedalus_data_math_Point2D();\n    this._fromConstraintSegments = [];\n  };\n\n  hxDaedalus_data_Vertex.__name__ = true;\n  hxDaedalus_data_Vertex.prototype = {\n    get_id: function () {\n      return this._id;\n    },\n    get_isReal: function () {\n      return this._isReal;\n    },\n    get_pos: function () {\n      return this._pos;\n    },\n    get_fromConstraintSegments: function () {\n      return this._fromConstraintSegments;\n    },\n    set_fromConstraintSegments: function (value) {\n      return this._fromConstraintSegments = value;\n    },\n    setDatas: function (edge, isReal) {\n      if (isReal == null) {\n        isReal = true;\n      }\n\n      this._isReal = isReal;\n      this._edge = edge;\n    },\n    addFromConstraintSegment: function (segment) {\n      if (this._fromConstraintSegments.indexOf(segment) == -1) {\n        this._fromConstraintSegments.push(segment);\n      }\n    },\n    removeFromConstraintSegment: function (segment) {\n      var index = this._fromConstraintSegments.indexOf(segment);\n\n      if (index != -1) {\n        this._fromConstraintSegments.splice(index, 1);\n      }\n    },\n    dispose: function () {\n      this._pos = null;\n      this._edge = null;\n      this._fromConstraintSegments = null;\n    },\n    get_edge: function () {\n      return this._edge;\n    },\n    set_edge: function (value) {\n      return this._edge = value;\n    },\n    toString: function () {\n      return \"ver_id \" + this._id;\n    },\n    __class__: hxDaedalus_data_Vertex\n  };\n\n  var hxDaedalus_data_graph_Graph = $hx_exports[\"hxDaedalus\"][\"data\"][\"graph\"][\"Graph\"] = function () {\n    this._id = hxDaedalus_data_graph_Graph.INC;\n    hxDaedalus_data_graph_Graph.INC++;\n  };\n\n  hxDaedalus_data_graph_Graph.__name__ = true;\n  hxDaedalus_data_graph_Graph.prototype = {\n    get_id: function () {\n      return this._id;\n    },\n    get_edge: function () {\n      return this._edge;\n    },\n    get_node: function () {\n      return this._node;\n    },\n    dispose: function () {\n      while (this._node != null) this.deleteNode(this._node);\n    },\n    insertNode: function () {\n      var node = new hxDaedalus_data_graph_GraphNode();\n\n      if (this._node != null) {\n        node.set_next(this._node);\n\n        this._node.set_prev(node);\n      }\n\n      this._node = node;\n      return node;\n    },\n    deleteNode: function (node) {\n      while (node.get_outgoingEdge() != null) {\n        if (node.get_outgoingEdge().get_oppositeEdge() != null) {\n          this.deleteEdge(node.get_outgoingEdge().get_oppositeEdge());\n        }\n\n        this.deleteEdge(node.get_outgoingEdge());\n      }\n\n      var otherNode = this._node;\n      var incomingEdge;\n\n      while (otherNode != null) {\n        incomingEdge = otherNode.get_successorNodes().h[node.__id__];\n\n        if (incomingEdge != null) {\n          this.deleteEdge(incomingEdge);\n        }\n\n        otherNode = otherNode.get_next();\n      }\n\n      if (this._node == node) {\n        if (node.get_next() != null) {\n          node.get_next().set_prev(null);\n          this._node = node.get_next();\n        } else {\n          this._node = null;\n        }\n      } else if (node.get_next() != null) {\n        node.get_prev().set_next(node.get_next());\n        node.get_next().set_prev(node.get_prev());\n      } else {\n        node.get_prev().set_next(null);\n      }\n\n      node.dispose();\n    },\n    insertEdge: function (fromNode, toNode) {\n      if (fromNode.get_successorNodes().h[toNode.__id__] != null) {\n        return null;\n      }\n\n      var edge = new hxDaedalus_data_graph_GraphEdge();\n\n      if (this._edge != null) {\n        this._edge.set_prev(edge);\n\n        edge.set_next(this._edge);\n      }\n\n      this._edge = edge;\n      edge.set_sourceNode(fromNode);\n      edge.set_destinationNode(toNode);\n      fromNode.get_successorNodes().set(toNode, edge);\n\n      if (fromNode.get_outgoingEdge() != null) {\n        fromNode.get_outgoingEdge().set_rotPrevEdge(edge);\n        edge.set_rotNextEdge(fromNode.get_outgoingEdge());\n        fromNode.set_outgoingEdge(edge);\n      } else {\n        fromNode.set_outgoingEdge(edge);\n      }\n\n      var oppositeEdge = toNode.get_successorNodes().h[fromNode.__id__];\n\n      if (oppositeEdge != null) {\n        edge.set_oppositeEdge(oppositeEdge);\n        oppositeEdge.set_oppositeEdge(edge);\n      }\n\n      return edge;\n    },\n    deleteEdge: function (edge) {\n      if (this._edge == edge) {\n        if (edge.get_next() != null) {\n          edge.get_next().set_prev(null);\n          this._edge = edge.get_next();\n        } else {\n          this._edge = null;\n        }\n      } else if (edge.get_next() != null) {\n        edge.get_prev().set_next(edge.get_next());\n        edge.get_next().set_prev(edge.get_prev());\n      } else {\n        edge.get_prev().set_next(null);\n      }\n\n      if (edge.get_sourceNode().get_outgoingEdge() == edge) {\n        if (edge.get_rotNextEdge() != null) {\n          edge.get_rotNextEdge().set_rotPrevEdge(null);\n          edge.get_sourceNode().set_outgoingEdge(edge.get_rotNextEdge());\n        } else {\n          edge.get_sourceNode().set_outgoingEdge(null);\n        }\n      } else if (edge.get_rotNextEdge() != null) {\n        edge.get_rotPrevEdge().set_rotNextEdge(edge.get_rotNextEdge());\n        edge.get_rotNextEdge().set_rotPrevEdge(edge.get_rotPrevEdge());\n      } else {\n        edge.get_rotPrevEdge().set_rotNextEdge(null);\n      }\n\n      edge.dispose();\n    },\n    __class__: hxDaedalus_data_graph_Graph\n  };\n\n  var hxDaedalus_data_graph_GraphEdge = $hx_exports[\"hxDaedalus\"][\"data\"][\"graph\"][\"GraphEdge\"] = function () {\n    this._id = hxDaedalus_data_graph_GraphEdge.INC;\n    hxDaedalus_data_graph_GraphEdge.INC++;\n  };\n\n  hxDaedalus_data_graph_GraphEdge.__name__ = true;\n  hxDaedalus_data_graph_GraphEdge.prototype = {\n    get_id: function () {\n      return this._id;\n    },\n    dispose: function () {},\n    get_prev: function () {\n      return this._prev;\n    },\n    set_prev: function (value) {\n      this._prev = value;\n      return value;\n    },\n    get_next: function () {\n      return this._next;\n    },\n    set_next: function (value) {\n      this._next = value;\n      return value;\n    },\n    get_rotPrevEdge: function () {\n      return this._rotPrevEdge;\n    },\n    set_rotPrevEdge: function (value) {\n      this._rotPrevEdge = value;\n      return value;\n    },\n    get_rotNextEdge: function () {\n      return this._rotNextEdge;\n    },\n    set_rotNextEdge: function (value) {\n      this._rotNextEdge = value;\n      return value;\n    },\n    get_oppositeEdge: function () {\n      return this._oppositeEdge;\n    },\n    set_oppositeEdge: function (value) {\n      this._oppositeEdge = value;\n      return value;\n    },\n    get_sourceNode: function () {\n      return this._sourceNode;\n    },\n    set_sourceNode: function (value) {\n      this._sourceNode = value;\n      return value;\n    },\n    get_destinationNode: function () {\n      return this._destinationNode;\n    },\n    set_destinationNode: function (value) {\n      this._destinationNode = value;\n      return value;\n    },\n    get_data: function () {\n      return this._data;\n    },\n    set_data: function (value) {\n      this._data = value;\n      return value;\n    },\n    __class__: hxDaedalus_data_graph_GraphEdge\n  };\n\n  var hxDaedalus_data_graph_GraphNode = $hx_exports[\"hxDaedalus\"][\"data\"][\"graph\"][\"GraphNode\"] = function () {\n    this._id = hxDaedalus_data_graph_GraphNode.INC;\n    hxDaedalus_data_graph_GraphNode.INC++;\n    this._successorNodes = new haxe_ds_ObjectMap();\n  };\n\n  hxDaedalus_data_graph_GraphNode.__name__ = true;\n  hxDaedalus_data_graph_GraphNode.prototype = {\n    get_id: function () {\n      return this._id;\n    },\n    dispose: function () {\n      this._prev = null;\n      this._next = null;\n      this._outgoingEdge = null;\n      this._successorNodes = null;\n      this._data = null;\n    },\n    get_prev: function () {\n      return this._prev;\n    },\n    set_prev: function (value) {\n      this._prev = value;\n      return value;\n    },\n    get_next: function () {\n      return this._next;\n    },\n    set_next: function (value) {\n      this._next = value;\n      return value;\n    },\n    get_outgoingEdge: function () {\n      return this._outgoingEdge;\n    },\n    set_outgoingEdge: function (value) {\n      this._outgoingEdge = value;\n      return value;\n    },\n    get_successorNodes: function () {\n      return this._successorNodes;\n    },\n    set_successorNodes: function (value) {\n      this._successorNodes = value;\n      return value;\n    },\n    get_data: function () {\n      return this._data;\n    },\n    set_data: function (value) {\n      this._data = value;\n      return value;\n    },\n    __class__: hxDaedalus_data_graph_GraphNode\n  };\n\n  var hxDaedalus_data_math_EdgeData = $hx_exports[\"hxDaedalus\"][\"data\"][\"math\"][\"EdgeData\"] = function () {};\n\n  hxDaedalus_data_math_EdgeData.__name__ = true;\n  hxDaedalus_data_math_EdgeData.prototype = {\n    __class__: hxDaedalus_data_math_EdgeData\n  };\n  var hxDaedalus_data_math_Intersection = {\n    __ename__: true,\n    __constructs__: [\"EVertex\", \"EEdge\", \"EFace\", \"ENull\"]\n  };\n\n  hxDaedalus_data_math_Intersection.EVertex = function (vertex) {\n    var $x = [\"EVertex\", 0, vertex];\n    $x.__enum__ = hxDaedalus_data_math_Intersection;\n    $x.toString = $estr;\n    return $x;\n  };\n\n  hxDaedalus_data_math_Intersection.EEdge = function (edge) {\n    var $x = [\"EEdge\", 1, edge];\n    $x.__enum__ = hxDaedalus_data_math_Intersection;\n    $x.toString = $estr;\n    return $x;\n  };\n\n  hxDaedalus_data_math_Intersection.EFace = function (face) {\n    var $x = [\"EFace\", 2, face];\n    $x.__enum__ = hxDaedalus_data_math_Intersection;\n    $x.toString = $estr;\n    return $x;\n  };\n\n  hxDaedalus_data_math_Intersection.ENull = [\"ENull\", 3];\n  hxDaedalus_data_math_Intersection.ENull.toString = $estr;\n  hxDaedalus_data_math_Intersection.ENull.__enum__ = hxDaedalus_data_math_Intersection;\n\n  var hxDaedalus_data_math_Point2D = $hx_exports[\"hxDaedalus\"][\"data\"][\"math\"][\"Point2D\"] = function (x_, y_) {\n    if (y_ == null) {\n      y_ = 0;\n    }\n\n    if (x_ == null) {\n      x_ = 0;\n    }\n\n    this.x = x_;\n    this.y = y_;\n  };\n\n  hxDaedalus_data_math_Point2D.__name__ = true;\n  hxDaedalus_data_math_Point2D.prototype = {\n    transform: function (matrix) {\n      matrix.tranform(this);\n    },\n    setXY: function (x_, y_) {\n      this.x = x_;\n      this.y = y_;\n    },\n    clone: function () {\n      return new hxDaedalus_data_math_Point2D(this.x, this.y);\n    },\n    substract: function (p) {\n      this.x -= p.x;\n      this.y -= p.y;\n    },\n    get_length: function () {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n    normalize: function () {\n      var norm = this.get_length();\n      this.x /= norm;\n      this.y /= norm;\n    },\n    scale: function (s) {\n      this.x *= s;\n      this.y *= s;\n    },\n    distanceTo: function (p) {\n      var diffX = this.x - p.x;\n      var diffY = this.y - p.y;\n      return Math.sqrt(diffX * diffX + diffY * diffY);\n    },\n    __class__: hxDaedalus_data_math_Point2D\n  };\n\n  var hxDaedalus_data_math_Geom2D = $hx_exports[\"hxDaedalus\"][\"data\"][\"math\"][\"Geom2D\"] = function () {};\n\n  hxDaedalus_data_math_Geom2D.__name__ = true;\n\n  hxDaedalus_data_math_Geom2D.locatePosition = function (x, y, mesh) {\n    if (hxDaedalus_data_math_Geom2D._randGen == null) {\n      hxDaedalus_data_math_Geom2D._randGen = new hxDaedalus_data_math_RandGenerator();\n    }\n\n    hxDaedalus_data_math_Geom2D._randGen.set_seed(x * 10 + 4 * y | 0);\n\n    var i;\n\n    hxDaedalus_data_math_Geom2D.__samples.splice(0, hxDaedalus_data_math_Geom2D.__samples.length);\n\n    var numSamples = Math.pow(mesh._vertices.length, 0.33333333333333331) | 0;\n    hxDaedalus_data_math_Geom2D._randGen.rangeMin = 0;\n    hxDaedalus_data_math_Geom2D._randGen.rangeMax = mesh._vertices.length - 1;\n    var _g1 = 0;\n    var _g = numSamples;\n\n    while (_g1 < _g) {\n      var i1 = _g1++;\n\n      var _rnd = hxDaedalus_data_math_Geom2D._randGen.next();\n\n      var cond = _rnd < 0 || _rnd > mesh._vertices.length - 1;\n      var cond1 = mesh._vertices == null;\n      var message = \"vertices: \" + mesh._vertices.length;\n\n      hxDaedalus_data_math_Geom2D.__samples.push(mesh._vertices[_rnd]);\n    }\n\n    var currVertex;\n    var currVertexPos;\n    var distSquared;\n    var minDistSquared = Infinity;\n    var closedVertex = null;\n    var _g11 = 0;\n    var _g2 = numSamples;\n\n    while (_g11 < _g2) {\n      var i2 = _g11++;\n      currVertex = hxDaedalus_data_math_Geom2D.__samples[i2];\n      currVertexPos = currVertex.get_pos();\n      distSquared = (currVertexPos.x - x) * (currVertexPos.x - x) + (currVertexPos.y - y) * (currVertexPos.y - y);\n\n      if (distSquared < minDistSquared) {\n        minDistSquared = distSquared;\n        closedVertex = currVertex;\n      }\n    }\n\n    var currFace;\n    var iterFace = new hxDaedalus_iterators_FromVertexToHoldingFaces();\n    iterFace.set_fromVertex(closedVertex);\n    currFace = iterFace.next();\n    var faceVisited = new haxe_ds_ObjectMap();\n    var currEdge;\n    var iterEdge = new hxDaedalus_iterators_FromFaceToInnerEdges();\n    var objectContainer = hxDaedalus_data_math_Intersection.ENull;\n    var relativPos;\n    var numIter = 0;\n\n    while (true) {\n      var tmp;\n\n      if (!faceVisited.h[currFace.__id__]) {\n        objectContainer = hxDaedalus_data_math_Geom2D.isInFace(x, y, currFace);\n        var _g3 = objectContainer;\n\n        if (_g3[1] == 3) {\n          tmp = true;\n        } else {\n          tmp = false;\n        }\n      } else {\n        tmp = true;\n      }\n\n      if (!tmp) {\n        break;\n      }\n\n      ++numIter;\n      var tmp1 = numIter == 50;\n      iterEdge.set_fromFace(currFace);\n\n      while (true) {\n        currEdge = iterEdge.next();\n\n        if (currEdge == null) {\n          return hxDaedalus_data_math_Intersection.ENull;\n        }\n\n        relativPos = hxDaedalus_data_math_Geom2D.getRelativePosition(x, y, currEdge);\n\n        if (!(relativPos == 1 || relativPos == 0)) {\n          break;\n        }\n      }\n\n      currFace = currEdge.get_rightFace();\n    }\n\n    return objectContainer;\n  };\n\n  hxDaedalus_data_math_Geom2D.isCircleIntersectingAnyConstraint = function (x, y, radius, mesh) {\n    if (x <= 0 || x >= mesh.get_width() || y <= 0 || y >= mesh.get_height()) {\n      return true;\n    }\n\n    var loc = hxDaedalus_data_math_Geom2D.locatePosition(x, y, mesh);\n    var face;\n\n    switch (loc[1]) {\n      case 0:\n        var vertex = loc[2];\n        face = vertex.get_edge().get_leftFace();\n        break;\n\n      case 1:\n        var edge = loc[2];\n        face = edge.get_leftFace();\n        break;\n\n      case 2:\n        var face_ = loc[2];\n        face = face_;\n        break;\n\n      case 3:\n        face = null;\n        break;\n    }\n\n    var radiusSquared = radius * radius;\n    var pos;\n    var distSquared;\n    pos = face.get_edge().get_originVertex().get_pos();\n    distSquared = (pos.x - x) * (pos.x - x) + (pos.y - y) * (pos.y - y);\n\n    if (distSquared <= radiusSquared) {\n      return true;\n    }\n\n    pos = face.get_edge().get_nextLeftEdge().get_originVertex().get_pos();\n    distSquared = (pos.x - x) * (pos.x - x) + (pos.y - y) * (pos.y - y);\n\n    if (distSquared <= radiusSquared) {\n      return true;\n    }\n\n    pos = face.get_edge().get_nextLeftEdge().get_nextLeftEdge().get_originVertex().get_pos();\n    distSquared = (pos.x - x) * (pos.x - x) + (pos.y - y) * (pos.y - y);\n\n    if (distSquared <= radiusSquared) {\n      return true;\n    }\n\n    var edgesToCheck = [];\n    edgesToCheck.push(face.get_edge());\n    edgesToCheck.push(face.get_edge().get_nextLeftEdge());\n    edgesToCheck.push(face.get_edge().get_nextLeftEdge().get_nextLeftEdge());\n    var edge1;\n    var pos1;\n    var pos2;\n    var checkedEdges = new haxe_ds_ObjectMap();\n    var intersecting;\n\n    while (edgesToCheck.length > 0) {\n      edge1 = edgesToCheck.pop();\n      checkedEdges.set(edge1, true);\n      pos1 = edge1.get_originVertex().get_pos();\n      pos2 = edge1.get_destinationVertex().get_pos();\n      intersecting = hxDaedalus_data_math_Geom2D.intersectionsSegmentCircle(pos1.x, pos1.y, pos2.x, pos2.y, x, y, radius);\n\n      if (intersecting) {\n        if (edge1.get_isConstrained()) {\n          return true;\n        } else {\n          edge1 = edge1.get_oppositeEdge().get_nextLeftEdge();\n          var tmp;\n          var tmp1;\n          var tmp2;\n\n          if (!checkedEdges.h[edge1.__id__]) {\n            var key = edge1.get_oppositeEdge();\n            tmp2 = !checkedEdges.h[key.__id__];\n          } else {\n            tmp2 = false;\n          }\n\n          if (tmp2) {\n            tmp1 = edgesToCheck.indexOf(edge1) == -1;\n          } else {\n            tmp1 = false;\n          }\n\n          if (tmp1) {\n            tmp = edgesToCheck.indexOf(edge1.get_oppositeEdge()) == -1;\n          } else {\n            tmp = false;\n          }\n\n          if (tmp) {\n            edgesToCheck.push(edge1);\n          }\n\n          edge1 = edge1.get_nextLeftEdge();\n          var tmp3;\n          var tmp4;\n          var tmp5;\n\n          if (!checkedEdges.h[edge1.__id__]) {\n            var key1 = edge1.get_oppositeEdge();\n            tmp5 = !checkedEdges.h[key1.__id__];\n          } else {\n            tmp5 = false;\n          }\n\n          if (tmp5) {\n            tmp4 = edgesToCheck.indexOf(edge1) == -1;\n          } else {\n            tmp4 = false;\n          }\n\n          if (tmp4) {\n            tmp3 = edgesToCheck.indexOf(edge1.get_oppositeEdge()) == -1;\n          } else {\n            tmp3 = false;\n          }\n\n          if (tmp3) {\n            edgesToCheck.push(edge1);\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n\n  hxDaedalus_data_math_Geom2D.getDirection = function (x1, y1, x2, y2, x3, y3) {\n    var dot = (x3 - x1) * (y2 - y1) + (y3 - y1) * (-x2 + x1);\n\n    if (dot == 0) {\n      return 0;\n    } else if (dot > 0) {\n      return 1;\n    } else {\n      return -1;\n    }\n  };\n\n  hxDaedalus_data_math_Geom2D.getDirection2 = function (x1, y1, x2, y2, x3, y3) {\n    var dot = (x3 - x1) * (y2 - y1) + (y3 - y1) * (-x2 + x1);\n\n    if (dot == 0) {\n      return 0;\n    } else if (dot > 0) {\n      if (hxDaedalus_data_math_Geom2D.distanceSquaredPointToLine(x3, y3, x1, y1, x2, y2) <= 0.0001) {\n        return 0;\n      } else {\n        return 1;\n      }\n    } else if (hxDaedalus_data_math_Geom2D.distanceSquaredPointToLine(x3, y3, x1, y1, x2, y2) <= 0.0001) {\n      return 0;\n    } else {\n      return -1;\n    }\n  };\n\n  hxDaedalus_data_math_Geom2D.getRelativePosition = function (x, y, eUp) {\n    return hxDaedalus_data_math_Geom2D.getDirection(eUp.get_originVertex().get_pos().x, eUp.get_originVertex().get_pos().y, eUp.get_destinationVertex().get_pos().x, eUp.get_destinationVertex().get_pos().y, x, y);\n  };\n\n  hxDaedalus_data_math_Geom2D.getRelativePosition2 = function (x, y, eUp) {\n    return hxDaedalus_data_math_Geom2D.getDirection2(eUp.get_originVertex().get_pos().x, eUp.get_originVertex().get_pos().y, eUp.get_destinationVertex().get_pos().x, eUp.get_destinationVertex().get_pos().y, x, y);\n  };\n\n  hxDaedalus_data_math_Geom2D.isInFace = function (x, y, polygon) {\n    var result = hxDaedalus_data_math_Intersection.ENull;\n    var e1_2 = polygon.get_edge();\n    var e2_3 = e1_2.get_nextLeftEdge();\n    var e3_1 = e2_3.get_nextLeftEdge();\n\n    if (hxDaedalus_data_math_Geom2D.getRelativePosition(x, y, e1_2) >= 0 && hxDaedalus_data_math_Geom2D.getRelativePosition(x, y, e2_3) >= 0 && hxDaedalus_data_math_Geom2D.getRelativePosition(x, y, e3_1) >= 0) {\n      var v1 = e1_2.get_originVertex();\n      var v2 = e2_3.get_originVertex();\n      var v3 = e3_1.get_originVertex();\n      var x1 = v1.get_pos().x;\n      var y1 = v1.get_pos().y;\n      var x2 = v2.get_pos().x;\n      var y2 = v2.get_pos().y;\n      var x3 = v3.get_pos().x;\n      var y3 = v3.get_pos().y;\n      var v_v1squaredLength = (x1 - x) * (x1 - x) + (y1 - y) * (y1 - y);\n      var v_v2squaredLength = (x2 - x) * (x2 - x) + (y2 - y) * (y2 - y);\n      var v_v3squaredLength = (x3 - x) * (x3 - x) + (y3 - y) * (y3 - y);\n      var v1_v2squaredLength = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\n      var v2_v3squaredLength = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\n      var v3_v1squaredLength = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\n      var dot_v_v1v2 = (x - x1) * (x2 - x1) + (y - y1) * (y2 - y1);\n      var dot_v_v2v3 = (x - x2) * (x3 - x2) + (y - y2) * (y3 - y2);\n      var dot_v_v3v1 = (x - x3) * (x1 - x3) + (y - y3) * (y1 - y3);\n      var v_e1_2squaredLength = v_v1squaredLength - dot_v_v1v2 * dot_v_v1v2 / v1_v2squaredLength;\n      var v_e2_3squaredLength = v_v2squaredLength - dot_v_v2v3 * dot_v_v2v3 / v2_v3squaredLength;\n      var v_e3_1squaredLength = v_v3squaredLength - dot_v_v3v1 * dot_v_v3v1 / v3_v1squaredLength;\n      var closeTo_e1_2 = v_e1_2squaredLength <= 0.0001;\n      var closeTo_e2_3 = v_e2_3squaredLength <= 0.0001;\n      var closeTo_e3_1 = v_e3_1squaredLength <= 0.0001;\n\n      if (closeTo_e1_2) {\n        if (closeTo_e3_1) {\n          result = hxDaedalus_data_math_Intersection.EVertex(v1);\n        } else if (closeTo_e2_3) {\n          result = hxDaedalus_data_math_Intersection.EVertex(v2);\n        } else {\n          result = hxDaedalus_data_math_Intersection.EEdge(e1_2);\n        }\n      } else if (closeTo_e2_3) {\n        if (closeTo_e3_1) {\n          result = hxDaedalus_data_math_Intersection.EVertex(v3);\n        } else {\n          result = hxDaedalus_data_math_Intersection.EEdge(e2_3);\n        }\n      } else if (closeTo_e3_1) {\n        result = hxDaedalus_data_math_Intersection.EEdge(e3_1);\n      } else {\n        result = hxDaedalus_data_math_Intersection.EFace(polygon);\n      }\n    }\n\n    return result;\n  };\n\n  hxDaedalus_data_math_Geom2D.clipSegmentByTriangle = function (s1x, s1y, s2x, s2y, t1x, t1y, t2x, t2y, t3x, t3y, pResult1, pResult2) {\n    var side1_1;\n    var side1_2;\n    side1_1 = hxDaedalus_data_math_Geom2D.getDirection(t1x, t1y, t2x, t2y, s1x, s1y);\n    side1_2 = hxDaedalus_data_math_Geom2D.getDirection(t1x, t1y, t2x, t2y, s2x, s2y);\n\n    if (side1_1 <= 0 && side1_2 <= 0) {\n      return false;\n    }\n\n    var side2_1;\n    var side2_2;\n    side2_1 = hxDaedalus_data_math_Geom2D.getDirection(t2x, t2y, t3x, t3y, s1x, s1y);\n    side2_2 = hxDaedalus_data_math_Geom2D.getDirection(t2x, t2y, t3x, t3y, s2x, s2y);\n\n    if (side2_1 <= 0 && side2_2 <= 0) {\n      return false;\n    }\n\n    var side3_1;\n    var side3_2;\n    side3_1 = hxDaedalus_data_math_Geom2D.getDirection(t3x, t3y, t1x, t1y, s1x, s1y);\n    side3_2 = hxDaedalus_data_math_Geom2D.getDirection(t3x, t3y, t1x, t1y, s2x, s2y);\n\n    if (side3_1 <= 0 && side3_2 <= 0) {\n      return false;\n    }\n\n    if (side1_1 >= 0 && side2_1 >= 0 && side3_1 >= 0 && side1_2 >= 0 && side2_2 >= 0 && side3_2 >= 0) {\n      pResult1.x = s1x;\n      pResult1.y = s1y;\n      pResult2.x = s2x;\n      pResult2.y = s2y;\n      return true;\n    }\n\n    var n = 0;\n\n    if (hxDaedalus_data_math_Geom2D.intersections2segments(s1x, s1y, s2x, s2y, t1x, t1y, t2x, t2y, pResult1, null)) {\n      ++n;\n    }\n\n    if (n == 0) {\n      if (hxDaedalus_data_math_Geom2D.intersections2segments(s1x, s1y, s2x, s2y, t2x, t2y, t3x, t3y, pResult1, null)) {\n        ++n;\n      }\n    } else if (hxDaedalus_data_math_Geom2D.intersections2segments(s1x, s1y, s2x, s2y, t2x, t2y, t3x, t3y, pResult2, null)) {\n      if (-0.01 > pResult1.x - pResult2.x || pResult1.x - pResult2.x > 0.01 || -0.01 > pResult1.y - pResult2.y || pResult1.y - pResult2.y > 0.01) {\n        ++n;\n      }\n    }\n\n    if (n == 0) {\n      if (hxDaedalus_data_math_Geom2D.intersections2segments(s1x, s1y, s2x, s2y, t3x, t3y, t1x, t1y, pResult1, null)) {\n        ++n;\n      }\n    } else if (n == 1) {\n      if (hxDaedalus_data_math_Geom2D.intersections2segments(s1x, s1y, s2x, s2y, t3x, t3y, t1x, t1y, pResult2, null)) {\n        if (-0.01 > pResult1.x - pResult2.x || pResult1.x - pResult2.x > 0.01 || -0.01 > pResult1.y - pResult2.y || pResult1.y - pResult2.y > 0.01) {\n          ++n;\n        }\n      }\n    }\n\n    if (n == 1) {\n      if (side1_1 >= 0 && side2_1 >= 0 && side3_1 >= 0) {\n        pResult2.x = s1x;\n        pResult2.y = s1y;\n      } else if (side1_2 >= 0 && side2_2 >= 0 && side3_2 >= 0) {\n        pResult2.x = s2x;\n        pResult2.y = s2y;\n      } else {\n        n = 0;\n      }\n    }\n\n    if (n > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  hxDaedalus_data_math_Geom2D.isSegmentIntersectingTriangle = function (s1x, s1y, s2x, s2y, t1x, t1y, t2x, t2y, t3x, t3y) {\n    var side1_1;\n    var side1_2;\n    side1_1 = hxDaedalus_data_math_Geom2D.getDirection(t1x, t1y, t2x, t2y, s1x, s1y);\n    side1_2 = hxDaedalus_data_math_Geom2D.getDirection(t1x, t1y, t2x, t2y, s2x, s2y);\n\n    if (side1_1 <= 0 && side1_2 <= 0) {\n      return false;\n    }\n\n    var side2_1;\n    var side2_2;\n    side2_1 = hxDaedalus_data_math_Geom2D.getDirection(t2x, t2y, t3x, t3y, s1x, s1y);\n    side2_2 = hxDaedalus_data_math_Geom2D.getDirection(t2x, t2y, t3x, t3y, s2x, s2y);\n\n    if (side2_1 <= 0 && side2_2 <= 0) {\n      return false;\n    }\n\n    var side3_1;\n    var side3_2;\n    side3_1 = hxDaedalus_data_math_Geom2D.getDirection(t3x, t3y, t1x, t1y, s1x, s1y);\n    side3_2 = hxDaedalus_data_math_Geom2D.getDirection(t3x, t3y, t1x, t1y, s2x, s2y);\n\n    if (side3_1 <= 0 && side3_2 <= 0) {\n      return false;\n    }\n\n    if (side1_1 == 1 && side2_1 == 1 && side3_1 == 1) {\n      return true;\n    }\n\n    if (side1_1 == 1 && side2_1 == 1 && side3_1 == 1) {\n      return true;\n    }\n\n    var side1;\n    var side2;\n\n    if (side1_1 == 1 && side1_2 <= 0 || side1_1 <= 0 && side1_2 == 1) {\n      side1 = hxDaedalus_data_math_Geom2D.getDirection(s1x, s1y, s2x, s2y, t1x, t1y);\n      side2 = hxDaedalus_data_math_Geom2D.getDirection(s1x, s1y, s2x, s2y, t2x, t2y);\n\n      if (side1 == 1 && side2 <= 0 || side1 <= 0 && side2 == 1) {\n        return true;\n      }\n    }\n\n    if (side2_1 == 1 && side2_2 <= 0 || side2_1 <= 0 && side2_2 == 1) {\n      side1 = hxDaedalus_data_math_Geom2D.getDirection(s1x, s1y, s2x, s2y, t2x, t2y);\n      side2 = hxDaedalus_data_math_Geom2D.getDirection(s1x, s1y, s2x, s2y, t3x, t3y);\n\n      if (side1 == 1 && side2 <= 0 || side1 <= 0 && side2 == 1) {\n        return true;\n      }\n    }\n\n    if (side3_1 == 1 && side3_2 <= 0 || side3_1 <= 0 && side3_2 == 1) {\n      side1 = hxDaedalus_data_math_Geom2D.getDirection(s1x, s1y, s2x, s2y, t3x, t3y);\n      side2 = hxDaedalus_data_math_Geom2D.getDirection(s1x, s1y, s2x, s2y, t1x, t1y);\n\n      if (side1 == 1 && side2 <= 0 || side1 <= 0 && side2 == 1) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  hxDaedalus_data_math_Geom2D.isDelaunay = function (edge) {\n    var vLeft = edge.get_originVertex();\n    var vRight = edge.get_destinationVertex();\n    var vCorner = edge.get_nextLeftEdge().get_destinationVertex();\n    var vOpposite = edge.get_nextRightEdge().get_destinationVertex();\n    hxDaedalus_data_math_Geom2D.getCircumcenter(vCorner.get_pos().x, vCorner.get_pos().y, vLeft.get_pos().x, vLeft.get_pos().y, vRight.get_pos().x, vRight.get_pos().y, hxDaedalus_data_math_Geom2D.__circumcenter);\n\n    var squaredRadius = (vCorner.get_pos().x - hxDaedalus_data_math_Geom2D.__circumcenter.x) * (vCorner.get_pos().x - hxDaedalus_data_math_Geom2D.__circumcenter.x) + (vCorner.get_pos().y - hxDaedalus_data_math_Geom2D.__circumcenter.y) * (vCorner.get_pos().y - hxDaedalus_data_math_Geom2D.__circumcenter.y);\n\n    var squaredDistance = (vOpposite.get_pos().x - hxDaedalus_data_math_Geom2D.__circumcenter.x) * (vOpposite.get_pos().x - hxDaedalus_data_math_Geom2D.__circumcenter.x) + (vOpposite.get_pos().y - hxDaedalus_data_math_Geom2D.__circumcenter.y) * (vOpposite.get_pos().y - hxDaedalus_data_math_Geom2D.__circumcenter.y);\n\n    return squaredDistance >= squaredRadius;\n  };\n\n  hxDaedalus_data_math_Geom2D.getCircumcenter = function (x1, y1, x2, y2, x3, y3, result) {\n    if (result == null) {\n      result = new hxDaedalus_data_math_Point2D();\n    }\n\n    var m1 = (x1 + x2) / 2;\n    var m2 = (y1 + y2) / 2;\n    var m3 = (x1 + x3) / 2;\n    var m4 = (y1 + y3) / 2;\n    var t1 = (m1 * (x1 - x3) + (m2 - m4) * (y1 - y3) + m3 * (x3 - x1)) / (x1 * (y3 - y2) + x2 * (y1 - y3) + x3 * (y2 - y1));\n    result.x = m1 + t1 * (y2 - y1);\n    result.y = m2 - t1 * (x2 - x1);\n    return result;\n  };\n\n  hxDaedalus_data_math_Geom2D.intersections2segments = function (s1p1x, s1p1y, s1p2x, s1p2y, s2p1x, s2p1y, s2p2x, s2p2y, posIntersection, paramIntersection, infiniteLineMode) {\n    if (infiniteLineMode == null) {\n      infiniteLineMode = false;\n    }\n\n    var t1 = 0;\n    var t2 = 0;\n    var result;\n    var divisor = (s1p1x - s1p2x) * (s2p1y - s2p2y) + (s1p2y - s1p1y) * (s2p1x - s2p2x);\n\n    if (divisor == 0) {\n      result = false;\n    } else {\n      result = true;\n\n      if (!infiniteLineMode || posIntersection != null || paramIntersection != null) {\n        t1 = (s1p1x * (s2p1y - s2p2y) + s1p1y * (s2p2x - s2p1x) + s2p1x * s2p2y - s2p1y * s2p2x) / divisor;\n        t2 = (s1p1x * (s2p1y - s1p2y) + s1p1y * (s1p2x - s2p1x) - s1p2x * s2p1y + s1p2y * s2p1x) / divisor;\n\n        if (!infiniteLineMode && !(0 <= t1 && t1 <= 1 && 0 <= t2 && t2 <= 1)) {\n          result = false;\n        }\n      }\n    }\n\n    if (result) {\n      if (posIntersection != null) {\n        posIntersection.x = s1p1x + t1 * (s1p2x - s1p1x);\n        posIntersection.y = s1p1y + t1 * (s1p2y - s1p1y);\n      }\n\n      if (paramIntersection != null) {\n        paramIntersection.push(t1);\n        paramIntersection.push(t2);\n      }\n    }\n\n    return result;\n  };\n\n  hxDaedalus_data_math_Geom2D.intersections2edges = function (edge1, edge2, posIntersection, paramIntersection, infiniteLineMode) {\n    if (infiniteLineMode == null) {\n      infiniteLineMode = false;\n    }\n\n    return hxDaedalus_data_math_Geom2D.intersections2segments(edge1.get_originVertex().get_pos().x, edge1.get_originVertex().get_pos().y, edge1.get_destinationVertex().get_pos().x, edge1.get_destinationVertex().get_pos().y, edge2.get_originVertex().get_pos().x, edge2.get_originVertex().get_pos().y, edge2.get_destinationVertex().get_pos().x, edge2.get_destinationVertex().get_pos().y, posIntersection, paramIntersection, infiniteLineMode);\n  };\n\n  hxDaedalus_data_math_Geom2D.isConvex = function (edge) {\n    var result = true;\n    var eLeft;\n    var vRight;\n    eLeft = edge.get_nextLeftEdge().get_oppositeEdge();\n    vRight = edge.get_nextRightEdge().get_destinationVertex();\n\n    if (hxDaedalus_data_math_Geom2D.getRelativePosition(vRight.get_pos().x, vRight.get_pos().y, eLeft) != -1) {\n      result = false;\n    } else {\n      eLeft = edge.get_prevRightEdge();\n      vRight = edge.get_prevLeftEdge().get_originVertex();\n\n      if (hxDaedalus_data_math_Geom2D.getRelativePosition(vRight.get_pos().x, vRight.get_pos().y, eLeft) != -1) {\n        result = false;\n      }\n    }\n\n    return result;\n  };\n\n  hxDaedalus_data_math_Geom2D.projectOrthogonaly = function (vertexPos, edge) {\n    var a = edge.get_originVertex().get_pos().x;\n    var b = edge.get_originVertex().get_pos().y;\n    var c = edge.get_destinationVertex().get_pos().x;\n    var d = edge.get_destinationVertex().get_pos().y;\n    var e = vertexPos.x;\n    var f = vertexPos.y;\n    var t1 = (a * a - a * c - a * e + b * b - b * d - b * f + c * e + d * f) / (a * a - 2 * a * c + b * b - 2 * b * d + c * c + d * d);\n    vertexPos.x = a + t1 * (c - a);\n    vertexPos.y = b + t1 * (d - b);\n  };\n\n  hxDaedalus_data_math_Geom2D.intersections2Circles = function (cx1, cy1, r1, cx2, cy2, r2, result) {\n    var distRadiusSQRD = (cx2 - cx1) * (cx2 - cx1) + (cy2 - cy1) * (cy2 - cy1);\n\n    if ((cx1 != cx2 || cy1 != cy2) && distRadiusSQRD <= (r1 + r2) * (r1 + r2) && distRadiusSQRD >= (r1 - r2) * (r1 - r2)) {\n      var transcendPart = Math.sqrt(((r1 + r2) * (r1 + r2) - distRadiusSQRD) * (distRadiusSQRD - (r2 - r1) * (r2 - r1)));\n      var xFirstPart = (cx1 + cx2) / 2 + (cx2 - cx1) * (r1 * r1 - r2 * r2) / (2 * distRadiusSQRD);\n      var yFirstPart = (cy1 + cy2) / 2 + (cy2 - cy1) * (r1 * r1 - r2 * r2) / (2 * distRadiusSQRD);\n      var xFactor = (cy2 - cy1) / (2 * distRadiusSQRD);\n      var yFactor = (cx2 - cx1) / (2 * distRadiusSQRD);\n\n      if (result != null) {\n        var _g = 0;\n        var _g1 = [xFirstPart + xFactor * transcendPart, yFirstPart - yFactor * transcendPart, xFirstPart - xFactor * transcendPart, yFirstPart + yFactor * transcendPart];\n\n        while (_g < _g1.length) {\n          var f = _g1[_g];\n          ++_g;\n          result.push(f);\n        }\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  hxDaedalus_data_math_Geom2D.intersectionsSegmentCircle = function (p0x, p0y, p1x, p1y, cx, cy, r, result) {\n    var p0xSQD = p0x * p0x;\n    var p0ySQD = p0y * p0y;\n    var a = p1y * p1y - 2 * p1y * p0y + p0ySQD + p1x * p1x - 2 * p1x * p0x + p0xSQD;\n    var b = 2 * p0y * cy - 2 * p0xSQD + 2 * p1y * p0y - 2 * p0ySQD + 2 * p1x * p0x - 2 * p1x * cx + 2 * p0x * cx - 2 * p1y * cy;\n    var c = p0ySQD + cy * cy + cx * cx - 2 * p0y * cy - 2 * p0x * cx + p0xSQD - r * r;\n    var delta = b * b - 4 * a * c;\n    var deltaSQRT;\n    var t0;\n    var t1;\n\n    if (delta < 0) {\n      return false;\n    } else if (delta == 0) {\n      t0 = -b / (2 * a);\n\n      if (t0 < 0 || t0 > 1) {\n        return false;\n      }\n\n      if (result != null) {\n        var _g = 0;\n        var _g1 = [p0x + t0 * (p1x - p0x), p0y + t0 * (p1y - p0y), t0];\n\n        while (_g < _g1.length) {\n          var f = _g1[_g];\n          ++_g;\n          result.push(f);\n        }\n      }\n\n      return true;\n    } else {\n      deltaSQRT = Math.sqrt(delta);\n      t0 = (-b + deltaSQRT) / (2 * a);\n      t1 = (-b - deltaSQRT) / (2 * a);\n      var intersecting = false;\n\n      if (0 <= t0 && t0 <= 1) {\n        if (result != null) {\n          var _g2 = 0;\n          var _g11 = [p0x + t0 * (p1x - p0x), p0y + t0 * (p1y - p0y), t0];\n\n          while (_g2 < _g11.length) {\n            var f1 = _g11[_g2];\n            ++_g2;\n            result.push(f1);\n          }\n        }\n\n        intersecting = true;\n      }\n\n      if (0 <= t1 && t1 <= 1) {\n        if (result != null) {\n          var _g3 = 0;\n          var _g12 = [p0x + t1 * (p1x - p0x), p0y + t1 * (p1y - p0y), t1];\n\n          while (_g3 < _g12.length) {\n            var f2 = _g12[_g3];\n            ++_g3;\n            result.push(f2);\n          }\n        }\n\n        intersecting = true;\n      }\n\n      return intersecting;\n    }\n  };\n\n  hxDaedalus_data_math_Geom2D.intersectionsLineCircle = function (p0x, p0y, p1x, p1y, cx, cy, r, result) {\n    var p0xSQD = p0x * p0x;\n    var p0ySQD = p0y * p0y;\n    var a = p1y * p1y - 2 * p1y * p0y + p0ySQD + p1x * p1x - 2 * p1x * p0x + p0xSQD;\n    var b = 2 * p0y * cy - 2 * p0xSQD + 2 * p1y * p0y - 2 * p0ySQD + 2 * p1x * p0x - 2 * p1x * cx + 2 * p0x * cx - 2 * p1y * cy;\n    var c = p0ySQD + cy * cy + cx * cx - 2 * p0y * cy - 2 * p0x * cx + p0xSQD - r * r;\n    var delta = b * b - 4 * a * c;\n    var deltaSQRT;\n    var t0;\n    var t1;\n\n    if (delta < 0) {\n      return false;\n    } else if (delta == 0) {\n      t0 = -b / (2 * a);\n      var _g = 0;\n      var _g1 = [p0x + t0 * (p1x - p0x), p0y + t0 * (p1y - p0y), t0];\n\n      while (_g < _g1.length) {\n        var f = _g1[_g];\n        ++_g;\n        result.push(f);\n      }\n    } else if (delta > 0) {\n      deltaSQRT = Math.sqrt(delta);\n      t0 = (-b + deltaSQRT) / (2 * a);\n      t1 = (-b - deltaSQRT) / (2 * a);\n      var _g2 = 0;\n      var _g11 = [p0x + t0 * (p1x - p0x), p0y + t0 * (p1y - p0y), t0, p0x + t1 * (p1x - p0x), p0y + t1 * (p1y - p0y), t1];\n\n      while (_g2 < _g11.length) {\n        var f1 = _g11[_g2];\n        ++_g2;\n        result.push(f1);\n      }\n    }\n\n    return true;\n  };\n\n  hxDaedalus_data_math_Geom2D.tangentsPointToCircle = function (px, py, cx, cy, r, result) {\n    var c2x = (px + cx) / 2;\n    var c2y = (py + cy) / 2;\n    var r2 = 0.5 * Math.sqrt((px - cx) * (px - cx) + (py - cy) * (py - cy));\n    return hxDaedalus_data_math_Geom2D.intersections2Circles(c2x, c2y, r2, cx, cy, r, result);\n  };\n\n  hxDaedalus_data_math_Geom2D.tangentsCrossCircleToCircle = function (r, c1x, c1y, c2x, c2y, result) {\n    var distance = Math.sqrt((c1x - c2x) * (c1x - c2x) + (c1y - c2y) * (c1y - c2y));\n    var radius = distance / 4;\n    var centerX = c1x + (c2x - c1x) / 4;\n    var centerY = c1y + (c2y - c1y) / 4;\n\n    if (hxDaedalus_data_math_Geom2D.intersections2Circles(c1x, c1y, r, centerX, centerY, radius, result)) {\n      var t1x = result[0];\n      var t1y = result[1];\n      var t2x = result[2];\n      var t2y = result[3];\n      var midX = (c1x + c2x) / 2;\n      var midY = (c1y + c2y) / 2;\n      var dotProd = (t1x - midX) * (c2y - c1y) + (t1y - midY) * (-c2x + c1x);\n      var tproj = dotProd / (distance * distance);\n      var projx = midX + tproj * (c2y - c1y);\n      var projy = midY - tproj * (c2x - c1x);\n      var t4x = 2 * projx - t1x;\n      var t4y = 2 * projy - t1y;\n      var t3x = t4x + t2x - t1x;\n      var t3y = t2y + t4y - t1y;\n      var _g = 0;\n      var _g1 = [t3x, t3y, t4x, t4y];\n\n      while (_g < _g1.length) {\n        var f = _g1[_g];\n        ++_g;\n        result.push(f);\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  hxDaedalus_data_math_Geom2D.tangentsParalCircleToCircle = function (r, c1x, c1y, c2x, c2y, result) {\n    var distance = Math.sqrt((c1x - c2x) * (c1x - c2x) + (c1y - c2y) * (c1y - c2y));\n    var t1x = c1x + r * (c2y - c1y) / distance;\n    var t1y = c1y + r * (-c2x + c1x) / distance;\n    var t2x = 2 * c1x - t1x;\n    var t2y = 2 * c1y - t1y;\n    var t3x = t2x + c2x - c1x;\n    var t3y = t2y + c2y - c1y;\n    var t4x = t1x + c2x - c1x;\n    var t4y = t1y + c2y - c1y;\n    var _g = 0;\n    var _g1 = [t1x, t1y, t2x, t2y, t3x, t3y, t4x, t4y];\n\n    while (_g < _g1.length) {\n      var f = _g1[_g];\n      ++_g;\n      result.push(f);\n    }\n  };\n\n  hxDaedalus_data_math_Geom2D.distanceSquaredPointToLine = function (px, py, ax, ay, bx, by) {\n    var a_b_squaredLength = (bx - ax) * (bx - ax) + (by - ay) * (by - ay);\n    var dotProduct = (px - ax) * (bx - ax) + (py - ay) * (by - ay);\n    var p_a_squaredLength = (ax - px) * (ax - px) + (ay - py) * (ay - py);\n    return p_a_squaredLength - dotProduct * dotProduct / a_b_squaredLength;\n  };\n\n  hxDaedalus_data_math_Geom2D.distanceSquaredPointToSegment = function (px, py, ax, ay, bx, by) {\n    var a_b_squaredLength = (bx - ax) * (bx - ax) + (by - ay) * (by - ay);\n    var dotProduct = ((px - ax) * (bx - ax) + (py - ay) * (by - ay)) / a_b_squaredLength;\n\n    if (dotProduct < 0) {\n      return (px - ax) * (px - ax) + (py - ay) * (py - ay);\n    } else if (dotProduct <= 1) {\n      var p_a_squaredLength = (ax - px) * (ax - px) + (ay - py) * (ay - py);\n      return p_a_squaredLength - dotProduct * dotProduct * a_b_squaredLength;\n    } else {\n      return (px - bx) * (px - bx) + (py - by) * (py - by);\n    }\n  };\n\n  hxDaedalus_data_math_Geom2D.distanceSquaredVertexToEdge = function (vertex, edge) {\n    return hxDaedalus_data_math_Geom2D.distanceSquaredPointToSegment(vertex.get_pos().x, vertex.get_pos().y, edge.get_originVertex().get_pos().x, edge.get_originVertex().get_pos().y, edge.get_destinationVertex().get_pos().x, edge.get_destinationVertex().get_pos().y);\n  };\n\n  hxDaedalus_data_math_Geom2D.pathLength = function (path) {\n    var sumDistance = 0.;\n    var fromX = path[0];\n    var fromY = path[1];\n    var nextX;\n    var nextY;\n    var x;\n    var y;\n    var distance;\n    var i = 2;\n\n    while (i < path.length) {\n      nextX = path[i];\n      nextY = path[i + 1];\n      x = nextX - fromX;\n      y = nextY - fromY;\n      distance = Math.sqrt(x * x + y * y);\n      sumDistance += distance;\n      fromX = nextX;\n      fromY = nextY;\n      i += 2;\n    }\n\n    return sumDistance;\n  };\n\n  hxDaedalus_data_math_Geom2D.prototype = {\n    __class__: hxDaedalus_data_math_Geom2D\n  };\n\n  var hxDaedalus_data_math_Matrix2D = $hx_exports[\"hxDaedalus\"][\"data\"][\"math\"][\"Matrix2D\"] = function (a_, b_, c_, d_, e_, f_) {\n    if (f_ == null) {\n      f_ = 0;\n    }\n\n    if (e_ == null) {\n      e_ = 0;\n    }\n\n    if (d_ == null) {\n      d_ = 1;\n    }\n\n    if (c_ == null) {\n      c_ = 0;\n    }\n\n    if (b_ == null) {\n      b_ = 0;\n    }\n\n    if (a_ == null) {\n      a_ = 1;\n    }\n\n    this.a = a_;\n    this.b = b_;\n    this.c = c_;\n    this.d = d_;\n    this.e = e_;\n    this.f = f_;\n  };\n\n  hxDaedalus_data_math_Matrix2D.__name__ = true;\n  hxDaedalus_data_math_Matrix2D.prototype = {\n    identity: function () {\n      this.a = 1;\n      this.b = 0;\n      this.c = 0;\n      this.d = 1;\n      this.e = 0;\n      this.f = 0;\n    },\n    translate: function (tx, ty) {\n      this.e += tx;\n      this.f += ty;\n    },\n    scale: function (sx, sy) {\n      this.a *= sx;\n      this.b *= sy;\n      this.c *= sx;\n      this.d *= sy;\n      this.e *= sx;\n      this.f *= sy;\n    },\n    rotate: function (rad) {\n      var cos = Math.cos(rad);\n      var sin = Math.sin(rad);\n      var a_ = this.a * cos + this.b * -sin;\n      var b_ = this.a * sin + this.b * cos;\n      var c_ = this.c * cos + this.d * -sin;\n      var d_ = this.c * sin + this.d * cos;\n      var e_ = this.e * cos + this.f * -sin;\n      var f_ = this.e * sin + this.f * cos;\n      this.a = a_;\n      this.b = b_;\n      this.c = c_;\n      this.d = d_;\n      this.e = e_;\n      this.f = f_;\n    },\n    clone: function () {\n      return new hxDaedalus_data_math_Matrix2D(this.a, this.b, this.c, this.d, this.e, this.f);\n    },\n    tranform: function (point) {\n      var x = this.a * point.x + this.c * point.y + this.e;\n      var y = this.b * point.x + this.d * point.y + this.f;\n      point.x = x;\n      point.y = y;\n    },\n    transformX: function (x, y) {\n      return this.a * x + this.c * y + this.e;\n    },\n    transformY: function (x, y) {\n      return this.b * x + this.d * y + this.f;\n    },\n    concat: function (matrix) {\n      var a_ = this.a * matrix.a + this.b * matrix.c;\n      var b_ = this.a * matrix.b + this.b * matrix.d;\n      var c_ = this.c * matrix.a + this.d * matrix.c;\n      var d_ = this.c * matrix.b + this.d * matrix.d;\n      var e_ = this.e * matrix.a + this.f * matrix.c + matrix.e;\n      var f_ = this.e * matrix.b + this.f * matrix.d + matrix.f;\n      this.a = a_;\n      this.b = b_;\n      this.c = c_;\n      this.d = d_;\n      this.e = e_;\n      this.f = f_;\n    },\n    __class__: hxDaedalus_data_math_Matrix2D\n  };\n\n  var hxDaedalus_data_math_NodeData = $hx_exports[\"hxDaedalus\"][\"data\"][\"math\"][\"NodeData\"] = function () {};\n\n  hxDaedalus_data_math_NodeData.__name__ = true;\n  hxDaedalus_data_math_NodeData.prototype = {\n    __class__: hxDaedalus_data_math_NodeData\n  };\n\n  var hxDaedalus_data_math_Potrace = $hx_exports[\"hxDaedalus\"][\"data\"][\"math\"][\"Potrace\"] = function () {};\n\n  hxDaedalus_data_math_Potrace.__name__ = true;\n\n  hxDaedalus_data_math_Potrace.buildShapes = function (bmpData, debugBmp, debugShape) {\n    var shapes = [];\n    var dictPixelsDone = new haxe_ds_StringMap();\n    var _g1 = 1;\n\n    var _g = bmpData.height - 1;\n\n    while (_g1 < _g) {\n      var row = _g1++;\n      var _g3 = 0;\n\n      var _g2 = bmpData.width - 1;\n\n      while (_g3 < _g2) {\n        var col = _g3++;\n\n        if (hxPixels__$Pixels_Pixels_$Impl_$.getPixel(bmpData, col, row) == 16777215 && hxPixels__$Pixels_Pixels_$Impl_$.getPixel(bmpData, col + 1, row) < 16777215) {\n          var key = col + 1 + \"_\" + row;\n\n          if (!(__map_reserved[key] != null ? dictPixelsDone.getReserved(key) : dictPixelsDone.h[key])) {\n            shapes.push(hxDaedalus_data_math_Potrace.buildShape(bmpData, row, col + 1, dictPixelsDone, debugBmp, debugShape));\n          }\n        }\n      }\n    }\n\n    return shapes;\n  };\n\n  hxDaedalus_data_math_Potrace.buildShape = function (bmpData, fromPixelRow, fromPixelCol, dictPixelsDone, debugBmp, debugShape) {\n    var newX = fromPixelCol;\n    var newY = fromPixelRow;\n    var path = [newX, newY];\n    var key = newX + \"_\" + newY;\n\n    if (__map_reserved[key] != null) {\n      dictPixelsDone.setReserved(key, true);\n    } else {\n      dictPixelsDone.h[key] = true;\n    }\n\n    var curDir = new hxDaedalus_data_math_Point2D(0, 1);\n    var newDir = new hxDaedalus_data_math_Point2D();\n    var newPixelRow;\n    var newPixelCol;\n    var count = -1;\n\n    while (true) {\n      if (debugBmp != null) {\n        hxPixels__$Pixels_Pixels_$Impl_$.setPixel32(debugBmp, fromPixelCol, fromPixelRow, -65536);\n      }\n\n      newPixelRow = fromPixelRow + curDir.x + curDir.y | 0;\n      newPixelCol = fromPixelCol + curDir.x - curDir.y | 0;\n\n      if (hxPixels__$Pixels_Pixels_$Impl_$.getPixel(bmpData, newPixelCol, newPixelRow) < 16777215) {\n        newDir.x = -curDir.y;\n        newDir.y = curDir.x;\n      } else {\n        newPixelRow = fromPixelRow + curDir.y | 0;\n        newPixelCol = fromPixelCol + curDir.x | 0;\n\n        if (hxPixels__$Pixels_Pixels_$Impl_$.getPixel(bmpData, newPixelCol, newPixelRow) < 16777215) {\n          newDir.x = curDir.x;\n          newDir.y = curDir.y;\n        } else {\n          newPixelRow = fromPixelRow;\n          newPixelCol = fromPixelCol;\n          newDir.x = curDir.y;\n          newDir.y = -curDir.x;\n        }\n      }\n\n      newX += curDir.x;\n      newY += curDir.y;\n\n      if (newX == path[0] && newY == path[1]) {\n        break;\n      } else {\n        path.push(newX);\n        path.push(newY);\n        var key1 = newX + \"_\" + newY;\n\n        if (__map_reserved[key1] != null) {\n          dictPixelsDone.setReserved(key1, true);\n        } else {\n          dictPixelsDone.h[key1] = true;\n        }\n\n        fromPixelRow = newPixelRow;\n        fromPixelCol = newPixelCol;\n        curDir.x = newDir.x;\n        curDir.y = newDir.y;\n      }\n\n      --count;\n\n      if (count == 0) {\n        break;\n      }\n    }\n\n    if (debugShape != null) {\n      debugShape.graphics.lineStyle(0.5, 65280, 1);\n      debugShape.graphics.moveTo(path[0], path[1]);\n      var i = 2;\n\n      while (i < path.length) {\n        debugShape.graphics.lineTo(path[i], path[i + 1]);\n        i += 2;\n      }\n\n      debugShape.graphics.lineTo(path[0], path[1]);\n    }\n\n    return path;\n  };\n\n  hxDaedalus_data_math_Potrace.buildGraph = function (shape) {\n    var i;\n    var graph = new hxDaedalus_data_graph_Graph();\n    var node;\n    i = 0;\n\n    while (i < shape.length) {\n      node = graph.insertNode();\n      node.set_data(new hxDaedalus_data_math_NodeData());\n      node.get_data().index = i;\n      var shape1 = shape[i];\n      var shape2 = shape[i + 1];\n      node.get_data().point = new hxDaedalus_data_math_Point2D(shape1, shape2);\n      i += 2;\n    }\n\n    var node1;\n    var node2;\n    var subNode;\n    var distSqrd;\n    var sumDistSqrd;\n    var count;\n    var isValid;\n    var edge;\n    var edgeData;\n    node1 = graph.get_node();\n\n    while (node1 != null) {\n      if (node1.get_next() != null) {\n        node2 = node1.get_next();\n      } else {\n        node2 = graph.get_node();\n      }\n\n      while (node2 != node1) {\n        isValid = true;\n\n        if (node1.get_next() != null) {\n          subNode = node1.get_next();\n        } else {\n          subNode = graph.get_node();\n        }\n\n        count = 2;\n        sumDistSqrd = 0;\n\n        while (subNode != node2) {\n          distSqrd = hxDaedalus_data_math_Geom2D.distanceSquaredPointToSegment(subNode.get_data().point.x, subNode.get_data().point.y, node1.get_data().point.x, node1.get_data().point.y, node2.get_data().point.x, node2.get_data().point.y);\n\n          if (distSqrd < 0) {\n            distSqrd = 0;\n          }\n\n          if (distSqrd >= hxDaedalus_data_math_Potrace.maxDistance) {\n            isValid = false;\n            break;\n          }\n\n          ++count;\n          sumDistSqrd += distSqrd;\n\n          if (subNode.get_next() != null) {\n            subNode = subNode.get_next();\n          } else {\n            subNode = graph.get_node();\n          }\n        }\n\n        if (!isValid) {\n          break;\n        }\n\n        edge = graph.insertEdge(node1, node2);\n        edgeData = new hxDaedalus_data_math_EdgeData();\n        edgeData.sumDistancesSquared = sumDistSqrd;\n        edgeData.length = node1.get_data().point.distanceTo(node2.get_data().point);\n        edgeData.nodesCount = count;\n        edge.set_data(edgeData);\n\n        if (node2.get_next() != null) {\n          node2 = node2.get_next();\n        } else {\n          node2 = graph.get_node();\n        }\n      }\n\n      node1 = node1.get_next();\n    }\n\n    return graph;\n  };\n\n  hxDaedalus_data_math_Potrace.buildPolygon = function (graph, debugShape) {\n    var polygon = [];\n    var currNode;\n    var minNodeIndex = 2147483647;\n    var edge;\n    var score;\n    var higherScore;\n    var lowerScoreEdge = null;\n    currNode = graph.get_node();\n\n    while (currNode.get_data().index < minNodeIndex) {\n      minNodeIndex = currNode.get_data().index;\n      polygon.push(currNode.get_data().point.x);\n      polygon.push(currNode.get_data().point.y);\n      higherScore = 0;\n      edge = currNode.get_outgoingEdge();\n\n      while (edge != null) {\n        score = edge.get_data().nodesCount - edge.get_data().length * Math.sqrt(edge.get_data().sumDistancesSquared / edge.get_data().nodesCount);\n\n        if (score > higherScore) {\n          higherScore = score;\n          lowerScoreEdge = edge;\n        }\n\n        edge = edge.get_rotNextEdge();\n      }\n\n      currNode = lowerScoreEdge.get_destinationNode();\n    }\n\n    if (hxDaedalus_data_math_Geom2D.getDirection(polygon[polygon.length - 2], polygon[polygon.length - 1], polygon[0], polygon[1], polygon[2], polygon[3]) == 0) {\n      polygon.shift();\n      polygon.shift();\n    }\n\n    if (debugShape != null) {\n      debugShape.graphics.lineStyle(0.5, 255);\n      debugShape.graphics.moveTo(polygon[0], polygon[1]);\n      var i = 2;\n\n      while (i < polygon.length) {\n        debugShape.graphics.lineTo(polygon[i], polygon[i + 1]);\n        i += 2;\n      }\n\n      debugShape.graphics.lineTo(polygon[0], polygon[1]);\n    }\n\n    return polygon;\n  };\n\n  hxDaedalus_data_math_Potrace.prototype = {\n    __class__: hxDaedalus_data_math_Potrace\n  };\n\n  var hxDaedalus_data_math_RandGenerator = $hx_exports[\"hxDaedalus\"][\"data\"][\"math\"][\"RandGenerator\"] = function (seed, rangeMin_, rangeMax_) {\n    if (rangeMax_ == null) {\n      rangeMax_ = 1;\n    }\n\n    if (rangeMin_ == null) {\n      rangeMin_ = 0;\n    }\n\n    if (seed == null) {\n      seed = 1234;\n    }\n\n    this._originalSeed = this._currSeed = seed;\n    this.rangeMin = rangeMin_;\n    this.rangeMax = rangeMax_;\n    this._numIter = 0;\n  };\n\n  hxDaedalus_data_math_RandGenerator.__name__ = true;\n  hxDaedalus_data_math_RandGenerator.prototype = {\n    set_seed: function (value) {\n      this._originalSeed = this._currSeed = value;\n      return value;\n    },\n    get_seed: function () {\n      return this._originalSeed;\n    },\n    reset: function () {\n      this._currSeed = this._originalSeed;\n      this._numIter = 0;\n    },\n    next: function () {\n      var _floatSeed = this._currSeed * 1.0;\n\n      this._tempString = Std.string(_floatSeed * _floatSeed);\n\n      while (this._tempString.length < 8) this._tempString = \"0\" + this._tempString;\n\n      this._currSeed = Std.parseInt(HxOverrides.substr(this._tempString, 1, 5));\n      var res = Math.round(this.rangeMin + this._currSeed / 99999 * (this.rangeMax - this.rangeMin));\n\n      if (this._currSeed == 0) {\n        this._currSeed = this._originalSeed + this._numIter;\n      }\n\n      this._numIter++;\n\n      if (this._numIter == 200) {\n        this.reset();\n      }\n\n      return res;\n    },\n    nextInRange: function (rangeMin, rangeMax) {\n      this.rangeMin = rangeMin;\n      this.rangeMax = rangeMax;\n      return this.next();\n    },\n    shuffle: function (array) {\n      var currIdx = array.length;\n\n      while (currIdx > 0) {\n        var rndIdx = this.nextInRange(0, currIdx - 1);\n        --currIdx;\n        var tmp = array[currIdx];\n        array[currIdx] = array[rndIdx];\n        array[rndIdx] = tmp;\n      }\n    },\n    __class__: hxDaedalus_data_math_RandGenerator\n  };\n\n  var hxDaedalus_data_math_ShapeSimplifier = $hx_exports[\"hxDaedalus\"][\"data\"][\"math\"][\"ShapeSimplifier\"] = function () {};\n\n  hxDaedalus_data_math_ShapeSimplifier.__name__ = true;\n\n  hxDaedalus_data_math_ShapeSimplifier.simplify = function (coords, epsilon) {\n    if (epsilon == null) {\n      epsilon = 1;\n    }\n\n    var len = coords.length;\n\n    if (len <= 4 || epsilon < 1) {\n      return [].concat(coords);\n    }\n\n    var firstPointX = coords[0];\n    var firstPointY = coords[1];\n    var lastPointX = coords[len - 2];\n    var lastPointY = coords[len - 1];\n    var index = -1;\n    var dist = 0.;\n    var _g1 = 1;\n\n    var _g = len >> 1;\n\n    while (_g1 < _g) {\n      var i = _g1++;\n      var currDist = hxDaedalus_data_math_Geom2D.distanceSquaredPointToSegment(coords[i << 1], coords[(i << 1) + 1], firstPointX, firstPointY, lastPointX, lastPointY);\n\n      if (currDist > dist) {\n        dist = currDist;\n        index = i;\n      }\n    }\n\n    if (dist > epsilon * epsilon) {\n      var l1 = coords.slice(0, (index << 1) + 2);\n      var l2 = coords.slice(index << 1);\n      var r1 = hxDaedalus_data_math_ShapeSimplifier.simplify(l1, epsilon);\n      var r2 = hxDaedalus_data_math_ShapeSimplifier.simplify(l2, epsilon);\n      var rs = r1.slice(0, r1.length - 2).concat(r2);\n      return rs;\n    } else {\n      return [firstPointX, firstPointY, lastPointX, lastPointY];\n    }\n  };\n\n  var hxDaedalus_data_math_Tools = $hx_exports[\"hxDaedalus\"][\"data\"][\"math\"][\"Tools\"] = function () {};\n\n  hxDaedalus_data_math_Tools.__name__ = true;\n\n  hxDaedalus_data_math_Tools.extractMeshFromBitmap = function (pixels, vertices, triangles) {\n    var shapes = hxDaedalus_data_math_Potrace.buildShapes(pixels);\n    return hxDaedalus_data_math_Tools.extractMeshFromShapes(shapes, pixels.width, pixels.height, vertices, triangles);\n  };\n\n  hxDaedalus_data_math_Tools.extractMeshFromShapes = function (shapes, width, height, vertices, triangles, invertWinding) {\n    if (invertWinding == null) {\n      invertWinding = false;\n    }\n\n    var graphs = [];\n    var _g1 = 0;\n    var _g = shapes.length;\n\n    while (_g1 < _g) {\n      var i = _g1++;\n      graphs.push(hxDaedalus_data_math_Potrace.buildGraph(shapes[i]));\n    }\n\n    var polygons = [];\n    var _g11 = 0;\n    var _g2 = graphs.length;\n\n    while (_g11 < _g2) {\n      var i1 = _g11++;\n      polygons.push(hxDaedalus_data_math_Potrace.buildPolygon(graphs[i1]));\n    }\n\n    var mesh = hxDaedalus_factories_RectMesh.buildRectangle(width, height);\n    var edges = [];\n    var segment;\n    var _g12 = 0;\n    var _g3 = polygons.length;\n\n    while (_g12 < _g3) {\n      var i2 = _g12++;\n      var j = 0;\n\n      while (j < polygons[i2].length - 2) {\n        segment = mesh.insertConstraintSegment(polygons[i2][j], polygons[i2][j + 1], polygons[i2][j + 2], polygons[i2][j + 3]);\n\n        if (j == 0) {\n          if (segment.get_edges()[0].get_originVertex().get_pos().x == polygons[i2][j] && segment.get_edges()[0].get_originVertex().get_pos().y == polygons[i2][j + 1]) {\n            if (!invertWinding) {\n              edges.push(segment.get_edges()[0]);\n            } else {\n              edges.push(segment.get_edges()[0].get_oppositeEdge());\n            }\n          } else if (!invertWinding) {\n            edges.push(segment.get_edges()[0].get_oppositeEdge());\n          } else {\n            edges.push(segment.get_edges()[0]);\n          }\n        }\n\n        j += 2;\n      }\n\n      mesh.insertConstraintSegment(polygons[i2][0], polygons[i2][1], polygons[i2][j], polygons[i2][j + 1]);\n    }\n\n    var indicesDict = new haxe_ds_ObjectMap();\n    var vertex;\n    var point;\n    var _g13 = 0;\n    var _g4 = mesh._vertices.length;\n\n    while (_g13 < _g4) {\n      var i3 = _g13++;\n      vertex = mesh._vertices[i3];\n\n      if (vertex.get_isReal() && vertex.get_pos().x > 0 && vertex.get_pos().x < width && vertex.get_pos().y > 0 && vertex.get_pos().y < height) {\n        point = new hxDaedalus_data_math_Point2D(vertex.get_pos().x, vertex.get_pos().y);\n        vertices.push(point);\n        var v = vertices.length - 1;\n        indicesDict.set(vertex, v);\n      }\n    }\n\n    var facesDone = new haxe_ds_ObjectMap();\n    var openFacesList = [];\n    var _g14 = 0;\n    var _g5 = edges.length;\n\n    while (_g14 < _g5) {\n      var i4 = _g14++;\n      openFacesList.push(edges[i4].get_rightFace());\n    }\n\n    var currFace;\n\n    while (openFacesList.length > 0) {\n      currFace = openFacesList.pop();\n\n      if (facesDone.h[currFace.__id__]) {\n        continue;\n      }\n\n      var key = currFace.get_edge().get_originVertex();\n      triangles.push(indicesDict.h[key.__id__]);\n      var key1 = currFace.get_edge().get_nextLeftEdge().get_originVertex();\n      triangles.push(indicesDict.h[key1.__id__]);\n      var key2 = currFace.get_edge().get_nextLeftEdge().get_destinationVertex();\n      triangles.push(indicesDict.h[key2.__id__]);\n\n      if (!currFace.get_edge().get_isConstrained()) {\n        openFacesList.push(currFace.get_edge().get_rightFace());\n      }\n\n      if (!currFace.get_edge().get_nextLeftEdge().get_isConstrained()) {\n        openFacesList.push(currFace.get_edge().get_nextLeftEdge().get_rightFace());\n      }\n\n      if (!currFace.get_edge().get_prevLeftEdge().get_isConstrained()) {\n        openFacesList.push(currFace.get_edge().get_prevLeftEdge().get_rightFace());\n      }\n\n      facesDone.set(currFace, true);\n    }\n\n    return mesh;\n  };\n\n  var hxDaedalus_debug_Debug = function () {};\n\n  hxDaedalus_debug_Debug.__name__ = true;\n\n  hxDaedalus_debug_Debug.assertTrue = function (cond, message, pos) {\n    return;\n  };\n\n  hxDaedalus_debug_Debug.assertFalse = function (cond, message, pos) {\n    return;\n  };\n\n  hxDaedalus_debug_Debug.assertEquals = function (expected, actual, message, pos) {\n    return;\n  };\n\n  hxDaedalus_debug_Debug.trace = function (value, pos) {\n    return;\n  };\n\n  var hxDaedalus_factories_BitmapMesh = $hx_exports[\"hxDaedalus\"][\"factories\"][\"BitmapMesh\"] = function () {};\n\n  hxDaedalus_factories_BitmapMesh.__name__ = true;\n\n  hxDaedalus_factories_BitmapMesh.buildFromBmpData = function (bmpData, debugBmp, debugShape) {\n    var i;\n    var j;\n    var shapes = hxDaedalus_data_math_Potrace.buildShapes(bmpData, debugBmp, debugShape);\n    var graphs = [];\n    var _g1 = 0;\n    var _g = shapes.length;\n\n    while (_g1 < _g) {\n      var i1 = _g1++;\n      graphs.push(hxDaedalus_data_math_Potrace.buildGraph(shapes[i1]));\n    }\n\n    var polygons = [];\n    var _g11 = 0;\n    var _g2 = graphs.length;\n\n    while (_g11 < _g2) {\n      var i2 = _g11++;\n      polygons.push(hxDaedalus_data_math_Potrace.buildPolygon(graphs[i2], debugShape));\n    }\n\n    var mesh = hxDaedalus_factories_RectMesh.buildRectangle(bmpData.width, bmpData.height);\n    var _g12 = 0;\n    var _g3 = polygons.length;\n\n    while (_g12 < _g3) {\n      var i3 = _g12++;\n      j = 0;\n\n      while (j < polygons[i3].length - 2) {\n        mesh.insertConstraintSegment(polygons[i3][j], polygons[i3][j + 1], polygons[i3][j + 2], polygons[i3][j + 3]);\n        j += 2;\n      }\n\n      mesh.insertConstraintSegment(polygons[i3][0], polygons[i3][1], polygons[i3][j], polygons[i3][j + 1]);\n    }\n\n    return mesh;\n  };\n\n  hxDaedalus_factories_BitmapMesh.prototype = {\n    __class__: hxDaedalus_factories_BitmapMesh\n  };\n\n  var hxDaedalus_factories_BitmapObject = $hx_exports[\"hxDaedalus\"][\"factories\"][\"BitmapObject\"] = function () {};\n\n  hxDaedalus_factories_BitmapObject.__name__ = true;\n\n  hxDaedalus_factories_BitmapObject.buildFromBmpData = function (bmpData, simplificationEpsilon, debugBmp, debugShape) {\n    if (simplificationEpsilon == null) {\n      simplificationEpsilon = 1;\n    }\n\n    var i;\n    var j;\n    var cond = bmpData.width > 0 && bmpData.height > 0;\n    var message = \"Invalid `bmpData` size (\" + bmpData.width + \", \" + bmpData.height + \")\";\n    var shapes = hxDaedalus_data_math_Potrace.buildShapes(bmpData, debugBmp, debugShape);\n\n    if (simplificationEpsilon >= 1) {\n      var _g1 = 0;\n      var _g = shapes.length;\n\n      while (_g1 < _g) {\n        var i1 = _g1++;\n        shapes[i1] = hxDaedalus_data_math_ShapeSimplifier.simplify(shapes[i1], simplificationEpsilon);\n      }\n    }\n\n    var graphs = [];\n    var _g11 = 0;\n    var _g2 = shapes.length;\n\n    while (_g11 < _g2) {\n      var i2 = _g11++;\n      graphs.push(hxDaedalus_data_math_Potrace.buildGraph(shapes[i2]));\n    }\n\n    var polygons = [];\n    var _g12 = 0;\n    var _g3 = graphs.length;\n\n    while (_g12 < _g3) {\n      var i3 = _g12++;\n      polygons.push(hxDaedalus_data_math_Potrace.buildPolygon(graphs[i3], debugShape));\n    }\n\n    var obj = new hxDaedalus_data_Object();\n    var _g13 = 0;\n    var _g4 = polygons.length;\n\n    while (_g13 < _g4) {\n      var i4 = _g13++;\n      j = 0;\n\n      while (j < polygons[i4].length - 2) {\n        obj.get_coordinates().push(polygons[i4][j]);\n        obj.get_coordinates().push(polygons[i4][j + 1]);\n        obj.get_coordinates().push(polygons[i4][j + 2]);\n        obj.get_coordinates().push(polygons[i4][j + 3]);\n        j += 2;\n      }\n\n      obj.get_coordinates().push(polygons[i4][0]);\n      obj.get_coordinates().push(polygons[i4][1]);\n      obj.get_coordinates().push(polygons[i4][j]);\n      obj.get_coordinates().push(polygons[i4][j + 1]);\n    }\n\n    return obj;\n  };\n\n  hxDaedalus_factories_BitmapObject.prototype = {\n    __class__: hxDaedalus_factories_BitmapObject\n  };\n\n  var hxDaedalus_factories_RectMesh = $hx_exports[\"hxDaedalus\"][\"factories\"][\"RectMesh\"] = function () {};\n\n  hxDaedalus_factories_RectMesh.__name__ = true;\n\n  hxDaedalus_factories_RectMesh.buildRectangle = function (width, height) {\n    var vTL = new hxDaedalus_data_Vertex();\n    var vTR = new hxDaedalus_data_Vertex();\n    var vBR = new hxDaedalus_data_Vertex();\n    var vBL = new hxDaedalus_data_Vertex();\n    var eTL_TR = new hxDaedalus_data_Edge();\n    var eTR_TL = new hxDaedalus_data_Edge();\n    var eTR_BR = new hxDaedalus_data_Edge();\n    var eBR_TR = new hxDaedalus_data_Edge();\n    var eBR_BL = new hxDaedalus_data_Edge();\n    var eBL_BR = new hxDaedalus_data_Edge();\n    var eBL_TL = new hxDaedalus_data_Edge();\n    var eTL_BL = new hxDaedalus_data_Edge();\n    var eTR_BL = new hxDaedalus_data_Edge();\n    var eBL_TR = new hxDaedalus_data_Edge();\n    var eTL_BR = new hxDaedalus_data_Edge();\n    var eBR_TL = new hxDaedalus_data_Edge();\n    var fTL_BL_TR = new hxDaedalus_data_Face();\n    var fTR_BL_BR = new hxDaedalus_data_Face();\n    var fTL_BR_BL = new hxDaedalus_data_Face();\n    var fTL_TR_BR = new hxDaedalus_data_Face();\n    var boundShape = new hxDaedalus_data_ConstraintShape();\n    var segTop = new hxDaedalus_data_ConstraintSegment();\n    var segRight = new hxDaedalus_data_ConstraintSegment();\n    var segBot = new hxDaedalus_data_ConstraintSegment();\n    var segLeft = new hxDaedalus_data_ConstraintSegment();\n    var mesh = new hxDaedalus_data_Mesh(width, height);\n    var offset = 10.;\n    vTL.get_pos().setXY(0 - offset, 0 - offset);\n    vTR.get_pos().setXY(width + offset, 0 - offset);\n    vBR.get_pos().setXY(width + offset, height + offset);\n    vBL.get_pos().setXY(0 - offset, height + offset);\n    vTL.setDatas(eTL_TR);\n    vTR.setDatas(eTR_BR);\n    vBR.setDatas(eBR_BL);\n    vBL.setDatas(eBL_TL);\n    eTL_TR.setDatas(vTL, eTR_TL, eTR_BR, fTL_TR_BR, true, true);\n    eTR_TL.setDatas(vTR, eTL_TR, eTL_BL, fTL_BL_TR, true, true);\n    eTR_BR.setDatas(vTR, eBR_TR, eBR_TL, fTL_TR_BR, true, true);\n    eBR_TR.setDatas(vBR, eTR_BR, eTR_BL, fTR_BL_BR, true, true);\n    eBR_BL.setDatas(vBR, eBL_BR, eBL_TL, fTL_BR_BL, true, true);\n    eBL_BR.setDatas(vBL, eBR_BL, eBR_TR, fTR_BL_BR, true, true);\n    eBL_TL.setDatas(vBL, eTL_BL, eTL_BR, fTL_BR_BL, true, true);\n    eTL_BL.setDatas(vTL, eBL_TL, eBL_TR, fTL_BL_TR, true, true);\n    eTR_BL.setDatas(vTR, eBL_TR, eBL_BR, fTR_BL_BR, true, false);\n    eBL_TR.setDatas(vBL, eTR_BL, eTR_TL, fTL_BL_TR, true, false);\n    eTL_BR.setDatas(vTL, eBR_TL, eBR_BL, fTL_BR_BL, false, false);\n    eBR_TL.setDatas(vBR, eTL_BR, eTL_TR, fTL_TR_BR, false, false);\n    fTL_BL_TR.setDatas(eBL_TR);\n    fTR_BL_BR.setDatas(eTR_BL);\n    fTL_BR_BL.setDatas(eBR_BL, false);\n    fTL_TR_BR.setDatas(eTR_BR, false);\n    vTL.set_fromConstraintSegments([segTop, segLeft]);\n    vTR.set_fromConstraintSegments([segTop, segRight]);\n    vBR.set_fromConstraintSegments([segRight, segBot]);\n    vBL.set_fromConstraintSegments([segBot, segLeft]);\n    eTL_TR.fromConstraintSegments.push(segTop);\n    eTR_TL.fromConstraintSegments.push(segTop);\n    eTR_BR.fromConstraintSegments.push(segRight);\n    eBR_TR.fromConstraintSegments.push(segRight);\n    eBR_BL.fromConstraintSegments.push(segBot);\n    eBL_BR.fromConstraintSegments.push(segBot);\n    eBL_TL.fromConstraintSegments.push(segLeft);\n    eTL_BL.fromConstraintSegments.push(segLeft);\n    segTop.get_edges().push(eTL_TR);\n    segRight.get_edges().push(eTR_BR);\n    segBot.get_edges().push(eBR_BL);\n    segLeft.get_edges().push(eBL_TL);\n    segTop.fromShape = boundShape;\n    segRight.fromShape = boundShape;\n    segBot.fromShape = boundShape;\n    segLeft.fromShape = boundShape;\n    var _g = 0;\n    var _g1 = [segTop, segRight, segBot, segLeft];\n\n    while (_g < _g1.length) {\n      var f = _g1[_g];\n      ++_g;\n      boundShape.segments.push(f);\n    }\n\n    var _g2 = 0;\n    var _g11 = [vTL, vTR, vBR, vBL];\n\n    while (_g2 < _g11.length) {\n      var f1 = _g11[_g2];\n      ++_g2;\n\n      mesh._vertices.push(f1);\n    }\n\n    var _g3 = 0;\n    var _g12 = [eTL_TR, eTR_TL, eTR_BR, eBR_TR, eBR_BL, eBL_BR, eBL_TL, eTL_BL, eTR_BL, eBL_TR, eTL_BR, eBR_TL];\n\n    while (_g3 < _g12.length) {\n      var f2 = _g12[_g3];\n      ++_g3;\n\n      mesh._edges.push(f2);\n    }\n\n    var _g4 = 0;\n    var _g13 = [fTL_BL_TR, fTR_BL_BR, fTL_BR_BL, fTL_TR_BR];\n\n    while (_g4 < _g13.length) {\n      var f3 = _g13[_g4];\n      ++_g4;\n\n      mesh._faces.push(f3);\n    }\n\n    mesh.get___constraintShapes().push(boundShape);\n    var securityRect = [];\n    var _g5 = 0;\n    var _g14 = [0, 0, width, 0];\n\n    while (_g5 < _g14.length) {\n      var f4 = _g14[_g5];\n      ++_g5;\n      securityRect.push(f4);\n    }\n\n    var _g6 = 0;\n    var _g15 = [width, 0, width, height];\n\n    while (_g6 < _g15.length) {\n      var f5 = _g15[_g6];\n      ++_g6;\n      securityRect.push(f5);\n    }\n\n    var _g7 = 0;\n    var _g16 = [width, height, 0, height];\n\n    while (_g7 < _g16.length) {\n      var f6 = _g16[_g7];\n      ++_g7;\n      securityRect.push(f6);\n    }\n\n    var _g8 = 0;\n    var _g17 = [0, height, 0, 0];\n\n    while (_g8 < _g17.length) {\n      var f7 = _g17[_g8];\n      ++_g8;\n      securityRect.push(f7);\n    }\n\n    mesh.set_clipping(false);\n    mesh.insertConstraintShape(securityRect);\n    mesh.set_clipping(true);\n    return mesh;\n  };\n\n  hxDaedalus_factories_RectMesh.prototype = {\n    __class__: hxDaedalus_factories_RectMesh\n  };\n\n  var hxDaedalus_iterators_FromEdgeToRotatedEdges = $hx_exports[\"hxDaedalus\"][\"iterators\"][\"FromEdgeToRotatedEdges\"] = function () {};\n\n  hxDaedalus_iterators_FromEdgeToRotatedEdges.__name__ = true;\n  hxDaedalus_iterators_FromEdgeToRotatedEdges.prototype = {\n    __class__: hxDaedalus_iterators_FromEdgeToRotatedEdges\n  };\n\n  var hxDaedalus_iterators_FromFaceToInnerEdges = $hx_exports[\"hxDaedalus\"][\"iterators\"][\"FromFaceToInnerEdges\"] = function () {};\n\n  hxDaedalus_iterators_FromFaceToInnerEdges.__name__ = true;\n  hxDaedalus_iterators_FromFaceToInnerEdges.prototype = {\n    set_fromFace: function (value) {\n      this._fromFace = value;\n      this._nextEdge = this._fromFace.get_edge();\n      return value;\n    },\n    next: function () {\n      if (this._nextEdge != null) {\n        this._resultEdge = this._nextEdge;\n        this._nextEdge = this._nextEdge.get_nextLeftEdge();\n\n        if (this._nextEdge == this._fromFace.get_edge()) {\n          this._nextEdge = null;\n        }\n      } else {\n        this._resultEdge = null;\n      }\n\n      return this._resultEdge;\n    },\n    __class__: hxDaedalus_iterators_FromFaceToInnerEdges\n  };\n\n  var hxDaedalus_iterators_FromFaceToInnerVertices = $hx_exports[\"hxDaedalus\"][\"iterators\"][\"FromFaceToInnerVertices\"] = function () {};\n\n  hxDaedalus_iterators_FromFaceToInnerVertices.__name__ = true;\n  hxDaedalus_iterators_FromFaceToInnerVertices.prototype = {\n    set_fromFace: function (value) {\n      this._fromFace = value;\n      this._nextEdge = this._fromFace.get_edge();\n      return value;\n    },\n    next: function () {\n      if (this._nextEdge != null) {\n        this._resultVertex = this._nextEdge.get_originVertex();\n        this._nextEdge = this._nextEdge.get_nextLeftEdge();\n\n        if (this._nextEdge == this._fromFace.get_edge()) {\n          this._nextEdge = null;\n        }\n      } else {\n        this._resultVertex = null;\n      }\n\n      return this._resultVertex;\n    },\n    __class__: hxDaedalus_iterators_FromFaceToInnerVertices\n  };\n\n  var hxDaedalus_iterators_FromFaceToNeighbourFaces = $hx_exports[\"hxDaedalus\"][\"iterators\"][\"FromFaceToNeighbourFaces\"] = function () {};\n\n  hxDaedalus_iterators_FromFaceToNeighbourFaces.__name__ = true;\n  hxDaedalus_iterators_FromFaceToNeighbourFaces.prototype = {\n    set_fromFace: function (value) {\n      this._fromFace = value;\n      this._nextEdge = this._fromFace.get_edge();\n      return value;\n    },\n    next: function () {\n      if (this._nextEdge != null) {\n        while (true) {\n          this._resultFace = this._nextEdge.get_rightFace();\n          this._nextEdge = this._nextEdge.get_nextLeftEdge();\n\n          if (this._nextEdge == this._fromFace.get_edge()) {\n            this._nextEdge = null;\n\n            if (!this._resultFace.get_isReal()) {\n              this._resultFace = null;\n            }\n\n            break;\n          }\n\n          if (!!this._resultFace.get_isReal()) {\n            break;\n          }\n        }\n      } else {\n        this._resultFace = null;\n      }\n\n      return this._resultFace;\n    },\n    __class__: hxDaedalus_iterators_FromFaceToNeighbourFaces\n  };\n\n  var hxDaedalus_iterators_FromMeshToFaces = $hx_exports[\"hxDaedalus\"][\"iterators\"][\"FromMeshToFaces\"] = function () {};\n\n  hxDaedalus_iterators_FromMeshToFaces.__name__ = true;\n  hxDaedalus_iterators_FromMeshToFaces.prototype = {\n    set_fromMesh: function (value) {\n      this._fromMesh = value;\n      this._currIndex = 0;\n      return value;\n    },\n    next: function () {\n      while (true) {\n        if (this._currIndex < this._fromMesh._faces.length) {\n          this._resultFace = this._fromMesh._faces[this._currIndex];\n          this._currIndex++;\n        } else {\n          this._resultFace = null;\n          break;\n        }\n\n        if (!!this._resultFace.get_isReal()) {\n          break;\n        }\n      }\n\n      return this._resultFace;\n    },\n    __class__: hxDaedalus_iterators_FromMeshToFaces\n  };\n\n  var hxDaedalus_iterators_FromMeshToVertices = $hx_exports[\"hxDaedalus\"][\"iterators\"][\"FromMeshToVertices\"] = function () {};\n\n  hxDaedalus_iterators_FromMeshToVertices.__name__ = true;\n  hxDaedalus_iterators_FromMeshToVertices.prototype = {\n    set_fromMesh: function (value) {\n      this._fromMesh = value;\n      this._currIndex = 0;\n      return value;\n    },\n    next: function () {\n      while (true) {\n        if (this._currIndex < this._fromMesh._vertices.length) {\n          this._resultVertex = this._fromMesh._vertices[this._currIndex];\n          this._currIndex++;\n        } else {\n          this._resultVertex = null;\n          break;\n        }\n\n        if (!!this._resultVertex.get_isReal()) {\n          break;\n        }\n      }\n\n      return this._resultVertex;\n    },\n    __class__: hxDaedalus_iterators_FromMeshToVertices\n  };\n\n  var hxDaedalus_iterators_FromVertexToHoldingFaces = $hx_exports[\"hxDaedalus\"][\"iterators\"][\"FromVertexToHoldingFaces\"] = function () {};\n\n  hxDaedalus_iterators_FromVertexToHoldingFaces.__name__ = true;\n  hxDaedalus_iterators_FromVertexToHoldingFaces.prototype = {\n    set_fromVertex: function (value) {\n      this._fromVertex = value;\n      this._nextEdge = this._fromVertex.get_edge();\n      return value;\n    },\n    next: function () {\n      if (this._nextEdge != null) {\n        while (true) {\n          this._resultFace = this._nextEdge.get_leftFace();\n          this._nextEdge = this._nextEdge.get_rotLeftEdge();\n\n          if (this._nextEdge == this._fromVertex.get_edge()) {\n            this._nextEdge = null;\n\n            if (!this._resultFace.get_isReal()) {\n              this._resultFace = null;\n            }\n\n            break;\n          }\n\n          if (!!this._resultFace.get_isReal()) {\n            break;\n          }\n        }\n      } else {\n        this._resultFace = null;\n      }\n\n      return this._resultFace;\n    },\n    __class__: hxDaedalus_iterators_FromVertexToHoldingFaces\n  };\n\n  var hxDaedalus_iterators_FromVertexToIncomingEdges = $hx_exports[\"hxDaedalus\"][\"iterators\"][\"FromVertexToIncomingEdges\"] = function () {};\n\n  hxDaedalus_iterators_FromVertexToIncomingEdges.__name__ = true;\n  hxDaedalus_iterators_FromVertexToIncomingEdges.prototype = {\n    set_fromVertex: function (value) {\n      this._fromVertex = value;\n      this._nextEdge = this._fromVertex.get_edge();\n\n      while (!this._nextEdge.get_isReal()) this._nextEdge = this._nextEdge.get_rotLeftEdge();\n\n      return value;\n    },\n    next: function () {\n      if (this._nextEdge != null) {\n        this._resultEdge = this._nextEdge.get_oppositeEdge();\n\n        while (true) {\n          this._nextEdge = this._nextEdge.get_rotLeftEdge();\n\n          if (this._nextEdge == this._fromVertex.get_edge()) {\n            this._nextEdge = null;\n            break;\n          }\n\n          if (!!this._nextEdge.get_isReal()) {\n            break;\n          }\n        }\n      } else {\n        this._resultEdge = null;\n      }\n\n      return this._resultEdge;\n    },\n    __class__: hxDaedalus_iterators_FromVertexToIncomingEdges\n  };\n\n  var hxDaedalus_iterators_FromVertexToNeighbourVertices = $hx_exports[\"hxDaedalus\"][\"iterators\"][\"FromVertexToNeighbourVertices\"] = function () {};\n\n  hxDaedalus_iterators_FromVertexToNeighbourVertices.__name__ = true;\n  hxDaedalus_iterators_FromVertexToNeighbourVertices.prototype = {\n    set_fromVertex: function (value) {\n      this._fromVertex = value;\n      this._nextEdge = this._fromVertex.get_edge();\n      return value;\n    },\n    next: function () {\n      if (this._nextEdge != null) {\n        this._resultVertex = this._nextEdge.get_oppositeEdge().get_originVertex();\n\n        while (true) {\n          this._nextEdge = this._nextEdge.get_rotLeftEdge();\n\n          if (!!this._nextEdge.get_isReal()) {\n            break;\n          }\n        }\n\n        if (this._nextEdge == this._fromVertex.get_edge()) {\n          this._nextEdge = null;\n        }\n      } else {\n        this._resultVertex = null;\n      }\n\n      return this._resultVertex;\n    },\n    __class__: hxDaedalus_iterators_FromVertexToNeighbourVertices\n  };\n\n  var hxDaedalus_iterators_FromVertexToOutgoingEdges = $hx_exports[\"hxDaedalus\"][\"iterators\"][\"FromVertexToOutgoingEdges\"] = function () {\n    this.realEdgesOnly = true;\n  };\n\n  hxDaedalus_iterators_FromVertexToOutgoingEdges.__name__ = true;\n  hxDaedalus_iterators_FromVertexToOutgoingEdges.prototype = {\n    set_fromVertex: function (value) {\n      this._fromVertex = value;\n      this._nextEdge = this._fromVertex.get_edge();\n\n      while (this.realEdgesOnly && !this._nextEdge.get_isReal()) this._nextEdge = this._nextEdge.get_rotLeftEdge();\n\n      return value;\n    },\n    next: function () {\n      if (this._nextEdge != null) {\n        this._resultEdge = this._nextEdge;\n\n        while (true) {\n          this._nextEdge = this._nextEdge.get_rotLeftEdge();\n\n          if (this._nextEdge == this._fromVertex.get_edge()) {\n            this._nextEdge = null;\n            break;\n          }\n\n          if (!(this.realEdgesOnly && !this._nextEdge.get_isReal())) {\n            break;\n          }\n        }\n      } else {\n        this._resultEdge = null;\n      }\n\n      return this._resultEdge;\n    },\n    __class__: hxDaedalus_iterators_FromVertexToOutgoingEdges\n  };\n\n  var hxDaedalus_view_SimpleView = $hx_exports[\"hxDaedalus\"][\"view\"][\"SimpleView\"] = function (targetCanvas) {\n    this.faceToEdgeIter = new hxDaedalus_iterators_FromFaceToInnerEdges();\n    this.faceAlpha = .5;\n    this.faceWidth = 1;\n    this.faceColor = 16711935;\n    this.entitiesAlpha = .75;\n    this.entitiesWidth = 1;\n    this.entitiesColor = 65280;\n    this.pathsAlpha = .75;\n    this.pathsWidth = 1.5;\n    this.pathsColor = 16760848;\n    this.verticesAlpha = .25;\n    this.verticesRadius = .5;\n    this.verticesColor = 255;\n    this.constraintsAlpha = 1.0;\n    this.constraintsWidth = 2;\n    this.constraintsColor = 16711680;\n    this.edgesAlpha = .25;\n    this.edgesWidth = 1;\n    this.edgesColor = 10066329;\n    this.graphics = new wings_jsCanvas_SimpleDrawingContext(targetCanvas);\n  };\n\n  hxDaedalus_view_SimpleView.__name__ = true;\n  hxDaedalus_view_SimpleView.prototype = {\n    drawVertex: function (vertex) {\n      this.graphics.graphics.lineStyle(this.verticesRadius, this.verticesColor, this.verticesAlpha);\n      this.graphics.graphics.beginFill(this.verticesColor, this.verticesAlpha);\n      var _this = this.graphics;\n      var cx = vertex.get_pos().x;\n      var cy = vertex.get_pos().y;\n\n      _this.graphics.drawCircle(cx, cy, this.verticesRadius);\n\n      this.graphics.graphics.endFill();\n    },\n    drawFace: function (face) {\n      this.faceToEdgeIter.set_fromFace(face);\n      this.graphics.graphics.beginFill(this.faceColor, this.faceAlpha);\n      this.graphics.graphics.lineStyle(this.faceWidth, this.faceColor, this.faceAlpha);\n      var count = 0;\n      var edge;\n\n      while (true) {\n        edge = this.faceToEdgeIter.next();\n\n        if (edge == null) {\n          break;\n        }\n\n        if (count == 0) {\n          var _this = this.graphics;\n          var x = edge.get_originVertex().get_pos().x;\n          var y = edge.get_originVertex().get_pos().y;\n\n          _this.graphics.moveTo(x, y);\n        }\n\n        var _this1 = this.graphics;\n        var x1 = edge.get_destinationVertex().get_pos().x;\n        var y1 = edge.get_destinationVertex().get_pos().y;\n\n        _this1.graphics.lineTo(x1, y1);\n\n        ++count;\n      }\n\n      this.graphics.graphics.endFill();\n    },\n    drawEdge: function (edge) {\n      if (edge.get_isConstrained()) {\n        this.graphics.graphics.lineStyle(this.constraintsWidth, this.constraintsColor, this.constraintsAlpha);\n        var _this = this.graphics;\n        var x = edge.get_originVertex().get_pos().x;\n        var y = edge.get_originVertex().get_pos().y;\n\n        _this.graphics.moveTo(x, y);\n\n        var _this1 = this.graphics;\n        var x1 = edge.get_destinationVertex().get_pos().x;\n        var y1 = edge.get_destinationVertex().get_pos().y;\n\n        _this1.graphics.lineTo(x1, y1);\n      } else {\n        this.graphics.graphics.lineStyle(this.edgesWidth, this.edgesColor, this.edgesAlpha);\n        var _this2 = this.graphics;\n        var x2 = edge.get_originVertex().get_pos().x;\n        var y2 = edge.get_originVertex().get_pos().y;\n\n        _this2.graphics.moveTo(x2, y2);\n\n        var _this3 = this.graphics;\n        var x3 = edge.get_destinationVertex().get_pos().x;\n        var y3 = edge.get_destinationVertex().get_pos().y;\n\n        _this3.graphics.lineTo(x3, y3);\n      }\n    },\n    drawMesh: function (mesh, cleanBefore) {\n      if (cleanBefore == null) {\n        cleanBefore = false;\n      }\n\n      if (cleanBefore) {\n        this.graphics.graphics.clear();\n      }\n\n      var all = mesh.getVerticesAndEdges();\n      var _g = 0;\n      var _g1 = all.vertices;\n\n      while (_g < _g1.length) {\n        var v = _g1[_g];\n        ++_g;\n        this.drawVertex(v);\n      }\n\n      var _g2 = 0;\n      var _g11 = all.edges;\n\n      while (_g2 < _g11.length) {\n        var e = _g11[_g2];\n        ++_g2;\n        this.drawEdge(e);\n      }\n    },\n    drawEntity: function (entity, cleanBefore) {\n      if (cleanBefore == null) {\n        cleanBefore = false;\n      }\n\n      if (cleanBefore) {\n        this.graphics.graphics.clear();\n      }\n\n      this.graphics.graphics.lineStyle(this.entitiesWidth, this.entitiesColor, this.entitiesAlpha);\n      this.graphics.graphics.beginFill(this.entitiesColor, this.entitiesAlpha);\n      var _this = this.graphics;\n      var cx = entity.x;\n      var cy = entity.y;\n      var radius = entity.get_radius();\n\n      _this.graphics.drawCircle(cx, cy, radius);\n\n      this.graphics.graphics.endFill();\n    },\n    drawEntities: function (vEntities, cleanBefore) {\n      if (cleanBefore == null) {\n        cleanBefore = false;\n      }\n\n      if (cleanBefore) {\n        this.graphics.graphics.clear();\n      }\n\n      var _g1 = 0;\n      var _g = vEntities.length;\n\n      while (_g1 < _g) {\n        var i = _g1++;\n        this.drawEntity(vEntities[i], false);\n      }\n    },\n    drawPath: function (path, cleanBefore) {\n      if (cleanBefore == null) {\n        cleanBefore = false;\n      }\n\n      if (cleanBefore) {\n        this.graphics.graphics.clear();\n      }\n\n      if (path.length == 0) {\n        return;\n      }\n\n      this.graphics.graphics.lineStyle(this.pathsWidth, this.pathsColor, this.pathsAlpha);\n      this.graphics.graphics.moveTo(path[0], path[1]);\n      var i = 2;\n\n      while (i < path.length) {\n        this.graphics.graphics.lineTo(path[i], path[i + 1]);\n        this.graphics.graphics.moveTo(path[i], path[i + 1]);\n        i += 2;\n      }\n    },\n    __class__: hxDaedalus_view_SimpleView\n  };\n  var hxPixels__$Pixels_Pixels_$Impl_$ = $hx_exports[\"hxPixels\"][\"_Pixels\"][\"Pixels_Impl_\"] = {};\n  hxPixels__$Pixels_Pixels_$Impl_$.__name__ = true;\n\n  hxPixels__$Pixels_Pixels_$Impl_$._new = function (width, height, alloc) {\n    if (alloc == null) {\n      alloc = true;\n    }\n\n    var this1 = new hxPixels__$Pixels_PixelsData(width, height, alloc);\n    return this1;\n  };\n\n  hxPixels__$Pixels_Pixels_$Impl_$.getByte = function (this1, i) {\n    return this1.bytes.b[(i & -4) + this1.format.channelMap[i & 3]];\n  };\n\n  hxPixels__$Pixels_Pixels_$Impl_$.getPixel = function (this1, x, y) {\n    var pos = y * this1.width + x << 2;\n    var r = this1.bytes.b[pos + this1.format.ch1] << 16;\n    var g = this1.bytes.b[pos + this1.format.ch2] << 8;\n    var b = this1.bytes.b[pos + this1.format.ch3];\n    return r | g | b;\n  };\n\n  hxPixels__$Pixels_Pixels_$Impl_$.getPixel32 = function (this1, x, y) {\n    var pos = y * this1.width + x << 2;\n    var a = this1.bytes.b[pos + this1.format.ch0] << 24;\n    var r = this1.bytes.b[pos + this1.format.ch1] << 16;\n    var g = this1.bytes.b[pos + this1.format.ch2] << 8;\n    var b = this1.bytes.b[pos + this1.format.ch3];\n    return a | r | g | b;\n  };\n\n  hxPixels__$Pixels_Pixels_$Impl_$.setByte = function (this1, i, value) {\n    this1.bytes.b[(i & -4) + this1.format.channelMap[i & 3]] = value & 255;\n  };\n\n  hxPixels__$Pixels_Pixels_$Impl_$.setPixel = function (this1, x, y, value) {\n    var pos = y * this1.width + x << 2;\n    var r = value >> 16 & 255;\n    var g = value >> 8 & 255;\n    var b = value & 255;\n    this1.bytes.b[pos + this1.format.ch1] = r & 255;\n    this1.bytes.b[pos + this1.format.ch2] = g & 255;\n    this1.bytes.b[pos + this1.format.ch3] = b & 255;\n  };\n\n  hxPixels__$Pixels_Pixels_$Impl_$.setPixel32 = function (this1, x, y, value) {\n    var pos = y * this1.width + x << 2;\n    var a = value >> 24 & 255;\n    var r = value >> 16 & 255;\n    var g = value >> 8 & 255;\n    var b = value & 255;\n    this1.bytes.b[pos + this1.format.ch0] = a & 255;\n    this1.bytes.b[pos + this1.format.ch1] = r & 255;\n    this1.bytes.b[pos + this1.format.ch2] = g & 255;\n    this1.bytes.b[pos + this1.format.ch3] = b & 255;\n  };\n\n  hxPixels__$Pixels_Pixels_$Impl_$.fillRect = function (this1, x, y, width, height, value) {\n    var pos = y * this1.width + x << 2;\n    var this2 = new hxPixels__$Pixels_PixelsData(width, 1, true);\n    var stridePixels = this2;\n    stridePixels.format = this1.format;\n    var stride = width << 2;\n    var _g1 = 0;\n    var _g = width;\n\n    while (_g1 < _g) {\n      var x1 = _g1++;\n      hxPixels__$Pixels_Pixels_$Impl_$.setPixel32(stridePixels, x1, 0, value);\n    }\n\n    var _g11 = 0;\n    var _g2 = height;\n\n    while (_g11 < _g2) {\n      var y1 = _g11++;\n      this1.bytes.blit(pos, stridePixels.bytes, 0, stride);\n      pos += this1.width << 2;\n    }\n  };\n\n  hxPixels__$Pixels_Pixels_$Impl_$.clone = function (this1) {\n    var this2 = new hxPixels__$Pixels_PixelsData(this1.width, this1.height, true);\n    var clone = this2;\n    clone.bytes.blit(0, this1.bytes, 0, this1.bytes.length);\n    clone.format = this1.format;\n    return clone;\n  };\n\n  hxPixels__$Pixels_Pixels_$Impl_$.fromBytes = function (bytes, width, height, format) {\n    var this1 = new hxPixels__$Pixels_PixelsData(width, height, false);\n    var pixels = this1;\n\n    if (format == null) {\n      format = hxPixels_PixelFormat.ARGB;\n    }\n\n    pixels.bytes = bytes;\n    return pixels;\n  };\n\n  hxPixels__$Pixels_Pixels_$Impl_$.convertTo = function (this1, format) {\n    return hxPixels__$Pixels_Pixels_$Impl_$.convert(this1, format, true);\n  };\n\n  hxPixels__$Pixels_Pixels_$Impl_$.convert = function (pixels, toFormat, inPlace) {\n    if (inPlace == null) {\n      inPlace = false;\n    }\n\n    var res = inPlace ? pixels : hxPixels__$Pixels_Pixels_$Impl_$.clone(pixels);\n\n    if (toFormat == pixels.format) {\n      return res;\n    }\n\n    var i = 0;\n    var pos = 0;\n\n    if (pixels.format == hxPixels_PixelFormat.BGRA && toFormat == hxPixels_PixelFormat.RGBA || pixels.format == hxPixels_PixelFormat.RGBA && toFormat == hxPixels_PixelFormat.BGRA) {\n      while (i < pixels.count) {\n        var i1 = pos + 1;\n        var r = pixels.bytes.b[(i1 & -4) + pixels.format.channelMap[i1 & 3]];\n        var i2 = pos + 3;\n        var b = pixels.bytes.b[(i2 & -4) + pixels.format.channelMap[i2 & 3]];\n        res.bytes.b[pos + toFormat.ch1] = r & 255;\n        res.bytes.b[pos + toFormat.ch3] = b & 255;\n        ++i;\n        pos += 4;\n      }\n    } else {\n      while (i < pixels.count) {\n        var a = pixels.bytes.b[(pos & -4) + pixels.format.channelMap[pos & 3]];\n        var i3 = pos + 1;\n        var r1 = pixels.bytes.b[(i3 & -4) + pixels.format.channelMap[i3 & 3]];\n        var i4 = pos + 2;\n        var g = pixels.bytes.b[(i4 & -4) + pixels.format.channelMap[i4 & 3]];\n        var i5 = pos + 3;\n        var b1 = pixels.bytes.b[(i5 & -4) + pixels.format.channelMap[i5 & 3]];\n        res.bytes.b[pos + toFormat.ch0] = a & 255;\n        res.bytes.b[pos + toFormat.ch1] = r1 & 255;\n        res.bytes.b[pos + toFormat.ch2] = g & 255;\n        res.bytes.b[pos + toFormat.ch3] = b1 & 255;\n        ++i;\n        pos += 4;\n      }\n    }\n\n    res.format = toFormat;\n    return res;\n  };\n\n  hxPixels__$Pixels_Pixels_$Impl_$.fromImageData = function (image) {\n    var this1 = new hxPixels__$Pixels_PixelsData(image.width, image.height, true);\n    var pixels = this1;\n    pixels.format = hxPixels_PixelFormat.ARGB;\n    var data = image.data;\n    var _g1 = 0;\n    var _g = data.byteLength;\n\n    while (_g1 < _g) {\n      var i = _g1++;\n      pixels.bytes.b[i] = data[i] & 255;\n    }\n\n    return pixels;\n  };\n\n  var hxPixels__$Pixels_PixelsData = function (width, height, alloc, format) {\n    if (alloc == null) {\n      alloc = true;\n    }\n\n    this.count = width * height;\n\n    if (alloc) {\n      this.bytes = new haxe_io_Bytes(new ArrayBuffer(this.count << 2));\n    }\n\n    this.width = width;\n    this.height = height;\n    this.format = format != null ? format : hxPixels_PixelFormat.ARGB;\n  };\n\n  hxPixels__$Pixels_PixelsData.__name__ = true;\n  hxPixels__$Pixels_PixelsData.prototype = {\n    __class__: hxPixels__$Pixels_PixelsData\n  };\n\n  var hxPixels_PixelFormat = $hx_exports[\"hxPixels\"][\"PixelFormat\"] = function (a, r, g, b, name) {\n    if (name == null) {\n      name = \"PixelFormat\";\n    }\n\n    this.channelMap = [a, r, g, b];\n    this.ch0 = a;\n    this.ch1 = r;\n    this.ch2 = g;\n    this.ch3 = b;\n    this.name = name;\n  };\n\n  hxPixels_PixelFormat.__name__ = true;\n  hxPixels_PixelFormat.prototype = {\n    get_A: function () {\n      return this.ch0;\n    },\n    get_R: function () {\n      return this.ch1;\n    },\n    get_G: function () {\n      return this.ch2;\n    },\n    get_B: function () {\n      return this.ch3;\n    },\n    toString: function () {\n      return this.name;\n    },\n    __class__: hxPixels_PixelFormat\n  };\n  var hxPixels__$Pixels_Pixel_$Impl_$ = $hx_exports[\"hxPixels\"][\"_Pixels\"][\"Pixel_Impl_\"] = {};\n  hxPixels__$Pixels_Pixel_$Impl_$.__name__ = true;\n\n  hxPixels__$Pixels_Pixel_$Impl_$.get_A = function (this1) {\n    return this1 >> 24 & 255;\n  };\n\n  hxPixels__$Pixels_Pixel_$Impl_$.set_A = function (this1, a) {\n    a &= 255;\n    this1 = this1 & 16777215 | a << 24;\n    return a;\n  };\n\n  hxPixels__$Pixels_Pixel_$Impl_$.get_R = function (this1) {\n    return this1 >> 16 & 255;\n  };\n\n  hxPixels__$Pixels_Pixel_$Impl_$.set_R = function (this1, r) {\n    r &= 255;\n    this1 = this1 & -16711681 | r << 16;\n    return r;\n  };\n\n  hxPixels__$Pixels_Pixel_$Impl_$.get_G = function (this1) {\n    return this1 >> 8 & 255;\n  };\n\n  hxPixels__$Pixels_Pixel_$Impl_$.set_G = function (this1, g) {\n    g &= 255;\n    this1 = this1 & -65281 | g << 8;\n    return g;\n  };\n\n  hxPixels__$Pixels_Pixel_$Impl_$.get_B = function (this1) {\n    return this1 & 255;\n  };\n\n  hxPixels__$Pixels_Pixel_$Impl_$.set_B = function (this1, b) {\n    b &= 255;\n    this1 = this1 & -256 | b;\n    return b;\n  };\n\n  var js__$Boot_HaxeError = function (val) {\n    Error.call(this);\n    this.val = val;\n    this.message = String(val);\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, js__$Boot_HaxeError);\n    }\n  };\n\n  js__$Boot_HaxeError.__name__ = true;\n\n  js__$Boot_HaxeError.wrap = function (val) {\n    if (val instanceof Error) {\n      return val;\n    } else {\n      return new js__$Boot_HaxeError(val);\n    }\n  };\n\n  js__$Boot_HaxeError.__super__ = Error;\n  js__$Boot_HaxeError.prototype = $extend(Error.prototype, {\n    __class__: js__$Boot_HaxeError\n  });\n\n  var js_Boot = function () {};\n\n  js_Boot.__name__ = true;\n\n  js_Boot.getClass = function (o) {\n    if (o instanceof Array && o.__enum__ == null) {\n      return Array;\n    } else {\n      var cl = o.__class__;\n\n      if (cl != null) {\n        return cl;\n      }\n\n      var name = js_Boot.__nativeClassName(o);\n\n      if (name != null) {\n        return js_Boot.__resolveNativeClass(name);\n      }\n\n      return null;\n    }\n  };\n\n  js_Boot.__string_rec = function (o, s) {\n    if (o == null) {\n      return \"null\";\n    }\n\n    if (s.length >= 5) {\n      return \"<...>\";\n    }\n\n    var t = typeof o;\n\n    if (t == \"function\" && (o.__name__ || o.__ename__)) {\n      t = \"object\";\n    }\n\n    switch (t) {\n      case \"function\":\n        return \"<function>\";\n\n      case \"object\":\n        if (o instanceof Array) {\n          if (o.__enum__) {\n            if (o.length == 2) {\n              return o[0];\n            }\n\n            var str = o[0] + \"(\";\n            s += \"\\t\";\n            var _g1 = 2;\n            var _g = o.length;\n\n            while (_g1 < _g) {\n              var i = _g1++;\n\n              if (i != 2) {\n                str += \",\" + js_Boot.__string_rec(o[i], s);\n              } else {\n                str += js_Boot.__string_rec(o[i], s);\n              }\n            }\n\n            return str + \")\";\n          }\n\n          var l = o.length;\n          var i1;\n          var str1 = \"[\";\n          s += \"\\t\";\n          var _g11 = 0;\n          var _g2 = l;\n\n          while (_g11 < _g2) {\n            var i2 = _g11++;\n            str1 += (i2 > 0 ? \",\" : \"\") + js_Boot.__string_rec(o[i2], s);\n          }\n\n          str1 += \"]\";\n          return str1;\n        }\n\n        var tostr;\n\n        try {\n          tostr = o.toString;\n        } catch (e) {\n          return \"???\";\n        }\n\n        if (tostr != null && tostr != Object.toString && typeof tostr == \"function\") {\n          var s2 = o.toString();\n\n          if (s2 != \"[object Object]\") {\n            return s2;\n          }\n        }\n\n        var k = null;\n        var str2 = \"{\\n\";\n        s += \"\\t\";\n        var hasp = o.hasOwnProperty != null;\n\n        for (var k in o) {\n          if (hasp && !o.hasOwnProperty(k)) {\n            continue;\n          }\n\n          if (k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\") {\n            continue;\n          }\n\n          if (str2.length != 2) {\n            str2 += \", \\n\";\n          }\n\n          str2 += s + k + \" : \" + js_Boot.__string_rec(o[k], s);\n        }\n\n        s = s.substring(1);\n        str2 += \"\\n\" + s + \"}\";\n        return str2;\n\n      case \"string\":\n        return o;\n\n      default:\n        return String(o);\n    }\n  };\n\n  js_Boot.__interfLoop = function (cc, cl) {\n    if (cc == null) {\n      return false;\n    }\n\n    if (cc == cl) {\n      return true;\n    }\n\n    var intf = cc.__interfaces__;\n\n    if (intf != null) {\n      var _g1 = 0;\n      var _g = intf.length;\n\n      while (_g1 < _g) {\n        var i = _g1++;\n        var i1 = intf[i];\n\n        if (i1 == cl || js_Boot.__interfLoop(i1, cl)) {\n          return true;\n        }\n      }\n    }\n\n    return js_Boot.__interfLoop(cc.__super__, cl);\n  };\n\n  js_Boot.__instanceof = function (o, cl) {\n    if (cl == null) {\n      return false;\n    }\n\n    switch (cl) {\n      case Array:\n        if (o instanceof Array) {\n          return o.__enum__ == null;\n        } else {\n          return false;\n        }\n\n        break;\n\n      case Bool:\n        return typeof o == \"boolean\";\n\n      case Dynamic:\n        return true;\n\n      case Float:\n        return typeof o == \"number\";\n\n      case Int:\n        if (typeof o == \"number\") {\n          return (o | 0) === o;\n        } else {\n          return false;\n        }\n\n        break;\n\n      case String:\n        return typeof o == \"string\";\n\n      default:\n        if (o != null) {\n          if (typeof cl == \"function\") {\n            if (o instanceof cl) {\n              return true;\n            }\n\n            if (js_Boot.__interfLoop(js_Boot.getClass(o), cl)) {\n              return true;\n            }\n          } else if (typeof cl == \"object\" && js_Boot.__isNativeObj(cl)) {\n            if (o instanceof cl) {\n              return true;\n            }\n          }\n        } else {\n          return false;\n        }\n\n        if (cl == Class ? o.__name__ != null : false) {\n          return true;\n        }\n\n        if (cl == Enum ? o.__ename__ != null : false) {\n          return true;\n        }\n\n        return o.__enum__ == cl;\n    }\n  };\n\n  js_Boot.__nativeClassName = function (o) {\n    var name = js_Boot.__toStr.call(o).slice(8, -1);\n\n    if (name == \"Object\" || name == \"Function\" || name == \"Math\" || name == \"JSON\") {\n      return null;\n    }\n\n    return name;\n  };\n\n  js_Boot.__isNativeObj = function (o) {\n    return js_Boot.__nativeClassName(o) != null;\n  };\n\n  js_Boot.__resolveNativeClass = function (name) {\n    return $global[name];\n  };\n\n  var js_html_compat_ArrayBuffer = function (a) {\n    if (a instanceof Array && a.__enum__ == null) {\n      this.a = a;\n      this.byteLength = a.length;\n    } else {\n      var len = a;\n      this.a = [];\n      var _g1 = 0;\n      var _g = len;\n\n      while (_g1 < _g) {\n        var i = _g1++;\n        this.a[i] = 0;\n      }\n\n      this.byteLength = len;\n    }\n  };\n\n  js_html_compat_ArrayBuffer.__name__ = true;\n\n  js_html_compat_ArrayBuffer.sliceImpl = function (begin, end) {\n    var u = new Uint8Array(this, begin, end == null ? null : end - begin);\n    var result = new ArrayBuffer(u.byteLength);\n    var resultArray = new Uint8Array(result);\n    resultArray.set(u);\n    return result;\n  };\n\n  js_html_compat_ArrayBuffer.prototype = {\n    slice: function (begin, end) {\n      return new js_html_compat_ArrayBuffer(this.a.slice(begin, end));\n    },\n    __class__: js_html_compat_ArrayBuffer\n  };\n\n  var js_html_compat_Uint8Array = function () {};\n\n  js_html_compat_Uint8Array.__name__ = true;\n\n  js_html_compat_Uint8Array._new = function (arg1, offset, length) {\n    var arr;\n\n    if (typeof arg1 == \"number\") {\n      arr = [];\n      var _g1 = 0;\n      var _g = arg1;\n\n      while (_g1 < _g) {\n        var i = _g1++;\n        arr[i] = 0;\n      }\n\n      arr.byteLength = arr.length;\n      arr.byteOffset = 0;\n      arr.buffer = new js_html_compat_ArrayBuffer(arr);\n    } else if (js_Boot.__instanceof(arg1, js_html_compat_ArrayBuffer)) {\n      var buffer = arg1;\n\n      if (offset == null) {\n        offset = 0;\n      }\n\n      if (length == null) {\n        length = buffer.byteLength - offset;\n      }\n\n      if (offset == 0) {\n        arr = buffer.a;\n      } else {\n        arr = buffer.a.slice(offset, offset + length);\n      }\n\n      arr.byteLength = arr.length;\n      arr.byteOffset = offset;\n      arr.buffer = buffer;\n    } else if (arg1 instanceof Array && arg1.__enum__ == null) {\n      arr = arg1.slice();\n      arr.byteLength = arr.length;\n      arr.byteOffset = 0;\n      arr.buffer = new js_html_compat_ArrayBuffer(arr);\n    } else {\n      throw new js__$Boot_HaxeError(\"TODO \" + Std.string(arg1));\n    }\n\n    arr.subarray = js_html_compat_Uint8Array._subarray;\n    arr.set = js_html_compat_Uint8Array._set;\n    return arr;\n  };\n\n  js_html_compat_Uint8Array._set = function (arg, offset) {\n    if (js_Boot.__instanceof(arg.buffer, js_html_compat_ArrayBuffer)) {\n      var a = arg;\n\n      if (arg.byteLength + offset > this.byteLength) {\n        throw new js__$Boot_HaxeError(\"set() outside of range\");\n      }\n\n      var _g1 = 0;\n      var _g = arg.byteLength;\n\n      while (_g1 < _g) {\n        var i = _g1++;\n        this[i + offset] = a[i];\n      }\n    } else if (arg instanceof Array && arg.__enum__ == null) {\n      var a1 = arg;\n\n      if (a1.length + offset > this.byteLength) {\n        throw new js__$Boot_HaxeError(\"set() outside of range\");\n      }\n\n      var _g11 = 0;\n      var _g2 = a1.length;\n\n      while (_g11 < _g2) {\n        var i1 = _g11++;\n        this[i1 + offset] = a1[i1];\n      }\n    } else {\n      throw new js__$Boot_HaxeError(\"TODO\");\n    }\n  };\n\n  js_html_compat_Uint8Array._subarray = function (start, end) {\n    var a = js_html_compat_Uint8Array._new(this.slice(start, end));\n\n    a.byteOffset = start;\n    return a;\n  };\n\n  var wings_core_ISimpleDrawingContext = $hx_exports[\"wings\"][\"core\"][\"ISimpleDrawingContext\"] = function () {};\n\n  wings_core_ISimpleDrawingContext.__name__ = true;\n  wings_core_ISimpleDrawingContext.prototype = {\n    __class__: wings_core_ISimpleDrawingContext\n  };\n  var wings_jsCanvas__$AlphaColor_AlphaColorJS_$Impl_$ = {};\n  wings_jsCanvas__$AlphaColor_AlphaColorJS_$Impl_$.__name__ = true;\n\n  wings_jsCanvas__$AlphaColor_AlphaColorJS_$Impl_$.toString = function (this1) {\n    return \"#\" + StringTools.hex(this1, 8);\n  };\n\n  var wings_jsCanvas_BasicCanvas = $hx_exports[\"wings\"][\"jsCanvas\"][\"BasicCanvas\"] = function () {\n    this.canvas = window.document.createElement(\"canvas\");\n    this.dom = this.canvas;\n    this.body = window.document.body;\n    this.surface = this.canvas.getContext(\"2d\", null);\n    this.style = this.dom.style;\n    this.header = new wings_jsCanvas_CanvasHeader();\n    this.canvas.width = this.header.width;\n    this.canvas.height = this.header.height;\n    this.style.paddingLeft = \"0px\";\n    this.style.paddingTop = \"0px\";\n    this.style.left = Std.string(0 + \"px\");\n    this.style.top = Std.string(0 + \"px\");\n    this.style.position = \"absolute\";\n    this.style.backgroundColor = this.header.bgColor;\n    this.surface.fillStyle = this.header.bgColor;\n    this.image = this.dom;\n    var s = window.document.createElement(\"style\");\n    s.innerHTML = \"@keyframes spin { from { transform:rotate( 0deg ); } to { transform:rotate( 360deg ); } }\";\n    window.document.getElementsByTagName(\"head\")[0].appendChild(s);\n    s.animation = \"spin 1s linear infinite\";\n    this.loop(this.header.frameRate);\n    var body = window.document.body;\n    body.appendChild(this.dom);\n  };\n\n  wings_jsCanvas_BasicCanvas.__name__ = true;\n  wings_jsCanvas_BasicCanvas.prototype = {\n    loop: function (tim) {\n      window.requestAnimationFrame($bind(this, this.loop));\n\n      if (this.onEnterFrame != null) {\n        this.onEnterFrame();\n      }\n\n      return true;\n    },\n    clear: function () {\n      this.surface.clearRect(0, 0, this.header.width, this.header.height);\n    },\n    drawCircle: function (x, y, radius) {\n      this.surface.beginPath();\n      this.surface.arc(x, y, radius, 0, 2 * Math.PI, false);\n      this.surface.stroke();\n      this.surface.closePath();\n    },\n    drawRect: function (x, y, width, height) {\n      this.surface.beginPath();\n      this.surface.moveTo(x, y);\n      this.surface.lineTo(x + width, y);\n      this.surface.lineTo(x + width, y + height);\n      this.surface.lineTo(x, y + height);\n      this.surface.stroke();\n      this.surface.closePath();\n    },\n    drawTri: function (points) {\n      this.surface.beginPath();\n      var i = 0;\n\n      while (i < points.length) {\n        if (i == 0) {\n          this.surface.moveTo(points[i], points[i + 1]);\n        } else {\n          this.surface.lineTo(points[i], points[i + 1]);\n        }\n\n        i += 2;\n      }\n\n      this.surface.stroke();\n      this.surface.closePath();\n    },\n    lineStyle: function (wid, col, alpha) {\n      this.surface.lineWidth = wid;\n\n      if (alpha != null && alpha != 1.0) {\n        var r = col >> 16 & 255;\n        var g = col >> 8 & 255;\n        var b = col & 255;\n        this.surface.strokeStyle = \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + alpha + \")\";\n      } else {\n        var tmp = StringTools.hex(col, 6);\n        this.surface.strokeStyle = \"#\" + tmp;\n      }\n    },\n    moveTo: function (x, y) {\n      this.surface.beginPath();\n      this.surface.moveTo(x, y);\n    },\n    lineTo: function (x, y) {\n      this.surface.lineTo(x, y);\n      this.surface.closePath();\n      this.surface.stroke();\n    },\n    quadTo: function (cx, cy, ax, ay) {\n      this.surface.quadraticCurveTo(cx, cy, ax, ay);\n      this.surface.stroke();\n    },\n    beginFill: function (col, alpha) {\n      if (alpha != null && alpha != 1.0) {\n        var r = col >> 16 & 255;\n        var g = col >> 8 & 255;\n        var b = col & 255;\n        this.surface.fillStyle = \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + alpha + \")\";\n      } else {\n        var tmp = StringTools.hex(col, 6);\n        this.surface.fillStyle = \"#\" + tmp;\n      }\n\n      this.surface.beginPath();\n    },\n    endFill: function () {\n      this.surface.stroke();\n      this.surface.closePath();\n      this.surface.fill();\n    },\n    __class__: wings_jsCanvas_BasicCanvas\n  };\n\n  var wings_jsCanvas_CanvasHeader = function () {\n    var canvasHeader = null.split(\":\");\n    this.width = Std.parseInt(canvasHeader[0]);\n    this.height = Std.parseInt(canvasHeader[1]);\n    this.frameRate = Std.parseInt(canvasHeader[2]);\n    this.bgColor = \"#\" + canvasHeader[3];\n  };\n\n  wings_jsCanvas_CanvasHeader.__name__ = true;\n  wings_jsCanvas_CanvasHeader.prototype = {\n    parseInt: function (e) {\n      return Std.parseInt(e);\n    },\n    toHashColor: function (e) {\n      return \"#\" + e;\n    },\n    __class__: wings_jsCanvas_CanvasHeader\n  };\n\n  var wings_jsCanvas_CanvasPixelMatrix = $hx_exports[\"wings\"][\"jsCanvas\"][\"CanvasPixelMatrix\"] = function (data_, w_, h_) {\n    this.data = data_;\n    this.width = w_;\n    this.height = h_;\n    this.lookup = [];\n    var count = 0;\n    var _g1 = 0;\n    var _g = this.height;\n\n    while (_g1 < _g) {\n      var i = _g1++;\n      this.lookup[i] = [];\n      var _g3 = 0;\n      var _g2 = this.width;\n\n      while (_g3 < _g2) {\n        var j = _g3++;\n        this.lookup[i][j] = count * 4 | 0;\n        ++count;\n      }\n    }\n  };\n\n  wings_jsCanvas_CanvasPixelMatrix.__name__ = true;\n\n  wings_jsCanvas_CanvasPixelMatrix.createCanvasPixelMatrixFromContext = function (context, w_, h_) {\n    var imageData = context.getImageData(0, 0, w_, h_);\n    var dataIn = imageData.data;\n    return new wings_jsCanvas_CanvasPixelMatrix(dataIn, w_, h_);\n  };\n\n  wings_jsCanvas_CanvasPixelMatrix.prototype = {\n    getPixel32: function (w_, h_) {\n      var offset = this.lookup[h_][w_];\n      return this.data[offset + 3] << 24 | this.data[offset] << 16 | this.data[offset + 1] << 8 | this.data[offset + 2];\n    },\n    setPixel32: function (w_, h_, value) {\n      var offset = this.lookup[h_][w_];\n      this.data[offset + 3] = value >> 24 & 255;\n      this.data[offset] = value >> 16 & 255;\n      this.data[offset + 1] = value >> 8 & 255;\n      this.data[offset + 2] = value & 255;\n    },\n    setPixel: function (w_, h_, value) {\n      var offset = this.lookup[h_][w_];\n      this.data[offset] = value >> 16 & 255;\n      this.data[offset + 1] = value >> 8 & 255;\n      this.data[offset + 2] = value & 255;\n    },\n    getPixel: function (w_, h_) {\n      var offset = this.lookup[h_][w_];\n      return this.data[offset] << 16 | this.data[offset + 1] << 8 | this.data[offset + 2];\n    },\n    __class__: wings_jsCanvas_CanvasPixelMatrix\n  };\n  var wings_jsCanvas__$ColorJS_ColorJS_$Impl_$ = {};\n  wings_jsCanvas__$ColorJS_ColorJS_$Impl_$.__name__ = true;\n\n  wings_jsCanvas__$ColorJS_ColorJS_$Impl_$.toString = function (this1) {\n    return \"#\" + StringTools.hex(this1, 6);\n  };\n\n  var wings_jsCanvas_ImageLoader = $hx_exports[\"wings\"][\"jsCanvas\"][\"ImageLoader\"] = function (imageNames, loaded_) {\n    this.images = new haxe_ds_StringMap();\n    this.loaded = loaded_;\n    this.count = imageNames.length;\n    var _g = 0;\n\n    while (_g < imageNames.length) {\n      var name = imageNames[_g];\n      ++_g;\n      this.load(name);\n    }\n  };\n\n  wings_jsCanvas_ImageLoader.__name__ = true;\n  wings_jsCanvas_ImageLoader.prototype = {\n    load: function (img) {\n      var image = window.document.createElement(\"img\");\n      var imgStyle = image.style;\n      imgStyle.left = \"0px\";\n      imgStyle.top = \"0px\";\n      imgStyle.paddingLeft = \"0px\";\n      imgStyle.paddingTop = \"0px\";\n      var f = $bind(this, this.store);\n      var a1 = image;\n      var a2 = img.split(\"/\").pop();\n\n      image.onload = function (e) {\n        f(a1, a2, e);\n      };\n\n      imgStyle.position = \"absolute\";\n      image.src = img;\n    },\n    store: function (image, name, e) {\n      this.count--;\n      var _this = this.images;\n\n      if (__map_reserved[name] != null) {\n        _this.setReserved(name, image);\n      } else {\n        _this.h[name] = image;\n      }\n\n      if (this.count == 0) {\n        this.loaded();\n      }\n    },\n    __class__: wings_jsCanvas_ImageLoader\n  };\n\n  var wings_jsCanvas_SimpleDrawingContext = $hx_exports[\"wings\"][\"jsCanvas\"][\"SimpleDrawingContext\"] = function (graphics) {\n    this.graphics = graphics;\n  };\n\n  wings_jsCanvas_SimpleDrawingContext.__name__ = true;\n  wings_jsCanvas_SimpleDrawingContext.__interfaces__ = [wings_core_ISimpleDrawingContext];\n  wings_jsCanvas_SimpleDrawingContext.prototype = {\n    clear: function () {\n      this.graphics.clear();\n    },\n    lineStyle: function (thickness, color, alpha) {\n      if (alpha == null) {\n        alpha = 1;\n      }\n\n      this.graphics.lineStyle(thickness, color, alpha);\n    },\n    beginFill: function (color, alpha) {\n      if (alpha == null) {\n        alpha = 1;\n      }\n\n      this.graphics.beginFill(color, alpha);\n    },\n    endFill: function () {\n      this.graphics.endFill();\n    },\n    moveTo: function (x, y) {\n      this.graphics.moveTo(x, y);\n    },\n    lineTo: function (x, y) {\n      this.graphics.lineTo(x, y);\n    },\n    quadTo: function (cx, cy, ax, ay) {\n      this.graphics.quadTo(cx, cy, ax, ay);\n    },\n    drawCircle: function (cx, cy, radius) {\n      this.graphics.drawCircle(cx, cy, radius);\n    },\n    drawRect: function (x, y, width, height) {\n      this.graphics.drawRect(x, y, width, height);\n    },\n    drawEquilaterialTri: function (x, y, radius, direction) {\n      var third = Math.PI * 2 / 3;\n      var points = [];\n      var x1;\n      var y1;\n      var _g = 0;\n\n      while (_g < 3) {\n        var i = _g++;\n        x1 = x + radius * Math.cos(direction + i * third);\n        y1 = y + radius * Math.sin(direction + i * third);\n        points.push(x1);\n        points.push(y1);\n      }\n\n      this.graphics.drawTri(points);\n    },\n    drawTri: function (points) {\n      this.graphics.drawTri(points);\n    },\n    __class__: wings_jsCanvas_SimpleDrawingContext\n  };\n  var $_,\n      $fid = 0;\n\n  function $bind(o, m) {\n    if (m == null) return null;\n    if (m.__id__ == null) m.__id__ = $fid++;\n    var f;\n    if (o.hx__closures__ == null) o.hx__closures__ = {};else f = o.hx__closures__[m.__id__];\n\n    if (f == null) {\n      f = function () {\n        return f.method.apply(f.scope, arguments);\n      };\n\n      f.scope = o;\n      f.method = m;\n      o.hx__closures__[m.__id__] = f;\n    }\n\n    return f;\n  }\n\n  String.prototype.__class__ = String;\n  String.__name__ = true;\n  Array.__name__ = true;\n  var Int = {\n    __name__: [\"Int\"]\n  };\n  var Dynamic = {\n    __name__: [\"Dynamic\"]\n  };\n  var Float = Number;\n  Float.__name__ = [\"Float\"];\n  var Bool = Boolean;\n  Bool.__ename__ = [\"Bool\"];\n  var Class = {\n    __name__: [\"Class\"]\n  };\n  var Enum = {};\n  var __map_reserved = {};\n  hxPixels_PixelFormat.ARGB = new hxPixels_PixelFormat(0, 1, 2, 3, \"ARGB\");\n  hxPixels_PixelFormat.RGBA = new hxPixels_PixelFormat(3, 0, 1, 2, \"RGBA\");\n  hxPixels_PixelFormat.BGRA = new hxPixels_PixelFormat(3, 2, 1, 0, \"BGRA\");\n  var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;\n\n  if (ArrayBuffer.prototype.slice == null) {\n    ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;\n  }\n\n  var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;\n  haxe_ds_ObjectMap.count = 0;\n  hxDaedalus_ai_EntityAI.NUM_SEGMENTS = 6;\n  hxDaedalus_data_Constants.EPSILON = 0.01;\n  hxDaedalus_data_Constants.EPSILON_SQUARED = 0.0001;\n  hxDaedalus_data_ConstraintSegment.INC = 0;\n  hxDaedalus_data_ConstraintShape.INC = 0;\n  hxDaedalus_data_Edge.INC = 0;\n  hxDaedalus_data_Face.INC = 0;\n  hxDaedalus_data_Mesh.INC = 0;\n  hxDaedalus_data_Object.INC = 0;\n  hxDaedalus_data_Vertex.INC = 0;\n  hxDaedalus_data_graph_Graph.INC = 0;\n  hxDaedalus_data_graph_GraphEdge.INC = 0;\n  hxDaedalus_data_graph_GraphNode.INC = 0;\n  hxDaedalus_data_math_Geom2D.__samples = [];\n  hxDaedalus_data_math_Geom2D.__circumcenter = new hxDaedalus_data_math_Point2D();\n  hxDaedalus_data_math_Potrace.MAX_INT = 2147483647;\n  hxDaedalus_data_math_Potrace.maxDistance = 1;\n  hxPixels__$Pixels_Pixels_$Impl_$.CHANNEL_MASK = 3;\n  hxPixels__$Pixels_PixelsData.BYTES_PER_PIXEL = 4;\n  js_Boot.__toStr = {}.toString;\n  js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;\n  wings_jsCanvas_CanvasHeader.__meta__ = {\n    fields: {\n      parseInt: {\n        'static': null\n      },\n      toHashColor: {\n        'static': null\n      }\n    }\n  };\n})(typeof exports != \"undefined\" ? exports : typeof window != \"undefined\" ? window : typeof self != \"undefined\" ? self : this, typeof window != \"undefined\" ? window : typeof global != \"undefined\" ? global : typeof self != \"undefined\" ? self : this);","map":{"version":3,"names":["$hx_exports","$global","$estr","js_Boot","__string_rec","$extend","from","fields","Inherit","prototype","proto","name","toString","Object","HxOverrides","__name__","cca","s","index","x","charCodeAt","undefined","substr","pos","len","length","Math","Std","string","parseInt","v","isNaN","StringTools","hex","n","digits","hexChars","charAt","haxe_IMap","haxe_ds_ObjectMap","h","__keys__","__interfaces__","set","key","value","id","__id__","count","__class__","haxe_ds_StringMap","setReserved","rh","getReserved","haxe_io_Bytes","data","byteLength","b","Uint8Array","bufferValue","hxBytes","bytes","blit","src","srcpos","js__$Boot_HaxeError","haxe_io_Error","OutsideBounds","subarray","__ename__","__constructs__","Blocked","__enum__","Overflow","Custom","e","$x","hxDaedalus_ai_AStar","iterEdge","hxDaedalus_iterators_FromFaceToInnerEdges","dispose","_mesh","closedFaces","sortedOpenedFaces","openedFaces","entryEdges","entryX","entryY","scoreF","scoreG","scoreH","predecessor","get_radius","_radius","set_radius","radiusSquared","diameter","diameterSquared","set_mesh","findPath","fromX","fromY","toX","toY","resultListFaces","resultListEdges","loc","locEdge","locVertex","distance","p1","p2","p3","hxDaedalus_data_math_Geom2D","locatePosition","vertex","edge","get_isConstrained","fromFace","get_leftFace","face","vertex1","toFace","get_edge","edge1","face1","push","dist","sqrt","innerEdge","neighbourFace","f","g","fromPoint","hxDaedalus_data_math_Point2D","entryPoint","distancePoint","fillDatas","curFace","pop","set_fromFace","next","get_rightFace","isWalkableByRadius","y","get_originVertex","get_pos","get_destinationVertex","get_length","v1","v2","sort","$bind","sortingFaces","unshift","a","fromEdge","throughFace","toEdge","vA","vB","vC","dot","result","distSquared","adjEdge","get_oppositeEdge","get_nextLeftEdge","get_prevLeftEdge","proj","projectOrthogonaly","distSquaredA","distSquaredB","vFaceToCheck","vFaceIsFromEdge","facesDone","currFace","faceFromEdge","currEdgeA","nextFaceA","currEdgeB","nextFaceB","shift","distanceSquaredVertexToEdge","hxDaedalus_ai_EntityAI","dirNormX","dirNormY","buildApproximation","_approximateObject","hxDaedalus_data_Object","get_matrix","translate","coordinates","set_coordinates","_g","i","cos","PI","sin","get_approximateObject","identity","get_radiusSquared","_radiusSquared","hxDaedalus_ai_Funnel","_currPoolPointsIndex","_poolPointsSize","_numSamplesCircle","_poolPoints","_g1","_sampleCircle","getPoint","__point","setXY","getCopyPoint","pointToCopy","max","_sampleCircleDistanceSquared","listFaces","listEdges","resultPath","checkFace","distanceSquared","startPoint","endPoint","j","k","currEdge","currVertex","direction","isInFace","funnelLeft","funnelRight","verticesDoneSide","pointsList","pointSides","pointSuccessor","relativPos","getRelativePosition2","prevPoint","newPointA","newPointB","fromVertex","fromFromVertex","_g2","i1","pathPoints","pathSides","currPos","_g21","_g11","i2","getDirection","_g4","_g3","k1","splice","_g41","_g31","k2","blocked","_g22","_g12","k3","_g23","_g13","k4","adjustedPoints","newPath","adjustWithTangents","_g24","_g14","i3","pathLength","checkAdjustedPath","smoothPoints","smoothAngle","temp","_g25","_g15","i4","applyRadiusToP1","applyRadiusToP2","tangentsResult","side1","side2","pTangent1","pTangent2","tangentsPointToCircle","tangentsParalCircleToCircle","tangentsCrossCircleToCircle","successor","distanceSquaredPointToSegment","needCheck","point0","point0Side","point1","point1Side","point2","point2Side","pt1","pt2","pt3","pointToSmooth","nextPoint","side","encirclePoints","angleType","pointInArea","xToCheck","yToCheck","reverse","hxDaedalus_ai_PathFinder","astar","funnel","get_mesh","cond","cond1","entity","isCircleIntersectingAnyConstraint","hxDaedalus_ai_trajectory_LinearPathSampler","_samplingDistanceSquared","_samplingDistance","_preCompX","_preCompY","pythag","_path","get_x","_currentX","get_y","_currentY","get_hasPrev","_hasPrev","get_hasNext","_hasNext","get_count","_count","set_count","get_countMax","updateEntity","get_samplingDistance","set_samplingDistance","set_path","_preComputed","reset","_iPrev","_iNext","preCompute","prev","remainingDist","pathPrev","pathPrev1","pathNext","pathNext1","hxDaedalus_ai_trajectory_PathIterator","get_entity","_entity","set_entity","_countMax","hxDaedalus_data_Constants","hxDaedalus_data_ConstraintSegment","_id","INC","_edges","get_id","addEdge","indexOf","removeEdge","get_edges","fromShape","hxDaedalus_data_ConstraintShape","segments","hxDaedalus_data_Edge","colorDebug","fromConstraintSegments","get_isReal","_isReal","_isConstrained","setDatas","originVertex","oppositeEdge","nextLeftEdge","leftFace","isReal","isConstrained","_originVertex","_oppositeEdge","_nextLeftEdge","_leftFace","addFromConstraintSegment","segment","removeFromConstraintSegment","set_originVertex","set_nextLeftEdge","set_leftFace","set_isConstrained","get_nextRightEdge","get_prevRightEdge","get_rotLeftEdge","get_rotRightEdge","hxDaedalus_data_Face","set_datas","_edge","hxDaedalus_data_Mesh","width","height","__objectsUpdateInProgress","__edgesToCheck","__centerVertex","_objects","_constraintShapes","_faces","_vertices","_clipping","_height","_width","get_height","get_width","get_clipping","set_clipping","get___constraintShapes","buildFromRecord","rec","positions","split","insertConstraintSegment","parseFloat","insertObject","object","get_constraintShape","deleteObject","shape","get_coordinates","m","updateMatrixFromValues","x1","y1","x2","y2","transfx1","transfy1","transfx2","transfy2","transformX","transformY","set_constraintShape","deleteConstraintShape","updateObjects","get_hasChanged","set_hasChanged","insertConstraintShape","deleteConstraintSegment","p1pos","findPositionFromBounds","p2pos","newX1","newY1","newX2","newY2","intersectPoint","intersections2segments","firstDone","secondDone","vertexDown","insertVertex","vertexUp","iterVertexToOutEdges","hxDaedalus_iterators_FromVertexToOutgoingEdges","tempEdgeDownUp","tempSdgeUpDown","intersectedEdges","leftBoundingEdges","rightBoundingEdges","currObjet","pIntersect","edgeLeft","newEdgeDownUp","newEdgeUpDown","done","hxDaedalus_data_math_Intersection","EVertex","set_fromVertex","intersections2edges","splitEdge","EEdge","insertNewConstrainedEdge","fromSegment","edgeDownUp","untriangulate","triangulate","vertexToDelete","fromConstraintSegment","deleteVertex","check","inObject","newVertex","splitFace","restoreAsDelaunay","flipEdge","eBot_Top","eTop_Bot","eLeft_Right","eRight_Left","eTop_Left","eLeft_Bot","eBot_Right","eRight_Top","vBot","vTop","vLeft","vRight","fLeft","fRight","fBot","fTop","vCenter","hxDaedalus_data_Vertex","eTop_Center","eCenter_Top","eBot_Center","eCenter_Bot","eLeft_Center","eCenter_Left","eRight_Center","eCenter_Right","fTopLeft","fBotLeft","fBotRight","fTopRight","fromSegments","slice","edges","set_fromConstraintSegments","isDelaunay","freeOfConstraint","iterEdges","realEdgesOnly","outgoingEdges","get_fromConstraintSegments","bound","realA","realB","boundA","boundB","constrainedEdgeA","constrainedEdgeB","edgeA","edgeB","index2","faceToDelete","set_edge","edgesList","verticesCleaned","outEdge","key1","value1","baseEdge","vertexA","vertexB","vertexC","vertexCheck","circumcenter","getCircumcenter","edgeAopp","edgeBopp","boundM","debug","value2","value3","value4","value5","value6","getVerticesAndEdges","res","vertices","incomingEdge","holdingFace","iterVertices","hxDaedalus_iterators_FromMeshToVertices","set_fromMesh","hxDaedalus_iterators_FromVertexToIncomingEdges","dictVerticesDone","vertexIsInsideAABB","mesh","_pivotX","_pivotY","_matrix","hxDaedalus_data_math_Matrix2D","_scaleX","_scaleY","_rotation","_x","_y","_coordinates","_hasChanged","_constraintShape","updateValuesFromMatrix","scale","rotate","get_pivotX","set_pivotX","get_pivotY","set_pivotY","get_scaleX","set_scaleX","get_scaleY","set_scaleY","get_rotation","set_rotation","set_x","set_y","set_matrix","seg","_pos","_fromConstraintSegments","hxDaedalus_data_graph_Graph","get_node","_node","deleteNode","insertNode","node","hxDaedalus_data_graph_GraphNode","set_next","set_prev","get_outgoingEdge","deleteEdge","otherNode","get_successorNodes","get_next","get_prev","insertEdge","fromNode","toNode","hxDaedalus_data_graph_GraphEdge","set_sourceNode","set_destinationNode","set_rotPrevEdge","set_rotNextEdge","set_outgoingEdge","set_oppositeEdge","get_sourceNode","get_rotNextEdge","get_rotPrevEdge","_prev","_next","_rotPrevEdge","_rotNextEdge","_sourceNode","get_destinationNode","_destinationNode","get_data","_data","set_data","_successorNodes","_outgoingEdge","set_successorNodes","hxDaedalus_data_math_EdgeData","EFace","ENull","x_","y_","transform","matrix","tranform","clone","substract","p","normalize","norm","distanceTo","diffX","diffY","_randGen","hxDaedalus_data_math_RandGenerator","set_seed","__samples","numSamples","pow","rangeMin","rangeMax","_rnd","message","currVertexPos","minDistSquared","Infinity","closedVertex","iterFace","hxDaedalus_iterators_FromVertexToHoldingFaces","faceVisited","objectContainer","numIter","tmp","tmp1","getRelativePosition","radius","face_","edgesToCheck","pos1","pos2","checkedEdges","intersecting","intersectionsSegmentCircle","tmp2","tmp3","tmp4","tmp5","x3","y3","getDirection2","distanceSquaredPointToLine","eUp","polygon","e1_2","e2_3","e3_1","v3","v_v1squaredLength","v_v2squaredLength","v_v3squaredLength","v1_v2squaredLength","v2_v3squaredLength","v3_v1squaredLength","dot_v_v1v2","dot_v_v2v3","dot_v_v3v1","v_e1_2squaredLength","v_e2_3squaredLength","v_e3_1squaredLength","closeTo_e1_2","closeTo_e2_3","closeTo_e3_1","clipSegmentByTriangle","s1x","s1y","s2x","s2y","t1x","t1y","t2x","t2y","t3x","t3y","pResult1","pResult2","side1_1","side1_2","side2_1","side2_2","side3_1","side3_2","isSegmentIntersectingTriangle","vCorner","vOpposite","__circumcenter","squaredRadius","squaredDistance","m1","m2","m3","m4","t1","s1p1x","s1p1y","s1p2x","s1p2y","s2p1x","s2p1y","s2p2x","s2p2y","posIntersection","paramIntersection","infiniteLineMode","t2","divisor","edge2","isConvex","eLeft","vertexPos","c","d","intersections2Circles","cx1","cy1","r1","cx2","cy2","r2","distRadiusSQRD","transcendPart","xFirstPart","yFirstPart","xFactor","yFactor","p0x","p0y","p1x","p1y","cx","cy","r","p0xSQD","p0ySQD","delta","deltaSQRT","t0","f1","f2","intersectionsLineCircle","px","py","c2x","c2y","c1x","c1y","centerX","centerY","midX","midY","dotProd","tproj","projx","projy","t4x","t4y","ax","ay","bx","by","a_b_squaredLength","dotProduct","p_a_squaredLength","path","sumDistance","nextX","nextY","a_","b_","c_","d_","e_","f_","tx","ty","sx","sy","rad","point","concat","hxDaedalus_data_math_NodeData","hxDaedalus_data_math_Potrace","buildShapes","bmpData","debugBmp","debugShape","shapes","dictPixelsDone","row","col","hxPixels__$Pixels_Pixels_$Impl_$","getPixel","__map_reserved","buildShape","fromPixelRow","fromPixelCol","newX","newY","curDir","newDir","newPixelRow","newPixelCol","setPixel32","graphics","lineStyle","moveTo","lineTo","buildGraph","graph","shape1","shape2","node1","node2","subNode","distSqrd","sumDistSqrd","isValid","edgeData","maxDistance","sumDistancesSquared","nodesCount","buildPolygon","currNode","minNodeIndex","score","higherScore","lowerScoreEdge","seed","rangeMin_","rangeMax_","_originalSeed","_currSeed","_numIter","get_seed","_floatSeed","_tempString","round","nextInRange","shuffle","array","currIdx","rndIdx","hxDaedalus_data_math_ShapeSimplifier","simplify","coords","epsilon","firstPointX","firstPointY","lastPointX","lastPointY","currDist","l1","l2","rs","hxDaedalus_data_math_Tools","extractMeshFromBitmap","pixels","triangles","extractMeshFromShapes","invertWinding","graphs","polygons","hxDaedalus_factories_RectMesh","buildRectangle","indicesDict","openFacesList","_g5","key2","hxDaedalus_debug_Debug","assertTrue","assertFalse","assertEquals","expected","actual","trace","hxDaedalus_factories_BitmapMesh","buildFromBmpData","hxDaedalus_factories_BitmapObject","simplificationEpsilon","obj","vTL","vTR","vBR","vBL","eTL_TR","eTR_TL","eTR_BR","eBR_TR","eBR_BL","eBL_BR","eBL_TL","eTL_BL","eTR_BL","eBL_TR","eTL_BR","eBR_TL","fTL_BL_TR","fTR_BL_BR","fTL_BR_BL","fTL_TR_BR","boundShape","segTop","segRight","segBot","segLeft","offset","f3","securityRect","f4","_g6","f5","_g7","_g16","f6","_g8","_g17","f7","hxDaedalus_iterators_FromEdgeToRotatedEdges","_fromFace","_nextEdge","_resultEdge","hxDaedalus_iterators_FromFaceToInnerVertices","_resultVertex","hxDaedalus_iterators_FromFaceToNeighbourFaces","_resultFace","hxDaedalus_iterators_FromMeshToFaces","_fromMesh","_currIndex","_fromVertex","hxDaedalus_iterators_FromVertexToNeighbourVertices","hxDaedalus_view_SimpleView","targetCanvas","faceToEdgeIter","faceAlpha","faceWidth","faceColor","entitiesAlpha","entitiesWidth","entitiesColor","pathsAlpha","pathsWidth","pathsColor","verticesAlpha","verticesRadius","verticesColor","constraintsAlpha","constraintsWidth","constraintsColor","edgesAlpha","edgesWidth","edgesColor","wings_jsCanvas_SimpleDrawingContext","drawVertex","beginFill","_this","drawCircle","endFill","drawFace","_this1","drawEdge","_this2","_this3","drawMesh","cleanBefore","clear","all","drawEntity","drawEntities","vEntities","drawPath","_new","alloc","this1","hxPixels__$Pixels_PixelsData","getByte","format","channelMap","ch1","ch2","ch3","getPixel32","ch0","setByte","setPixel","fillRect","this2","stridePixels","stride","fromBytes","hxPixels_PixelFormat","ARGB","convertTo","convert","toFormat","inPlace","BGRA","RGBA","i5","b1","fromImageData","image","ArrayBuffer","get_A","get_R","get_G","get_B","hxPixels__$Pixels_Pixel_$Impl_$","set_A","set_R","set_G","set_B","val","Error","call","String","captureStackTrace","wrap","__super__","getClass","o","Array","cl","__nativeClassName","__resolveNativeClass","t","str","l","str1","tostr","s2","str2","hasp","hasOwnProperty","substring","__interfLoop","cc","intf","__instanceof","Bool","Dynamic","Float","Int","__isNativeObj","Class","Enum","__toStr","js_html_compat_ArrayBuffer","sliceImpl","begin","end","u","resultArray","js_html_compat_Uint8Array","arg1","arr","byteOffset","buffer","_subarray","_set","arg","a1","start","wings_core_ISimpleDrawingContext","wings_jsCanvas__$AlphaColor_AlphaColorJS_$Impl_$","wings_jsCanvas_BasicCanvas","canvas","window","document","createElement","dom","body","surface","getContext","style","header","wings_jsCanvas_CanvasHeader","paddingLeft","paddingTop","left","top","position","backgroundColor","bgColor","fillStyle","innerHTML","getElementsByTagName","appendChild","animation","loop","frameRate","tim","requestAnimationFrame","onEnterFrame","clearRect","beginPath","arc","stroke","closePath","drawRect","drawTri","points","wid","alpha","lineWidth","strokeStyle","quadTo","quadraticCurveTo","fill","canvasHeader","toHashColor","wings_jsCanvas_CanvasPixelMatrix","data_","w_","h_","lookup","createCanvasPixelMatrixFromContext","context","imageData","getImageData","dataIn","wings_jsCanvas__$ColorJS_ColorJS_$Impl_$","wings_jsCanvas_ImageLoader","imageNames","loaded_","images","loaded","load","img","imgStyle","store","a2","onload","thickness","color","drawEquilaterialTri","third","$_","$fid","hx__closures__","method","apply","scope","arguments","Number","Boolean","NUM_SEGMENTS","EPSILON","EPSILON_SQUARED","MAX_INT","CHANNEL_MASK","BYTES_PER_PIXEL","BYTES_PER_ELEMENT","__meta__","exports","self","global"],"sources":["D:/projects/test-game/node_modules/hxdaedalus-js/hxDaedalus.js"],"sourcesContent":["// Generated by Haxe 3.4.0 (git build development @ d3955c6)\n// with \"haxe -js bin\\hxDaedalus.js --macro include('hxDaedalus') --macro include('hxPixels') --macro include('wings.jsCanvas')\"\n(function ($hx_exports, $global) { \"use strict\";\n$hx_exports[\"wings\"] = $hx_exports[\"wings\"] || {};\n$hx_exports[\"wings\"][\"jsCanvas\"] = $hx_exports[\"wings\"][\"jsCanvas\"] || {};\n;$hx_exports[\"wings\"][\"core\"] = $hx_exports[\"wings\"][\"core\"] || {};\n$hx_exports[\"hxPixels\"] = $hx_exports[\"hxPixels\"] || {};\n$hx_exports[\"hxPixels\"][\"_Pixels\"] = $hx_exports[\"hxPixels\"][\"_Pixels\"] || {};\n$hx_exports[\"hxDaedalus\"] = $hx_exports[\"hxDaedalus\"] || {};\n$hx_exports[\"hxDaedalus\"][\"view\"] = $hx_exports[\"hxDaedalus\"][\"view\"] || {};\n;$hx_exports[\"hxDaedalus\"][\"iterators\"] = $hx_exports[\"hxDaedalus\"][\"iterators\"] || {};\n;$hx_exports[\"hxDaedalus\"][\"factories\"] = $hx_exports[\"hxDaedalus\"][\"factories\"] || {};\n;$hx_exports[\"hxDaedalus\"][\"data\"] = $hx_exports[\"hxDaedalus\"][\"data\"] || {};\n$hx_exports[\"hxDaedalus\"][\"data\"][\"math\"] = $hx_exports[\"hxDaedalus\"][\"data\"][\"math\"] || {};\n;$hx_exports[\"hxDaedalus\"][\"data\"][\"graph\"] = $hx_exports[\"hxDaedalus\"][\"data\"][\"graph\"] || {};\n;$hx_exports[\"hxDaedalus\"][\"ai\"] = $hx_exports[\"hxDaedalus\"][\"ai\"] || {};\n$hx_exports[\"hxDaedalus\"][\"ai\"][\"trajectory\"] = $hx_exports[\"hxDaedalus\"][\"ai\"][\"trajectory\"] || {};\nvar $estr = function() { return js_Boot.__string_rec(this,''); };\nfunction $extend(from, fields) {\n\tfunction Inherit() {} Inherit.prototype = from; var proto = new Inherit();\n\tfor (var name in fields) proto[name] = fields[name];\n\tif( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;\n\treturn proto;\n}\nvar HxOverrides = function() { };\nHxOverrides.__name__ = true;\nHxOverrides.cca = function(s,index) {\n\tvar x = s.charCodeAt(index);\n\tif(x != x) {\n\t\treturn undefined;\n\t}\n\treturn x;\n};\nHxOverrides.substr = function(s,pos,len) {\n\tif(len == null) {\n\t\tlen = s.length;\n\t} else if(len < 0) {\n\t\tif(pos == 0) {\n\t\t\tlen = s.length + len;\n\t\t} else {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\treturn s.substr(pos,len);\n};\nMath.__name__ = true;\nvar Std = function() { };\nStd.__name__ = true;\nStd.string = function(s) {\n\treturn js_Boot.__string_rec(s,\"\");\n};\nStd.parseInt = function(x) {\n\tvar v = parseInt(x,10);\n\tif(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {\n\t\tv = parseInt(x);\n\t}\n\tif(isNaN(v)) {\n\t\treturn null;\n\t}\n\treturn v;\n};\nvar StringTools = function() { };\nStringTools.__name__ = true;\nStringTools.hex = function(n,digits) {\n\tvar s = \"\";\n\tvar hexChars = \"0123456789ABCDEF\";\n\twhile(true) {\n\t\ts = hexChars.charAt(n & 15) + s;\n\t\tn >>>= 4;\n\t\tif(!(n > 0)) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(digits != null) {\n\t\twhile(s.length < digits) s = \"0\" + s;\n\t}\n\treturn s;\n};\nvar haxe_IMap = function() { };\nhaxe_IMap.__name__ = true;\nvar haxe_ds_ObjectMap = function() {\n\tthis.h = { __keys__ : { }};\n};\nhaxe_ds_ObjectMap.__name__ = true;\nhaxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];\nhaxe_ds_ObjectMap.prototype = {\n\tset: function(key,value) {\n\t\tvar id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);\n\t\tthis.h[id] = value;\n\t\tthis.h.__keys__[id] = key;\n\t}\n\t,__class__: haxe_ds_ObjectMap\n};\nvar haxe_ds_StringMap = function() {\n\tthis.h = { };\n};\nhaxe_ds_StringMap.__name__ = true;\nhaxe_ds_StringMap.__interfaces__ = [haxe_IMap];\nhaxe_ds_StringMap.prototype = {\n\tsetReserved: function(key,value) {\n\t\tif(this.rh == null) {\n\t\t\tthis.rh = { };\n\t\t}\n\t\tthis.rh[\"$\" + key] = value;\n\t}\n\t,getReserved: function(key) {\n\t\tif(this.rh == null) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn this.rh[\"$\" + key];\n\t\t}\n\t}\n\t,__class__: haxe_ds_StringMap\n};\nvar haxe_io_Bytes = function(data) {\n\tthis.length = data.byteLength;\n\tthis.b = new Uint8Array(data);\n\tthis.b.bufferValue = data;\n\tdata.hxBytes = this;\n\tdata.bytes = this.b;\n};\nhaxe_io_Bytes.__name__ = true;\nhaxe_io_Bytes.prototype = {\n\tblit: function(pos,src,srcpos,len) {\n\t\tif(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {\n\t\t\tthrow new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);\n\t\t}\n\t\tif(srcpos == 0 && len == src.b.byteLength) {\n\t\t\tthis.b.set(src.b,pos);\n\t\t} else {\n\t\t\tthis.b.set(src.b.subarray(srcpos,srcpos + len),pos);\n\t\t}\n\t}\n\t,__class__: haxe_io_Bytes\n};\nvar haxe_io_Error = { __ename__ : true, __constructs__ : [\"Blocked\",\"Overflow\",\"OutsideBounds\",\"Custom\"] };\nhaxe_io_Error.Blocked = [\"Blocked\",0];\nhaxe_io_Error.Blocked.toString = $estr;\nhaxe_io_Error.Blocked.__enum__ = haxe_io_Error;\nhaxe_io_Error.Overflow = [\"Overflow\",1];\nhaxe_io_Error.Overflow.toString = $estr;\nhaxe_io_Error.Overflow.__enum__ = haxe_io_Error;\nhaxe_io_Error.OutsideBounds = [\"OutsideBounds\",2];\nhaxe_io_Error.OutsideBounds.toString = $estr;\nhaxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;\nhaxe_io_Error.Custom = function(e) { var $x = [\"Custom\",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };\nvar hxDaedalus_ai_AStar = $hx_exports[\"hxDaedalus\"][\"ai\"][\"AStar\"] = function() {\n\tthis.iterEdge = new hxDaedalus_iterators_FromFaceToInnerEdges();\n};\nhxDaedalus_ai_AStar.__name__ = true;\nhxDaedalus_ai_AStar.prototype = {\n\tdispose: function() {\n\t\tthis._mesh = null;\n\t\tthis.closedFaces = null;\n\t\tthis.sortedOpenedFaces = null;\n\t\tthis.openedFaces = null;\n\t\tthis.entryEdges = null;\n\t\tthis.entryX = null;\n\t\tthis.entryY = null;\n\t\tthis.scoreF = null;\n\t\tthis.scoreG = null;\n\t\tthis.scoreH = null;\n\t\tthis.predecessor = null;\n\t}\n\t,get_radius: function() {\n\t\treturn this._radius;\n\t}\n\t,set_radius: function(value) {\n\t\tthis._radius = value;\n\t\tthis.radiusSquared = this._radius * this._radius;\n\t\tthis.diameter = this._radius * 2;\n\t\tthis.diameterSquared = this.diameter * this.diameter;\n\t\treturn value;\n\t}\n\t,set_mesh: function(value) {\n\t\tthis._mesh = value;\n\t\treturn value;\n\t}\n\t,findPath: function(fromX,fromY,toX,toY,resultListFaces,resultListEdges) {\n\t\tthis.closedFaces = new haxe_ds_ObjectMap();\n\t\tthis.sortedOpenedFaces = [];\n\t\tthis.openedFaces = new haxe_ds_ObjectMap();\n\t\tthis.entryEdges = new haxe_ds_ObjectMap();\n\t\tthis.entryX = new haxe_ds_ObjectMap();\n\t\tthis.entryY = new haxe_ds_ObjectMap();\n\t\tthis.scoreF = new haxe_ds_ObjectMap();\n\t\tthis.scoreG = new haxe_ds_ObjectMap();\n\t\tthis.scoreH = new haxe_ds_ObjectMap();\n\t\tthis.predecessor = new haxe_ds_ObjectMap();\n\t\tvar loc;\n\t\tvar locEdge;\n\t\tvar locVertex;\n\t\tvar distance;\n\t\tvar p1;\n\t\tvar p2;\n\t\tvar p3;\n\t\tloc = hxDaedalus_data_math_Geom2D.locatePosition(fromX,fromY,this._mesh);\n\t\tswitch(loc[1]) {\n\t\tcase 0:\n\t\t\tvar vertex = loc[2];\n\t\t\tlocVertex = vertex;\n\t\t\treturn;\n\t\tcase 1:\n\t\t\tvar edge = loc[2];\n\t\t\tlocEdge = edge;\n\t\t\tif(locEdge.get_isConstrained()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.fromFace = locEdge.get_leftFace();\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tvar face = loc[2];\n\t\t\tthis.fromFace = face;\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tbreak;\n\t\t}\n\t\tloc = hxDaedalus_data_math_Geom2D.locatePosition(toX,toY,this._mesh);\n\t\tswitch(loc[1]) {\n\t\tcase 0:\n\t\t\tvar vertex1 = loc[2];\n\t\t\tlocVertex = vertex1;\n\t\t\tthis.toFace = locVertex.get_edge().get_leftFace();\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tvar edge1 = loc[2];\n\t\t\tlocEdge = edge1;\n\t\t\tthis.toFace = locEdge.get_leftFace();\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tvar face1 = loc[2];\n\t\t\tthis.toFace = face1;\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tbreak;\n\t\t}\n\t\tthis.sortedOpenedFaces.push(this.fromFace);\n\t\tthis.entryEdges.set(this.fromFace,null);\n\t\tthis.entryX.set(this.fromFace,fromX);\n\t\tthis.entryY.set(this.fromFace,fromY);\n\t\tthis.scoreG.set(this.fromFace,0);\n\t\tvar dist = Math.sqrt((toX - fromX) * (toX - fromX) + (toY - fromY) * (toY - fromY));\n\t\tthis.scoreH.set(this.fromFace,dist);\n\t\tthis.scoreF.set(this.fromFace,dist);\n\t\tvar innerEdge;\n\t\tvar neighbourFace;\n\t\tvar f;\n\t\tvar g;\n\t\tvar h;\n\t\tvar fromPoint = new hxDaedalus_data_math_Point2D();\n\t\tvar entryPoint = new hxDaedalus_data_math_Point2D();\n\t\tvar distancePoint = new hxDaedalus_data_math_Point2D();\n\t\tvar fillDatas;\n\t\twhile(true) {\n\t\t\tif(this.sortedOpenedFaces.length == 0) {\n\t\t\t\tthis.curFace = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.curFace = this.sortedOpenedFaces.pop();\n\t\t\tif(this.curFace == this.toFace) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.iterEdge.set_fromFace(this.curFace);\n\t\t\twhile(true) {\n\t\t\t\tinnerEdge = this.iterEdge.next();\n\t\t\t\tif(!(innerEdge != null)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(innerEdge.get_isConstrained()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tneighbourFace = innerEdge.get_rightFace();\n\t\t\t\tif(!this.closedFaces.h[neighbourFace.__id__]) {\n\t\t\t\t\tif(this.curFace != this.fromFace && this._radius > 0 && !this.isWalkableByRadius(this.entryEdges.h[this.curFace.__id__],this.curFace,innerEdge)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tfromPoint.x = this.entryX.h[this.curFace.__id__];\n\t\t\t\t\tfromPoint.y = this.entryY.h[this.curFace.__id__];\n\t\t\t\t\tentryPoint.x = (innerEdge.get_originVertex().get_pos().x + innerEdge.get_destinationVertex().get_pos().x) / 2;\n\t\t\t\t\tentryPoint.y = (innerEdge.get_originVertex().get_pos().y + innerEdge.get_destinationVertex().get_pos().y) / 2;\n\t\t\t\t\tdistancePoint.x = entryPoint.x - toX;\n\t\t\t\t\tdistancePoint.y = entryPoint.y - toY;\n\t\t\t\t\th = distancePoint.get_length();\n\t\t\t\t\tdistancePoint.x = fromPoint.x - entryPoint.x;\n\t\t\t\t\tdistancePoint.y = fromPoint.y - entryPoint.y;\n\t\t\t\t\tg = this.scoreG.h[this.curFace.__id__] + distancePoint.get_length();\n\t\t\t\t\tf = h + g;\n\t\t\t\t\tfillDatas = false;\n\t\t\t\t\tif(this.openedFaces.h[neighbourFace.__id__] == null || !this.openedFaces.h[neighbourFace.__id__]) {\n\t\t\t\t\t\tthis.sortedOpenedFaces.push(neighbourFace);\n\t\t\t\t\t\tthis.openedFaces.set(neighbourFace,true);\n\t\t\t\t\t\tfillDatas = true;\n\t\t\t\t\t} else if(this.scoreF.h[neighbourFace.__id__] > f) {\n\t\t\t\t\t\tfillDatas = true;\n\t\t\t\t\t}\n\t\t\t\t\tif(fillDatas) {\n\t\t\t\t\t\tthis.entryEdges.set(neighbourFace,innerEdge);\n\t\t\t\t\t\tvar v = entryPoint.x;\n\t\t\t\t\t\tthis.entryX.set(neighbourFace,v);\n\t\t\t\t\t\tvar v1 = entryPoint.y;\n\t\t\t\t\t\tthis.entryY.set(neighbourFace,v1);\n\t\t\t\t\t\tthis.scoreF.set(neighbourFace,f);\n\t\t\t\t\t\tthis.scoreG.set(neighbourFace,g);\n\t\t\t\t\t\tthis.scoreH.set(neighbourFace,h);\n\t\t\t\t\t\tvar v2 = this.curFace;\n\t\t\t\t\t\tthis.predecessor.set(neighbourFace,v2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.openedFaces.set(this.curFace,false);\n\t\t\tthis.closedFaces.set(this.curFace,true);\n\t\t\tthis.sortedOpenedFaces.sort($bind(this,this.sortingFaces));\n\t\t}\n\t\tif(this.curFace == null) {\n\t\t\treturn;\n\t\t}\n\t\tresultListFaces.push(this.curFace);\n\t\twhile(this.curFace != this.fromFace) {\n\t\t\tresultListEdges.unshift(this.entryEdges.h[this.curFace.__id__]);\n\t\t\tthis.curFace = this.predecessor.h[this.curFace.__id__];\n\t\t\tresultListFaces.unshift(this.curFace);\n\t\t}\n\t}\n\t,sortingFaces: function(a,b) {\n\t\tif(this.scoreF.h[a.__id__] == this.scoreF.h[b.__id__]) {\n\t\t\treturn 0;\n\t\t} else if(this.scoreF.h[a.__id__] < this.scoreF.h[b.__id__]) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\t,isWalkableByRadius: function(fromEdge,throughFace,toEdge) {\n\t\tvar vA = null;\n\t\tvar vB = null;\n\t\tvar vC = null;\n\t\tif(fromEdge.get_originVertex() == toEdge.get_originVertex()) {\n\t\t\tvA = fromEdge.get_destinationVertex();\n\t\t\tvB = toEdge.get_destinationVertex();\n\t\t\tvC = fromEdge.get_originVertex();\n\t\t} else if(fromEdge.get_destinationVertex() == toEdge.get_destinationVertex()) {\n\t\t\tvA = fromEdge.get_originVertex();\n\t\t\tvB = toEdge.get_originVertex();\n\t\t\tvC = fromEdge.get_destinationVertex();\n\t\t} else if(fromEdge.get_originVertex() == toEdge.get_destinationVertex()) {\n\t\t\tvA = fromEdge.get_destinationVertex();\n\t\t\tvB = toEdge.get_originVertex();\n\t\t\tvC = fromEdge.get_originVertex();\n\t\t} else if(fromEdge.get_destinationVertex() == toEdge.get_originVertex()) {\n\t\t\tvA = fromEdge.get_originVertex();\n\t\t\tvB = toEdge.get_destinationVertex();\n\t\t\tvC = fromEdge.get_destinationVertex();\n\t\t}\n\t\tvar dot;\n\t\tvar result;\n\t\tvar distSquared;\n\t\tdot = (vC.get_pos().x - vA.get_pos().x) * (vB.get_pos().x - vA.get_pos().x) + (vC.get_pos().y - vA.get_pos().y) * (vB.get_pos().y - vA.get_pos().y);\n\t\tif(dot <= 0) {\n\t\t\tdistSquared = (vC.get_pos().x - vA.get_pos().x) * (vC.get_pos().x - vA.get_pos().x) + (vC.get_pos().y - vA.get_pos().y) * (vC.get_pos().y - vA.get_pos().y);\n\t\t\tif(distSquared >= this.diameterSquared) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tdot = (vC.get_pos().x - vB.get_pos().x) * (vA.get_pos().x - vB.get_pos().x) + (vC.get_pos().y - vB.get_pos().y) * (vA.get_pos().y - vB.get_pos().y);\n\t\tif(dot <= 0) {\n\t\t\tdistSquared = (vC.get_pos().x - vB.get_pos().x) * (vC.get_pos().x - vB.get_pos().x) + (vC.get_pos().y - vB.get_pos().y) * (vC.get_pos().y - vB.get_pos().y);\n\t\t\tif(distSquared >= this.diameterSquared) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tvar adjEdge;\n\t\tif(throughFace.get_edge() != fromEdge && throughFace.get_edge().get_oppositeEdge() != fromEdge && throughFace.get_edge() != toEdge && throughFace.get_edge().get_oppositeEdge() != toEdge) {\n\t\t\tadjEdge = throughFace.get_edge();\n\t\t} else if(throughFace.get_edge().get_nextLeftEdge() != fromEdge && throughFace.get_edge().get_nextLeftEdge().get_oppositeEdge() != fromEdge && throughFace.get_edge().get_nextLeftEdge() != toEdge && throughFace.get_edge().get_nextLeftEdge().get_oppositeEdge() != toEdge) {\n\t\t\tadjEdge = throughFace.get_edge().get_nextLeftEdge();\n\t\t} else {\n\t\t\tadjEdge = throughFace.get_edge().get_prevLeftEdge();\n\t\t}\n\t\tif(adjEdge.get_isConstrained()) {\n\t\t\tvar proj = new hxDaedalus_data_math_Point2D(vC.get_pos().x,vC.get_pos().y);\n\t\t\thxDaedalus_data_math_Geom2D.projectOrthogonaly(proj,adjEdge);\n\t\t\tdistSquared = (proj.x - vC.get_pos().x) * (proj.x - vC.get_pos().x) + (proj.y - vC.get_pos().y) * (proj.y - vC.get_pos().y);\n\t\t\tif(distSquared >= this.diameterSquared) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tvar distSquaredA = (vC.get_pos().x - vA.get_pos().x) * (vC.get_pos().x - vA.get_pos().x) + (vC.get_pos().y - vA.get_pos().y) * (vC.get_pos().y - vA.get_pos().y);\n\t\t\tvar distSquaredB = (vC.get_pos().x - vB.get_pos().x) * (vC.get_pos().x - vB.get_pos().x) + (vC.get_pos().y - vB.get_pos().y) * (vC.get_pos().y - vB.get_pos().y);\n\t\t\tif(distSquaredA < this.diameterSquared || distSquaredB < this.diameterSquared) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tvar vFaceToCheck = [];\n\t\t\t\tvar vFaceIsFromEdge = [];\n\t\t\t\tvar facesDone = new haxe_ds_ObjectMap();\n\t\t\t\tvFaceIsFromEdge.push(adjEdge);\n\t\t\t\tif(adjEdge.get_leftFace() == throughFace) {\n\t\t\t\t\tvFaceToCheck.push(adjEdge.get_rightFace());\n\t\t\t\t\tfacesDone.set(adjEdge.get_rightFace(),true);\n\t\t\t\t} else {\n\t\t\t\t\tvFaceToCheck.push(adjEdge.get_leftFace());\n\t\t\t\t\tfacesDone.set(adjEdge.get_leftFace(),true);\n\t\t\t\t}\n\t\t\t\tvar currFace;\n\t\t\t\tvar faceFromEdge;\n\t\t\t\tvar currEdgeA;\n\t\t\t\tvar nextFaceA;\n\t\t\t\tvar currEdgeB;\n\t\t\t\tvar nextFaceB;\n\t\t\t\twhile(vFaceToCheck.length > 0) {\n\t\t\t\t\tcurrFace = vFaceToCheck.shift();\n\t\t\t\t\tfaceFromEdge = vFaceIsFromEdge.shift();\n\t\t\t\t\tif(currFace.get_edge() == faceFromEdge || currFace.get_edge() == faceFromEdge.get_oppositeEdge()) {\n\t\t\t\t\t\tcurrEdgeA = currFace.get_edge().get_nextLeftEdge();\n\t\t\t\t\t\tcurrEdgeB = currFace.get_edge().get_nextLeftEdge().get_nextLeftEdge();\n\t\t\t\t\t} else if(currFace.get_edge().get_nextLeftEdge() == faceFromEdge || currFace.get_edge().get_nextLeftEdge() == faceFromEdge.get_oppositeEdge()) {\n\t\t\t\t\t\tcurrEdgeA = currFace.get_edge();\n\t\t\t\t\t\tcurrEdgeB = currFace.get_edge().get_nextLeftEdge().get_nextLeftEdge();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurrEdgeA = currFace.get_edge();\n\t\t\t\t\t\tcurrEdgeB = currFace.get_edge().get_nextLeftEdge();\n\t\t\t\t\t}\n\t\t\t\t\tif(currEdgeA.get_leftFace() == currFace) {\n\t\t\t\t\t\tnextFaceA = currEdgeA.get_rightFace();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnextFaceA = currEdgeA.get_leftFace();\n\t\t\t\t\t}\n\t\t\t\t\tif(currEdgeB.get_leftFace() == currFace) {\n\t\t\t\t\t\tnextFaceB = currEdgeB.get_rightFace();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnextFaceB = currEdgeB.get_leftFace();\n\t\t\t\t\t}\n\t\t\t\t\tif(!facesDone.h[nextFaceA.__id__] && hxDaedalus_data_math_Geom2D.distanceSquaredVertexToEdge(vC,currEdgeA) < this.diameterSquared) {\n\t\t\t\t\t\tif(currEdgeA.get_isConstrained()) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvFaceToCheck.push(nextFaceA);\n\t\t\t\t\t\t\tvFaceIsFromEdge.push(currEdgeA);\n\t\t\t\t\t\t\tfacesDone.set(nextFaceA,true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!facesDone.h[nextFaceB.__id__] && hxDaedalus_data_math_Geom2D.distanceSquaredVertexToEdge(vC,currEdgeB) < this.diameterSquared) {\n\t\t\t\t\t\tif(currEdgeB.get_isConstrained()) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvFaceToCheck.push(nextFaceB);\n\t\t\t\t\t\t\tvFaceIsFromEdge.push(currEdgeB);\n\t\t\t\t\t\t\tfacesDone.set(nextFaceB,true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t,__class__: hxDaedalus_ai_AStar\n};\nvar hxDaedalus_ai_EntityAI = $hx_exports[\"hxDaedalus\"][\"ai\"][\"EntityAI\"] = function() {\n\tthis._radius = 10;\n\tthis.x = this.y = 0;\n\tthis.dirNormX = 1;\n\tthis.dirNormY = 0;\n};\nhxDaedalus_ai_EntityAI.__name__ = true;\nhxDaedalus_ai_EntityAI.prototype = {\n\tbuildApproximation: function() {\n\t\tthis._approximateObject = new hxDaedalus_data_Object();\n\t\tthis._approximateObject.get_matrix().translate(this.x,this.y);\n\t\tvar coordinates = [];\n\t\tthis._approximateObject.set_coordinates(coordinates);\n\t\tif(this._radius == 0) {\n\t\t\treturn;\n\t\t}\n\t\tvar _g = 0;\n\t\twhile(_g < 6) {\n\t\t\tvar i = _g++;\n\t\t\tcoordinates.push(this._radius * Math.cos(2 * Math.PI * i / 6));\n\t\t\tcoordinates.push(this._radius * Math.sin(2 * Math.PI * i / 6));\n\t\t\tcoordinates.push(this._radius * Math.cos(2 * Math.PI * (i + 1) / 6));\n\t\t\tcoordinates.push(this._radius * Math.sin(2 * Math.PI * (i + 1) / 6));\n\t\t}\n\t}\n\t,get_approximateObject: function() {\n\t\tthis._approximateObject.get_matrix().identity();\n\t\tthis._approximateObject.get_matrix().translate(this.x,this.y);\n\t\treturn this._approximateObject;\n\t}\n\t,get_radius: function() {\n\t\treturn this._radius;\n\t}\n\t,get_radiusSquared: function() {\n\t\treturn this._radiusSquared;\n\t}\n\t,set_radius: function(value) {\n\t\tthis._radius = value;\n\t\tthis._radiusSquared = this._radius * this._radius;\n\t\treturn value;\n\t}\n\t,__class__: hxDaedalus_ai_EntityAI\n};\nvar hxDaedalus_ai_Funnel = $hx_exports[\"hxDaedalus\"][\"ai\"][\"Funnel\"] = function() {\n\tthis._currPoolPointsIndex = 0;\n\tthis._poolPointsSize = 3000;\n\tthis._numSamplesCircle = 16;\n\tthis._radiusSquared = 0;\n\tthis._radius = 0;\n\tthis._poolPoints = [];\n\tvar _g1 = 0;\n\tvar _g = this._poolPointsSize;\n\twhile(_g1 < _g) {\n\t\tvar i = _g1++;\n\t\tthis._poolPoints.push(new hxDaedalus_data_math_Point2D());\n\t}\n};\nhxDaedalus_ai_Funnel.__name__ = true;\nhxDaedalus_ai_Funnel.prototype = {\n\tdispose: function() {\n\t\tthis._sampleCircle = null;\n\t}\n\t,getPoint: function(x,y) {\n\t\tif(y == null) {\n\t\t\ty = 0;\n\t\t}\n\t\tif(x == null) {\n\t\t\tx = 0;\n\t\t}\n\t\tthis.__point = this._poolPoints[this._currPoolPointsIndex];\n\t\tthis.__point.setXY(x,y);\n\t\tthis._currPoolPointsIndex++;\n\t\tif(this._currPoolPointsIndex == this._poolPointsSize) {\n\t\t\tthis._poolPoints.push(new hxDaedalus_data_math_Point2D());\n\t\t\tthis._poolPointsSize++;\n\t\t}\n\t\treturn this.__point;\n\t}\n\t,getCopyPoint: function(pointToCopy) {\n\t\treturn this.getPoint(pointToCopy.x,pointToCopy.y);\n\t}\n\t,get_radius: function() {\n\t\treturn this._radius;\n\t}\n\t,set_radius: function(value) {\n\t\tthis._radius = Math.max(0,value);\n\t\tthis._radiusSquared = this._radius * this._radius;\n\t\tthis._sampleCircle = [];\n\t\tif(this.get_radius() == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tvar _g1 = 0;\n\t\tvar _g = this._numSamplesCircle;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i = _g1++;\n\t\t\tthis._sampleCircle.push(new hxDaedalus_data_math_Point2D(this._radius * Math.cos(-2 * Math.PI * i / this._numSamplesCircle),this._radius * Math.sin(-2 * Math.PI * i / this._numSamplesCircle)));\n\t\t}\n\t\tthis._sampleCircleDistanceSquared = (this._sampleCircle[0].x - this._sampleCircle[1].x) * (this._sampleCircle[0].x - this._sampleCircle[1].x) + (this._sampleCircle[0].y - this._sampleCircle[1].y) * (this._sampleCircle[0].y - this._sampleCircle[1].y);\n\t\treturn this._radius;\n\t}\n\t,findPath: function(fromX,fromY,toX,toY,listFaces,listEdges,resultPath) {\n\t\tthis._currPoolPointsIndex = 0;\n\t\tif(this._radius > 0) {\n\t\t\tvar checkFace = listFaces[0];\n\t\t\tvar distanceSquared;\n\t\t\tvar distance;\n\t\t\tvar p1;\n\t\t\tvar p2;\n\t\t\tvar p3;\n\t\t\tp1 = checkFace.get_edge().get_originVertex().get_pos();\n\t\t\tp2 = checkFace.get_edge().get_destinationVertex().get_pos();\n\t\t\tp3 = checkFace.get_edge().get_nextLeftEdge().get_destinationVertex().get_pos();\n\t\t\tdistanceSquared = (p1.x - fromX) * (p1.x - fromX) + (p1.y - fromY) * (p1.y - fromY);\n\t\t\tif(distanceSquared <= this._radiusSquared) {\n\t\t\t\tdistance = Math.sqrt(distanceSquared);\n\t\t\t\tfromX = this._radius * 1.01 * ((fromX - p1.x) / distance) + p1.x;\n\t\t\t\tfromY = this._radius * 1.01 * ((fromY - p1.y) / distance) + p1.y;\n\t\t\t} else {\n\t\t\t\tdistanceSquared = (p2.x - fromX) * (p2.x - fromX) + (p2.y - fromY) * (p2.y - fromY);\n\t\t\t\tif(distanceSquared <= this._radiusSquared) {\n\t\t\t\t\tdistance = Math.sqrt(distanceSquared);\n\t\t\t\t\tfromX = this._radius * 1.01 * ((fromX - p2.x) / distance) + p2.x;\n\t\t\t\t\tfromY = this._radius * 1.01 * ((fromY - p2.y) / distance) + p2.y;\n\t\t\t\t} else {\n\t\t\t\t\tdistanceSquared = (p3.x - fromX) * (p3.x - fromX) + (p3.y - fromY) * (p3.y - fromY);\n\t\t\t\t\tif(distanceSquared <= this._radiusSquared) {\n\t\t\t\t\t\tdistance = Math.sqrt(distanceSquared);\n\t\t\t\t\t\tfromX = this._radius * 1.01 * ((fromX - p3.x) / distance) + p3.x;\n\t\t\t\t\t\tfromY = this._radius * 1.01 * ((fromY - p3.y) / distance) + p3.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcheckFace = listFaces[listFaces.length - 1];\n\t\t\tp1 = checkFace.get_edge().get_originVertex().get_pos();\n\t\t\tp2 = checkFace.get_edge().get_destinationVertex().get_pos();\n\t\t\tp3 = checkFace.get_edge().get_nextLeftEdge().get_destinationVertex().get_pos();\n\t\t\tdistanceSquared = (p1.x - toX) * (p1.x - toX) + (p1.y - toY) * (p1.y - toY);\n\t\t\tif(distanceSquared <= this._radiusSquared) {\n\t\t\t\tdistance = Math.sqrt(distanceSquared);\n\t\t\t\ttoX = this._radius * 1.01 * ((toX - p1.x) / distance) + p1.x;\n\t\t\t\ttoY = this._radius * 1.01 * ((toY - p1.y) / distance) + p1.y;\n\t\t\t} else {\n\t\t\t\tdistanceSquared = (p2.x - toX) * (p2.x - toX) + (p2.y - toY) * (p2.y - toY);\n\t\t\t\tif(distanceSquared <= this._radiusSquared) {\n\t\t\t\t\tdistance = Math.sqrt(distanceSquared);\n\t\t\t\t\ttoX = this._radius * 1.01 * ((toX - p2.x) / distance) + p2.x;\n\t\t\t\t\ttoY = this._radius * 1.01 * ((toY - p2.y) / distance) + p2.y;\n\t\t\t\t} else {\n\t\t\t\t\tdistanceSquared = (p3.x - toX) * (p3.x - toX) + (p3.y - toY) * (p3.y - toY);\n\t\t\t\t\tif(distanceSquared <= this._radiusSquared) {\n\t\t\t\t\t\tdistance = Math.sqrt(distanceSquared);\n\t\t\t\t\t\ttoX = this._radius * 1.01 * ((toX - p3.x) / distance) + p3.x;\n\t\t\t\t\t\ttoY = this._radius * 1.01 * ((toY - p3.y) / distance) + p3.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar startPoint;\n\t\tvar endPoint;\n\t\tstartPoint = new hxDaedalus_data_math_Point2D(fromX,fromY);\n\t\tendPoint = new hxDaedalus_data_math_Point2D(toX,toY);\n\t\tif(listFaces.length == 1) {\n\t\t\tresultPath.push(startPoint.x);\n\t\t\tresultPath.push(startPoint.y);\n\t\t\tresultPath.push(endPoint.x);\n\t\t\tresultPath.push(endPoint.y);\n\t\t\treturn;\n\t\t}\n\t\tvar i;\n\t\tvar j;\n\t\tvar k;\n\t\tvar currEdge = null;\n\t\tvar currVertex = null;\n\t\tvar direction;\n\t\tvar _g = hxDaedalus_data_math_Geom2D.isInFace(fromX,fromY,listFaces[0]);\n\t\tif(_g[1] == 1) {\n\t\t\tvar edge = _g[2];\n\t\t\tif(listEdges[0] == edge) {\n\t\t\t\tlistEdges.shift();\n\t\t\t\tlistFaces.shift();\n\t\t\t}\n\t\t}\n\t\tvar funnelLeft = [];\n\t\tvar funnelRight = [];\n\t\tfunnelLeft.push(startPoint);\n\t\tfunnelRight.push(startPoint);\n\t\tvar verticesDoneSide = new haxe_ds_ObjectMap();\n\t\tvar pointsList = [];\n\t\tvar pointSides = new haxe_ds_ObjectMap();\n\t\tvar pointSuccessor = new haxe_ds_ObjectMap();\n\t\tpointSides.set(startPoint,0);\n\t\tcurrEdge = listEdges[0];\n\t\tvar relativPos = hxDaedalus_data_math_Geom2D.getRelativePosition2(fromX,fromY,currEdge);\n\t\tvar prevPoint;\n\t\tvar newPointA;\n\t\tvar newPointB;\n\t\tnewPointA = this.getCopyPoint(currEdge.get_destinationVertex().get_pos());\n\t\tnewPointB = this.getCopyPoint(currEdge.get_originVertex().get_pos());\n\t\tpointsList.push(newPointA);\n\t\tpointsList.push(newPointB);\n\t\tpointSuccessor.set(startPoint,newPointA);\n\t\tpointSuccessor.set(newPointA,newPointB);\n\t\tprevPoint = newPointB;\n\t\tif(relativPos == 1) {\n\t\t\tpointSides.set(newPointA,1);\n\t\t\tpointSides.set(newPointB,-1);\n\t\t\tverticesDoneSide.set(currEdge.get_destinationVertex(),1);\n\t\t\tverticesDoneSide.set(currEdge.get_originVertex(),-1);\n\t\t} else if(relativPos == -1) {\n\t\t\tpointSides.set(newPointA,-1);\n\t\t\tpointSides.set(newPointB,1);\n\t\t\tverticesDoneSide.set(currEdge.get_destinationVertex(),-1);\n\t\t\tverticesDoneSide.set(currEdge.get_originVertex(),1);\n\t\t}\n\t\tvar fromVertex = listEdges[0].get_originVertex();\n\t\tvar fromFromVertex = listEdges[0].get_destinationVertex();\n\t\tvar _g2 = 1;\n\t\tvar _g1 = listEdges.length;\n\t\twhile(_g2 < _g1) {\n\t\t\tvar i1 = _g2++;\n\t\t\tcurrEdge = listEdges[i1];\n\t\t\tif(currEdge.get_originVertex() == fromVertex) {\n\t\t\t\tcurrVertex = currEdge.get_destinationVertex();\n\t\t\t} else if(currEdge.get_destinationVertex() == fromVertex) {\n\t\t\t\tcurrVertex = currEdge.get_originVertex();\n\t\t\t} else if(currEdge.get_originVertex() == fromFromVertex) {\n\t\t\t\tcurrVertex = currEdge.get_destinationVertex();\n\t\t\t\tfromVertex = fromFromVertex;\n\t\t\t} else if(currEdge.get_destinationVertex() == fromFromVertex) {\n\t\t\t\tcurrVertex = currEdge.get_originVertex();\n\t\t\t\tfromVertex = fromFromVertex;\n\t\t\t}\n\t\t\tnewPointA = this.getCopyPoint(currVertex.get_pos());\n\t\t\tpointsList.push(newPointA);\n\t\t\tdirection = -verticesDoneSide.h[fromVertex.__id__];\n\t\t\tpointSides.set(newPointA,direction);\n\t\t\tpointSuccessor.set(prevPoint,newPointA);\n\t\t\tverticesDoneSide.set(currVertex,direction);\n\t\t\tprevPoint = newPointA;\n\t\t\tfromFromVertex = fromVertex;\n\t\t\tfromVertex = currVertex;\n\t\t}\n\t\tpointSuccessor.set(prevPoint,endPoint);\n\t\tpointSides.set(endPoint,0);\n\t\tvar pathPoints = [];\n\t\tvar pathSides = new haxe_ds_ObjectMap();\n\t\tpathPoints.push(startPoint);\n\t\tpathSides.set(startPoint,0);\n\t\tvar currPos;\n\t\tvar _g21 = 0;\n\t\tvar _g11 = pointsList.length;\n\t\twhile(_g21 < _g11) {\n\t\t\tvar i2 = _g21++;\n\t\t\tcurrPos = pointsList[i2];\n\t\t\tif(pointSides.h[currPos.__id__] == -1) {\n\t\t\t\tj = funnelLeft.length - 2;\n\t\t\t\twhile(j >= 0) {\n\t\t\t\t\tdirection = hxDaedalus_data_math_Geom2D.getDirection(funnelLeft[j].x,funnelLeft[j].y,funnelLeft[j + 1].x,funnelLeft[j + 1].y,currPos.x,currPos.y);\n\t\t\t\t\tif(direction != -1) {\n\t\t\t\t\t\tfunnelLeft.shift();\n\t\t\t\t\t\tvar _g4 = 0;\n\t\t\t\t\t\tvar _g3 = j;\n\t\t\t\t\t\twhile(_g4 < _g3) {\n\t\t\t\t\t\t\tvar k1 = _g4++;\n\t\t\t\t\t\t\tpathPoints.push(funnelLeft[0]);\n\t\t\t\t\t\t\tpathSides.set(funnelLeft[0],1);\n\t\t\t\t\t\t\tfunnelLeft.shift();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpathPoints.push(funnelLeft[0]);\n\t\t\t\t\t\tpathSides.set(funnelLeft[0],1);\n\t\t\t\t\t\tfunnelRight.splice(0,funnelRight.length);\n\t\t\t\t\t\tfunnelRight.push(funnelLeft[0]);\n\t\t\t\t\t\tfunnelRight.push(currPos);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t--j;\n\t\t\t\t}\n\t\t\t\tfunnelRight.push(currPos);\n\t\t\t\tj = funnelRight.length - 3;\n\t\t\t\twhile(j >= 0) {\n\t\t\t\t\tdirection = hxDaedalus_data_math_Geom2D.getDirection(funnelRight[j].x,funnelRight[j].y,funnelRight[j + 1].x,funnelRight[j + 1].y,currPos.x,currPos.y);\n\t\t\t\t\tif(direction == -1) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfunnelRight.splice(j + 1,1);\n\t\t\t\t\t}\n\t\t\t\t\t--j;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tj = funnelRight.length - 2;\n\t\t\t\twhile(j >= 0) {\n\t\t\t\t\tdirection = hxDaedalus_data_math_Geom2D.getDirection(funnelRight[j].x,funnelRight[j].y,funnelRight[j + 1].x,funnelRight[j + 1].y,currPos.x,currPos.y);\n\t\t\t\t\tif(direction != 1) {\n\t\t\t\t\t\tfunnelRight.shift();\n\t\t\t\t\t\tvar _g41 = 0;\n\t\t\t\t\t\tvar _g31 = j;\n\t\t\t\t\t\twhile(_g41 < _g31) {\n\t\t\t\t\t\t\tvar k2 = _g41++;\n\t\t\t\t\t\t\tpathPoints.push(funnelRight[0]);\n\t\t\t\t\t\t\tpathSides.set(funnelRight[0],-1);\n\t\t\t\t\t\t\tfunnelRight.shift();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpathPoints.push(funnelRight[0]);\n\t\t\t\t\t\tpathSides.set(funnelRight[0],-1);\n\t\t\t\t\t\tfunnelLeft.splice(0,funnelLeft.length);\n\t\t\t\t\t\tfunnelLeft.push(funnelRight[0]);\n\t\t\t\t\t\tfunnelLeft.push(currPos);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t--j;\n\t\t\t\t}\n\t\t\t\tfunnelLeft.push(currPos);\n\t\t\t\tj = funnelLeft.length - 3;\n\t\t\t\twhile(j >= 0) {\n\t\t\t\t\tdirection = hxDaedalus_data_math_Geom2D.getDirection(funnelLeft[j].x,funnelLeft[j].y,funnelLeft[j + 1].x,funnelLeft[j + 1].y,currPos.x,currPos.y);\n\t\t\t\t\tif(direction == 1) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfunnelLeft.splice(j + 1,1);\n\t\t\t\t\t}\n\t\t\t\t\t--j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar blocked = false;\n\t\tj = funnelRight.length - 2;\n\t\twhile(j >= 0) {\n\t\t\tdirection = hxDaedalus_data_math_Geom2D.getDirection(funnelRight[j].x,funnelRight[j].y,funnelRight[j + 1].x,funnelRight[j + 1].y,toX,toY);\n\t\t\tif(direction != 1) {\n\t\t\t\tfunnelRight.shift();\n\t\t\t\tvar _g22 = 0;\n\t\t\t\tvar _g12 = j + 1;\n\t\t\t\twhile(_g22 < _g12) {\n\t\t\t\t\tvar k3 = _g22++;\n\t\t\t\t\tpathPoints.push(funnelRight[0]);\n\t\t\t\t\tpathSides.set(funnelRight[0],-1);\n\t\t\t\t\tfunnelRight.shift();\n\t\t\t\t}\n\t\t\t\tpathPoints.push(endPoint);\n\t\t\t\tpathSides.set(endPoint,0);\n\t\t\t\tblocked = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t--j;\n\t\t}\n\t\tif(!blocked) {\n\t\t\tj = funnelLeft.length - 2;\n\t\t\twhile(j >= 0) {\n\t\t\t\tdirection = hxDaedalus_data_math_Geom2D.getDirection(funnelLeft[j].x,funnelLeft[j].y,funnelLeft[j + 1].x,funnelLeft[j + 1].y,toX,toY);\n\t\t\t\tif(direction != -1) {\n\t\t\t\t\tfunnelLeft.shift();\n\t\t\t\t\tvar _g23 = 0;\n\t\t\t\t\tvar _g13 = j + 1;\n\t\t\t\t\twhile(_g23 < _g13) {\n\t\t\t\t\t\tvar k4 = _g23++;\n\t\t\t\t\t\tpathPoints.push(funnelLeft[0]);\n\t\t\t\t\t\tpathSides.set(funnelLeft[0],1);\n\t\t\t\t\t\tfunnelLeft.shift();\n\t\t\t\t\t}\n\t\t\t\t\tpathPoints.push(endPoint);\n\t\t\t\t\tpathSides.set(endPoint,0);\n\t\t\t\t\tblocked = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t--j;\n\t\t\t}\n\t\t}\n\t\tif(!blocked) {\n\t\t\tpathPoints.push(endPoint);\n\t\t\tpathSides.set(endPoint,0);\n\t\t\tblocked = true;\n\t\t}\n\t\tvar adjustedPoints = [];\n\t\tif(this.get_radius() > 0) {\n\t\t\tvar newPath = [];\n\t\t\tif(pathPoints.length == 2) {\n\t\t\t\tthis.adjustWithTangents(pathPoints[0],false,pathPoints[1],false,pointSides,pointSuccessor,newPath,adjustedPoints);\n\t\t\t} else if(pathPoints.length > 2) {\n\t\t\t\tthis.adjustWithTangents(pathPoints[0],false,pathPoints[1],true,pointSides,pointSuccessor,newPath,adjustedPoints);\n\t\t\t\tif(pathPoints.length > 3) {\n\t\t\t\t\tvar _g24 = 1;\n\t\t\t\t\tvar _g14 = pathPoints.length - 3 + 1;\n\t\t\t\t\twhile(_g24 < _g14) {\n\t\t\t\t\t\tvar i3 = _g24++;\n\t\t\t\t\t\tthis.adjustWithTangents(pathPoints[i3],true,pathPoints[i3 + 1],true,pointSides,pointSuccessor,newPath,adjustedPoints);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar pathLength = pathPoints.length;\n\t\t\t\tthis.adjustWithTangents(pathPoints[pathLength - 2],true,pathPoints[pathLength - 1],false,pointSides,pointSuccessor,newPath,adjustedPoints);\n\t\t\t}\n\t\t\tnewPath.push(endPoint);\n\t\t\tthis.checkAdjustedPath(newPath,adjustedPoints,pointSides);\n\t\t\tvar smoothPoints = [];\n\t\t\ti = newPath.length - 2;\n\t\t\twhile(i >= 1) {\n\t\t\t\tthis.smoothAngle(adjustedPoints[i * 2 - 1],newPath[i],adjustedPoints[i * 2],pointSides.h[newPath[i].__id__],smoothPoints);\n\t\t\t\twhile(smoothPoints.length != 0) {\n\t\t\t\t\tvar temp = i * 2;\n\t\t\t\t\tadjustedPoints.splice(temp,0);\n\t\t\t\t\tvar x = smoothPoints.pop();\n\t\t\t\t\tadjustedPoints.splice(temp,0,x);\n\t\t\t\t}\n\t\t\t\t--i;\n\t\t\t}\n\t\t} else {\n\t\t\tadjustedPoints = pathPoints;\n\t\t}\n\t\tvar _g25 = 0;\n\t\tvar _g15 = adjustedPoints.length;\n\t\twhile(_g25 < _g15) {\n\t\t\tvar i4 = _g25++;\n\t\t\tresultPath.push(adjustedPoints[i4].x);\n\t\t\tresultPath.push(adjustedPoints[i4].y);\n\t\t}\n\t}\n\t,adjustWithTangents: function(p1,applyRadiusToP1,p2,applyRadiusToP2,pointSides,pointSuccessor,newPath,adjustedPoints) {\n\t\tvar tangentsResult = [];\n\t\tvar side1 = pointSides.h[p1.__id__];\n\t\tvar side2 = pointSides.h[p2.__id__];\n\t\tvar pTangent1 = null;\n\t\tvar pTangent2 = null;\n\t\tif(!applyRadiusToP1 && !applyRadiusToP2) {\n\t\t\tpTangent1 = p1;\n\t\t\tpTangent2 = p2;\n\t\t} else if(!applyRadiusToP1) {\n\t\t\tif(hxDaedalus_data_math_Geom2D.tangentsPointToCircle(p1.x,p1.y,p2.x,p2.y,this._radius,tangentsResult)) {\n\t\t\t\tif(side2 == 1) {\n\t\t\t\t\tpTangent1 = p1;\n\t\t\t\t\tpTangent2 = this.getPoint(tangentsResult[2],tangentsResult[3]);\n\t\t\t\t} else {\n\t\t\t\t\tpTangent1 = p1;\n\t\t\t\t\tpTangent2 = this.getPoint(tangentsResult[0],tangentsResult[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if(!applyRadiusToP2) {\n\t\t\tif(hxDaedalus_data_math_Geom2D.tangentsPointToCircle(p2.x,p2.y,p1.x,p1.y,this._radius,tangentsResult)) {\n\t\t\t\tif(tangentsResult.length > 0) {\n\t\t\t\t\tif(side1 == 1) {\n\t\t\t\t\t\tpTangent1 = this.getPoint(tangentsResult[0],tangentsResult[1]);\n\t\t\t\t\t\tpTangent2 = p2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpTangent1 = this.getPoint(tangentsResult[2],tangentsResult[3]);\n\t\t\t\t\t\tpTangent2 = p2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if(side1 == 1 && side2 == 1) {\n\t\t\thxDaedalus_data_math_Geom2D.tangentsParalCircleToCircle(this._radius,p1.x,p1.y,p2.x,p2.y,tangentsResult);\n\t\t\tpTangent1 = this.getPoint(tangentsResult[2],tangentsResult[3]);\n\t\t\tpTangent2 = this.getPoint(tangentsResult[4],tangentsResult[5]);\n\t\t} else if(side1 == -1 && side2 == -1) {\n\t\t\thxDaedalus_data_math_Geom2D.tangentsParalCircleToCircle(this._radius,p1.x,p1.y,p2.x,p2.y,tangentsResult);\n\t\t\tpTangent1 = this.getPoint(tangentsResult[0],tangentsResult[1]);\n\t\t\tpTangent2 = this.getPoint(tangentsResult[6],tangentsResult[7]);\n\t\t} else if(side1 == 1 && side2 == -1) {\n\t\t\tif(hxDaedalus_data_math_Geom2D.tangentsCrossCircleToCircle(this._radius,p1.x,p1.y,p2.x,p2.y,tangentsResult)) {\n\t\t\t\tpTangent1 = this.getPoint(tangentsResult[2],tangentsResult[3]);\n\t\t\t\tpTangent2 = this.getPoint(tangentsResult[6],tangentsResult[7]);\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if(hxDaedalus_data_math_Geom2D.tangentsCrossCircleToCircle(this._radius,p1.x,p1.y,p2.x,p2.y,tangentsResult)) {\n\t\t\tpTangent1 = this.getPoint(tangentsResult[0],tangentsResult[1]);\n\t\t\tpTangent2 = this.getPoint(tangentsResult[4],tangentsResult[5]);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t\tvar successor = pointSuccessor.h[p1.__id__];\n\t\tvar distance;\n\t\twhile(successor != p2) {\n\t\t\tdistance = hxDaedalus_data_math_Geom2D.distanceSquaredPointToSegment(successor.x,successor.y,pTangent1.x,pTangent1.y,pTangent2.x,pTangent2.y);\n\t\t\tif(distance < this._radiusSquared) {\n\t\t\t\tthis.adjustWithTangents(p1,applyRadiusToP1,successor,true,pointSides,pointSuccessor,newPath,adjustedPoints);\n\t\t\t\tthis.adjustWithTangents(successor,true,p2,applyRadiusToP2,pointSides,pointSuccessor,newPath,adjustedPoints);\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tsuccessor = pointSuccessor.h[successor.__id__];\n\t\t\t}\n\t\t}\n\t\tadjustedPoints.push(pTangent1);\n\t\tadjustedPoints.push(pTangent2);\n\t\tnewPath.push(p1);\n\t}\n\t,checkAdjustedPath: function(newPath,adjustedPoints,pointSides) {\n\t\tvar needCheck = true;\n\t\tvar point0;\n\t\tvar point0Side;\n\t\tvar point1;\n\t\tvar point1Side;\n\t\tvar point2;\n\t\tvar point2Side;\n\t\tvar pt1;\n\t\tvar pt2;\n\t\tvar pt3;\n\t\tvar dot;\n\t\tvar tangentsResult = [];\n\t\tvar pTangent1 = null;\n\t\tvar pTangent2 = null;\n\t\twhile(needCheck) {\n\t\t\tneedCheck = false;\n\t\t\tvar i = 2;\n\t\t\twhile(i < newPath.length) {\n\t\t\t\tpoint2 = newPath[i];\n\t\t\t\tpoint2Side = pointSides.h[point2.__id__];\n\t\t\t\tpoint1 = newPath[i - 1];\n\t\t\t\tpoint1Side = pointSides.h[point1.__id__];\n\t\t\t\tpoint0 = newPath[i - 2];\n\t\t\t\tpoint0Side = pointSides.h[point0.__id__];\n\t\t\t\tif(point1Side == point2Side) {\n\t\t\t\t\tpt1 = adjustedPoints[(i - 2) * 2];\n\t\t\t\t\tpt2 = adjustedPoints[(i - 1) * 2 - 1];\n\t\t\t\t\tpt3 = adjustedPoints[(i - 1) * 2];\n\t\t\t\t\tdot = (pt1.x - pt2.x) * (pt3.x - pt2.x) + (pt1.y - pt2.y) * (pt3.y - pt2.y);\n\t\t\t\t\tif(dot > 0) {\n\t\t\t\t\t\tif(i == 2) {\n\t\t\t\t\t\t\thxDaedalus_data_math_Geom2D.tangentsPointToCircle(point0.x,point0.y,point2.x,point2.y,this._radius,tangentsResult);\n\t\t\t\t\t\t\tif(point2Side == 1) {\n\t\t\t\t\t\t\t\tpTangent1 = point0;\n\t\t\t\t\t\t\t\tpTangent2 = this.getPoint(tangentsResult[2],tangentsResult[3]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpTangent1 = point0;\n\t\t\t\t\t\t\t\tpTangent2 = this.getPoint(tangentsResult[0],tangentsResult[1]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if(i == newPath.length - 1) {\n\t\t\t\t\t\t\thxDaedalus_data_math_Geom2D.tangentsPointToCircle(point2.x,point2.y,point0.x,point0.y,this._radius,tangentsResult);\n\t\t\t\t\t\t\tif(point0Side == 1) {\n\t\t\t\t\t\t\t\tpTangent1 = this.getPoint(tangentsResult[0],tangentsResult[1]);\n\t\t\t\t\t\t\t\tpTangent2 = point2;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpTangent1 = this.getPoint(tangentsResult[2],tangentsResult[3]);\n\t\t\t\t\t\t\t\tpTangent2 = point2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if(point0Side == 1 && point2Side == -1) {\n\t\t\t\t\t\t\thxDaedalus_data_math_Geom2D.tangentsCrossCircleToCircle(this._radius,point0.x,point0.y,point2.x,point2.y,tangentsResult);\n\t\t\t\t\t\t\tpTangent1 = this.getPoint(tangentsResult[2],tangentsResult[3]);\n\t\t\t\t\t\t\tpTangent2 = this.getPoint(tangentsResult[6],tangentsResult[7]);\n\t\t\t\t\t\t} else if(point0Side == -1 && point2Side == 1) {\n\t\t\t\t\t\t\thxDaedalus_data_math_Geom2D.tangentsCrossCircleToCircle(this._radius,point0.x,point0.y,point2.x,point2.y,tangentsResult);\n\t\t\t\t\t\t\tpTangent1 = this.getPoint(tangentsResult[0],tangentsResult[1]);\n\t\t\t\t\t\t\tpTangent2 = this.getPoint(tangentsResult[4],tangentsResult[5]);\n\t\t\t\t\t\t} else if(point0Side == 1 && point2Side == 1) {\n\t\t\t\t\t\t\thxDaedalus_data_math_Geom2D.tangentsParalCircleToCircle(this._radius,point0.x,point0.y,point2.x,point2.y,tangentsResult);\n\t\t\t\t\t\t\tpTangent1 = this.getPoint(tangentsResult[2],tangentsResult[3]);\n\t\t\t\t\t\t\tpTangent2 = this.getPoint(tangentsResult[4],tangentsResult[5]);\n\t\t\t\t\t\t} else if(point0Side == -1 && point2Side == -1) {\n\t\t\t\t\t\t\thxDaedalus_data_math_Geom2D.tangentsParalCircleToCircle(this._radius,point0.x,point0.y,point2.x,point2.y,tangentsResult);\n\t\t\t\t\t\t\tpTangent1 = this.getPoint(tangentsResult[0],tangentsResult[1]);\n\t\t\t\t\t\t\tpTangent2 = this.getPoint(tangentsResult[6],tangentsResult[7]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar temp = (i - 2) * 2;\n\t\t\t\t\t\tadjustedPoints.splice(temp,1);\n\t\t\t\t\t\tadjustedPoints.splice(temp,0,pTangent1);\n\t\t\t\t\t\ttemp = i * 2 - 1;\n\t\t\t\t\t\tadjustedPoints.splice(temp,1);\n\t\t\t\t\t\tadjustedPoints.splice(temp,0,pTangent2);\n\t\t\t\t\t\tnewPath.splice(i - 1,1);\n\t\t\t\t\t\tadjustedPoints.splice((i - 1) * 2 - 1,2);\n\t\t\t\t\t\ttangentsResult.splice(0,tangentsResult.length);\n\t\t\t\t\t\t--i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n\t,smoothAngle: function(prevPoint,pointToSmooth,nextPoint,side,encirclePoints) {\n\t\tvar angleType = hxDaedalus_data_math_Geom2D.getDirection(prevPoint.x,prevPoint.y,pointToSmooth.x,pointToSmooth.y,nextPoint.x,nextPoint.y);\n\t\tvar distanceSquared = (prevPoint.x - nextPoint.x) * (prevPoint.x - nextPoint.x) + (prevPoint.y - nextPoint.y) * (prevPoint.y - nextPoint.y);\n\t\tif(distanceSquared <= this._sampleCircleDistanceSquared) {\n\t\t\treturn;\n\t\t}\n\t\tvar index = 0;\n\t\tvar side1;\n\t\tvar side2;\n\t\tvar pointInArea;\n\t\tvar xToCheck;\n\t\tvar yToCheck;\n\t\tvar _g1 = 0;\n\t\tvar _g = this._numSamplesCircle;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i = _g1++;\n\t\t\tpointInArea = false;\n\t\t\txToCheck = pointToSmooth.x + this._sampleCircle[i].x;\n\t\t\tyToCheck = pointToSmooth.y + this._sampleCircle[i].y;\n\t\t\tside1 = hxDaedalus_data_math_Geom2D.getDirection(prevPoint.x,prevPoint.y,pointToSmooth.x,pointToSmooth.y,xToCheck,yToCheck);\n\t\t\tside2 = hxDaedalus_data_math_Geom2D.getDirection(pointToSmooth.x,pointToSmooth.y,nextPoint.x,nextPoint.y,xToCheck,yToCheck);\n\t\t\tif(side == 1) {\n\t\t\t\tif(angleType == -1) {\n\t\t\t\t\tif(side1 == -1 && side2 == -1) {\n\t\t\t\t\t\tpointInArea = true;\n\t\t\t\t\t}\n\t\t\t\t} else if(side1 == -1 || side2 == -1) {\n\t\t\t\t\tpointInArea = true;\n\t\t\t\t}\n\t\t\t} else if(angleType == 1) {\n\t\t\t\tif(side1 == 1 && side2 == 1) {\n\t\t\t\t\tpointInArea = true;\n\t\t\t\t}\n\t\t\t} else if(side1 == 1 || side2 == 1) {\n\t\t\t\tpointInArea = true;\n\t\t\t}\n\t\t\tif(pointInArea) {\n\t\t\t\tencirclePoints.splice(index,0);\n\t\t\t\tvar x = new hxDaedalus_data_math_Point2D(xToCheck,yToCheck);\n\t\t\t\tencirclePoints.splice(index,0,x);\n\t\t\t\t++index;\n\t\t\t} else {\n\t\t\t\tindex = 0;\n\t\t\t}\n\t\t}\n\t\tif(side == -1) {\n\t\t\tencirclePoints.reverse();\n\t\t}\n\t}\n\t,__class__: hxDaedalus_ai_Funnel\n};\nvar hxDaedalus_ai_PathFinder = $hx_exports[\"hxDaedalus\"][\"ai\"][\"PathFinder\"] = function() {\n\tthis.astar = new hxDaedalus_ai_AStar();\n\tthis.funnel = new hxDaedalus_ai_Funnel();\n\tthis.listFaces = [];\n\tthis.listEdges = [];\n};\nhxDaedalus_ai_PathFinder.__name__ = true;\nhxDaedalus_ai_PathFinder.prototype = {\n\tdispose: function() {\n\t\tthis._mesh = null;\n\t\tthis.astar.dispose();\n\t\tthis.astar = null;\n\t\tthis.funnel.dispose();\n\t\tthis.funnel = null;\n\t\tthis.listEdges = null;\n\t\tthis.listFaces = null;\n\t}\n\t,get_mesh: function() {\n\t\treturn this._mesh;\n\t}\n\t,set_mesh: function(value) {\n\t\tthis._mesh = value;\n\t\tthis.astar.set_mesh(this._mesh);\n\t\treturn value;\n\t}\n\t,findPath: function(toX,toY,resultPath) {\n\t\tresultPath.splice(0,resultPath.length);\n\t\tvar cond = this._mesh == null;\n\t\tvar cond1 = this.entity == null;\n\t\tif(hxDaedalus_data_math_Geom2D.isCircleIntersectingAnyConstraint(toX,toY,this.entity.get_radius(),this._mesh)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.astar.set_radius(this.entity.get_radius());\n\t\tthis.funnel.set_radius(this.entity.get_radius());\n\t\tthis.listFaces.splice(0,this.listFaces.length);\n\t\tthis.listEdges.splice(0,this.listEdges.length);\n\t\tthis.astar.findPath(this.entity.x,this.entity.y,toX,toY,this.listFaces,this.listEdges);\n\t\tif(this.listFaces.length == 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis.funnel.findPath(this.entity.x,this.entity.y,toX,toY,this.listFaces,this.listEdges,resultPath);\n\t}\n\t,__class__: hxDaedalus_ai_PathFinder\n};\nvar hxDaedalus_ai_trajectory_LinearPathSampler = $hx_exports[\"hxDaedalus\"][\"ai\"][\"trajectory\"][\"LinearPathSampler\"] = function() {\n\tthis._samplingDistanceSquared = 1;\n\tthis._samplingDistance = 1;\n\tthis._preCompX = [];\n\tthis._preCompY = [];\n};\nhxDaedalus_ai_trajectory_LinearPathSampler.__name__ = true;\nhxDaedalus_ai_trajectory_LinearPathSampler.pythag = function(a,b) {\n\treturn Math.sqrt(a * a + b * b);\n};\nhxDaedalus_ai_trajectory_LinearPathSampler.prototype = {\n\tdispose: function() {\n\t\tthis.entity = null;\n\t\tthis._path = null;\n\t\tthis._preCompX = null;\n\t\tthis._preCompY = null;\n\t}\n\t,get_x: function() {\n\t\treturn this._currentX;\n\t}\n\t,get_y: function() {\n\t\treturn this._currentY;\n\t}\n\t,get_hasPrev: function() {\n\t\treturn this._hasPrev;\n\t}\n\t,get_hasNext: function() {\n\t\treturn this._hasNext;\n\t}\n\t,get_count: function() {\n\t\treturn this._count;\n\t}\n\t,set_count: function(value) {\n\t\tthis._count = value;\n\t\tif(this._count < 0) {\n\t\t\tthis._count = 0;\n\t\t}\n\t\tif(this._count > this.get_countMax() - 1) {\n\t\t\tthis._count = this.get_countMax() - 1;\n\t\t}\n\t\tthis._hasPrev = this._count == 0 ? false : true;\n\t\tthis._hasNext = this._count == this.get_countMax() - 1 ? false : true;\n\t\tthis._currentX = this._preCompX[this._count];\n\t\tthis._currentY = this._preCompY[this._count];\n\t\tthis.updateEntity();\n\t\treturn this._count;\n\t}\n\t,get_countMax: function() {\n\t\treturn this._preCompX.length - 1;\n\t}\n\t,get_samplingDistance: function() {\n\t\treturn this._samplingDistance;\n\t}\n\t,set_samplingDistance: function(value) {\n\t\tthis._samplingDistance = value;\n\t\tthis._samplingDistanceSquared = this._samplingDistance * this._samplingDistance;\n\t\treturn value;\n\t}\n\t,set_path: function(value) {\n\t\tthis._path = value;\n\t\tthis._preComputed = false;\n\t\tthis.reset();\n\t\treturn value;\n\t}\n\t,reset: function() {\n\t\tif(this._path.length > 0) {\n\t\t\tvar cond = (this._path.length & 1) == 0;\n\t\t\tthis._currentX = this._path[0];\n\t\t\tthis._currentY = this._path[1];\n\t\t\tthis._iPrev = 0;\n\t\t\tthis._iNext = 2;\n\t\t\tthis._hasPrev = false;\n\t\t\tthis._hasNext = true;\n\t\t\tthis._count = 0;\n\t\t\tthis.updateEntity();\n\t\t} else {\n\t\t\tthis._hasPrev = false;\n\t\t\tthis._hasNext = false;\n\t\t\tthis._count = 0;\n\t\t}\n\t}\n\t,preCompute: function() {\n\t\tthis._preCompX.splice(0,this._preCompX.length);\n\t\tthis._preCompY.splice(0,this._preCompY.length);\n\t\tthis._count = 0;\n\t\tthis._preCompX.push(this._currentX);\n\t\tthis._preCompY.push(this._currentY);\n\t\tthis._preComputed = false;\n\t\twhile(this.next()) {\n\t\t\tthis._preCompX.push(this._currentX);\n\t\t\tthis._preCompY.push(this._currentY);\n\t\t}\n\t\tthis.reset();\n\t\tthis._preComputed = true;\n\t}\n\t,prev: function() {\n\t\tif(!this._hasPrev) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._hasNext = true;\n\t\tif(this._preComputed) {\n\t\t\tthis._count--;\n\t\t\tif(this._count == 0) {\n\t\t\t\tthis._hasPrev = false;\n\t\t\t}\n\t\t\tthis._currentX = this._preCompX[this._count];\n\t\t\tthis._currentY = this._preCompY[this._count];\n\t\t\tthis.updateEntity();\n\t\t\treturn true;\n\t\t}\n\t\tvar remainingDist = this._samplingDistance;\n\t\tvar dist = 0;\n\t\twhile(true) {\n\t\t\tvar pathPrev = this._path[this._iPrev];\n\t\t\tvar pathPrev1 = this._path[this._iPrev + 1];\n\t\t\tvar a = this._currentX - pathPrev;\n\t\t\tvar b = this._currentY - pathPrev1;\n\t\t\tdist = Math.sqrt(a * a + b * b);\n\t\t\tif(dist < remainingDist) {\n\t\t\t\tremainingDist -= dist;\n\t\t\t\tthis._iPrev -= 2;\n\t\t\t\tthis._iNext -= 2;\n\t\t\t\tif(this._iNext == 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(this._iNext == 0) {\n\t\t\tthis._currentX = this._path[0];\n\t\t\tthis._currentY = this._path[1];\n\t\t\tthis._hasPrev = false;\n\t\t\tthis._iNext = 2;\n\t\t\tthis._iPrev = 0;\n\t\t\tthis.updateEntity();\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis._currentX += (this._path[this._iPrev] - this._currentX) * remainingDist / dist;\n\t\t\tthis._currentY += (this._path[this._iPrev + 1] - this._currentY) * remainingDist / dist;\n\t\t\tthis.updateEntity();\n\t\t\treturn true;\n\t\t}\n\t}\n\t,next: function() {\n\t\tif(!this._hasNext) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._hasPrev = true;\n\t\tif(this._preComputed) {\n\t\t\tthis._count++;\n\t\t\tif(this._count == this._preCompX.length - 1) {\n\t\t\t\tthis._hasNext = false;\n\t\t\t}\n\t\t\tthis._currentX = this._preCompX[this._count];\n\t\t\tthis._currentY = this._preCompY[this._count];\n\t\t\tthis.updateEntity();\n\t\t\treturn true;\n\t\t}\n\t\tvar remainingDist = this._samplingDistance;\n\t\tvar dist = 0;\n\t\twhile(true) {\n\t\t\tvar pathNext = this._path[this._iNext];\n\t\t\tvar pathNext1 = this._path[this._iNext + 1];\n\t\t\tvar a = this._currentX - pathNext;\n\t\t\tvar b = this._currentY - pathNext1;\n\t\t\tdist = Math.sqrt(a * a + b * b);\n\t\t\tif(dist < remainingDist) {\n\t\t\t\tremainingDist -= dist;\n\t\t\t\tthis._currentX = this._path[this._iNext];\n\t\t\t\tthis._currentY = this._path[this._iNext + 1];\n\t\t\t\tthis._iPrev += 2;\n\t\t\t\tthis._iNext += 2;\n\t\t\t\tif(this._iNext == this._path.length) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(this._iNext == this._path.length) {\n\t\t\tthis._currentX = this._path[this._iPrev];\n\t\t\tthis._currentY = this._path[this._iPrev + 1];\n\t\t\tthis._hasNext = false;\n\t\t\tthis._iNext = this._path.length - 2;\n\t\t\tthis._iPrev = this._iNext - 2;\n\t\t\tthis.updateEntity();\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis._currentX += (this._path[this._iNext] - this._currentX) * remainingDist / dist;\n\t\t\tthis._currentY += (this._path[this._iNext + 1] - this._currentY) * remainingDist / dist;\n\t\t\tthis.updateEntity();\n\t\t\treturn true;\n\t\t}\n\t}\n\t,updateEntity: function() {\n\t\tif(this.entity == null) {\n\t\t\treturn;\n\t\t}\n\t\tvar cond = isNaN(this._currentX) && isNaN(this._currentY);\n\t\tthis.entity.x = this._currentX;\n\t\tthis.entity.y = this._currentY;\n\t}\n\t,__class__: hxDaedalus_ai_trajectory_LinearPathSampler\n};\nvar hxDaedalus_ai_trajectory_PathIterator = $hx_exports[\"hxDaedalus\"][\"ai\"][\"trajectory\"][\"PathIterator\"] = function() {\n};\nhxDaedalus_ai_trajectory_PathIterator.__name__ = true;\nhxDaedalus_ai_trajectory_PathIterator.prototype = {\n\tget_entity: function() {\n\t\treturn this._entity;\n\t}\n\t,set_entity: function(value) {\n\t\tthis._entity = value;\n\t\treturn value;\n\t}\n\t,get_x: function() {\n\t\treturn this._currentX;\n\t}\n\t,get_y: function() {\n\t\treturn this._currentY;\n\t}\n\t,get_hasPrev: function() {\n\t\treturn this._hasPrev;\n\t}\n\t,get_hasNext: function() {\n\t\treturn this._hasNext;\n\t}\n\t,get_count: function() {\n\t\treturn this._count;\n\t}\n\t,get_countMax: function() {\n\t\treturn this._countMax;\n\t}\n\t,set_path: function(value) {\n\t\tthis._path = value;\n\t\tthis._countMax = this._path.length / 2 | 0;\n\t\tthis.reset();\n\t\treturn value;\n\t}\n\t,reset: function() {\n\t\tthis._count = 0;\n\t\tthis._currentX = this._path[this._count];\n\t\tthis._currentY = this._path[this._count + 1];\n\t\tthis.updateEntity();\n\t\tthis._hasPrev = false;\n\t\tthis._hasNext = this._path.length > 2;\n\t}\n\t,prev: function() {\n\t\tif(!this._hasPrev) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._hasNext = true;\n\t\tthis._count--;\n\t\tthis._currentX = this._path[this._count * 2];\n\t\tthis._currentY = this._path[this._count * 2 + 1];\n\t\tthis.updateEntity();\n\t\tif(this._count == 0) {\n\t\t\tthis._hasPrev = false;\n\t\t}\n\t\treturn true;\n\t}\n\t,next: function() {\n\t\tif(!this._hasNext) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._hasPrev = true;\n\t\tthis._count++;\n\t\tthis._currentX = this._path[this._count * 2];\n\t\tthis._currentY = this._path[this._count * 2 + 1];\n\t\tthis.updateEntity();\n\t\tif((this._count + 1) * 2 == this._path.length) {\n\t\t\tthis._hasNext = false;\n\t\t}\n\t\treturn true;\n\t}\n\t,updateEntity: function() {\n\t\tif(this._entity == null) {\n\t\t\treturn;\n\t\t}\n\t\tthis._entity.x = this._currentX;\n\t\tthis._entity.y = this._currentY;\n\t}\n\t,__class__: hxDaedalus_ai_trajectory_PathIterator\n};\nvar hxDaedalus_data_Constants = $hx_exports[\"hxDaedalus\"][\"data\"][\"Constants\"] = function() { };\nhxDaedalus_data_Constants.__name__ = true;\nvar hxDaedalus_data_ConstraintSegment = $hx_exports[\"hxDaedalus\"][\"data\"][\"ConstraintSegment\"] = function() {\n\tthis._id = hxDaedalus_data_ConstraintSegment.INC;\n\thxDaedalus_data_ConstraintSegment.INC++;\n\tthis._edges = [];\n};\nhxDaedalus_data_ConstraintSegment.__name__ = true;\nhxDaedalus_data_ConstraintSegment.prototype = {\n\tget_id: function() {\n\t\treturn this._id;\n\t}\n\t,addEdge: function(edge) {\n\t\tif(this._edges.indexOf(edge) == -1 && this._edges.indexOf(edge.get_oppositeEdge()) == -1) {\n\t\t\tthis._edges.push(edge);\n\t\t}\n\t}\n\t,removeEdge: function(edge) {\n\t\tvar index = this._edges.indexOf(edge);\n\t\tif(index == -1) {\n\t\t\tindex = this._edges.indexOf(edge.get_oppositeEdge());\n\t\t}\n\t\tif(index != -1) {\n\t\t\tthis._edges.splice(index,1);\n\t\t}\n\t}\n\t,get_edges: function() {\n\t\treturn this._edges;\n\t}\n\t,dispose: function() {\n\t\tthis._edges = null;\n\t\tthis.fromShape = null;\n\t}\n\t,toString: function() {\n\t\treturn \"seg_id \" + this._id;\n\t}\n\t,__class__: hxDaedalus_data_ConstraintSegment\n};\nvar hxDaedalus_data_ConstraintShape = $hx_exports[\"hxDaedalus\"][\"data\"][\"ConstraintShape\"] = function() {\n\tthis._id = hxDaedalus_data_ConstraintShape.INC;\n\thxDaedalus_data_ConstraintShape.INC++;\n\tthis.segments = [];\n};\nhxDaedalus_data_ConstraintShape.__name__ = true;\nhxDaedalus_data_ConstraintShape.prototype = {\n\tget_id: function() {\n\t\treturn this._id;\n\t}\n\t,dispose: function() {\n\t\twhile(this.segments.length > 0) this.segments.pop().dispose();\n\t\tthis.segments = null;\n\t}\n\t,__class__: hxDaedalus_data_ConstraintShape\n};\nvar hxDaedalus_data_Edge = $hx_exports[\"hxDaedalus\"][\"data\"][\"Edge\"] = function() {\n\tthis.colorDebug = -1;\n\tthis._id = hxDaedalus_data_Edge.INC;\n\thxDaedalus_data_Edge.INC++;\n\tthis.fromConstraintSegments = [];\n};\nhxDaedalus_data_Edge.__name__ = true;\nhxDaedalus_data_Edge.prototype = {\n\tget_id: function() {\n\t\treturn this._id;\n\t}\n\t,get_isReal: function() {\n\t\treturn this._isReal;\n\t}\n\t,get_isConstrained: function() {\n\t\treturn this._isConstrained;\n\t}\n\t,setDatas: function(originVertex,oppositeEdge,nextLeftEdge,leftFace,isReal,isConstrained) {\n\t\tif(isConstrained == null) {\n\t\t\tisConstrained = false;\n\t\t}\n\t\tif(isReal == null) {\n\t\t\tisReal = true;\n\t\t}\n\t\tthis._isConstrained = isConstrained;\n\t\tthis._isReal = isReal;\n\t\tthis._originVertex = originVertex;\n\t\tthis._oppositeEdge = oppositeEdge;\n\t\tthis._nextLeftEdge = nextLeftEdge;\n\t\tthis._leftFace = leftFace;\n\t}\n\t,addFromConstraintSegment: function(segment) {\n\t\tif(this.fromConstraintSegments.indexOf(segment) == -1) {\n\t\t\tthis.fromConstraintSegments.push(segment);\n\t\t}\n\t}\n\t,removeFromConstraintSegment: function(segment) {\n\t\tvar index = this.fromConstraintSegments.indexOf(segment);\n\t\tif(index != -1) {\n\t\t\tthis.fromConstraintSegments.splice(index,1);\n\t\t}\n\t}\n\t,set_originVertex: function(value) {\n\t\tthis._originVertex = value;\n\t\treturn value;\n\t}\n\t,set_nextLeftEdge: function(value) {\n\t\tthis._nextLeftEdge = value;\n\t\treturn value;\n\t}\n\t,set_leftFace: function(value) {\n\t\tthis._leftFace = value;\n\t\treturn value;\n\t}\n\t,set_isConstrained: function(value) {\n\t\tthis._isConstrained = value;\n\t\treturn value;\n\t}\n\t,dispose: function() {\n\t\tthis._originVertex = null;\n\t\tthis._oppositeEdge = null;\n\t\tthis._nextLeftEdge = null;\n\t\tthis._leftFace = null;\n\t\tthis.fromConstraintSegments = null;\n\t}\n\t,get_originVertex: function() {\n\t\treturn this._originVertex;\n\t}\n\t,get_destinationVertex: function() {\n\t\treturn this.get_oppositeEdge().get_originVertex();\n\t}\n\t,get_oppositeEdge: function() {\n\t\treturn this._oppositeEdge;\n\t}\n\t,get_nextLeftEdge: function() {\n\t\treturn this._nextLeftEdge;\n\t}\n\t,get_prevLeftEdge: function() {\n\t\treturn this._nextLeftEdge.get_nextLeftEdge();\n\t}\n\t,get_nextRightEdge: function() {\n\t\treturn this._oppositeEdge.get_nextLeftEdge().get_nextLeftEdge().get_oppositeEdge();\n\t}\n\t,get_prevRightEdge: function() {\n\t\treturn this._oppositeEdge.get_nextLeftEdge().get_oppositeEdge();\n\t}\n\t,get_rotLeftEdge: function() {\n\t\treturn this._nextLeftEdge.get_nextLeftEdge().get_oppositeEdge();\n\t}\n\t,get_rotRightEdge: function() {\n\t\treturn this._oppositeEdge.get_nextLeftEdge();\n\t}\n\t,get_leftFace: function() {\n\t\treturn this._leftFace;\n\t}\n\t,get_rightFace: function() {\n\t\treturn this._oppositeEdge.get_leftFace();\n\t}\n\t,toString: function() {\n\t\treturn \"edge \" + this.get_originVertex().get_id() + \" - \" + this.get_destinationVertex().get_id();\n\t}\n\t,__class__: hxDaedalus_data_Edge\n};\nvar hxDaedalus_data_Face = $hx_exports[\"hxDaedalus\"][\"data\"][\"Face\"] = function() {\n\tthis.colorDebug = -1;\n\tthis._id = hxDaedalus_data_Face.INC;\n\thxDaedalus_data_Face.INC++;\n};\nhxDaedalus_data_Face.__name__ = true;\nhxDaedalus_data_Face.prototype = {\n\tget_id: function() {\n\t\treturn this._id;\n\t}\n\t,get_isReal: function() {\n\t\treturn this._isReal;\n\t}\n\t,set_datas: function(edge) {\n\t\tthis._isReal = true;\n\t\tthis._edge = edge;\n\t}\n\t,setDatas: function(edge,isReal) {\n\t\tif(isReal == null) {\n\t\t\tisReal = true;\n\t\t}\n\t\tthis._isReal = isReal;\n\t\tthis._edge = edge;\n\t}\n\t,dispose: function() {\n\t\tthis._edge = null;\n\t}\n\t,get_edge: function() {\n\t\treturn this._edge;\n\t}\n\t,__class__: hxDaedalus_data_Face\n};\nvar hxDaedalus_data_Mesh = $hx_exports[\"hxDaedalus\"][\"data\"][\"Mesh\"] = function(width,height) {\n\tthis.__objectsUpdateInProgress = false;\n\tthis.__edgesToCheck = null;\n\tthis.__centerVertex = null;\n\tthis._objects = null;\n\tthis._constraintShapes = null;\n\tthis._faces = null;\n\tthis._edges = null;\n\tthis._vertices = null;\n\tthis._clipping = false;\n\tthis._height = 0;\n\tthis._width = 0;\n\tthis._id = hxDaedalus_data_Mesh.INC;\n\thxDaedalus_data_Mesh.INC++;\n\tthis._width = width;\n\tthis._height = height;\n\tthis._clipping = true;\n\tthis._vertices = [];\n\tthis._edges = [];\n\tthis._faces = [];\n\tthis._constraintShapes = [];\n\tthis._objects = [];\n\tthis.__edgesToCheck = [];\n};\nhxDaedalus_data_Mesh.__name__ = true;\nhxDaedalus_data_Mesh.prototype = {\n\tget_height: function() {\n\t\treturn this._height;\n\t}\n\t,get_width: function() {\n\t\treturn this._width;\n\t}\n\t,get_clipping: function() {\n\t\treturn this._clipping;\n\t}\n\t,set_clipping: function(value) {\n\t\tthis._clipping = value;\n\t\treturn value;\n\t}\n\t,get_id: function() {\n\t\treturn this._id;\n\t}\n\t,dispose: function() {\n\t\twhile(this._vertices.length > 0) this._vertices.pop().dispose();\n\t\tthis._vertices = null;\n\t\twhile(this._edges.length > 0) this._edges.pop().dispose();\n\t\tthis._edges = null;\n\t\twhile(this._faces.length > 0) this._faces.pop().dispose();\n\t\tthis._faces = null;\n\t\twhile(this._constraintShapes.length > 0) this._constraintShapes.pop().dispose();\n\t\tthis._constraintShapes = null;\n\t\twhile(this._objects.length > 0) this._objects.pop().dispose();\n\t\tthis._objects = null;\n\t\tthis.__edgesToCheck = null;\n\t\tthis.__centerVertex = null;\n\t}\n\t,get___constraintShapes: function() {\n\t\treturn this._constraintShapes;\n\t}\n\t,buildFromRecord: function(rec) {\n\t\tvar positions = rec.split(\";\");\n\t\tvar i = 0;\n\t\twhile(i < positions.length) {\n\t\t\tthis.insertConstraintSegment(parseFloat(positions[i]),parseFloat(positions[i + 1]),parseFloat(positions[i + 2]),parseFloat(positions[i + 3]));\n\t\t\ti += 4;\n\t\t}\n\t}\n\t,insertObject: function(object) {\n\t\tif(object.get_constraintShape() != null) {\n\t\t\tthis.deleteObject(object);\n\t\t}\n\t\tvar shape = new hxDaedalus_data_ConstraintShape();\n\t\tvar segment;\n\t\tvar coordinates = object.get_coordinates();\n\t\tvar m = object.get_matrix();\n\t\tobject.updateMatrixFromValues();\n\t\tvar x1;\n\t\tvar y1;\n\t\tvar x2;\n\t\tvar y2;\n\t\tvar transfx1;\n\t\tvar transfy1;\n\t\tvar transfx2;\n\t\tvar transfy2;\n\t\tvar i = 0;\n\t\twhile(i < coordinates.length) {\n\t\t\tx1 = coordinates[i];\n\t\t\ty1 = coordinates[i + 1];\n\t\t\tx2 = coordinates[i + 2];\n\t\t\ty2 = coordinates[i + 3];\n\t\t\ttransfx1 = m.transformX(x1,y1);\n\t\t\ttransfy1 = m.transformY(x1,y1);\n\t\t\ttransfx2 = m.transformX(x2,y2);\n\t\t\ttransfy2 = m.transformY(x2,y2);\n\t\t\tsegment = this.insertConstraintSegment(transfx1,transfy1,transfx2,transfy2);\n\t\t\tif(segment != null) {\n\t\t\t\tsegment.fromShape = shape;\n\t\t\t\tshape.segments.push(segment);\n\t\t\t}\n\t\t\ti += 4;\n\t\t}\n\t\tthis._constraintShapes.push(shape);\n\t\tobject.set_constraintShape(shape);\n\t\tif(!this.__objectsUpdateInProgress) {\n\t\t\tthis._objects.push(object);\n\t\t}\n\t}\n\t,deleteObject: function(object) {\n\t\tif(object.get_constraintShape() == null) {\n\t\t\treturn;\n\t\t}\n\t\tthis.deleteConstraintShape(object.get_constraintShape());\n\t\tobject.set_constraintShape(null);\n\t\tif(!this.__objectsUpdateInProgress) {\n\t\t\tvar index = this._objects.indexOf(object);\n\t\t\tthis._objects.splice(index,1);\n\t\t}\n\t}\n\t,updateObjects: function() {\n\t\tthis.__objectsUpdateInProgress = true;\n\t\tvar _g1 = 0;\n\t\tvar _g = this._objects.length;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i = _g1++;\n\t\t\tif(this._objects[i].get_hasChanged()) {\n\t\t\t\tthis.deleteObject(this._objects[i]);\n\t\t\t\tthis.insertObject(this._objects[i]);\n\t\t\t\tthis._objects[i].set_hasChanged(false);\n\t\t\t}\n\t\t}\n\t\tthis.__objectsUpdateInProgress = false;\n\t}\n\t,insertConstraintShape: function(coordinates) {\n\t\tvar shape = new hxDaedalus_data_ConstraintShape();\n\t\tvar segment = null;\n\t\tvar i = 0;\n\t\twhile(i < coordinates.length) {\n\t\t\tsegment = this.insertConstraintSegment(coordinates[i],coordinates[i + 1],coordinates[i + 2],coordinates[i + 3]);\n\t\t\tif(segment != null) {\n\t\t\t\tsegment.fromShape = shape;\n\t\t\t\tshape.segments.push(segment);\n\t\t\t}\n\t\t\ti += 4;\n\t\t}\n\t\tthis._constraintShapes.push(shape);\n\t\treturn shape;\n\t}\n\t,deleteConstraintShape: function(shape) {\n\t\tvar _g1 = 0;\n\t\tvar _g = shape.segments.length;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i = _g1++;\n\t\t\tthis.deleteConstraintSegment(shape.segments[i]);\n\t\t}\n\t\tshape.dispose();\n\t\tthis._constraintShapes.splice(this._constraintShapes.indexOf(shape),1);\n\t}\n\t,insertConstraintSegment: function(x1,y1,x2,y2) {\n\t\tvar p1pos = this.findPositionFromBounds(x1,y1);\n\t\tvar p2pos = this.findPositionFromBounds(x2,y2);\n\t\tvar newX1 = x1;\n\t\tvar newY1 = y1;\n\t\tvar newX2 = x2;\n\t\tvar newY2 = y2;\n\t\tif(this._clipping && (p1pos != 0 || p2pos != 0)) {\n\t\t\tvar intersectPoint = new hxDaedalus_data_math_Point2D();\n\t\t\tif(p1pos != 0 && p2pos != 0) {\n\t\t\t\tif(x1 <= 0 && x2 <= 0 || x1 >= this._width && x2 >= this._width || y1 <= 0 && y2 <= 0 || y1 >= this._height && y2 >= this._height) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif(p1pos == 8 && p2pos == 4 || p1pos == 4 && p2pos == 8) {\n\t\t\t\t\thxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,0,0,0,this._height,intersectPoint);\n\t\t\t\t\tnewX1 = intersectPoint.x;\n\t\t\t\t\tnewY1 = intersectPoint.y;\n\t\t\t\t\thxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,this._width,0,this._width,this._height,intersectPoint);\n\t\t\t\t\tnewX2 = intersectPoint.x;\n\t\t\t\t\tnewY2 = intersectPoint.y;\n\t\t\t\t} else if(p1pos == 2 && p2pos == 6 || p1pos == 6 && p2pos == 2) {\n\t\t\t\t\thxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,0,0,this._width,0,intersectPoint);\n\t\t\t\t\tnewX1 = intersectPoint.x;\n\t\t\t\t\tnewY1 = intersectPoint.y;\n\t\t\t\t\thxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,0,this._height,this._width,this._height,intersectPoint);\n\t\t\t\t\tnewX2 = intersectPoint.x;\n\t\t\t\t\tnewY2 = intersectPoint.y;\n\t\t\t\t} else if(p1pos == 2 && p2pos == 8 || p1pos == 8 && p2pos == 2) {\n\t\t\t\t\tif(hxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,0,0,this._width,0,intersectPoint)) {\n\t\t\t\t\t\tnewX1 = intersectPoint.x;\n\t\t\t\t\t\tnewY1 = intersectPoint.y;\n\t\t\t\t\t\thxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,0,0,0,this._height,intersectPoint);\n\t\t\t\t\t\tnewX2 = intersectPoint.x;\n\t\t\t\t\t\tnewY2 = intersectPoint.y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t} else if(p1pos == 2 && p2pos == 4 || p1pos == 4 && p2pos == 2) {\n\t\t\t\t\tif(hxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,0,0,this._width,0,intersectPoint)) {\n\t\t\t\t\t\tnewX1 = intersectPoint.x;\n\t\t\t\t\t\tnewY1 = intersectPoint.y;\n\t\t\t\t\t\thxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,this._width,0,this._width,this._height,intersectPoint);\n\t\t\t\t\t\tnewX2 = intersectPoint.x;\n\t\t\t\t\t\tnewY2 = intersectPoint.y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t} else if(p1pos == 6 && p2pos == 4 || p1pos == 4 && p2pos == 6) {\n\t\t\t\t\tif(hxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,0,this._height,this._width,this._height,intersectPoint)) {\n\t\t\t\t\t\tnewX1 = intersectPoint.x;\n\t\t\t\t\t\tnewY1 = intersectPoint.y;\n\t\t\t\t\t\thxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,this._width,0,this._width,this._height,intersectPoint);\n\t\t\t\t\t\tnewX2 = intersectPoint.x;\n\t\t\t\t\t\tnewY2 = intersectPoint.y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t} else if(p1pos == 8 && p2pos == 6 || p1pos == 6 && p2pos == 8) {\n\t\t\t\t\tif(hxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,0,this._height,this._width,this._height,intersectPoint)) {\n\t\t\t\t\t\tnewX1 = intersectPoint.x;\n\t\t\t\t\t\tnewY1 = intersectPoint.y;\n\t\t\t\t\t\thxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,0,0,0,this._height,intersectPoint);\n\t\t\t\t\t\tnewX2 = intersectPoint.x;\n\t\t\t\t\t\tnewY2 = intersectPoint.y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar firstDone = false;\n\t\t\t\t\tvar secondDone = false;\n\t\t\t\t\tif(hxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,0,0,this._width,0,intersectPoint)) {\n\t\t\t\t\t\tnewX1 = intersectPoint.x;\n\t\t\t\t\t\tnewY1 = intersectPoint.y;\n\t\t\t\t\t\tfirstDone = true;\n\t\t\t\t\t}\n\t\t\t\t\tif(hxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,this._width,0,this._width,this._height,intersectPoint)) {\n\t\t\t\t\t\tif(!firstDone) {\n\t\t\t\t\t\t\tnewX1 = intersectPoint.x;\n\t\t\t\t\t\t\tnewY1 = intersectPoint.y;\n\t\t\t\t\t\t\tfirstDone = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewX2 = intersectPoint.x;\n\t\t\t\t\t\t\tnewY2 = intersectPoint.y;\n\t\t\t\t\t\t\tsecondDone = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!secondDone && hxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,0,this._height,this._width,this._height,intersectPoint)) {\n\t\t\t\t\t\tif(!firstDone) {\n\t\t\t\t\t\t\tnewX1 = intersectPoint.x;\n\t\t\t\t\t\t\tnewY1 = intersectPoint.y;\n\t\t\t\t\t\t\tfirstDone = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewX2 = intersectPoint.x;\n\t\t\t\t\t\t\tnewY2 = intersectPoint.y;\n\t\t\t\t\t\t\tsecondDone = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!secondDone && hxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,0,0,0,this._height,intersectPoint)) {\n\t\t\t\t\t\tnewX2 = intersectPoint.x;\n\t\t\t\t\t\tnewY2 = intersectPoint.y;\n\t\t\t\t\t}\n\t\t\t\t\tif(!firstDone) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(p1pos == 2 || p2pos == 2) {\n\t\t\t\t\thxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,0,0,this._width,0,intersectPoint);\n\t\t\t\t} else if(p1pos == 4 || p2pos == 4) {\n\t\t\t\t\thxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,this._width,0,this._width,this._height,intersectPoint);\n\t\t\t\t} else if(p1pos == 6 || p2pos == 6) {\n\t\t\t\t\thxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,0,this._height,this._width,this._height,intersectPoint);\n\t\t\t\t} else if(p1pos == 8 || p2pos == 8) {\n\t\t\t\t\thxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,0,0,0,this._height,intersectPoint);\n\t\t\t\t} else if(!hxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,0,0,this._width,0,intersectPoint)) {\n\t\t\t\t\tif(!hxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,this._width,0,this._width,this._height,intersectPoint)) {\n\t\t\t\t\t\tif(!hxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,0,this._height,this._width,this._height,intersectPoint)) {\n\t\t\t\t\t\t\thxDaedalus_data_math_Geom2D.intersections2segments(x1,y1,x2,y2,0,0,0,this._height,intersectPoint);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(p1pos == 0) {\n\t\t\t\t\tnewX1 = x1;\n\t\t\t\t\tnewY1 = y1;\n\t\t\t\t} else {\n\t\t\t\t\tnewX1 = x2;\n\t\t\t\t\tnewY1 = y2;\n\t\t\t\t}\n\t\t\t\tnewX2 = intersectPoint.x;\n\t\t\t\tnewY2 = intersectPoint.y;\n\t\t\t}\n\t\t}\n\t\tvar vertexDown = this.insertVertex(newX1,newY1);\n\t\tif(vertexDown == null) {\n\t\t\treturn null;\n\t\t}\n\t\tvar vertexUp = this.insertVertex(newX2,newY2);\n\t\tif(vertexUp == null) {\n\t\t\treturn null;\n\t\t}\n\t\tif(vertexDown == vertexUp) {\n\t\t\treturn null;\n\t\t}\n\t\tvar iterVertexToOutEdges = new hxDaedalus_iterators_FromVertexToOutgoingEdges();\n\t\tvar currVertex;\n\t\tvar currEdge;\n\t\tvar i;\n\t\tvar segment = new hxDaedalus_data_ConstraintSegment();\n\t\tvar tempEdgeDownUp = new hxDaedalus_data_Edge();\n\t\tvar tempSdgeUpDown = new hxDaedalus_data_Edge();\n\t\ttempEdgeDownUp.setDatas(vertexDown,tempSdgeUpDown,null,null,true,true);\n\t\ttempSdgeUpDown.setDatas(vertexUp,tempEdgeDownUp,null,null,true,true);\n\t\tvar intersectedEdges = [];\n\t\tvar leftBoundingEdges = [];\n\t\tvar rightBoundingEdges = [];\n\t\tvar currObjet;\n\t\tvar pIntersect = new hxDaedalus_data_math_Point2D();\n\t\tvar edgeLeft;\n\t\tvar newEdgeDownUp;\n\t\tvar newEdgeUpDown;\n\t\tvar done;\n\t\tcurrVertex = vertexDown;\n\t\tcurrObjet = hxDaedalus_data_math_Intersection.EVertex(currVertex);\n\t\twhile(true) {\n\t\t\tdone = false;\n\t\t\tswitch(currObjet[1]) {\n\t\t\tcase 0:\n\t\t\t\tvar vertex = currObjet[2];\n\t\t\t\tcurrVertex = vertex;\n\t\t\t\titerVertexToOutEdges.set_fromVertex(currVertex);\n\t\t\t\twhile(true) {\n\t\t\t\t\tcurrEdge = iterVertexToOutEdges.next();\n\t\t\t\t\tif(!(currEdge != null)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(currEdge.get_destinationVertex() == vertexUp) {\n\t\t\t\t\t\tif(!currEdge.get_isConstrained()) {\n\t\t\t\t\t\t\tcurrEdge.set_isConstrained(true);\n\t\t\t\t\t\t\tcurrEdge.get_oppositeEdge().set_isConstrained(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrEdge.addFromConstraintSegment(segment);\n\t\t\t\t\t\tcurrEdge.get_oppositeEdge().fromConstraintSegments = currEdge.fromConstraintSegments;\n\t\t\t\t\t\tvertexDown.addFromConstraintSegment(segment);\n\t\t\t\t\t\tvertexUp.addFromConstraintSegment(segment);\n\t\t\t\t\t\tsegment.addEdge(currEdge);\n\t\t\t\t\t\treturn segment;\n\t\t\t\t\t}\n\t\t\t\t\tif(hxDaedalus_data_math_Geom2D.distanceSquaredVertexToEdge(currEdge.get_destinationVertex(),tempEdgeDownUp) <= 0.0001) {\n\t\t\t\t\t\tif(!currEdge.get_isConstrained()) {\n\t\t\t\t\t\t\tcurrEdge.set_isConstrained(true);\n\t\t\t\t\t\t\tcurrEdge.get_oppositeEdge().set_isConstrained(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrEdge.addFromConstraintSegment(segment);\n\t\t\t\t\t\tcurrEdge.get_oppositeEdge().fromConstraintSegments = currEdge.fromConstraintSegments;\n\t\t\t\t\t\tvertexDown.addFromConstraintSegment(segment);\n\t\t\t\t\t\tsegment.addEdge(currEdge);\n\t\t\t\t\t\tvertexDown = currEdge.get_destinationVertex();\n\t\t\t\t\t\ttempEdgeDownUp.set_originVertex(vertexDown);\n\t\t\t\t\t\tcurrObjet = hxDaedalus_data_math_Intersection.EVertex(vertexDown);\n\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(done) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\titerVertexToOutEdges.set_fromVertex(currVertex);\n\t\t\t\twhile(true) {\n\t\t\t\t\tcurrEdge = iterVertexToOutEdges.next();\n\t\t\t\t\tif(!(currEdge != null)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcurrEdge = currEdge.get_nextLeftEdge();\n\t\t\t\t\tif(hxDaedalus_data_math_Geom2D.intersections2edges(currEdge,tempEdgeDownUp,pIntersect)) {\n\t\t\t\t\t\tif(currEdge.get_isConstrained()) {\n\t\t\t\t\t\t\tvertexDown = this.splitEdge(currEdge,pIntersect.x,pIntersect.y);\n\t\t\t\t\t\t\titerVertexToOutEdges.set_fromVertex(currVertex);\n\t\t\t\t\t\t\twhile(true) {\n\t\t\t\t\t\t\t\tcurrEdge = iterVertexToOutEdges.next();\n\t\t\t\t\t\t\t\tif(!(currEdge != null)) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(currEdge.get_destinationVertex() == vertexDown) {\n\t\t\t\t\t\t\t\t\tcurrEdge.set_isConstrained(true);\n\t\t\t\t\t\t\t\t\tcurrEdge.get_oppositeEdge().set_isConstrained(true);\n\t\t\t\t\t\t\t\t\tcurrEdge.addFromConstraintSegment(segment);\n\t\t\t\t\t\t\t\t\tcurrEdge.get_oppositeEdge().fromConstraintSegments = currEdge.fromConstraintSegments;\n\t\t\t\t\t\t\t\t\tsegment.addEdge(currEdge);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrVertex.addFromConstraintSegment(segment);\n\t\t\t\t\t\t\ttempEdgeDownUp.set_originVertex(vertexDown);\n\t\t\t\t\t\t\tcurrObjet = hxDaedalus_data_math_Intersection.EVertex(vertexDown);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tintersectedEdges.push(currEdge);\n\t\t\t\t\t\t\tleftBoundingEdges.unshift(currEdge.get_nextLeftEdge());\n\t\t\t\t\t\t\trightBoundingEdges.push(currEdge.get_prevLeftEdge());\n\t\t\t\t\t\t\tcurrEdge = currEdge.get_oppositeEdge();\n\t\t\t\t\t\t\tcurrObjet = hxDaedalus_data_math_Intersection.EEdge(currEdge);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvar edge = currObjet[2];\n\t\t\t\tcurrEdge = edge;\n\t\t\t\tedgeLeft = currEdge.get_nextLeftEdge();\n\t\t\t\tif(edgeLeft.get_destinationVertex() == vertexUp) {\n\t\t\t\t\tleftBoundingEdges.unshift(edgeLeft.get_nextLeftEdge());\n\t\t\t\t\trightBoundingEdges.push(edgeLeft);\n\t\t\t\t\tnewEdgeDownUp = new hxDaedalus_data_Edge();\n\t\t\t\t\tnewEdgeUpDown = new hxDaedalus_data_Edge();\n\t\t\t\t\tnewEdgeDownUp.setDatas(vertexDown,newEdgeUpDown,null,null,true,true);\n\t\t\t\t\tnewEdgeUpDown.setDatas(vertexUp,newEdgeDownUp,null,null,true,true);\n\t\t\t\t\tleftBoundingEdges.push(newEdgeDownUp);\n\t\t\t\t\trightBoundingEdges.push(newEdgeUpDown);\n\t\t\t\t\tthis.insertNewConstrainedEdge(segment,newEdgeDownUp,intersectedEdges,leftBoundingEdges,rightBoundingEdges);\n\t\t\t\t\treturn segment;\n\t\t\t\t} else if(hxDaedalus_data_math_Geom2D.distanceSquaredVertexToEdge(edgeLeft.get_destinationVertex(),tempEdgeDownUp) <= 0.0001) {\n\t\t\t\t\tleftBoundingEdges.unshift(edgeLeft.get_nextLeftEdge());\n\t\t\t\t\trightBoundingEdges.push(edgeLeft);\n\t\t\t\t\tnewEdgeDownUp = new hxDaedalus_data_Edge();\n\t\t\t\t\tnewEdgeUpDown = new hxDaedalus_data_Edge();\n\t\t\t\t\tnewEdgeDownUp.setDatas(vertexDown,newEdgeUpDown,null,null,true,true);\n\t\t\t\t\tnewEdgeUpDown.setDatas(edgeLeft.get_destinationVertex(),newEdgeDownUp,null,null,true,true);\n\t\t\t\t\tleftBoundingEdges.push(newEdgeDownUp);\n\t\t\t\t\trightBoundingEdges.push(newEdgeUpDown);\n\t\t\t\t\tthis.insertNewConstrainedEdge(segment,newEdgeDownUp,intersectedEdges,leftBoundingEdges,rightBoundingEdges);\n\t\t\t\t\tintersectedEdges.splice(0,intersectedEdges.length);\n\t\t\t\t\tleftBoundingEdges.splice(0,leftBoundingEdges.length);\n\t\t\t\t\trightBoundingEdges.splice(0,rightBoundingEdges.length);\n\t\t\t\t\tvertexDown = edgeLeft.get_destinationVertex();\n\t\t\t\t\ttempEdgeDownUp.set_originVertex(vertexDown);\n\t\t\t\t\tcurrObjet = hxDaedalus_data_math_Intersection.EVertex(vertexDown);\n\t\t\t\t} else if(hxDaedalus_data_math_Geom2D.intersections2edges(edgeLeft,tempEdgeDownUp,pIntersect)) {\n\t\t\t\t\tif(edgeLeft.get_isConstrained()) {\n\t\t\t\t\t\tcurrVertex = this.splitEdge(edgeLeft,pIntersect.x,pIntersect.y);\n\t\t\t\t\t\titerVertexToOutEdges.set_fromVertex(currVertex);\n\t\t\t\t\t\twhile(true) {\n\t\t\t\t\t\t\tcurrEdge = iterVertexToOutEdges.next();\n\t\t\t\t\t\t\tif(!(currEdge != null)) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(currEdge.get_destinationVertex() == leftBoundingEdges[0].get_originVertex()) {\n\t\t\t\t\t\t\t\tleftBoundingEdges.unshift(currEdge);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(currEdge.get_destinationVertex() == rightBoundingEdges[rightBoundingEdges.length - 1].get_destinationVertex()) {\n\t\t\t\t\t\t\t\trightBoundingEdges.push(currEdge.get_oppositeEdge());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewEdgeDownUp = new hxDaedalus_data_Edge();\n\t\t\t\t\t\tnewEdgeUpDown = new hxDaedalus_data_Edge();\n\t\t\t\t\t\tnewEdgeDownUp.setDatas(vertexDown,newEdgeUpDown,null,null,true,true);\n\t\t\t\t\t\tnewEdgeUpDown.setDatas(currVertex,newEdgeDownUp,null,null,true,true);\n\t\t\t\t\t\tleftBoundingEdges.push(newEdgeDownUp);\n\t\t\t\t\t\trightBoundingEdges.push(newEdgeUpDown);\n\t\t\t\t\t\tthis.insertNewConstrainedEdge(segment,newEdgeDownUp,intersectedEdges,leftBoundingEdges,rightBoundingEdges);\n\t\t\t\t\t\tintersectedEdges.splice(0,intersectedEdges.length);\n\t\t\t\t\t\tleftBoundingEdges.splice(0,leftBoundingEdges.length);\n\t\t\t\t\t\trightBoundingEdges.splice(0,rightBoundingEdges.length);\n\t\t\t\t\t\tvertexDown = currVertex;\n\t\t\t\t\t\ttempEdgeDownUp.set_originVertex(vertexDown);\n\t\t\t\t\t\tcurrObjet = hxDaedalus_data_math_Intersection.EVertex(vertexDown);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tintersectedEdges.push(edgeLeft);\n\t\t\t\t\t\tleftBoundingEdges.unshift(edgeLeft.get_nextLeftEdge());\n\t\t\t\t\t\tcurrEdge = edgeLeft.get_oppositeEdge();\n\t\t\t\t\t\tcurrObjet = hxDaedalus_data_math_Intersection.EEdge(currEdge);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tedgeLeft = edgeLeft.get_nextLeftEdge();\n\t\t\t\t\thxDaedalus_data_math_Geom2D.intersections2edges(edgeLeft,tempEdgeDownUp,pIntersect);\n\t\t\t\t\tif(edgeLeft.get_isConstrained()) {\n\t\t\t\t\t\tcurrVertex = this.splitEdge(edgeLeft,pIntersect.x,pIntersect.y);\n\t\t\t\t\t\titerVertexToOutEdges.set_fromVertex(currVertex);\n\t\t\t\t\t\twhile(true) {\n\t\t\t\t\t\t\tcurrEdge = iterVertexToOutEdges.next();\n\t\t\t\t\t\t\tif(!(currEdge != null)) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(currEdge.get_destinationVertex() == leftBoundingEdges[0].get_originVertex()) {\n\t\t\t\t\t\t\t\tleftBoundingEdges.unshift(currEdge);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(currEdge.get_destinationVertex() == rightBoundingEdges[rightBoundingEdges.length - 1].get_destinationVertex()) {\n\t\t\t\t\t\t\t\trightBoundingEdges.push(currEdge.get_oppositeEdge());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewEdgeDownUp = new hxDaedalus_data_Edge();\n\t\t\t\t\t\tnewEdgeUpDown = new hxDaedalus_data_Edge();\n\t\t\t\t\t\tnewEdgeDownUp.setDatas(vertexDown,newEdgeUpDown,null,null,true,true);\n\t\t\t\t\t\tnewEdgeUpDown.setDatas(currVertex,newEdgeDownUp,null,null,true,true);\n\t\t\t\t\t\tleftBoundingEdges.push(newEdgeDownUp);\n\t\t\t\t\t\trightBoundingEdges.push(newEdgeUpDown);\n\t\t\t\t\t\tthis.insertNewConstrainedEdge(segment,newEdgeDownUp,intersectedEdges,leftBoundingEdges,rightBoundingEdges);\n\t\t\t\t\t\tintersectedEdges.splice(0,intersectedEdges.length);\n\t\t\t\t\t\tleftBoundingEdges.splice(0,leftBoundingEdges.length);\n\t\t\t\t\t\trightBoundingEdges.splice(0,rightBoundingEdges.length);\n\t\t\t\t\t\tvertexDown = currVertex;\n\t\t\t\t\t\ttempEdgeDownUp.set_originVertex(vertexDown);\n\t\t\t\t\t\tcurrObjet = hxDaedalus_data_math_Intersection.EVertex(vertexDown);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tintersectedEdges.push(edgeLeft);\n\t\t\t\t\t\trightBoundingEdges.push(edgeLeft.get_prevLeftEdge());\n\t\t\t\t\t\tcurrEdge = edgeLeft.get_oppositeEdge();\n\t\t\t\t\t\tcurrObjet = hxDaedalus_data_math_Intersection.EEdge(currEdge);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvar face = currObjet[2];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t,insertNewConstrainedEdge: function(fromSegment,edgeDownUp,intersectedEdges,leftBoundingEdges,rightBoundingEdges) {\n\t\tthis._edges.push(edgeDownUp);\n\t\tthis._edges.push(edgeDownUp.get_oppositeEdge());\n\t\tedgeDownUp.addFromConstraintSegment(fromSegment);\n\t\tedgeDownUp.get_oppositeEdge().fromConstraintSegments = edgeDownUp.fromConstraintSegments;\n\t\tfromSegment.addEdge(edgeDownUp);\n\t\tedgeDownUp.get_originVertex().addFromConstraintSegment(fromSegment);\n\t\tedgeDownUp.get_destinationVertex().addFromConstraintSegment(fromSegment);\n\t\tthis.untriangulate(intersectedEdges);\n\t\tthis.triangulate(leftBoundingEdges,true);\n\t\tthis.triangulate(rightBoundingEdges,true);\n\t}\n\t,deleteConstraintSegment: function(segment) {\n\t\tvar i;\n\t\tvar vertexToDelete = [];\n\t\tvar edge = null;\n\t\tvar vertex;\n\t\tvar fromConstraintSegment;\n\t\tvar _g1 = 0;\n\t\tvar _g = segment.get_edges().length;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i1 = _g1++;\n\t\t\tedge = segment.get_edges()[i1];\n\t\t\tedge.removeFromConstraintSegment(segment);\n\t\t\tif(edge.fromConstraintSegments.length == 0) {\n\t\t\t\tedge.set_isConstrained(false);\n\t\t\t\tedge.get_oppositeEdge().set_isConstrained(false);\n\t\t\t}\n\t\t\tvertex = edge.get_originVertex();\n\t\t\tvertex.removeFromConstraintSegment(segment);\n\t\t\tvertexToDelete.push(vertex);\n\t\t}\n\t\tvertex = edge.get_destinationVertex();\n\t\tvertex.removeFromConstraintSegment(segment);\n\t\tvertexToDelete.push(vertex);\n\t\tvar _g11 = 0;\n\t\tvar _g2 = vertexToDelete.length;\n\t\twhile(_g11 < _g2) {\n\t\t\tvar i2 = _g11++;\n\t\t\tthis.deleteVertex(vertexToDelete[i2]);\n\t\t}\n\t\tsegment.dispose();\n\t}\n\t,check: function() {\n\t\tvar _g1 = 0;\n\t\tvar _g = this._edges.length;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i = _g1++;\n\t\t\tif(this._edges[i].get_nextLeftEdge() == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\t,insertVertex: function(x,y) {\n\t\tif(x < 0 || y < 0 || x > this._width || y > this._height) {\n\t\t\treturn null;\n\t\t}\n\t\tthis.__edgesToCheck.splice(0,this.__edgesToCheck.length);\n\t\tvar inObject = hxDaedalus_data_math_Geom2D.locatePosition(x,y,this);\n\t\tvar newVertex = null;\n\t\tswitch(inObject[1]) {\n\t\tcase 0:\n\t\t\tvar vertex = inObject[2];\n\t\t\tnewVertex = vertex;\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tvar edge = inObject[2];\n\t\t\tnewVertex = this.splitEdge(edge,x,y);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tvar face = inObject[2];\n\t\t\tnewVertex = this.splitFace(face,x,y);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tbreak;\n\t\t}\n\t\tthis.restoreAsDelaunay();\n\t\treturn newVertex;\n\t}\n\t,flipEdge: function(edge) {\n\t\tvar eBot_Top = edge;\n\t\tvar eTop_Bot = edge.get_oppositeEdge();\n\t\tvar eLeft_Right = new hxDaedalus_data_Edge();\n\t\tvar eRight_Left = new hxDaedalus_data_Edge();\n\t\tvar eTop_Left = eBot_Top.get_nextLeftEdge();\n\t\tvar eLeft_Bot = eTop_Left.get_nextLeftEdge();\n\t\tvar eBot_Right = eTop_Bot.get_nextLeftEdge();\n\t\tvar eRight_Top = eBot_Right.get_nextLeftEdge();\n\t\tvar vBot = eBot_Top.get_originVertex();\n\t\tvar vTop = eTop_Bot.get_originVertex();\n\t\tvar vLeft = eLeft_Bot.get_originVertex();\n\t\tvar vRight = eRight_Top.get_originVertex();\n\t\tvar fLeft = eBot_Top.get_leftFace();\n\t\tvar fRight = eTop_Bot.get_leftFace();\n\t\tvar fBot = new hxDaedalus_data_Face();\n\t\tvar fTop = new hxDaedalus_data_Face();\n\t\tthis._edges.push(eLeft_Right);\n\t\tthis._edges.push(eRight_Left);\n\t\tthis._faces.push(fTop);\n\t\tthis._faces.push(fBot);\n\t\teLeft_Right.setDatas(vLeft,eRight_Left,eRight_Top,fTop,edge.get_isReal(),edge.get_isConstrained());\n\t\teRight_Left.setDatas(vRight,eLeft_Right,eLeft_Bot,fBot,edge.get_isReal(),edge.get_isConstrained());\n\t\tfTop.setDatas(eLeft_Right);\n\t\tfBot.setDatas(eRight_Left);\n\t\tif(vTop.get_edge() == eTop_Bot) {\n\t\t\tvTop.setDatas(eTop_Left);\n\t\t}\n\t\tif(vBot.get_edge() == eBot_Top) {\n\t\t\tvBot.setDatas(eBot_Right);\n\t\t}\n\t\teTop_Left.set_nextLeftEdge(eLeft_Right);\n\t\teTop_Left.set_leftFace(fTop);\n\t\teLeft_Bot.set_nextLeftEdge(eBot_Right);\n\t\teLeft_Bot.set_leftFace(fBot);\n\t\teBot_Right.set_nextLeftEdge(eRight_Left);\n\t\teBot_Right.set_leftFace(fBot);\n\t\teRight_Top.set_nextLeftEdge(eTop_Left);\n\t\teRight_Top.set_leftFace(fTop);\n\t\teBot_Top.dispose();\n\t\teTop_Bot.dispose();\n\t\tthis._edges.splice(this._edges.indexOf(eBot_Top),1);\n\t\tthis._edges.splice(this._edges.indexOf(eTop_Bot),1);\n\t\tfLeft.dispose();\n\t\tfRight.dispose();\n\t\tthis._faces.splice(this._faces.indexOf(fLeft),1);\n\t\tthis._faces.splice(this._faces.indexOf(fRight),1);\n\t\treturn eRight_Left;\n\t}\n\t,splitEdge: function(edge,x,y) {\n\t\tthis.__edgesToCheck.splice(0,this.__edgesToCheck.length);\n\t\tvar eLeft_Right = edge;\n\t\tvar eRight_Left = eLeft_Right.get_oppositeEdge();\n\t\tvar eRight_Top = eLeft_Right.get_nextLeftEdge();\n\t\tvar eTop_Left = eRight_Top.get_nextLeftEdge();\n\t\tvar eLeft_Bot = eRight_Left.get_nextLeftEdge();\n\t\tvar eBot_Right = eLeft_Bot.get_nextLeftEdge();\n\t\tvar vTop = eTop_Left.get_originVertex();\n\t\tvar vLeft = eLeft_Right.get_originVertex();\n\t\tvar vBot = eBot_Right.get_originVertex();\n\t\tvar vRight = eRight_Left.get_originVertex();\n\t\tvar fTop = eLeft_Right.get_leftFace();\n\t\tvar fBot = eRight_Left.get_leftFace();\n\t\tif((vLeft.get_pos().x - x) * (vLeft.get_pos().x - x) + (vLeft.get_pos().y - y) * (vLeft.get_pos().y - y) <= 0.0001) {\n\t\t\treturn vLeft;\n\t\t}\n\t\tif((vRight.get_pos().x - x) * (vRight.get_pos().x - x) + (vRight.get_pos().y - y) * (vRight.get_pos().y - y) <= 0.0001) {\n\t\t\treturn vRight;\n\t\t}\n\t\tvar vCenter = new hxDaedalus_data_Vertex();\n\t\tvar eTop_Center = new hxDaedalus_data_Edge();\n\t\tvar eCenter_Top = new hxDaedalus_data_Edge();\n\t\tvar eBot_Center = new hxDaedalus_data_Edge();\n\t\tvar eCenter_Bot = new hxDaedalus_data_Edge();\n\t\tvar eLeft_Center = new hxDaedalus_data_Edge();\n\t\tvar eCenter_Left = new hxDaedalus_data_Edge();\n\t\tvar eRight_Center = new hxDaedalus_data_Edge();\n\t\tvar eCenter_Right = new hxDaedalus_data_Edge();\n\t\tvar fTopLeft = new hxDaedalus_data_Face();\n\t\tvar fBotLeft = new hxDaedalus_data_Face();\n\t\tvar fBotRight = new hxDaedalus_data_Face();\n\t\tvar fTopRight = new hxDaedalus_data_Face();\n\t\tthis._vertices.push(vCenter);\n\t\tthis._edges.push(eCenter_Top);\n\t\tthis._edges.push(eTop_Center);\n\t\tthis._edges.push(eCenter_Left);\n\t\tthis._edges.push(eLeft_Center);\n\t\tthis._edges.push(eCenter_Bot);\n\t\tthis._edges.push(eBot_Center);\n\t\tthis._edges.push(eCenter_Right);\n\t\tthis._edges.push(eRight_Center);\n\t\tthis._faces.push(fTopRight);\n\t\tthis._faces.push(fBotRight);\n\t\tthis._faces.push(fBotLeft);\n\t\tthis._faces.push(fTopLeft);\n\t\tvCenter.setDatas(fTop.get_isReal() ? eCenter_Top : eCenter_Bot);\n\t\tvCenter.get_pos().x = x;\n\t\tvCenter.get_pos().y = y;\n\t\thxDaedalus_data_math_Geom2D.projectOrthogonaly(vCenter.get_pos(),eLeft_Right);\n\t\teCenter_Top.setDatas(vCenter,eTop_Center,eTop_Left,fTopLeft,fTop.get_isReal());\n\t\teTop_Center.setDatas(vTop,eCenter_Top,eCenter_Right,fTopRight,fTop.get_isReal());\n\t\teCenter_Left.setDatas(vCenter,eLeft_Center,eLeft_Bot,fBotLeft,edge.get_isReal(),edge.get_isConstrained());\n\t\teLeft_Center.setDatas(vLeft,eCenter_Left,eCenter_Top,fTopLeft,edge.get_isReal(),edge.get_isConstrained());\n\t\teCenter_Bot.setDatas(vCenter,eBot_Center,eBot_Right,fBotRight,fBot.get_isReal());\n\t\teBot_Center.setDatas(vBot,eCenter_Bot,eCenter_Left,fBotLeft,fBot.get_isReal());\n\t\teCenter_Right.setDatas(vCenter,eRight_Center,eRight_Top,fTopRight,edge.get_isReal(),edge.get_isConstrained());\n\t\teRight_Center.setDatas(vRight,eCenter_Right,eCenter_Bot,fBotRight,edge.get_isReal(),edge.get_isConstrained());\n\t\tfTopLeft.setDatas(eCenter_Top,fTop.get_isReal());\n\t\tfBotLeft.setDatas(eCenter_Left,fBot.get_isReal());\n\t\tfBotRight.setDatas(eCenter_Bot,fBot.get_isReal());\n\t\tfTopRight.setDatas(eCenter_Right,fTop.get_isReal());\n\t\tif(vLeft.get_edge() == eLeft_Right) {\n\t\t\tvLeft.setDatas(eLeft_Center);\n\t\t}\n\t\tif(vRight.get_edge() == eRight_Left) {\n\t\t\tvRight.setDatas(eRight_Center);\n\t\t}\n\t\teTop_Left.set_nextLeftEdge(eLeft_Center);\n\t\teTop_Left.set_leftFace(fTopLeft);\n\t\teLeft_Bot.set_nextLeftEdge(eBot_Center);\n\t\teLeft_Bot.set_leftFace(fBotLeft);\n\t\teBot_Right.set_nextLeftEdge(eRight_Center);\n\t\teBot_Right.set_leftFace(fBotRight);\n\t\teRight_Top.set_nextLeftEdge(eTop_Center);\n\t\teRight_Top.set_leftFace(fTopRight);\n\t\tif(eLeft_Right.get_isConstrained()) {\n\t\t\tvar fromSegments = eLeft_Right.fromConstraintSegments;\n\t\t\teLeft_Center.fromConstraintSegments = fromSegments.slice(0);\n\t\t\teCenter_Left.fromConstraintSegments = eLeft_Center.fromConstraintSegments;\n\t\t\teCenter_Right.fromConstraintSegments = fromSegments.slice(0);\n\t\t\teRight_Center.fromConstraintSegments = eCenter_Right.fromConstraintSegments;\n\t\t\tvar edges;\n\t\t\tvar index;\n\t\t\tvar _g1 = 0;\n\t\t\tvar _g = eLeft_Right.fromConstraintSegments.length;\n\t\t\twhile(_g1 < _g) {\n\t\t\t\tvar i = _g1++;\n\t\t\t\tedges = eLeft_Right.fromConstraintSegments[i].get_edges();\n\t\t\t\tindex = edges.indexOf(eLeft_Right);\n\t\t\t\tif(index != -1) {\n\t\t\t\t\tedges.splice(index,1);\n\t\t\t\t\tedges.splice(index,0,eLeft_Center);\n\t\t\t\t\tedges.splice(index + 1,0,eCenter_Right);\n\t\t\t\t} else {\n\t\t\t\t\tindex = edges.indexOf(eRight_Left);\n\t\t\t\t\tedges.splice(index,1);\n\t\t\t\t\tedges.splice(index,0,eRight_Center);\n\t\t\t\t\tedges.splice(index + 1,0,eCenter_Left);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvCenter.set_fromConstraintSegments(fromSegments.slice(0));\n\t\t}\n\t\teLeft_Right.dispose();\n\t\teRight_Left.dispose();\n\t\tthis._edges.splice(this._edges.indexOf(eLeft_Right),1);\n\t\tthis._edges.splice(this._edges.indexOf(eRight_Left),1);\n\t\tfTop.dispose();\n\t\tfBot.dispose();\n\t\tthis._faces.splice(this._faces.indexOf(fTop),1);\n\t\tthis._faces.splice(this._faces.indexOf(fBot),1);\n\t\tthis.__centerVertex = vCenter;\n\t\tthis.__edgesToCheck.push(eTop_Left);\n\t\tthis.__edgesToCheck.push(eLeft_Bot);\n\t\tthis.__edgesToCheck.push(eBot_Right);\n\t\tthis.__edgesToCheck.push(eRight_Top);\n\t\treturn vCenter;\n\t}\n\t,splitFace: function(face,x,y) {\n\t\tthis.__edgesToCheck.splice(0,this.__edgesToCheck.length);\n\t\tvar eTop_Left = face.get_edge();\n\t\tvar eLeft_Right = eTop_Left.get_nextLeftEdge();\n\t\tvar eRight_Top = eLeft_Right.get_nextLeftEdge();\n\t\tvar vTop = eTop_Left.get_originVertex();\n\t\tvar vLeft = eLeft_Right.get_originVertex();\n\t\tvar vRight = eRight_Top.get_originVertex();\n\t\tvar vCenter = new hxDaedalus_data_Vertex();\n\t\tvar eTop_Center = new hxDaedalus_data_Edge();\n\t\tvar eCenter_Top = new hxDaedalus_data_Edge();\n\t\tvar eLeft_Center = new hxDaedalus_data_Edge();\n\t\tvar eCenter_Left = new hxDaedalus_data_Edge();\n\t\tvar eRight_Center = new hxDaedalus_data_Edge();\n\t\tvar eCenter_Right = new hxDaedalus_data_Edge();\n\t\tvar fTopLeft = new hxDaedalus_data_Face();\n\t\tvar fBot = new hxDaedalus_data_Face();\n\t\tvar fTopRight = new hxDaedalus_data_Face();\n\t\tthis._vertices.push(vCenter);\n\t\tthis._edges.push(eTop_Center);\n\t\tthis._edges.push(eCenter_Top);\n\t\tthis._edges.push(eLeft_Center);\n\t\tthis._edges.push(eCenter_Left);\n\t\tthis._edges.push(eRight_Center);\n\t\tthis._edges.push(eCenter_Right);\n\t\tthis._faces.push(fTopLeft);\n\t\tthis._faces.push(fBot);\n\t\tthis._faces.push(fTopRight);\n\t\tvCenter.setDatas(eCenter_Top);\n\t\tvCenter.get_pos().x = x;\n\t\tvCenter.get_pos().y = y;\n\t\teTop_Center.setDatas(vTop,eCenter_Top,eCenter_Right,fTopRight);\n\t\teCenter_Top.setDatas(vCenter,eTop_Center,eTop_Left,fTopLeft);\n\t\teLeft_Center.setDatas(vLeft,eCenter_Left,eCenter_Top,fTopLeft);\n\t\teCenter_Left.setDatas(vCenter,eLeft_Center,eLeft_Right,fBot);\n\t\teRight_Center.setDatas(vRight,eCenter_Right,eCenter_Left,fBot);\n\t\teCenter_Right.setDatas(vCenter,eRight_Center,eRight_Top,fTopRight);\n\t\tfTopLeft.setDatas(eCenter_Top);\n\t\tfBot.setDatas(eCenter_Left);\n\t\tfTopRight.setDatas(eCenter_Right);\n\t\teTop_Left.set_nextLeftEdge(eLeft_Center);\n\t\teTop_Left.set_leftFace(fTopLeft);\n\t\teLeft_Right.set_nextLeftEdge(eRight_Center);\n\t\teLeft_Right.set_leftFace(fBot);\n\t\teRight_Top.set_nextLeftEdge(eTop_Center);\n\t\teRight_Top.set_leftFace(fTopRight);\n\t\tface.dispose();\n\t\tthis._faces.splice(this._faces.indexOf(face),1);\n\t\tthis.__centerVertex = vCenter;\n\t\tthis.__edgesToCheck.push(eTop_Left);\n\t\tthis.__edgesToCheck.push(eLeft_Right);\n\t\tthis.__edgesToCheck.push(eRight_Top);\n\t\treturn vCenter;\n\t}\n\t,restoreAsDelaunay: function() {\n\t\tvar edge;\n\t\twhile(this.__edgesToCheck.length > 0) {\n\t\t\tedge = this.__edgesToCheck.shift();\n\t\t\tif(edge.get_isReal() && !edge.get_isConstrained() && !hxDaedalus_data_math_Geom2D.isDelaunay(edge)) {\n\t\t\t\tif(edge.get_nextLeftEdge().get_destinationVertex() == this.__centerVertex) {\n\t\t\t\t\tthis.__edgesToCheck.push(edge.get_nextRightEdge());\n\t\t\t\t\tthis.__edgesToCheck.push(edge.get_prevRightEdge());\n\t\t\t\t} else {\n\t\t\t\t\tthis.__edgesToCheck.push(edge.get_nextLeftEdge());\n\t\t\t\t\tthis.__edgesToCheck.push(edge.get_prevLeftEdge());\n\t\t\t\t}\n\t\t\t\tthis.flipEdge(edge);\n\t\t\t}\n\t\t}\n\t}\n\t,deleteVertex: function(vertex) {\n\t\tvar i;\n\t\tvar freeOfConstraint;\n\t\tvar iterEdges = new hxDaedalus_iterators_FromVertexToOutgoingEdges();\n\t\titerEdges.set_fromVertex(vertex);\n\t\titerEdges.realEdgesOnly = false;\n\t\tvar edge;\n\t\tvar outgoingEdges = [];\n\t\tfreeOfConstraint = vertex.get_fromConstraintSegments().length == 0;\n\t\tvar bound = [];\n\t\tvar realA = false;\n\t\tvar realB = false;\n\t\tvar boundA = [];\n\t\tvar boundB = [];\n\t\tif(freeOfConstraint) {\n\t\t\twhile(true) {\n\t\t\t\tedge = iterEdges.next();\n\t\t\t\tif(!(edge != null)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toutgoingEdges.push(edge);\n\t\t\t\tbound.push(edge.get_nextLeftEdge());\n\t\t\t}\n\t\t} else {\n\t\t\tvar edges;\n\t\t\tvar _g1 = 0;\n\t\t\tvar _g = vertex.get_fromConstraintSegments().length;\n\t\t\twhile(_g1 < _g) {\n\t\t\t\tvar i1 = _g1++;\n\t\t\t\tedges = vertex.get_fromConstraintSegments()[i1].get_edges();\n\t\t\t\tif(edges[0].get_originVertex() == vertex || edges[edges.length - 1].get_destinationVertex() == vertex) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = 0;\n\t\t\twhile(true) {\n\t\t\t\tedge = iterEdges.next();\n\t\t\t\tif(!(edge != null)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toutgoingEdges.push(edge);\n\t\t\t\tif(edge.get_isConstrained()) {\n\t\t\t\t\t++count;\n\t\t\t\t\tif(count > 2) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tboundA = [];\n\t\t\tboundB = [];\n\t\t\tvar constrainedEdgeA = null;\n\t\t\tvar constrainedEdgeB = null;\n\t\t\tvar edgeA = new hxDaedalus_data_Edge();\n\t\t\tvar edgeB = new hxDaedalus_data_Edge();\n\t\t\tthis._edges.push(edgeA);\n\t\t\tthis._edges.push(edgeB);\n\t\t\tvar _g11 = 0;\n\t\t\tvar _g2 = outgoingEdges.length;\n\t\t\twhile(_g11 < _g2) {\n\t\t\t\tvar i2 = _g11++;\n\t\t\t\tedge = outgoingEdges[i2];\n\t\t\t\tif(edge.get_isConstrained()) {\n\t\t\t\t\tif(constrainedEdgeA == null) {\n\t\t\t\t\t\tedgeB.setDatas(edge.get_destinationVertex(),edgeA,null,null,true,true);\n\t\t\t\t\t\tboundA.push(edgeA);\n\t\t\t\t\t\tboundA.push(edge.get_nextLeftEdge());\n\t\t\t\t\t\tboundB.push(edgeB);\n\t\t\t\t\t\tconstrainedEdgeA = edge;\n\t\t\t\t\t} else if(constrainedEdgeB == null) {\n\t\t\t\t\t\tedgeA.setDatas(edge.get_destinationVertex(),edgeB,null,null,true,true);\n\t\t\t\t\t\tboundB.push(edge.get_nextLeftEdge());\n\t\t\t\t\t\tconstrainedEdgeB = edge;\n\t\t\t\t\t}\n\t\t\t\t} else if(constrainedEdgeA == null) {\n\t\t\t\t\tboundB.push(edge.get_nextLeftEdge());\n\t\t\t\t} else if(constrainedEdgeB == null) {\n\t\t\t\t\tboundA.push(edge.get_nextLeftEdge());\n\t\t\t\t} else {\n\t\t\t\t\tboundB.push(edge.get_nextLeftEdge());\n\t\t\t\t}\n\t\t\t}\n\t\t\trealA = constrainedEdgeA.get_leftFace().get_isReal();\n\t\t\trealB = constrainedEdgeB.get_leftFace().get_isReal();\n\t\t\tedgeA.fromConstraintSegments = constrainedEdgeA.fromConstraintSegments.slice(0);\n\t\t\tedgeB.fromConstraintSegments = edgeA.fromConstraintSegments;\n\t\t\tvar index;\n\t\t\tvar _g12 = 0;\n\t\t\tvar _g3 = vertex.get_fromConstraintSegments().length;\n\t\t\twhile(_g12 < _g3) {\n\t\t\t\tvar i3 = _g12++;\n\t\t\t\tedges = vertex.get_fromConstraintSegments()[i3].get_edges();\n\t\t\t\tindex = edges.indexOf(constrainedEdgeA);\n\t\t\t\tif(index != -1) {\n\t\t\t\t\tedges.splice(index - 1,2);\n\t\t\t\t\tedges.splice(index - 1,0,edgeA);\n\t\t\t\t} else {\n\t\t\t\t\tvar index2 = edges.indexOf(constrainedEdgeB) - 1;\n\t\t\t\t\tedges.splice(index2,2);\n\t\t\t\t\tedges.splice(index2,0,edgeB);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar faceToDelete;\n\t\tvar _g13 = 0;\n\t\tvar _g4 = outgoingEdges.length;\n\t\twhile(_g13 < _g4) {\n\t\t\tvar i4 = _g13++;\n\t\t\tedge = outgoingEdges[i4];\n\t\t\tfaceToDelete = edge.get_leftFace();\n\t\t\tthis._faces.splice(this._faces.indexOf(faceToDelete),1);\n\t\t\tfaceToDelete.dispose();\n\t\t\tedge.get_destinationVertex().set_edge(edge.get_nextLeftEdge());\n\t\t\tthis._edges.splice(this._edges.indexOf(edge.get_oppositeEdge()),1);\n\t\t\tedge.get_oppositeEdge().dispose();\n\t\t\tthis._edges.splice(this._edges.indexOf(edge),1);\n\t\t\tedge.dispose();\n\t\t}\n\t\tthis._vertices.splice(this._vertices.indexOf(vertex),1);\n\t\tvertex.dispose();\n\t\tif(freeOfConstraint) {\n\t\t\tthis.triangulate(bound,true);\n\t\t} else {\n\t\t\tthis.triangulate(boundA,realA);\n\t\t\tthis.triangulate(boundB,realB);\n\t\t}\n\t\treturn true;\n\t}\n\t,untriangulate: function(edgesList) {\n\t\tvar i;\n\t\tvar verticesCleaned = new haxe_ds_ObjectMap();\n\t\tvar currEdge;\n\t\tvar outEdge;\n\t\tvar _g1 = 0;\n\t\tvar _g = edgesList.length;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i1 = _g1++;\n\t\t\tcurrEdge = edgesList[i1];\n\t\t\tvar key = currEdge.get_originVertex();\n\t\t\tif(verticesCleaned.h[key.__id__] == null) {\n\t\t\t\tcurrEdge.get_originVertex().set_edge(currEdge.get_prevLeftEdge().get_oppositeEdge());\n\t\t\t\tverticesCleaned.set(currEdge.get_originVertex(),true);\n\t\t\t}\n\t\t\tvar key1 = currEdge.get_destinationVertex();\n\t\t\tif(verticesCleaned.h[key1.__id__] == null) {\n\t\t\t\tcurrEdge.get_destinationVertex().set_edge(currEdge.get_nextLeftEdge());\n\t\t\t\tverticesCleaned.set(currEdge.get_destinationVertex(),true);\n\t\t\t}\n\t\t\tthis._faces.splice(this._faces.indexOf(currEdge.get_leftFace()),1);\n\t\t\tcurrEdge.get_leftFace().dispose();\n\t\t\tif(i1 == edgesList.length - 1) {\n\t\t\t\tthis._faces.splice(this._faces.indexOf(currEdge.get_rightFace()),1);\n\t\t\t\tcurrEdge.get_rightFace().dispose();\n\t\t\t}\n\t\t}\n\t\tvar _g11 = 0;\n\t\tvar _g2 = edgesList.length;\n\t\twhile(_g11 < _g2) {\n\t\t\tvar i2 = _g11++;\n\t\t\tcurrEdge = edgesList[i2];\n\t\t\tthis._edges.splice(this._edges.indexOf(currEdge.get_oppositeEdge()),1);\n\t\t\tthis._edges.splice(this._edges.indexOf(currEdge),1);\n\t\t\tcurrEdge.get_oppositeEdge().dispose();\n\t\t\tcurrEdge.dispose();\n\t\t}\n\t}\n\t,triangulate: function(bound,isReal) {\n\t\tif(bound.length < 2) {\n\t\t\treturn;\n\t\t} else if(bound.length == 2) {\n\t\t\tvar value = \"  - edge0: \" + bound[0].get_originVertex().get_id() + \" -> \" + bound[0].get_destinationVertex().get_id();\n\t\t\tvar value1 = \"  - edge1: \" + bound[1].get_originVertex().get_id() + \" -> \" + bound[1].get_destinationVertex().get_id();\n\t\t\treturn;\n\t\t} else if(bound.length == 3) {\n\t\t\tvar f = new hxDaedalus_data_Face();\n\t\t\tf.setDatas(bound[0],isReal);\n\t\t\tthis._faces.push(f);\n\t\t\tbound[0].set_leftFace(f);\n\t\t\tbound[1].set_leftFace(f);\n\t\t\tbound[2].set_leftFace(f);\n\t\t\tbound[0].set_nextLeftEdge(bound[1]);\n\t\t\tbound[1].set_nextLeftEdge(bound[2]);\n\t\t\tbound[2].set_nextLeftEdge(bound[0]);\n\t\t} else {\n\t\t\tvar baseEdge = bound[0];\n\t\t\tvar vertexA = baseEdge.get_originVertex();\n\t\t\tvar vertexB = baseEdge.get_destinationVertex();\n\t\t\tvar vertexC;\n\t\t\tvar vertexCheck;\n\t\t\tvar circumcenter = new hxDaedalus_data_math_Point2D();\n\t\t\tvar radiusSquared;\n\t\t\tvar distanceSquared;\n\t\t\tvar isDelaunay = false;\n\t\t\tvar index = 0;\n\t\t\tvar i;\n\t\t\tvar _g1 = 2;\n\t\t\tvar _g = bound.length;\n\t\t\twhile(_g1 < _g) {\n\t\t\t\tvar i1 = _g1++;\n\t\t\t\tvertexC = bound[i1].get_originVertex();\n\t\t\t\tif(hxDaedalus_data_math_Geom2D.getRelativePosition2(vertexC.get_pos().x,vertexC.get_pos().y,baseEdge) == 1) {\n\t\t\t\t\tindex = i1;\n\t\t\t\t\tisDelaunay = true;\n\t\t\t\t\thxDaedalus_data_math_Geom2D.getCircumcenter(vertexA.get_pos().x,vertexA.get_pos().y,vertexB.get_pos().x,vertexB.get_pos().y,vertexC.get_pos().x,vertexC.get_pos().y,circumcenter);\n\t\t\t\t\tradiusSquared = (vertexA.get_pos().x - circumcenter.x) * (vertexA.get_pos().x - circumcenter.x) + (vertexA.get_pos().y - circumcenter.y) * (vertexA.get_pos().y - circumcenter.y);\n\t\t\t\t\tradiusSquared -= 0.0001;\n\t\t\t\t\tvar _g3 = 2;\n\t\t\t\t\tvar _g2 = bound.length;\n\t\t\t\t\twhile(_g3 < _g2) {\n\t\t\t\t\t\tvar j = _g3++;\n\t\t\t\t\t\tif(j != i1) {\n\t\t\t\t\t\t\tvertexCheck = bound[j].get_originVertex();\n\t\t\t\t\t\t\tdistanceSquared = (vertexCheck.get_pos().x - circumcenter.x) * (vertexCheck.get_pos().x - circumcenter.x) + (vertexCheck.get_pos().y - circumcenter.y) * (vertexCheck.get_pos().y - circumcenter.y);\n\t\t\t\t\t\t\tif(distanceSquared < radiusSquared) {\n\t\t\t\t\t\t\t\tisDelaunay = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(isDelaunay) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!isDelaunay) {\n\t\t\t\tvar s = \"\";\n\t\t\t\tvar _g11 = 0;\n\t\t\t\tvar _g4 = bound.length;\n\t\t\t\twhile(_g11 < _g4) {\n\t\t\t\t\tvar i2 = _g11++;\n\t\t\t\t\ts += bound[i2].get_originVertex().get_pos().x + \" , \";\n\t\t\t\t\ts += bound[i2].get_originVertex().get_pos().y + \" , \";\n\t\t\t\t\ts += bound[i2].get_destinationVertex().get_pos().x + \" , \";\n\t\t\t\t\ts += bound[i2].get_destinationVertex().get_pos().y + \" , \";\n\t\t\t\t}\n\t\t\t\tindex = 2;\n\t\t\t}\n\t\t\tvar edgeA = null;\n\t\t\tvar edgeAopp = null;\n\t\t\tvar edgeB = null;\n\t\t\tvar edgeBopp;\n\t\t\tvar boundA;\n\t\t\tvar boundM;\n\t\t\tvar boundB;\n\t\t\tif(index < bound.length - 1) {\n\t\t\t\tedgeA = new hxDaedalus_data_Edge();\n\t\t\t\tedgeAopp = new hxDaedalus_data_Edge();\n\t\t\t\tthis._edges.push(edgeA);\n\t\t\t\tthis._edges.push(edgeAopp);\n\t\t\t\tedgeA.setDatas(vertexA,edgeAopp,null,null,isReal,false);\n\t\t\t\tedgeAopp.setDatas(bound[index].get_originVertex(),edgeA,null,null,isReal,false);\n\t\t\t\tboundA = bound.slice(index);\n\t\t\t\tboundA.push(edgeA);\n\t\t\t\tthis.triangulate(boundA,isReal);\n\t\t\t}\n\t\t\tif(index > 2) {\n\t\t\t\tedgeB = new hxDaedalus_data_Edge();\n\t\t\t\tedgeBopp = new hxDaedalus_data_Edge();\n\t\t\t\tthis._edges.push(edgeB);\n\t\t\t\tthis._edges.push(edgeBopp);\n\t\t\t\tedgeB.setDatas(bound[1].get_originVertex(),edgeBopp,null,null,isReal,false);\n\t\t\t\tedgeBopp.setDatas(bound[index].get_originVertex(),edgeB,null,null,isReal,false);\n\t\t\t\tboundB = bound.slice(1,index);\n\t\t\t\tboundB.push(edgeBopp);\n\t\t\t\tthis.triangulate(boundB,isReal);\n\t\t\t}\n\t\t\tif(index == 2) {\n\t\t\t\tboundM = [baseEdge,bound[1],edgeAopp];\n\t\t\t} else if(index == bound.length - 1) {\n\t\t\t\tboundM = [baseEdge,edgeB,bound[index]];\n\t\t\t} else {\n\t\t\t\tboundM = [baseEdge,edgeB,edgeAopp];\n\t\t\t}\n\t\t\tthis.triangulate(boundM,isReal);\n\t\t}\n\t}\n\t,findPositionFromBounds: function(x,y) {\n\t\tif(x <= 0) {\n\t\t\tif(y <= 0) {\n\t\t\t\treturn 1;\n\t\t\t} else if(y >= this._height) {\n\t\t\t\treturn 7;\n\t\t\t} else {\n\t\t\t\treturn 8;\n\t\t\t}\n\t\t} else if(x >= this._width) {\n\t\t\tif(y <= 0) {\n\t\t\t\treturn 3;\n\t\t\t} else if(y >= this._height) {\n\t\t\t\treturn 5;\n\t\t\t} else {\n\t\t\t\treturn 4;\n\t\t\t}\n\t\t} else if(y <= 0) {\n\t\t\treturn 2;\n\t\t} else if(y >= this._height) {\n\t\t\treturn 6;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\t,debug: function() {\n\t\tvar i;\n\t\tvar _g1 = 0;\n\t\tvar _g = this._vertices.length;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i1 = _g1++;\n\t\t\tvar value = \"-- vertex \" + this._vertices[i1].get_id();\n\t\t\tvar value1 = \"  edge \" + this._vertices[i1].get_edge().get_id() + \" - \" + Std.string(this._vertices[i1].get_edge());\n\t\t\tvar value2 = \"  edge isReal: \" + Std.string(this._vertices[i1].get_edge().get_isReal());\n\t\t}\n\t\tvar _g11 = 0;\n\t\tvar _g2 = this._edges.length;\n\t\twhile(_g11 < _g2) {\n\t\t\tvar i2 = _g11++;\n\t\t\tvar value3 = \"-- edge \" + Std.string(this._edges[i2]);\n\t\t\tvar value4 = \"  isReal \" + this._edges[i2].get_id() + \" - \" + Std.string(this._edges[i2].get_isReal());\n\t\t\tvar value5 = \"  nextLeftEdge \" + Std.string(this._edges[i2].get_nextLeftEdge());\n\t\t\tvar value6 = \"  oppositeEdge \" + Std.string(this._edges[i2].get_oppositeEdge());\n\t\t}\n\t}\n\t,getVerticesAndEdges: function() {\n\t\tvar res = { vertices : [], edges : []};\n\t\tvar vertex;\n\t\tvar incomingEdge;\n\t\tvar holdingFace;\n\t\tvar iterVertices = new hxDaedalus_iterators_FromMeshToVertices();\n\t\titerVertices.set_fromMesh(this);\n\t\tvar iterEdges = new hxDaedalus_iterators_FromVertexToIncomingEdges();\n\t\tvar dictVerticesDone = new haxe_ds_ObjectMap();\n\t\twhile(true) {\n\t\t\tvertex = iterVertices.next();\n\t\t\tif(!(vertex != null)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdictVerticesDone.set(vertex,true);\n\t\t\tif(!(!(vertex.get_pos().x < 0 || vertex.get_pos().x > this.get_width() || vertex.get_pos().y < 0 || vertex.get_pos().y > this.get_height()))) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tres.vertices.push(vertex);\n\t\t\titerEdges.set_fromVertex(vertex);\n\t\t\twhile(true) {\n\t\t\t\tincomingEdge = iterEdges.next();\n\t\t\t\tif(!(incomingEdge != null)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tvar key = incomingEdge.get_originVertex();\n\t\t\t\tif(!dictVerticesDone.h[key.__id__]) {\n\t\t\t\t\tres.edges.push(incomingEdge);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\t,vertexIsInsideAABB: function(vertex,mesh) {\n\t\treturn !(vertex.get_pos().x < 0 || vertex.get_pos().x > mesh.get_width() || vertex.get_pos().y < 0 || vertex.get_pos().y > mesh.get_height());\n\t}\n\t,__class__: hxDaedalus_data_Mesh\n};\nvar hxDaedalus_data_Object = $hx_exports[\"hxDaedalus\"][\"data\"][\"Object\"] = function() {\n\tthis._id = hxDaedalus_data_Object.INC;\n\thxDaedalus_data_Object.INC++;\n\tthis._pivotX = 0;\n\tthis._pivotY = 0;\n\tthis._matrix = new hxDaedalus_data_math_Matrix2D();\n\tthis._scaleX = 1;\n\tthis._scaleY = 1;\n\tthis._rotation = 0;\n\tthis._x = 0;\n\tthis._y = 0;\n\tthis._coordinates = [];\n\tthis._hasChanged = false;\n};\nhxDaedalus_data_Object.__name__ = true;\nhxDaedalus_data_Object.prototype = {\n\tget_id: function() {\n\t\treturn this._id;\n\t}\n\t,dispose: function() {\n\t\tthis._matrix = null;\n\t\tthis._coordinates = null;\n\t\tthis._constraintShape = null;\n\t}\n\t,updateValuesFromMatrix: function() {\n\t}\n\t,updateMatrixFromValues: function() {\n\t\tthis._matrix.identity();\n\t\tthis._matrix.translate(-this._pivotX,-this._pivotY);\n\t\tthis._matrix.scale(this._scaleX,this._scaleY);\n\t\tthis._matrix.rotate(this._rotation);\n\t\tthis._matrix.translate(this._x,this._y);\n\t}\n\t,get_pivotX: function() {\n\t\treturn this._pivotX;\n\t}\n\t,set_pivotX: function(value) {\n\t\tthis._pivotX = value;\n\t\tthis._hasChanged = true;\n\t\treturn value;\n\t}\n\t,get_pivotY: function() {\n\t\treturn this._pivotY;\n\t}\n\t,set_pivotY: function(value) {\n\t\tthis._pivotY = value;\n\t\tthis._hasChanged = true;\n\t\treturn value;\n\t}\n\t,get_scaleX: function() {\n\t\treturn this._scaleX;\n\t}\n\t,set_scaleX: function(value) {\n\t\tif(this._scaleX != value) {\n\t\t\tthis._scaleX = value;\n\t\t\tthis._hasChanged = true;\n\t\t}\n\t\treturn value;\n\t}\n\t,get_scaleY: function() {\n\t\treturn this._scaleY;\n\t}\n\t,set_scaleY: function(value) {\n\t\tif(this._scaleY != value) {\n\t\t\tthis._scaleY = value;\n\t\t\tthis._hasChanged = true;\n\t\t}\n\t\treturn value;\n\t}\n\t,get_rotation: function() {\n\t\treturn this._rotation;\n\t}\n\t,set_rotation: function(value) {\n\t\tif(this._rotation != value) {\n\t\t\tthis._rotation = value;\n\t\t\tthis._hasChanged = true;\n\t\t}\n\t\treturn value;\n\t}\n\t,get_x: function() {\n\t\treturn this._x;\n\t}\n\t,set_x: function(value) {\n\t\tif(this._x != value) {\n\t\t\tthis._x = value;\n\t\t\tthis._hasChanged = true;\n\t\t}\n\t\treturn value;\n\t}\n\t,get_y: function() {\n\t\treturn this._y;\n\t}\n\t,set_y: function(value) {\n\t\tif(this._y != value) {\n\t\t\tthis._y = value;\n\t\t\tthis._hasChanged = true;\n\t\t}\n\t\treturn value;\n\t}\n\t,get_matrix: function() {\n\t\treturn this._matrix;\n\t}\n\t,set_matrix: function(value) {\n\t\tthis._matrix = value;\n\t\tthis._hasChanged = true;\n\t\treturn value;\n\t}\n\t,get_coordinates: function() {\n\t\treturn this._coordinates;\n\t}\n\t,set_coordinates: function(value) {\n\t\tthis._coordinates = value;\n\t\tthis._hasChanged = true;\n\t\treturn value;\n\t}\n\t,get_constraintShape: function() {\n\t\treturn this._constraintShape;\n\t}\n\t,set_constraintShape: function(value) {\n\t\tthis._constraintShape = value;\n\t\tthis._hasChanged = true;\n\t\treturn value;\n\t}\n\t,get_hasChanged: function() {\n\t\treturn this._hasChanged;\n\t}\n\t,set_hasChanged: function(value) {\n\t\tthis._hasChanged = value;\n\t\treturn value;\n\t}\n\t,get_edges: function() {\n\t\tvar res = [];\n\t\tvar seg = this._constraintShape.segments;\n\t\tvar _g1 = 0;\n\t\tvar _g = seg.length;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i = _g1++;\n\t\t\tvar _g3 = 0;\n\t\t\tvar _g2 = seg[i].get_edges().length;\n\t\t\twhile(_g3 < _g2) {\n\t\t\t\tvar j = _g3++;\n\t\t\t\tres.push(seg[i].get_edges()[j]);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\t,__class__: hxDaedalus_data_Object\n};\nvar hxDaedalus_data_Vertex = $hx_exports[\"hxDaedalus\"][\"data\"][\"Vertex\"] = function() {\n\tthis.colorDebug = -1;\n\tthis._id = hxDaedalus_data_Vertex.INC;\n\thxDaedalus_data_Vertex.INC++;\n\tthis._pos = new hxDaedalus_data_math_Point2D();\n\tthis._fromConstraintSegments = [];\n};\nhxDaedalus_data_Vertex.__name__ = true;\nhxDaedalus_data_Vertex.prototype = {\n\tget_id: function() {\n\t\treturn this._id;\n\t}\n\t,get_isReal: function() {\n\t\treturn this._isReal;\n\t}\n\t,get_pos: function() {\n\t\treturn this._pos;\n\t}\n\t,get_fromConstraintSegments: function() {\n\t\treturn this._fromConstraintSegments;\n\t}\n\t,set_fromConstraintSegments: function(value) {\n\t\treturn this._fromConstraintSegments = value;\n\t}\n\t,setDatas: function(edge,isReal) {\n\t\tif(isReal == null) {\n\t\t\tisReal = true;\n\t\t}\n\t\tthis._isReal = isReal;\n\t\tthis._edge = edge;\n\t}\n\t,addFromConstraintSegment: function(segment) {\n\t\tif(this._fromConstraintSegments.indexOf(segment) == -1) {\n\t\t\tthis._fromConstraintSegments.push(segment);\n\t\t}\n\t}\n\t,removeFromConstraintSegment: function(segment) {\n\t\tvar index = this._fromConstraintSegments.indexOf(segment);\n\t\tif(index != -1) {\n\t\t\tthis._fromConstraintSegments.splice(index,1);\n\t\t}\n\t}\n\t,dispose: function() {\n\t\tthis._pos = null;\n\t\tthis._edge = null;\n\t\tthis._fromConstraintSegments = null;\n\t}\n\t,get_edge: function() {\n\t\treturn this._edge;\n\t}\n\t,set_edge: function(value) {\n\t\treturn this._edge = value;\n\t}\n\t,toString: function() {\n\t\treturn \"ver_id \" + this._id;\n\t}\n\t,__class__: hxDaedalus_data_Vertex\n};\nvar hxDaedalus_data_graph_Graph = $hx_exports[\"hxDaedalus\"][\"data\"][\"graph\"][\"Graph\"] = function() {\n\tthis._id = hxDaedalus_data_graph_Graph.INC;\n\thxDaedalus_data_graph_Graph.INC++;\n};\nhxDaedalus_data_graph_Graph.__name__ = true;\nhxDaedalus_data_graph_Graph.prototype = {\n\tget_id: function() {\n\t\treturn this._id;\n\t}\n\t,get_edge: function() {\n\t\treturn this._edge;\n\t}\n\t,get_node: function() {\n\t\treturn this._node;\n\t}\n\t,dispose: function() {\n\t\twhile(this._node != null) this.deleteNode(this._node);\n\t}\n\t,insertNode: function() {\n\t\tvar node = new hxDaedalus_data_graph_GraphNode();\n\t\tif(this._node != null) {\n\t\t\tnode.set_next(this._node);\n\t\t\tthis._node.set_prev(node);\n\t\t}\n\t\tthis._node = node;\n\t\treturn node;\n\t}\n\t,deleteNode: function(node) {\n\t\twhile(node.get_outgoingEdge() != null) {\n\t\t\tif(node.get_outgoingEdge().get_oppositeEdge() != null) {\n\t\t\t\tthis.deleteEdge(node.get_outgoingEdge().get_oppositeEdge());\n\t\t\t}\n\t\t\tthis.deleteEdge(node.get_outgoingEdge());\n\t\t}\n\t\tvar otherNode = this._node;\n\t\tvar incomingEdge;\n\t\twhile(otherNode != null) {\n\t\t\tincomingEdge = otherNode.get_successorNodes().h[node.__id__];\n\t\t\tif(incomingEdge != null) {\n\t\t\t\tthis.deleteEdge(incomingEdge);\n\t\t\t}\n\t\t\totherNode = otherNode.get_next();\n\t\t}\n\t\tif(this._node == node) {\n\t\t\tif(node.get_next() != null) {\n\t\t\t\tnode.get_next().set_prev(null);\n\t\t\t\tthis._node = node.get_next();\n\t\t\t} else {\n\t\t\t\tthis._node = null;\n\t\t\t}\n\t\t} else if(node.get_next() != null) {\n\t\t\tnode.get_prev().set_next(node.get_next());\n\t\t\tnode.get_next().set_prev(node.get_prev());\n\t\t} else {\n\t\t\tnode.get_prev().set_next(null);\n\t\t}\n\t\tnode.dispose();\n\t}\n\t,insertEdge: function(fromNode,toNode) {\n\t\tif(fromNode.get_successorNodes().h[toNode.__id__] != null) {\n\t\t\treturn null;\n\t\t}\n\t\tvar edge = new hxDaedalus_data_graph_GraphEdge();\n\t\tif(this._edge != null) {\n\t\t\tthis._edge.set_prev(edge);\n\t\t\tedge.set_next(this._edge);\n\t\t}\n\t\tthis._edge = edge;\n\t\tedge.set_sourceNode(fromNode);\n\t\tedge.set_destinationNode(toNode);\n\t\tfromNode.get_successorNodes().set(toNode,edge);\n\t\tif(fromNode.get_outgoingEdge() != null) {\n\t\t\tfromNode.get_outgoingEdge().set_rotPrevEdge(edge);\n\t\t\tedge.set_rotNextEdge(fromNode.get_outgoingEdge());\n\t\t\tfromNode.set_outgoingEdge(edge);\n\t\t} else {\n\t\t\tfromNode.set_outgoingEdge(edge);\n\t\t}\n\t\tvar oppositeEdge = toNode.get_successorNodes().h[fromNode.__id__];\n\t\tif(oppositeEdge != null) {\n\t\t\tedge.set_oppositeEdge(oppositeEdge);\n\t\t\toppositeEdge.set_oppositeEdge(edge);\n\t\t}\n\t\treturn edge;\n\t}\n\t,deleteEdge: function(edge) {\n\t\tif(this._edge == edge) {\n\t\t\tif(edge.get_next() != null) {\n\t\t\t\tedge.get_next().set_prev(null);\n\t\t\t\tthis._edge = edge.get_next();\n\t\t\t} else {\n\t\t\t\tthis._edge = null;\n\t\t\t}\n\t\t} else if(edge.get_next() != null) {\n\t\t\tedge.get_prev().set_next(edge.get_next());\n\t\t\tedge.get_next().set_prev(edge.get_prev());\n\t\t} else {\n\t\t\tedge.get_prev().set_next(null);\n\t\t}\n\t\tif(edge.get_sourceNode().get_outgoingEdge() == edge) {\n\t\t\tif(edge.get_rotNextEdge() != null) {\n\t\t\t\tedge.get_rotNextEdge().set_rotPrevEdge(null);\n\t\t\t\tedge.get_sourceNode().set_outgoingEdge(edge.get_rotNextEdge());\n\t\t\t} else {\n\t\t\t\tedge.get_sourceNode().set_outgoingEdge(null);\n\t\t\t}\n\t\t} else if(edge.get_rotNextEdge() != null) {\n\t\t\tedge.get_rotPrevEdge().set_rotNextEdge(edge.get_rotNextEdge());\n\t\t\tedge.get_rotNextEdge().set_rotPrevEdge(edge.get_rotPrevEdge());\n\t\t} else {\n\t\t\tedge.get_rotPrevEdge().set_rotNextEdge(null);\n\t\t}\n\t\tedge.dispose();\n\t}\n\t,__class__: hxDaedalus_data_graph_Graph\n};\nvar hxDaedalus_data_graph_GraphEdge = $hx_exports[\"hxDaedalus\"][\"data\"][\"graph\"][\"GraphEdge\"] = function() {\n\tthis._id = hxDaedalus_data_graph_GraphEdge.INC;\n\thxDaedalus_data_graph_GraphEdge.INC++;\n};\nhxDaedalus_data_graph_GraphEdge.__name__ = true;\nhxDaedalus_data_graph_GraphEdge.prototype = {\n\tget_id: function() {\n\t\treturn this._id;\n\t}\n\t,dispose: function() {\n\t}\n\t,get_prev: function() {\n\t\treturn this._prev;\n\t}\n\t,set_prev: function(value) {\n\t\tthis._prev = value;\n\t\treturn value;\n\t}\n\t,get_next: function() {\n\t\treturn this._next;\n\t}\n\t,set_next: function(value) {\n\t\tthis._next = value;\n\t\treturn value;\n\t}\n\t,get_rotPrevEdge: function() {\n\t\treturn this._rotPrevEdge;\n\t}\n\t,set_rotPrevEdge: function(value) {\n\t\tthis._rotPrevEdge = value;\n\t\treturn value;\n\t}\n\t,get_rotNextEdge: function() {\n\t\treturn this._rotNextEdge;\n\t}\n\t,set_rotNextEdge: function(value) {\n\t\tthis._rotNextEdge = value;\n\t\treturn value;\n\t}\n\t,get_oppositeEdge: function() {\n\t\treturn this._oppositeEdge;\n\t}\n\t,set_oppositeEdge: function(value) {\n\t\tthis._oppositeEdge = value;\n\t\treturn value;\n\t}\n\t,get_sourceNode: function() {\n\t\treturn this._sourceNode;\n\t}\n\t,set_sourceNode: function(value) {\n\t\tthis._sourceNode = value;\n\t\treturn value;\n\t}\n\t,get_destinationNode: function() {\n\t\treturn this._destinationNode;\n\t}\n\t,set_destinationNode: function(value) {\n\t\tthis._destinationNode = value;\n\t\treturn value;\n\t}\n\t,get_data: function() {\n\t\treturn this._data;\n\t}\n\t,set_data: function(value) {\n\t\tthis._data = value;\n\t\treturn value;\n\t}\n\t,__class__: hxDaedalus_data_graph_GraphEdge\n};\nvar hxDaedalus_data_graph_GraphNode = $hx_exports[\"hxDaedalus\"][\"data\"][\"graph\"][\"GraphNode\"] = function() {\n\tthis._id = hxDaedalus_data_graph_GraphNode.INC;\n\thxDaedalus_data_graph_GraphNode.INC++;\n\tthis._successorNodes = new haxe_ds_ObjectMap();\n};\nhxDaedalus_data_graph_GraphNode.__name__ = true;\nhxDaedalus_data_graph_GraphNode.prototype = {\n\tget_id: function() {\n\t\treturn this._id;\n\t}\n\t,dispose: function() {\n\t\tthis._prev = null;\n\t\tthis._next = null;\n\t\tthis._outgoingEdge = null;\n\t\tthis._successorNodes = null;\n\t\tthis._data = null;\n\t}\n\t,get_prev: function() {\n\t\treturn this._prev;\n\t}\n\t,set_prev: function(value) {\n\t\tthis._prev = value;\n\t\treturn value;\n\t}\n\t,get_next: function() {\n\t\treturn this._next;\n\t}\n\t,set_next: function(value) {\n\t\tthis._next = value;\n\t\treturn value;\n\t}\n\t,get_outgoingEdge: function() {\n\t\treturn this._outgoingEdge;\n\t}\n\t,set_outgoingEdge: function(value) {\n\t\tthis._outgoingEdge = value;\n\t\treturn value;\n\t}\n\t,get_successorNodes: function() {\n\t\treturn this._successorNodes;\n\t}\n\t,set_successorNodes: function(value) {\n\t\tthis._successorNodes = value;\n\t\treturn value;\n\t}\n\t,get_data: function() {\n\t\treturn this._data;\n\t}\n\t,set_data: function(value) {\n\t\tthis._data = value;\n\t\treturn value;\n\t}\n\t,__class__: hxDaedalus_data_graph_GraphNode\n};\nvar hxDaedalus_data_math_EdgeData = $hx_exports[\"hxDaedalus\"][\"data\"][\"math\"][\"EdgeData\"] = function() {\n};\nhxDaedalus_data_math_EdgeData.__name__ = true;\nhxDaedalus_data_math_EdgeData.prototype = {\n\t__class__: hxDaedalus_data_math_EdgeData\n};\nvar hxDaedalus_data_math_Intersection = { __ename__ : true, __constructs__ : [\"EVertex\",\"EEdge\",\"EFace\",\"ENull\"] };\nhxDaedalus_data_math_Intersection.EVertex = function(vertex) { var $x = [\"EVertex\",0,vertex]; $x.__enum__ = hxDaedalus_data_math_Intersection; $x.toString = $estr; return $x; };\nhxDaedalus_data_math_Intersection.EEdge = function(edge) { var $x = [\"EEdge\",1,edge]; $x.__enum__ = hxDaedalus_data_math_Intersection; $x.toString = $estr; return $x; };\nhxDaedalus_data_math_Intersection.EFace = function(face) { var $x = [\"EFace\",2,face]; $x.__enum__ = hxDaedalus_data_math_Intersection; $x.toString = $estr; return $x; };\nhxDaedalus_data_math_Intersection.ENull = [\"ENull\",3];\nhxDaedalus_data_math_Intersection.ENull.toString = $estr;\nhxDaedalus_data_math_Intersection.ENull.__enum__ = hxDaedalus_data_math_Intersection;\nvar hxDaedalus_data_math_Point2D = $hx_exports[\"hxDaedalus\"][\"data\"][\"math\"][\"Point2D\"] = function(x_,y_) {\n\tif(y_ == null) {\n\t\ty_ = 0;\n\t}\n\tif(x_ == null) {\n\t\tx_ = 0;\n\t}\n\tthis.x = x_;\n\tthis.y = y_;\n};\nhxDaedalus_data_math_Point2D.__name__ = true;\nhxDaedalus_data_math_Point2D.prototype = {\n\ttransform: function(matrix) {\n\t\tmatrix.tranform(this);\n\t}\n\t,setXY: function(x_,y_) {\n\t\tthis.x = x_;\n\t\tthis.y = y_;\n\t}\n\t,clone: function() {\n\t\treturn new hxDaedalus_data_math_Point2D(this.x,this.y);\n\t}\n\t,substract: function(p) {\n\t\tthis.x -= p.x;\n\t\tthis.y -= p.y;\n\t}\n\t,get_length: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t}\n\t,normalize: function() {\n\t\tvar norm = this.get_length();\n\t\tthis.x /= norm;\n\t\tthis.y /= norm;\n\t}\n\t,scale: function(s) {\n\t\tthis.x *= s;\n\t\tthis.y *= s;\n\t}\n\t,distanceTo: function(p) {\n\t\tvar diffX = this.x - p.x;\n\t\tvar diffY = this.y - p.y;\n\t\treturn Math.sqrt(diffX * diffX + diffY * diffY);\n\t}\n\t,__class__: hxDaedalus_data_math_Point2D\n};\nvar hxDaedalus_data_math_Geom2D = $hx_exports[\"hxDaedalus\"][\"data\"][\"math\"][\"Geom2D\"] = function() {\n};\nhxDaedalus_data_math_Geom2D.__name__ = true;\nhxDaedalus_data_math_Geom2D.locatePosition = function(x,y,mesh) {\n\tif(hxDaedalus_data_math_Geom2D._randGen == null) {\n\t\thxDaedalus_data_math_Geom2D._randGen = new hxDaedalus_data_math_RandGenerator();\n\t}\n\thxDaedalus_data_math_Geom2D._randGen.set_seed(x * 10 + 4 * y | 0);\n\tvar i;\n\thxDaedalus_data_math_Geom2D.__samples.splice(0,hxDaedalus_data_math_Geom2D.__samples.length);\n\tvar numSamples = Math.pow(mesh._vertices.length,0.33333333333333331) | 0;\n\thxDaedalus_data_math_Geom2D._randGen.rangeMin = 0;\n\thxDaedalus_data_math_Geom2D._randGen.rangeMax = mesh._vertices.length - 1;\n\tvar _g1 = 0;\n\tvar _g = numSamples;\n\twhile(_g1 < _g) {\n\t\tvar i1 = _g1++;\n\t\tvar _rnd = hxDaedalus_data_math_Geom2D._randGen.next();\n\t\tvar cond = _rnd < 0 || _rnd > mesh._vertices.length - 1;\n\t\tvar cond1 = mesh._vertices == null;\n\t\tvar message = \"vertices: \" + mesh._vertices.length;\n\t\thxDaedalus_data_math_Geom2D.__samples.push(mesh._vertices[_rnd]);\n\t}\n\tvar currVertex;\n\tvar currVertexPos;\n\tvar distSquared;\n\tvar minDistSquared = Infinity;\n\tvar closedVertex = null;\n\tvar _g11 = 0;\n\tvar _g2 = numSamples;\n\twhile(_g11 < _g2) {\n\t\tvar i2 = _g11++;\n\t\tcurrVertex = hxDaedalus_data_math_Geom2D.__samples[i2];\n\t\tcurrVertexPos = currVertex.get_pos();\n\t\tdistSquared = (currVertexPos.x - x) * (currVertexPos.x - x) + (currVertexPos.y - y) * (currVertexPos.y - y);\n\t\tif(distSquared < minDistSquared) {\n\t\t\tminDistSquared = distSquared;\n\t\t\tclosedVertex = currVertex;\n\t\t}\n\t}\n\tvar currFace;\n\tvar iterFace = new hxDaedalus_iterators_FromVertexToHoldingFaces();\n\titerFace.set_fromVertex(closedVertex);\n\tcurrFace = iterFace.next();\n\tvar faceVisited = new haxe_ds_ObjectMap();\n\tvar currEdge;\n\tvar iterEdge = new hxDaedalus_iterators_FromFaceToInnerEdges();\n\tvar objectContainer = hxDaedalus_data_math_Intersection.ENull;\n\tvar relativPos;\n\tvar numIter = 0;\n\twhile(true) {\n\t\tvar tmp;\n\t\tif(!faceVisited.h[currFace.__id__]) {\n\t\t\tobjectContainer = hxDaedalus_data_math_Geom2D.isInFace(x,y,currFace);\n\t\t\tvar _g3 = objectContainer;\n\t\t\tif(_g3[1] == 3) {\n\t\t\t\ttmp = true;\n\t\t\t} else {\n\t\t\t\ttmp = false;\n\t\t\t}\n\t\t} else {\n\t\t\ttmp = true;\n\t\t}\n\t\tif(!tmp) {\n\t\t\tbreak;\n\t\t}\n\t\t++numIter;\n\t\tvar tmp1 = numIter == 50;\n\t\titerEdge.set_fromFace(currFace);\n\t\twhile(true) {\n\t\t\tcurrEdge = iterEdge.next();\n\t\t\tif(currEdge == null) {\n\t\t\t\treturn hxDaedalus_data_math_Intersection.ENull;\n\t\t\t}\n\t\t\trelativPos = hxDaedalus_data_math_Geom2D.getRelativePosition(x,y,currEdge);\n\t\t\tif(!(relativPos == 1 || relativPos == 0)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcurrFace = currEdge.get_rightFace();\n\t}\n\treturn objectContainer;\n};\nhxDaedalus_data_math_Geom2D.isCircleIntersectingAnyConstraint = function(x,y,radius,mesh) {\n\tif(x <= 0 || x >= mesh.get_width() || y <= 0 || y >= mesh.get_height()) {\n\t\treturn true;\n\t}\n\tvar loc = hxDaedalus_data_math_Geom2D.locatePosition(x,y,mesh);\n\tvar face;\n\tswitch(loc[1]) {\n\tcase 0:\n\t\tvar vertex = loc[2];\n\t\tface = vertex.get_edge().get_leftFace();\n\t\tbreak;\n\tcase 1:\n\t\tvar edge = loc[2];\n\t\tface = edge.get_leftFace();\n\t\tbreak;\n\tcase 2:\n\t\tvar face_ = loc[2];\n\t\tface = face_;\n\t\tbreak;\n\tcase 3:\n\t\tface = null;\n\t\tbreak;\n\t}\n\tvar radiusSquared = radius * radius;\n\tvar pos;\n\tvar distSquared;\n\tpos = face.get_edge().get_originVertex().get_pos();\n\tdistSquared = (pos.x - x) * (pos.x - x) + (pos.y - y) * (pos.y - y);\n\tif(distSquared <= radiusSquared) {\n\t\treturn true;\n\t}\n\tpos = face.get_edge().get_nextLeftEdge().get_originVertex().get_pos();\n\tdistSquared = (pos.x - x) * (pos.x - x) + (pos.y - y) * (pos.y - y);\n\tif(distSquared <= radiusSquared) {\n\t\treturn true;\n\t}\n\tpos = face.get_edge().get_nextLeftEdge().get_nextLeftEdge().get_originVertex().get_pos();\n\tdistSquared = (pos.x - x) * (pos.x - x) + (pos.y - y) * (pos.y - y);\n\tif(distSquared <= radiusSquared) {\n\t\treturn true;\n\t}\n\tvar edgesToCheck = [];\n\tedgesToCheck.push(face.get_edge());\n\tedgesToCheck.push(face.get_edge().get_nextLeftEdge());\n\tedgesToCheck.push(face.get_edge().get_nextLeftEdge().get_nextLeftEdge());\n\tvar edge1;\n\tvar pos1;\n\tvar pos2;\n\tvar checkedEdges = new haxe_ds_ObjectMap();\n\tvar intersecting;\n\twhile(edgesToCheck.length > 0) {\n\t\tedge1 = edgesToCheck.pop();\n\t\tcheckedEdges.set(edge1,true);\n\t\tpos1 = edge1.get_originVertex().get_pos();\n\t\tpos2 = edge1.get_destinationVertex().get_pos();\n\t\tintersecting = hxDaedalus_data_math_Geom2D.intersectionsSegmentCircle(pos1.x,pos1.y,pos2.x,pos2.y,x,y,radius);\n\t\tif(intersecting) {\n\t\t\tif(edge1.get_isConstrained()) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tedge1 = edge1.get_oppositeEdge().get_nextLeftEdge();\n\t\t\t\tvar tmp;\n\t\t\t\tvar tmp1;\n\t\t\t\tvar tmp2;\n\t\t\t\tif(!checkedEdges.h[edge1.__id__]) {\n\t\t\t\t\tvar key = edge1.get_oppositeEdge();\n\t\t\t\t\ttmp2 = !checkedEdges.h[key.__id__];\n\t\t\t\t} else {\n\t\t\t\t\ttmp2 = false;\n\t\t\t\t}\n\t\t\t\tif(tmp2) {\n\t\t\t\t\ttmp1 = edgesToCheck.indexOf(edge1) == -1;\n\t\t\t\t} else {\n\t\t\t\t\ttmp1 = false;\n\t\t\t\t}\n\t\t\t\tif(tmp1) {\n\t\t\t\t\ttmp = edgesToCheck.indexOf(edge1.get_oppositeEdge()) == -1;\n\t\t\t\t} else {\n\t\t\t\t\ttmp = false;\n\t\t\t\t}\n\t\t\t\tif(tmp) {\n\t\t\t\t\tedgesToCheck.push(edge1);\n\t\t\t\t}\n\t\t\t\tedge1 = edge1.get_nextLeftEdge();\n\t\t\t\tvar tmp3;\n\t\t\t\tvar tmp4;\n\t\t\t\tvar tmp5;\n\t\t\t\tif(!checkedEdges.h[edge1.__id__]) {\n\t\t\t\t\tvar key1 = edge1.get_oppositeEdge();\n\t\t\t\t\ttmp5 = !checkedEdges.h[key1.__id__];\n\t\t\t\t} else {\n\t\t\t\t\ttmp5 = false;\n\t\t\t\t}\n\t\t\t\tif(tmp5) {\n\t\t\t\t\ttmp4 = edgesToCheck.indexOf(edge1) == -1;\n\t\t\t\t} else {\n\t\t\t\t\ttmp4 = false;\n\t\t\t\t}\n\t\t\t\tif(tmp4) {\n\t\t\t\t\ttmp3 = edgesToCheck.indexOf(edge1.get_oppositeEdge()) == -1;\n\t\t\t\t} else {\n\t\t\t\t\ttmp3 = false;\n\t\t\t\t}\n\t\t\t\tif(tmp3) {\n\t\t\t\t\tedgesToCheck.push(edge1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n};\nhxDaedalus_data_math_Geom2D.getDirection = function(x1,y1,x2,y2,x3,y3) {\n\tvar dot = (x3 - x1) * (y2 - y1) + (y3 - y1) * (-x2 + x1);\n\tif(dot == 0) {\n\t\treturn 0;\n\t} else if(dot > 0) {\n\t\treturn 1;\n\t} else {\n\t\treturn -1;\n\t}\n};\nhxDaedalus_data_math_Geom2D.getDirection2 = function(x1,y1,x2,y2,x3,y3) {\n\tvar dot = (x3 - x1) * (y2 - y1) + (y3 - y1) * (-x2 + x1);\n\tif(dot == 0) {\n\t\treturn 0;\n\t} else if(dot > 0) {\n\t\tif(hxDaedalus_data_math_Geom2D.distanceSquaredPointToLine(x3,y3,x1,y1,x2,y2) <= 0.0001) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t} else if(hxDaedalus_data_math_Geom2D.distanceSquaredPointToLine(x3,y3,x1,y1,x2,y2) <= 0.0001) {\n\t\treturn 0;\n\t} else {\n\t\treturn -1;\n\t}\n};\nhxDaedalus_data_math_Geom2D.getRelativePosition = function(x,y,eUp) {\n\treturn hxDaedalus_data_math_Geom2D.getDirection(eUp.get_originVertex().get_pos().x,eUp.get_originVertex().get_pos().y,eUp.get_destinationVertex().get_pos().x,eUp.get_destinationVertex().get_pos().y,x,y);\n};\nhxDaedalus_data_math_Geom2D.getRelativePosition2 = function(x,y,eUp) {\n\treturn hxDaedalus_data_math_Geom2D.getDirection2(eUp.get_originVertex().get_pos().x,eUp.get_originVertex().get_pos().y,eUp.get_destinationVertex().get_pos().x,eUp.get_destinationVertex().get_pos().y,x,y);\n};\nhxDaedalus_data_math_Geom2D.isInFace = function(x,y,polygon) {\n\tvar result = hxDaedalus_data_math_Intersection.ENull;\n\tvar e1_2 = polygon.get_edge();\n\tvar e2_3 = e1_2.get_nextLeftEdge();\n\tvar e3_1 = e2_3.get_nextLeftEdge();\n\tif(hxDaedalus_data_math_Geom2D.getRelativePosition(x,y,e1_2) >= 0 && hxDaedalus_data_math_Geom2D.getRelativePosition(x,y,e2_3) >= 0 && hxDaedalus_data_math_Geom2D.getRelativePosition(x,y,e3_1) >= 0) {\n\t\tvar v1 = e1_2.get_originVertex();\n\t\tvar v2 = e2_3.get_originVertex();\n\t\tvar v3 = e3_1.get_originVertex();\n\t\tvar x1 = v1.get_pos().x;\n\t\tvar y1 = v1.get_pos().y;\n\t\tvar x2 = v2.get_pos().x;\n\t\tvar y2 = v2.get_pos().y;\n\t\tvar x3 = v3.get_pos().x;\n\t\tvar y3 = v3.get_pos().y;\n\t\tvar v_v1squaredLength = (x1 - x) * (x1 - x) + (y1 - y) * (y1 - y);\n\t\tvar v_v2squaredLength = (x2 - x) * (x2 - x) + (y2 - y) * (y2 - y);\n\t\tvar v_v3squaredLength = (x3 - x) * (x3 - x) + (y3 - y) * (y3 - y);\n\t\tvar v1_v2squaredLength = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\n\t\tvar v2_v3squaredLength = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\n\t\tvar v3_v1squaredLength = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\n\t\tvar dot_v_v1v2 = (x - x1) * (x2 - x1) + (y - y1) * (y2 - y1);\n\t\tvar dot_v_v2v3 = (x - x2) * (x3 - x2) + (y - y2) * (y3 - y2);\n\t\tvar dot_v_v3v1 = (x - x3) * (x1 - x3) + (y - y3) * (y1 - y3);\n\t\tvar v_e1_2squaredLength = v_v1squaredLength - dot_v_v1v2 * dot_v_v1v2 / v1_v2squaredLength;\n\t\tvar v_e2_3squaredLength = v_v2squaredLength - dot_v_v2v3 * dot_v_v2v3 / v2_v3squaredLength;\n\t\tvar v_e3_1squaredLength = v_v3squaredLength - dot_v_v3v1 * dot_v_v3v1 / v3_v1squaredLength;\n\t\tvar closeTo_e1_2 = v_e1_2squaredLength <= 0.0001;\n\t\tvar closeTo_e2_3 = v_e2_3squaredLength <= 0.0001;\n\t\tvar closeTo_e3_1 = v_e3_1squaredLength <= 0.0001;\n\t\tif(closeTo_e1_2) {\n\t\t\tif(closeTo_e3_1) {\n\t\t\t\tresult = hxDaedalus_data_math_Intersection.EVertex(v1);\n\t\t\t} else if(closeTo_e2_3) {\n\t\t\t\tresult = hxDaedalus_data_math_Intersection.EVertex(v2);\n\t\t\t} else {\n\t\t\t\tresult = hxDaedalus_data_math_Intersection.EEdge(e1_2);\n\t\t\t}\n\t\t} else if(closeTo_e2_3) {\n\t\t\tif(closeTo_e3_1) {\n\t\t\t\tresult = hxDaedalus_data_math_Intersection.EVertex(v3);\n\t\t\t} else {\n\t\t\t\tresult = hxDaedalus_data_math_Intersection.EEdge(e2_3);\n\t\t\t}\n\t\t} else if(closeTo_e3_1) {\n\t\t\tresult = hxDaedalus_data_math_Intersection.EEdge(e3_1);\n\t\t} else {\n\t\t\tresult = hxDaedalus_data_math_Intersection.EFace(polygon);\n\t\t}\n\t}\n\treturn result;\n};\nhxDaedalus_data_math_Geom2D.clipSegmentByTriangle = function(s1x,s1y,s2x,s2y,t1x,t1y,t2x,t2y,t3x,t3y,pResult1,pResult2) {\n\tvar side1_1;\n\tvar side1_2;\n\tside1_1 = hxDaedalus_data_math_Geom2D.getDirection(t1x,t1y,t2x,t2y,s1x,s1y);\n\tside1_2 = hxDaedalus_data_math_Geom2D.getDirection(t1x,t1y,t2x,t2y,s2x,s2y);\n\tif(side1_1 <= 0 && side1_2 <= 0) {\n\t\treturn false;\n\t}\n\tvar side2_1;\n\tvar side2_2;\n\tside2_1 = hxDaedalus_data_math_Geom2D.getDirection(t2x,t2y,t3x,t3y,s1x,s1y);\n\tside2_2 = hxDaedalus_data_math_Geom2D.getDirection(t2x,t2y,t3x,t3y,s2x,s2y);\n\tif(side2_1 <= 0 && side2_2 <= 0) {\n\t\treturn false;\n\t}\n\tvar side3_1;\n\tvar side3_2;\n\tside3_1 = hxDaedalus_data_math_Geom2D.getDirection(t3x,t3y,t1x,t1y,s1x,s1y);\n\tside3_2 = hxDaedalus_data_math_Geom2D.getDirection(t3x,t3y,t1x,t1y,s2x,s2y);\n\tif(side3_1 <= 0 && side3_2 <= 0) {\n\t\treturn false;\n\t}\n\tif(side1_1 >= 0 && side2_1 >= 0 && side3_1 >= 0 && (side1_2 >= 0 && side2_2 >= 0 && side3_2 >= 0)) {\n\t\tpResult1.x = s1x;\n\t\tpResult1.y = s1y;\n\t\tpResult2.x = s2x;\n\t\tpResult2.y = s2y;\n\t\treturn true;\n\t}\n\tvar n = 0;\n\tif(hxDaedalus_data_math_Geom2D.intersections2segments(s1x,s1y,s2x,s2y,t1x,t1y,t2x,t2y,pResult1,null)) {\n\t\t++n;\n\t}\n\tif(n == 0) {\n\t\tif(hxDaedalus_data_math_Geom2D.intersections2segments(s1x,s1y,s2x,s2y,t2x,t2y,t3x,t3y,pResult1,null)) {\n\t\t\t++n;\n\t\t}\n\t} else if(hxDaedalus_data_math_Geom2D.intersections2segments(s1x,s1y,s2x,s2y,t2x,t2y,t3x,t3y,pResult2,null)) {\n\t\tif(-0.01 > pResult1.x - pResult2.x || pResult1.x - pResult2.x > 0.01 || -0.01 > pResult1.y - pResult2.y || pResult1.y - pResult2.y > 0.01) {\n\t\t\t++n;\n\t\t}\n\t}\n\tif(n == 0) {\n\t\tif(hxDaedalus_data_math_Geom2D.intersections2segments(s1x,s1y,s2x,s2y,t3x,t3y,t1x,t1y,pResult1,null)) {\n\t\t\t++n;\n\t\t}\n\t} else if(n == 1) {\n\t\tif(hxDaedalus_data_math_Geom2D.intersections2segments(s1x,s1y,s2x,s2y,t3x,t3y,t1x,t1y,pResult2,null)) {\n\t\t\tif(-0.01 > pResult1.x - pResult2.x || pResult1.x - pResult2.x > 0.01 || -0.01 > pResult1.y - pResult2.y || pResult1.y - pResult2.y > 0.01) {\n\t\t\t\t++n;\n\t\t\t}\n\t\t}\n\t}\n\tif(n == 1) {\n\t\tif(side1_1 >= 0 && side2_1 >= 0 && side3_1 >= 0) {\n\t\t\tpResult2.x = s1x;\n\t\t\tpResult2.y = s1y;\n\t\t} else if(side1_2 >= 0 && side2_2 >= 0 && side3_2 >= 0) {\n\t\t\tpResult2.x = s2x;\n\t\t\tpResult2.y = s2y;\n\t\t} else {\n\t\t\tn = 0;\n\t\t}\n\t}\n\tif(n > 0) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nhxDaedalus_data_math_Geom2D.isSegmentIntersectingTriangle = function(s1x,s1y,s2x,s2y,t1x,t1y,t2x,t2y,t3x,t3y) {\n\tvar side1_1;\n\tvar side1_2;\n\tside1_1 = hxDaedalus_data_math_Geom2D.getDirection(t1x,t1y,t2x,t2y,s1x,s1y);\n\tside1_2 = hxDaedalus_data_math_Geom2D.getDirection(t1x,t1y,t2x,t2y,s2x,s2y);\n\tif(side1_1 <= 0 && side1_2 <= 0) {\n\t\treturn false;\n\t}\n\tvar side2_1;\n\tvar side2_2;\n\tside2_1 = hxDaedalus_data_math_Geom2D.getDirection(t2x,t2y,t3x,t3y,s1x,s1y);\n\tside2_2 = hxDaedalus_data_math_Geom2D.getDirection(t2x,t2y,t3x,t3y,s2x,s2y);\n\tif(side2_1 <= 0 && side2_2 <= 0) {\n\t\treturn false;\n\t}\n\tvar side3_1;\n\tvar side3_2;\n\tside3_1 = hxDaedalus_data_math_Geom2D.getDirection(t3x,t3y,t1x,t1y,s1x,s1y);\n\tside3_2 = hxDaedalus_data_math_Geom2D.getDirection(t3x,t3y,t1x,t1y,s2x,s2y);\n\tif(side3_1 <= 0 && side3_2 <= 0) {\n\t\treturn false;\n\t}\n\tif(side1_1 == 1 && side2_1 == 1 && side3_1 == 1) {\n\t\treturn true;\n\t}\n\tif(side1_1 == 1 && side2_1 == 1 && side3_1 == 1) {\n\t\treturn true;\n\t}\n\tvar side1;\n\tvar side2;\n\tif(side1_1 == 1 && side1_2 <= 0 || side1_1 <= 0 && side1_2 == 1) {\n\t\tside1 = hxDaedalus_data_math_Geom2D.getDirection(s1x,s1y,s2x,s2y,t1x,t1y);\n\t\tside2 = hxDaedalus_data_math_Geom2D.getDirection(s1x,s1y,s2x,s2y,t2x,t2y);\n\t\tif(side1 == 1 && side2 <= 0 || side1 <= 0 && side2 == 1) {\n\t\t\treturn true;\n\t\t}\n\t}\n\tif(side2_1 == 1 && side2_2 <= 0 || side2_1 <= 0 && side2_2 == 1) {\n\t\tside1 = hxDaedalus_data_math_Geom2D.getDirection(s1x,s1y,s2x,s2y,t2x,t2y);\n\t\tside2 = hxDaedalus_data_math_Geom2D.getDirection(s1x,s1y,s2x,s2y,t3x,t3y);\n\t\tif(side1 == 1 && side2 <= 0 || side1 <= 0 && side2 == 1) {\n\t\t\treturn true;\n\t\t}\n\t}\n\tif(side3_1 == 1 && side3_2 <= 0 || side3_1 <= 0 && side3_2 == 1) {\n\t\tside1 = hxDaedalus_data_math_Geom2D.getDirection(s1x,s1y,s2x,s2y,t3x,t3y);\n\t\tside2 = hxDaedalus_data_math_Geom2D.getDirection(s1x,s1y,s2x,s2y,t1x,t1y);\n\t\tif(side1 == 1 && side2 <= 0 || side1 <= 0 && side2 == 1) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nhxDaedalus_data_math_Geom2D.isDelaunay = function(edge) {\n\tvar vLeft = edge.get_originVertex();\n\tvar vRight = edge.get_destinationVertex();\n\tvar vCorner = edge.get_nextLeftEdge().get_destinationVertex();\n\tvar vOpposite = edge.get_nextRightEdge().get_destinationVertex();\n\thxDaedalus_data_math_Geom2D.getCircumcenter(vCorner.get_pos().x,vCorner.get_pos().y,vLeft.get_pos().x,vLeft.get_pos().y,vRight.get_pos().x,vRight.get_pos().y,hxDaedalus_data_math_Geom2D.__circumcenter);\n\tvar squaredRadius = (vCorner.get_pos().x - hxDaedalus_data_math_Geom2D.__circumcenter.x) * (vCorner.get_pos().x - hxDaedalus_data_math_Geom2D.__circumcenter.x) + (vCorner.get_pos().y - hxDaedalus_data_math_Geom2D.__circumcenter.y) * (vCorner.get_pos().y - hxDaedalus_data_math_Geom2D.__circumcenter.y);\n\tvar squaredDistance = (vOpposite.get_pos().x - hxDaedalus_data_math_Geom2D.__circumcenter.x) * (vOpposite.get_pos().x - hxDaedalus_data_math_Geom2D.__circumcenter.x) + (vOpposite.get_pos().y - hxDaedalus_data_math_Geom2D.__circumcenter.y) * (vOpposite.get_pos().y - hxDaedalus_data_math_Geom2D.__circumcenter.y);\n\treturn squaredDistance >= squaredRadius;\n};\nhxDaedalus_data_math_Geom2D.getCircumcenter = function(x1,y1,x2,y2,x3,y3,result) {\n\tif(result == null) {\n\t\tresult = new hxDaedalus_data_math_Point2D();\n\t}\n\tvar m1 = (x1 + x2) / 2;\n\tvar m2 = (y1 + y2) / 2;\n\tvar m3 = (x1 + x3) / 2;\n\tvar m4 = (y1 + y3) / 2;\n\tvar t1 = (m1 * (x1 - x3) + (m2 - m4) * (y1 - y3) + m3 * (x3 - x1)) / (x1 * (y3 - y2) + x2 * (y1 - y3) + x3 * (y2 - y1));\n\tresult.x = m1 + t1 * (y2 - y1);\n\tresult.y = m2 - t1 * (x2 - x1);\n\treturn result;\n};\nhxDaedalus_data_math_Geom2D.intersections2segments = function(s1p1x,s1p1y,s1p2x,s1p2y,s2p1x,s2p1y,s2p2x,s2p2y,posIntersection,paramIntersection,infiniteLineMode) {\n\tif(infiniteLineMode == null) {\n\t\tinfiniteLineMode = false;\n\t}\n\tvar t1 = 0;\n\tvar t2 = 0;\n\tvar result;\n\tvar divisor = (s1p1x - s1p2x) * (s2p1y - s2p2y) + (s1p2y - s1p1y) * (s2p1x - s2p2x);\n\tif(divisor == 0) {\n\t\tresult = false;\n\t} else {\n\t\tresult = true;\n\t\tif(!infiniteLineMode || posIntersection != null || paramIntersection != null) {\n\t\t\tt1 = (s1p1x * (s2p1y - s2p2y) + s1p1y * (s2p2x - s2p1x) + s2p1x * s2p2y - s2p1y * s2p2x) / divisor;\n\t\t\tt2 = (s1p1x * (s2p1y - s1p2y) + s1p1y * (s1p2x - s2p1x) - s1p2x * s2p1y + s1p2y * s2p1x) / divisor;\n\t\t\tif(!infiniteLineMode && !(0 <= t1 && t1 <= 1 && 0 <= t2 && t2 <= 1)) {\n\t\t\t\tresult = false;\n\t\t\t}\n\t\t}\n\t}\n\tif(result) {\n\t\tif(posIntersection != null) {\n\t\t\tposIntersection.x = s1p1x + t1 * (s1p2x - s1p1x);\n\t\t\tposIntersection.y = s1p1y + t1 * (s1p2y - s1p1y);\n\t\t}\n\t\tif(paramIntersection != null) {\n\t\t\tparamIntersection.push(t1);\n\t\t\tparamIntersection.push(t2);\n\t\t}\n\t}\n\treturn result;\n};\nhxDaedalus_data_math_Geom2D.intersections2edges = function(edge1,edge2,posIntersection,paramIntersection,infiniteLineMode) {\n\tif(infiniteLineMode == null) {\n\t\tinfiniteLineMode = false;\n\t}\n\treturn hxDaedalus_data_math_Geom2D.intersections2segments(edge1.get_originVertex().get_pos().x,edge1.get_originVertex().get_pos().y,edge1.get_destinationVertex().get_pos().x,edge1.get_destinationVertex().get_pos().y,edge2.get_originVertex().get_pos().x,edge2.get_originVertex().get_pos().y,edge2.get_destinationVertex().get_pos().x,edge2.get_destinationVertex().get_pos().y,posIntersection,paramIntersection,infiniteLineMode);\n};\nhxDaedalus_data_math_Geom2D.isConvex = function(edge) {\n\tvar result = true;\n\tvar eLeft;\n\tvar vRight;\n\teLeft = edge.get_nextLeftEdge().get_oppositeEdge();\n\tvRight = edge.get_nextRightEdge().get_destinationVertex();\n\tif(hxDaedalus_data_math_Geom2D.getRelativePosition(vRight.get_pos().x,vRight.get_pos().y,eLeft) != -1) {\n\t\tresult = false;\n\t} else {\n\t\teLeft = edge.get_prevRightEdge();\n\t\tvRight = edge.get_prevLeftEdge().get_originVertex();\n\t\tif(hxDaedalus_data_math_Geom2D.getRelativePosition(vRight.get_pos().x,vRight.get_pos().y,eLeft) != -1) {\n\t\t\tresult = false;\n\t\t}\n\t}\n\treturn result;\n};\nhxDaedalus_data_math_Geom2D.projectOrthogonaly = function(vertexPos,edge) {\n\tvar a = edge.get_originVertex().get_pos().x;\n\tvar b = edge.get_originVertex().get_pos().y;\n\tvar c = edge.get_destinationVertex().get_pos().x;\n\tvar d = edge.get_destinationVertex().get_pos().y;\n\tvar e = vertexPos.x;\n\tvar f = vertexPos.y;\n\tvar t1 = (a * a - a * c - a * e + b * b - b * d - b * f + c * e + d * f) / (a * a - 2 * a * c + b * b - 2 * b * d + c * c + d * d);\n\tvertexPos.x = a + t1 * (c - a);\n\tvertexPos.y = b + t1 * (d - b);\n};\nhxDaedalus_data_math_Geom2D.intersections2Circles = function(cx1,cy1,r1,cx2,cy2,r2,result) {\n\tvar distRadiusSQRD = (cx2 - cx1) * (cx2 - cx1) + (cy2 - cy1) * (cy2 - cy1);\n\tif((cx1 != cx2 || cy1 != cy2) && distRadiusSQRD <= (r1 + r2) * (r1 + r2) && distRadiusSQRD >= (r1 - r2) * (r1 - r2)) {\n\t\tvar transcendPart = Math.sqrt(((r1 + r2) * (r1 + r2) - distRadiusSQRD) * (distRadiusSQRD - (r2 - r1) * (r2 - r1)));\n\t\tvar xFirstPart = (cx1 + cx2) / 2 + (cx2 - cx1) * (r1 * r1 - r2 * r2) / (2 * distRadiusSQRD);\n\t\tvar yFirstPart = (cy1 + cy2) / 2 + (cy2 - cy1) * (r1 * r1 - r2 * r2) / (2 * distRadiusSQRD);\n\t\tvar xFactor = (cy2 - cy1) / (2 * distRadiusSQRD);\n\t\tvar yFactor = (cx2 - cx1) / (2 * distRadiusSQRD);\n\t\tif(result != null) {\n\t\t\tvar _g = 0;\n\t\t\tvar _g1 = [xFirstPart + xFactor * transcendPart,yFirstPart - yFactor * transcendPart,xFirstPart - xFactor * transcendPart,yFirstPart + yFactor * transcendPart];\n\t\t\twhile(_g < _g1.length) {\n\t\t\t\tvar f = _g1[_g];\n\t\t\t\t++_g;\n\t\t\t\tresult.push(f);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nhxDaedalus_data_math_Geom2D.intersectionsSegmentCircle = function(p0x,p0y,p1x,p1y,cx,cy,r,result) {\n\tvar p0xSQD = p0x * p0x;\n\tvar p0ySQD = p0y * p0y;\n\tvar a = p1y * p1y - 2 * p1y * p0y + p0ySQD + p1x * p1x - 2 * p1x * p0x + p0xSQD;\n\tvar b = 2 * p0y * cy - 2 * p0xSQD + 2 * p1y * p0y - 2 * p0ySQD + 2 * p1x * p0x - 2 * p1x * cx + 2 * p0x * cx - 2 * p1y * cy;\n\tvar c = p0ySQD + cy * cy + cx * cx - 2 * p0y * cy - 2 * p0x * cx + p0xSQD - r * r;\n\tvar delta = b * b - 4 * a * c;\n\tvar deltaSQRT;\n\tvar t0;\n\tvar t1;\n\tif(delta < 0) {\n\t\treturn false;\n\t} else if(delta == 0) {\n\t\tt0 = -b / (2 * a);\n\t\tif(t0 < 0 || t0 > 1) {\n\t\t\treturn false;\n\t\t}\n\t\tif(result != null) {\n\t\t\tvar _g = 0;\n\t\t\tvar _g1 = [p0x + t0 * (p1x - p0x),p0y + t0 * (p1y - p0y),t0];\n\t\t\twhile(_g < _g1.length) {\n\t\t\t\tvar f = _g1[_g];\n\t\t\t\t++_g;\n\t\t\t\tresult.push(f);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t} else {\n\t\tdeltaSQRT = Math.sqrt(delta);\n\t\tt0 = (-b + deltaSQRT) / (2 * a);\n\t\tt1 = (-b - deltaSQRT) / (2 * a);\n\t\tvar intersecting = false;\n\t\tif(0 <= t0 && t0 <= 1) {\n\t\t\tif(result != null) {\n\t\t\t\tvar _g2 = 0;\n\t\t\t\tvar _g11 = [p0x + t0 * (p1x - p0x),p0y + t0 * (p1y - p0y),t0];\n\t\t\t\twhile(_g2 < _g11.length) {\n\t\t\t\t\tvar f1 = _g11[_g2];\n\t\t\t\t\t++_g2;\n\t\t\t\t\tresult.push(f1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tintersecting = true;\n\t\t}\n\t\tif(0 <= t1 && t1 <= 1) {\n\t\t\tif(result != null) {\n\t\t\t\tvar _g3 = 0;\n\t\t\t\tvar _g12 = [p0x + t1 * (p1x - p0x),p0y + t1 * (p1y - p0y),t1];\n\t\t\t\twhile(_g3 < _g12.length) {\n\t\t\t\t\tvar f2 = _g12[_g3];\n\t\t\t\t\t++_g3;\n\t\t\t\t\tresult.push(f2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tintersecting = true;\n\t\t}\n\t\treturn intersecting;\n\t}\n};\nhxDaedalus_data_math_Geom2D.intersectionsLineCircle = function(p0x,p0y,p1x,p1y,cx,cy,r,result) {\n\tvar p0xSQD = p0x * p0x;\n\tvar p0ySQD = p0y * p0y;\n\tvar a = p1y * p1y - 2 * p1y * p0y + p0ySQD + p1x * p1x - 2 * p1x * p0x + p0xSQD;\n\tvar b = 2 * p0y * cy - 2 * p0xSQD + 2 * p1y * p0y - 2 * p0ySQD + 2 * p1x * p0x - 2 * p1x * cx + 2 * p0x * cx - 2 * p1y * cy;\n\tvar c = p0ySQD + cy * cy + cx * cx - 2 * p0y * cy - 2 * p0x * cx + p0xSQD - r * r;\n\tvar delta = b * b - 4 * a * c;\n\tvar deltaSQRT;\n\tvar t0;\n\tvar t1;\n\tif(delta < 0) {\n\t\treturn false;\n\t} else if(delta == 0) {\n\t\tt0 = -b / (2 * a);\n\t\tvar _g = 0;\n\t\tvar _g1 = [p0x + t0 * (p1x - p0x),p0y + t0 * (p1y - p0y),t0];\n\t\twhile(_g < _g1.length) {\n\t\t\tvar f = _g1[_g];\n\t\t\t++_g;\n\t\t\tresult.push(f);\n\t\t}\n\t} else if(delta > 0) {\n\t\tdeltaSQRT = Math.sqrt(delta);\n\t\tt0 = (-b + deltaSQRT) / (2 * a);\n\t\tt1 = (-b - deltaSQRT) / (2 * a);\n\t\tvar _g2 = 0;\n\t\tvar _g11 = [p0x + t0 * (p1x - p0x),p0y + t0 * (p1y - p0y),t0,p0x + t1 * (p1x - p0x),p0y + t1 * (p1y - p0y),t1];\n\t\twhile(_g2 < _g11.length) {\n\t\t\tvar f1 = _g11[_g2];\n\t\t\t++_g2;\n\t\t\tresult.push(f1);\n\t\t}\n\t}\n\treturn true;\n};\nhxDaedalus_data_math_Geom2D.tangentsPointToCircle = function(px,py,cx,cy,r,result) {\n\tvar c2x = (px + cx) / 2;\n\tvar c2y = (py + cy) / 2;\n\tvar r2 = 0.5 * Math.sqrt((px - cx) * (px - cx) + (py - cy) * (py - cy));\n\treturn hxDaedalus_data_math_Geom2D.intersections2Circles(c2x,c2y,r2,cx,cy,r,result);\n};\nhxDaedalus_data_math_Geom2D.tangentsCrossCircleToCircle = function(r,c1x,c1y,c2x,c2y,result) {\n\tvar distance = Math.sqrt((c1x - c2x) * (c1x - c2x) + (c1y - c2y) * (c1y - c2y));\n\tvar radius = distance / 4;\n\tvar centerX = c1x + (c2x - c1x) / 4;\n\tvar centerY = c1y + (c2y - c1y) / 4;\n\tif(hxDaedalus_data_math_Geom2D.intersections2Circles(c1x,c1y,r,centerX,centerY,radius,result)) {\n\t\tvar t1x = result[0];\n\t\tvar t1y = result[1];\n\t\tvar t2x = result[2];\n\t\tvar t2y = result[3];\n\t\tvar midX = (c1x + c2x) / 2;\n\t\tvar midY = (c1y + c2y) / 2;\n\t\tvar dotProd = (t1x - midX) * (c2y - c1y) + (t1y - midY) * (-c2x + c1x);\n\t\tvar tproj = dotProd / (distance * distance);\n\t\tvar projx = midX + tproj * (c2y - c1y);\n\t\tvar projy = midY - tproj * (c2x - c1x);\n\t\tvar t4x = 2 * projx - t1x;\n\t\tvar t4y = 2 * projy - t1y;\n\t\tvar t3x = t4x + t2x - t1x;\n\t\tvar t3y = t2y + t4y - t1y;\n\t\tvar _g = 0;\n\t\tvar _g1 = [t3x,t3y,t4x,t4y];\n\t\twhile(_g < _g1.length) {\n\t\t\tvar f = _g1[_g];\n\t\t\t++_g;\n\t\t\tresult.push(f);\n\t\t}\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nhxDaedalus_data_math_Geom2D.tangentsParalCircleToCircle = function(r,c1x,c1y,c2x,c2y,result) {\n\tvar distance = Math.sqrt((c1x - c2x) * (c1x - c2x) + (c1y - c2y) * (c1y - c2y));\n\tvar t1x = c1x + r * (c2y - c1y) / distance;\n\tvar t1y = c1y + r * (-c2x + c1x) / distance;\n\tvar t2x = 2 * c1x - t1x;\n\tvar t2y = 2 * c1y - t1y;\n\tvar t3x = t2x + c2x - c1x;\n\tvar t3y = t2y + c2y - c1y;\n\tvar t4x = t1x + c2x - c1x;\n\tvar t4y = t1y + c2y - c1y;\n\tvar _g = 0;\n\tvar _g1 = [t1x,t1y,t2x,t2y,t3x,t3y,t4x,t4y];\n\twhile(_g < _g1.length) {\n\t\tvar f = _g1[_g];\n\t\t++_g;\n\t\tresult.push(f);\n\t}\n};\nhxDaedalus_data_math_Geom2D.distanceSquaredPointToLine = function(px,py,ax,ay,bx,by) {\n\tvar a_b_squaredLength = (bx - ax) * (bx - ax) + (by - ay) * (by - ay);\n\tvar dotProduct = (px - ax) * (bx - ax) + (py - ay) * (by - ay);\n\tvar p_a_squaredLength = (ax - px) * (ax - px) + (ay - py) * (ay - py);\n\treturn p_a_squaredLength - dotProduct * dotProduct / a_b_squaredLength;\n};\nhxDaedalus_data_math_Geom2D.distanceSquaredPointToSegment = function(px,py,ax,ay,bx,by) {\n\tvar a_b_squaredLength = (bx - ax) * (bx - ax) + (by - ay) * (by - ay);\n\tvar dotProduct = ((px - ax) * (bx - ax) + (py - ay) * (by - ay)) / a_b_squaredLength;\n\tif(dotProduct < 0) {\n\t\treturn (px - ax) * (px - ax) + (py - ay) * (py - ay);\n\t} else if(dotProduct <= 1) {\n\t\tvar p_a_squaredLength = (ax - px) * (ax - px) + (ay - py) * (ay - py);\n\t\treturn p_a_squaredLength - dotProduct * dotProduct * a_b_squaredLength;\n\t} else {\n\t\treturn (px - bx) * (px - bx) + (py - by) * (py - by);\n\t}\n};\nhxDaedalus_data_math_Geom2D.distanceSquaredVertexToEdge = function(vertex,edge) {\n\treturn hxDaedalus_data_math_Geom2D.distanceSquaredPointToSegment(vertex.get_pos().x,vertex.get_pos().y,edge.get_originVertex().get_pos().x,edge.get_originVertex().get_pos().y,edge.get_destinationVertex().get_pos().x,edge.get_destinationVertex().get_pos().y);\n};\nhxDaedalus_data_math_Geom2D.pathLength = function(path) {\n\tvar sumDistance = 0.;\n\tvar fromX = path[0];\n\tvar fromY = path[1];\n\tvar nextX;\n\tvar nextY;\n\tvar x;\n\tvar y;\n\tvar distance;\n\tvar i = 2;\n\twhile(i < path.length) {\n\t\tnextX = path[i];\n\t\tnextY = path[i + 1];\n\t\tx = nextX - fromX;\n\t\ty = nextY - fromY;\n\t\tdistance = Math.sqrt(x * x + y * y);\n\t\tsumDistance += distance;\n\t\tfromX = nextX;\n\t\tfromY = nextY;\n\t\ti += 2;\n\t}\n\treturn sumDistance;\n};\nhxDaedalus_data_math_Geom2D.prototype = {\n\t__class__: hxDaedalus_data_math_Geom2D\n};\nvar hxDaedalus_data_math_Matrix2D = $hx_exports[\"hxDaedalus\"][\"data\"][\"math\"][\"Matrix2D\"] = function(a_,b_,c_,d_,e_,f_) {\n\tif(f_ == null) {\n\t\tf_ = 0;\n\t}\n\tif(e_ == null) {\n\t\te_ = 0;\n\t}\n\tif(d_ == null) {\n\t\td_ = 1;\n\t}\n\tif(c_ == null) {\n\t\tc_ = 0;\n\t}\n\tif(b_ == null) {\n\t\tb_ = 0;\n\t}\n\tif(a_ == null) {\n\t\ta_ = 1;\n\t}\n\tthis.a = a_;\n\tthis.b = b_;\n\tthis.c = c_;\n\tthis.d = d_;\n\tthis.e = e_;\n\tthis.f = f_;\n};\nhxDaedalus_data_math_Matrix2D.__name__ = true;\nhxDaedalus_data_math_Matrix2D.prototype = {\n\tidentity: function() {\n\t\tthis.a = 1;\n\t\tthis.b = 0;\n\t\tthis.c = 0;\n\t\tthis.d = 1;\n\t\tthis.e = 0;\n\t\tthis.f = 0;\n\t}\n\t,translate: function(tx,ty) {\n\t\tthis.e += tx;\n\t\tthis.f += ty;\n\t}\n\t,scale: function(sx,sy) {\n\t\tthis.a *= sx;\n\t\tthis.b *= sy;\n\t\tthis.c *= sx;\n\t\tthis.d *= sy;\n\t\tthis.e *= sx;\n\t\tthis.f *= sy;\n\t}\n\t,rotate: function(rad) {\n\t\tvar cos = Math.cos(rad);\n\t\tvar sin = Math.sin(rad);\n\t\tvar a_ = this.a * cos + this.b * -sin;\n\t\tvar b_ = this.a * sin + this.b * cos;\n\t\tvar c_ = this.c * cos + this.d * -sin;\n\t\tvar d_ = this.c * sin + this.d * cos;\n\t\tvar e_ = this.e * cos + this.f * -sin;\n\t\tvar f_ = this.e * sin + this.f * cos;\n\t\tthis.a = a_;\n\t\tthis.b = b_;\n\t\tthis.c = c_;\n\t\tthis.d = d_;\n\t\tthis.e = e_;\n\t\tthis.f = f_;\n\t}\n\t,clone: function() {\n\t\treturn new hxDaedalus_data_math_Matrix2D(this.a,this.b,this.c,this.d,this.e,this.f);\n\t}\n\t,tranform: function(point) {\n\t\tvar x = this.a * point.x + this.c * point.y + this.e;\n\t\tvar y = this.b * point.x + this.d * point.y + this.f;\n\t\tpoint.x = x;\n\t\tpoint.y = y;\n\t}\n\t,transformX: function(x,y) {\n\t\treturn this.a * x + this.c * y + this.e;\n\t}\n\t,transformY: function(x,y) {\n\t\treturn this.b * x + this.d * y + this.f;\n\t}\n\t,concat: function(matrix) {\n\t\tvar a_ = this.a * matrix.a + this.b * matrix.c;\n\t\tvar b_ = this.a * matrix.b + this.b * matrix.d;\n\t\tvar c_ = this.c * matrix.a + this.d * matrix.c;\n\t\tvar d_ = this.c * matrix.b + this.d * matrix.d;\n\t\tvar e_ = this.e * matrix.a + this.f * matrix.c + matrix.e;\n\t\tvar f_ = this.e * matrix.b + this.f * matrix.d + matrix.f;\n\t\tthis.a = a_;\n\t\tthis.b = b_;\n\t\tthis.c = c_;\n\t\tthis.d = d_;\n\t\tthis.e = e_;\n\t\tthis.f = f_;\n\t}\n\t,__class__: hxDaedalus_data_math_Matrix2D\n};\nvar hxDaedalus_data_math_NodeData = $hx_exports[\"hxDaedalus\"][\"data\"][\"math\"][\"NodeData\"] = function() {\n};\nhxDaedalus_data_math_NodeData.__name__ = true;\nhxDaedalus_data_math_NodeData.prototype = {\n\t__class__: hxDaedalus_data_math_NodeData\n};\nvar hxDaedalus_data_math_Potrace = $hx_exports[\"hxDaedalus\"][\"data\"][\"math\"][\"Potrace\"] = function() {\n};\nhxDaedalus_data_math_Potrace.__name__ = true;\nhxDaedalus_data_math_Potrace.buildShapes = function(bmpData,debugBmp,debugShape) {\n\tvar shapes = [];\n\tvar dictPixelsDone = new haxe_ds_StringMap();\n\tvar _g1 = 1;\n\tvar _g = bmpData.height - 1;\n\twhile(_g1 < _g) {\n\t\tvar row = _g1++;\n\t\tvar _g3 = 0;\n\t\tvar _g2 = bmpData.width - 1;\n\t\twhile(_g3 < _g2) {\n\t\t\tvar col = _g3++;\n\t\t\tif(hxPixels__$Pixels_Pixels_$Impl_$.getPixel(bmpData,col,row) == 16777215 && hxPixels__$Pixels_Pixels_$Impl_$.getPixel(bmpData,col + 1,row) < 16777215) {\n\t\t\t\tvar key = col + 1 + \"_\" + row;\n\t\t\t\tif(!(__map_reserved[key] != null ? dictPixelsDone.getReserved(key) : dictPixelsDone.h[key])) {\n\t\t\t\t\tshapes.push(hxDaedalus_data_math_Potrace.buildShape(bmpData,row,col + 1,dictPixelsDone,debugBmp,debugShape));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn shapes;\n};\nhxDaedalus_data_math_Potrace.buildShape = function(bmpData,fromPixelRow,fromPixelCol,dictPixelsDone,debugBmp,debugShape) {\n\tvar newX = fromPixelCol;\n\tvar newY = fromPixelRow;\n\tvar path = [newX,newY];\n\tvar key = newX + \"_\" + newY;\n\tif(__map_reserved[key] != null) {\n\t\tdictPixelsDone.setReserved(key,true);\n\t} else {\n\t\tdictPixelsDone.h[key] = true;\n\t}\n\tvar curDir = new hxDaedalus_data_math_Point2D(0,1);\n\tvar newDir = new hxDaedalus_data_math_Point2D();\n\tvar newPixelRow;\n\tvar newPixelCol;\n\tvar count = -1;\n\twhile(true) {\n\t\tif(debugBmp != null) {\n\t\t\thxPixels__$Pixels_Pixels_$Impl_$.setPixel32(debugBmp,fromPixelCol,fromPixelRow,-65536);\n\t\t}\n\t\tnewPixelRow = fromPixelRow + curDir.x + curDir.y | 0;\n\t\tnewPixelCol = fromPixelCol + curDir.x - curDir.y | 0;\n\t\tif(hxPixels__$Pixels_Pixels_$Impl_$.getPixel(bmpData,newPixelCol,newPixelRow) < 16777215) {\n\t\t\tnewDir.x = -curDir.y;\n\t\t\tnewDir.y = curDir.x;\n\t\t} else {\n\t\t\tnewPixelRow = fromPixelRow + curDir.y | 0;\n\t\t\tnewPixelCol = fromPixelCol + curDir.x | 0;\n\t\t\tif(hxPixels__$Pixels_Pixels_$Impl_$.getPixel(bmpData,newPixelCol,newPixelRow) < 16777215) {\n\t\t\t\tnewDir.x = curDir.x;\n\t\t\t\tnewDir.y = curDir.y;\n\t\t\t} else {\n\t\t\t\tnewPixelRow = fromPixelRow;\n\t\t\t\tnewPixelCol = fromPixelCol;\n\t\t\t\tnewDir.x = curDir.y;\n\t\t\t\tnewDir.y = -curDir.x;\n\t\t\t}\n\t\t}\n\t\tnewX += curDir.x;\n\t\tnewY += curDir.y;\n\t\tif(newX == path[0] && newY == path[1]) {\n\t\t\tbreak;\n\t\t} else {\n\t\t\tpath.push(newX);\n\t\t\tpath.push(newY);\n\t\t\tvar key1 = newX + \"_\" + newY;\n\t\t\tif(__map_reserved[key1] != null) {\n\t\t\t\tdictPixelsDone.setReserved(key1,true);\n\t\t\t} else {\n\t\t\t\tdictPixelsDone.h[key1] = true;\n\t\t\t}\n\t\t\tfromPixelRow = newPixelRow;\n\t\t\tfromPixelCol = newPixelCol;\n\t\t\tcurDir.x = newDir.x;\n\t\t\tcurDir.y = newDir.y;\n\t\t}\n\t\t--count;\n\t\tif(count == 0) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(debugShape != null) {\n\t\tdebugShape.graphics.lineStyle(0.5,65280,1);\n\t\tdebugShape.graphics.moveTo(path[0],path[1]);\n\t\tvar i = 2;\n\t\twhile(i < path.length) {\n\t\t\tdebugShape.graphics.lineTo(path[i],path[i + 1]);\n\t\t\ti += 2;\n\t\t}\n\t\tdebugShape.graphics.lineTo(path[0],path[1]);\n\t}\n\treturn path;\n};\nhxDaedalus_data_math_Potrace.buildGraph = function(shape) {\n\tvar i;\n\tvar graph = new hxDaedalus_data_graph_Graph();\n\tvar node;\n\ti = 0;\n\twhile(i < shape.length) {\n\t\tnode = graph.insertNode();\n\t\tnode.set_data(new hxDaedalus_data_math_NodeData());\n\t\tnode.get_data().index = i;\n\t\tvar shape1 = shape[i];\n\t\tvar shape2 = shape[i + 1];\n\t\tnode.get_data().point = new hxDaedalus_data_math_Point2D(shape1,shape2);\n\t\ti += 2;\n\t}\n\tvar node1;\n\tvar node2;\n\tvar subNode;\n\tvar distSqrd;\n\tvar sumDistSqrd;\n\tvar count;\n\tvar isValid;\n\tvar edge;\n\tvar edgeData;\n\tnode1 = graph.get_node();\n\twhile(node1 != null) {\n\t\tif(node1.get_next() != null) {\n\t\t\tnode2 = node1.get_next();\n\t\t} else {\n\t\t\tnode2 = graph.get_node();\n\t\t}\n\t\twhile(node2 != node1) {\n\t\t\tisValid = true;\n\t\t\tif(node1.get_next() != null) {\n\t\t\t\tsubNode = node1.get_next();\n\t\t\t} else {\n\t\t\t\tsubNode = graph.get_node();\n\t\t\t}\n\t\t\tcount = 2;\n\t\t\tsumDistSqrd = 0;\n\t\t\twhile(subNode != node2) {\n\t\t\t\tdistSqrd = hxDaedalus_data_math_Geom2D.distanceSquaredPointToSegment(subNode.get_data().point.x,subNode.get_data().point.y,node1.get_data().point.x,node1.get_data().point.y,node2.get_data().point.x,node2.get_data().point.y);\n\t\t\t\tif(distSqrd < 0) {\n\t\t\t\t\tdistSqrd = 0;\n\t\t\t\t}\n\t\t\t\tif(distSqrd >= hxDaedalus_data_math_Potrace.maxDistance) {\n\t\t\t\t\tisValid = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t++count;\n\t\t\t\tsumDistSqrd += distSqrd;\n\t\t\t\tif(subNode.get_next() != null) {\n\t\t\t\t\tsubNode = subNode.get_next();\n\t\t\t\t} else {\n\t\t\t\t\tsubNode = graph.get_node();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!isValid) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tedge = graph.insertEdge(node1,node2);\n\t\t\tedgeData = new hxDaedalus_data_math_EdgeData();\n\t\t\tedgeData.sumDistancesSquared = sumDistSqrd;\n\t\t\tedgeData.length = node1.get_data().point.distanceTo(node2.get_data().point);\n\t\t\tedgeData.nodesCount = count;\n\t\t\tedge.set_data(edgeData);\n\t\t\tif(node2.get_next() != null) {\n\t\t\t\tnode2 = node2.get_next();\n\t\t\t} else {\n\t\t\t\tnode2 = graph.get_node();\n\t\t\t}\n\t\t}\n\t\tnode1 = node1.get_next();\n\t}\n\treturn graph;\n};\nhxDaedalus_data_math_Potrace.buildPolygon = function(graph,debugShape) {\n\tvar polygon = [];\n\tvar currNode;\n\tvar minNodeIndex = 2147483647;\n\tvar edge;\n\tvar score;\n\tvar higherScore;\n\tvar lowerScoreEdge = null;\n\tcurrNode = graph.get_node();\n\twhile(currNode.get_data().index < minNodeIndex) {\n\t\tminNodeIndex = currNode.get_data().index;\n\t\tpolygon.push(currNode.get_data().point.x);\n\t\tpolygon.push(currNode.get_data().point.y);\n\t\thigherScore = 0;\n\t\tedge = currNode.get_outgoingEdge();\n\t\twhile(edge != null) {\n\t\t\tscore = edge.get_data().nodesCount - edge.get_data().length * Math.sqrt(edge.get_data().sumDistancesSquared / edge.get_data().nodesCount);\n\t\t\tif(score > higherScore) {\n\t\t\t\thigherScore = score;\n\t\t\t\tlowerScoreEdge = edge;\n\t\t\t}\n\t\t\tedge = edge.get_rotNextEdge();\n\t\t}\n\t\tcurrNode = lowerScoreEdge.get_destinationNode();\n\t}\n\tif(hxDaedalus_data_math_Geom2D.getDirection(polygon[polygon.length - 2],polygon[polygon.length - 1],polygon[0],polygon[1],polygon[2],polygon[3]) == 0) {\n\t\tpolygon.shift();\n\t\tpolygon.shift();\n\t}\n\tif(debugShape != null) {\n\t\tdebugShape.graphics.lineStyle(0.5,255);\n\t\tdebugShape.graphics.moveTo(polygon[0],polygon[1]);\n\t\tvar i = 2;\n\t\twhile(i < polygon.length) {\n\t\t\tdebugShape.graphics.lineTo(polygon[i],polygon[i + 1]);\n\t\t\ti += 2;\n\t\t}\n\t\tdebugShape.graphics.lineTo(polygon[0],polygon[1]);\n\t}\n\treturn polygon;\n};\nhxDaedalus_data_math_Potrace.prototype = {\n\t__class__: hxDaedalus_data_math_Potrace\n};\nvar hxDaedalus_data_math_RandGenerator = $hx_exports[\"hxDaedalus\"][\"data\"][\"math\"][\"RandGenerator\"] = function(seed,rangeMin_,rangeMax_) {\n\tif(rangeMax_ == null) {\n\t\trangeMax_ = 1;\n\t}\n\tif(rangeMin_ == null) {\n\t\trangeMin_ = 0;\n\t}\n\tif(seed == null) {\n\t\tseed = 1234;\n\t}\n\tthis._originalSeed = this._currSeed = seed;\n\tthis.rangeMin = rangeMin_;\n\tthis.rangeMax = rangeMax_;\n\tthis._numIter = 0;\n};\nhxDaedalus_data_math_RandGenerator.__name__ = true;\nhxDaedalus_data_math_RandGenerator.prototype = {\n\tset_seed: function(value) {\n\t\tthis._originalSeed = this._currSeed = value;\n\t\treturn value;\n\t}\n\t,get_seed: function() {\n\t\treturn this._originalSeed;\n\t}\n\t,reset: function() {\n\t\tthis._currSeed = this._originalSeed;\n\t\tthis._numIter = 0;\n\t}\n\t,next: function() {\n\t\tvar _floatSeed = this._currSeed * 1.0;\n\t\tthis._tempString = Std.string(_floatSeed * _floatSeed);\n\t\twhile(this._tempString.length < 8) this._tempString = \"0\" + this._tempString;\n\t\tthis._currSeed = Std.parseInt(HxOverrides.substr(this._tempString,1,5));\n\t\tvar res = Math.round(this.rangeMin + this._currSeed / 99999 * (this.rangeMax - this.rangeMin));\n\t\tif(this._currSeed == 0) {\n\t\t\tthis._currSeed = this._originalSeed + this._numIter;\n\t\t}\n\t\tthis._numIter++;\n\t\tif(this._numIter == 200) {\n\t\t\tthis.reset();\n\t\t}\n\t\treturn res;\n\t}\n\t,nextInRange: function(rangeMin,rangeMax) {\n\t\tthis.rangeMin = rangeMin;\n\t\tthis.rangeMax = rangeMax;\n\t\treturn this.next();\n\t}\n\t,shuffle: function(array) {\n\t\tvar currIdx = array.length;\n\t\twhile(currIdx > 0) {\n\t\t\tvar rndIdx = this.nextInRange(0,currIdx - 1);\n\t\t\t--currIdx;\n\t\t\tvar tmp = array[currIdx];\n\t\t\tarray[currIdx] = array[rndIdx];\n\t\t\tarray[rndIdx] = tmp;\n\t\t}\n\t}\n\t,__class__: hxDaedalus_data_math_RandGenerator\n};\nvar hxDaedalus_data_math_ShapeSimplifier = $hx_exports[\"hxDaedalus\"][\"data\"][\"math\"][\"ShapeSimplifier\"] = function() { };\nhxDaedalus_data_math_ShapeSimplifier.__name__ = true;\nhxDaedalus_data_math_ShapeSimplifier.simplify = function(coords,epsilon) {\n\tif(epsilon == null) {\n\t\tepsilon = 1;\n\t}\n\tvar len = coords.length;\n\tif(len <= 4 || epsilon < 1) {\n\t\treturn [].concat(coords);\n\t}\n\tvar firstPointX = coords[0];\n\tvar firstPointY = coords[1];\n\tvar lastPointX = coords[len - 2];\n\tvar lastPointY = coords[len - 1];\n\tvar index = -1;\n\tvar dist = 0.;\n\tvar _g1 = 1;\n\tvar _g = len >> 1;\n\twhile(_g1 < _g) {\n\t\tvar i = _g1++;\n\t\tvar currDist = hxDaedalus_data_math_Geom2D.distanceSquaredPointToSegment(coords[i << 1],coords[(i << 1) + 1],firstPointX,firstPointY,lastPointX,lastPointY);\n\t\tif(currDist > dist) {\n\t\t\tdist = currDist;\n\t\t\tindex = i;\n\t\t}\n\t}\n\tif(dist > epsilon * epsilon) {\n\t\tvar l1 = coords.slice(0,(index << 1) + 2);\n\t\tvar l2 = coords.slice(index << 1);\n\t\tvar r1 = hxDaedalus_data_math_ShapeSimplifier.simplify(l1,epsilon);\n\t\tvar r2 = hxDaedalus_data_math_ShapeSimplifier.simplify(l2,epsilon);\n\t\tvar rs = r1.slice(0,r1.length - 2).concat(r2);\n\t\treturn rs;\n\t} else {\n\t\treturn [firstPointX,firstPointY,lastPointX,lastPointY];\n\t}\n};\nvar hxDaedalus_data_math_Tools = $hx_exports[\"hxDaedalus\"][\"data\"][\"math\"][\"Tools\"] = function() { };\nhxDaedalus_data_math_Tools.__name__ = true;\nhxDaedalus_data_math_Tools.extractMeshFromBitmap = function(pixels,vertices,triangles) {\n\tvar shapes = hxDaedalus_data_math_Potrace.buildShapes(pixels);\n\treturn hxDaedalus_data_math_Tools.extractMeshFromShapes(shapes,pixels.width,pixels.height,vertices,triangles);\n};\nhxDaedalus_data_math_Tools.extractMeshFromShapes = function(shapes,width,height,vertices,triangles,invertWinding) {\n\tif(invertWinding == null) {\n\t\tinvertWinding = false;\n\t}\n\tvar graphs = [];\n\tvar _g1 = 0;\n\tvar _g = shapes.length;\n\twhile(_g1 < _g) {\n\t\tvar i = _g1++;\n\t\tgraphs.push(hxDaedalus_data_math_Potrace.buildGraph(shapes[i]));\n\t}\n\tvar polygons = [];\n\tvar _g11 = 0;\n\tvar _g2 = graphs.length;\n\twhile(_g11 < _g2) {\n\t\tvar i1 = _g11++;\n\t\tpolygons.push(hxDaedalus_data_math_Potrace.buildPolygon(graphs[i1]));\n\t}\n\tvar mesh = hxDaedalus_factories_RectMesh.buildRectangle(width,height);\n\tvar edges = [];\n\tvar segment;\n\tvar _g12 = 0;\n\tvar _g3 = polygons.length;\n\twhile(_g12 < _g3) {\n\t\tvar i2 = _g12++;\n\t\tvar j = 0;\n\t\twhile(j < polygons[i2].length - 2) {\n\t\t\tsegment = mesh.insertConstraintSegment(polygons[i2][j],polygons[i2][j + 1],polygons[i2][j + 2],polygons[i2][j + 3]);\n\t\t\tif(j == 0) {\n\t\t\t\tif(segment.get_edges()[0].get_originVertex().get_pos().x == polygons[i2][j] && segment.get_edges()[0].get_originVertex().get_pos().y == polygons[i2][j + 1]) {\n\t\t\t\t\tif(!invertWinding) {\n\t\t\t\t\t\tedges.push(segment.get_edges()[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tedges.push(segment.get_edges()[0].get_oppositeEdge());\n\t\t\t\t\t}\n\t\t\t\t} else if(!invertWinding) {\n\t\t\t\t\tedges.push(segment.get_edges()[0].get_oppositeEdge());\n\t\t\t\t} else {\n\t\t\t\t\tedges.push(segment.get_edges()[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tj += 2;\n\t\t}\n\t\tmesh.insertConstraintSegment(polygons[i2][0],polygons[i2][1],polygons[i2][j],polygons[i2][j + 1]);\n\t}\n\tvar indicesDict = new haxe_ds_ObjectMap();\n\tvar vertex;\n\tvar point;\n\tvar _g13 = 0;\n\tvar _g4 = mesh._vertices.length;\n\twhile(_g13 < _g4) {\n\t\tvar i3 = _g13++;\n\t\tvertex = mesh._vertices[i3];\n\t\tif(vertex.get_isReal() && vertex.get_pos().x > 0 && vertex.get_pos().x < width && vertex.get_pos().y > 0 && vertex.get_pos().y < height) {\n\t\t\tpoint = new hxDaedalus_data_math_Point2D(vertex.get_pos().x,vertex.get_pos().y);\n\t\t\tvertices.push(point);\n\t\t\tvar v = vertices.length - 1;\n\t\t\tindicesDict.set(vertex,v);\n\t\t}\n\t}\n\tvar facesDone = new haxe_ds_ObjectMap();\n\tvar openFacesList = [];\n\tvar _g14 = 0;\n\tvar _g5 = edges.length;\n\twhile(_g14 < _g5) {\n\t\tvar i4 = _g14++;\n\t\topenFacesList.push(edges[i4].get_rightFace());\n\t}\n\tvar currFace;\n\twhile(openFacesList.length > 0) {\n\t\tcurrFace = openFacesList.pop();\n\t\tif(facesDone.h[currFace.__id__]) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar key = currFace.get_edge().get_originVertex();\n\t\ttriangles.push(indicesDict.h[key.__id__]);\n\t\tvar key1 = currFace.get_edge().get_nextLeftEdge().get_originVertex();\n\t\ttriangles.push(indicesDict.h[key1.__id__]);\n\t\tvar key2 = currFace.get_edge().get_nextLeftEdge().get_destinationVertex();\n\t\ttriangles.push(indicesDict.h[key2.__id__]);\n\t\tif(!currFace.get_edge().get_isConstrained()) {\n\t\t\topenFacesList.push(currFace.get_edge().get_rightFace());\n\t\t}\n\t\tif(!currFace.get_edge().get_nextLeftEdge().get_isConstrained()) {\n\t\t\topenFacesList.push(currFace.get_edge().get_nextLeftEdge().get_rightFace());\n\t\t}\n\t\tif(!currFace.get_edge().get_prevLeftEdge().get_isConstrained()) {\n\t\t\topenFacesList.push(currFace.get_edge().get_prevLeftEdge().get_rightFace());\n\t\t}\n\t\tfacesDone.set(currFace,true);\n\t}\n\treturn mesh;\n};\nvar hxDaedalus_debug_Debug = function() { };\nhxDaedalus_debug_Debug.__name__ = true;\nhxDaedalus_debug_Debug.assertTrue = function(cond,message,pos) {\n\treturn;\n};\nhxDaedalus_debug_Debug.assertFalse = function(cond,message,pos) {\n\treturn;\n};\nhxDaedalus_debug_Debug.assertEquals = function(expected,actual,message,pos) {\n\treturn;\n};\nhxDaedalus_debug_Debug.trace = function(value,pos) {\n\treturn;\n};\nvar hxDaedalus_factories_BitmapMesh = $hx_exports[\"hxDaedalus\"][\"factories\"][\"BitmapMesh\"] = function() {\n};\nhxDaedalus_factories_BitmapMesh.__name__ = true;\nhxDaedalus_factories_BitmapMesh.buildFromBmpData = function(bmpData,debugBmp,debugShape) {\n\tvar i;\n\tvar j;\n\tvar shapes = hxDaedalus_data_math_Potrace.buildShapes(bmpData,debugBmp,debugShape);\n\tvar graphs = [];\n\tvar _g1 = 0;\n\tvar _g = shapes.length;\n\twhile(_g1 < _g) {\n\t\tvar i1 = _g1++;\n\t\tgraphs.push(hxDaedalus_data_math_Potrace.buildGraph(shapes[i1]));\n\t}\n\tvar polygons = [];\n\tvar _g11 = 0;\n\tvar _g2 = graphs.length;\n\twhile(_g11 < _g2) {\n\t\tvar i2 = _g11++;\n\t\tpolygons.push(hxDaedalus_data_math_Potrace.buildPolygon(graphs[i2],debugShape));\n\t}\n\tvar mesh = hxDaedalus_factories_RectMesh.buildRectangle(bmpData.width,bmpData.height);\n\tvar _g12 = 0;\n\tvar _g3 = polygons.length;\n\twhile(_g12 < _g3) {\n\t\tvar i3 = _g12++;\n\t\tj = 0;\n\t\twhile(j < polygons[i3].length - 2) {\n\t\t\tmesh.insertConstraintSegment(polygons[i3][j],polygons[i3][j + 1],polygons[i3][j + 2],polygons[i3][j + 3]);\n\t\t\tj += 2;\n\t\t}\n\t\tmesh.insertConstraintSegment(polygons[i3][0],polygons[i3][1],polygons[i3][j],polygons[i3][j + 1]);\n\t}\n\treturn mesh;\n};\nhxDaedalus_factories_BitmapMesh.prototype = {\n\t__class__: hxDaedalus_factories_BitmapMesh\n};\nvar hxDaedalus_factories_BitmapObject = $hx_exports[\"hxDaedalus\"][\"factories\"][\"BitmapObject\"] = function() {\n};\nhxDaedalus_factories_BitmapObject.__name__ = true;\nhxDaedalus_factories_BitmapObject.buildFromBmpData = function(bmpData,simplificationEpsilon,debugBmp,debugShape) {\n\tif(simplificationEpsilon == null) {\n\t\tsimplificationEpsilon = 1;\n\t}\n\tvar i;\n\tvar j;\n\tvar cond = bmpData.width > 0 && bmpData.height > 0;\n\tvar message = \"Invalid `bmpData` size (\" + bmpData.width + \", \" + bmpData.height + \")\";\n\tvar shapes = hxDaedalus_data_math_Potrace.buildShapes(bmpData,debugBmp,debugShape);\n\tif(simplificationEpsilon >= 1) {\n\t\tvar _g1 = 0;\n\t\tvar _g = shapes.length;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i1 = _g1++;\n\t\t\tshapes[i1] = hxDaedalus_data_math_ShapeSimplifier.simplify(shapes[i1],simplificationEpsilon);\n\t\t}\n\t}\n\tvar graphs = [];\n\tvar _g11 = 0;\n\tvar _g2 = shapes.length;\n\twhile(_g11 < _g2) {\n\t\tvar i2 = _g11++;\n\t\tgraphs.push(hxDaedalus_data_math_Potrace.buildGraph(shapes[i2]));\n\t}\n\tvar polygons = [];\n\tvar _g12 = 0;\n\tvar _g3 = graphs.length;\n\twhile(_g12 < _g3) {\n\t\tvar i3 = _g12++;\n\t\tpolygons.push(hxDaedalus_data_math_Potrace.buildPolygon(graphs[i3],debugShape));\n\t}\n\tvar obj = new hxDaedalus_data_Object();\n\tvar _g13 = 0;\n\tvar _g4 = polygons.length;\n\twhile(_g13 < _g4) {\n\t\tvar i4 = _g13++;\n\t\tj = 0;\n\t\twhile(j < polygons[i4].length - 2) {\n\t\t\tobj.get_coordinates().push(polygons[i4][j]);\n\t\t\tobj.get_coordinates().push(polygons[i4][j + 1]);\n\t\t\tobj.get_coordinates().push(polygons[i4][j + 2]);\n\t\t\tobj.get_coordinates().push(polygons[i4][j + 3]);\n\t\t\tj += 2;\n\t\t}\n\t\tobj.get_coordinates().push(polygons[i4][0]);\n\t\tobj.get_coordinates().push(polygons[i4][1]);\n\t\tobj.get_coordinates().push(polygons[i4][j]);\n\t\tobj.get_coordinates().push(polygons[i4][j + 1]);\n\t}\n\treturn obj;\n};\nhxDaedalus_factories_BitmapObject.prototype = {\n\t__class__: hxDaedalus_factories_BitmapObject\n};\nvar hxDaedalus_factories_RectMesh = $hx_exports[\"hxDaedalus\"][\"factories\"][\"RectMesh\"] = function() {\n};\nhxDaedalus_factories_RectMesh.__name__ = true;\nhxDaedalus_factories_RectMesh.buildRectangle = function(width,height) {\n\tvar vTL = new hxDaedalus_data_Vertex();\n\tvar vTR = new hxDaedalus_data_Vertex();\n\tvar vBR = new hxDaedalus_data_Vertex();\n\tvar vBL = new hxDaedalus_data_Vertex();\n\tvar eTL_TR = new hxDaedalus_data_Edge();\n\tvar eTR_TL = new hxDaedalus_data_Edge();\n\tvar eTR_BR = new hxDaedalus_data_Edge();\n\tvar eBR_TR = new hxDaedalus_data_Edge();\n\tvar eBR_BL = new hxDaedalus_data_Edge();\n\tvar eBL_BR = new hxDaedalus_data_Edge();\n\tvar eBL_TL = new hxDaedalus_data_Edge();\n\tvar eTL_BL = new hxDaedalus_data_Edge();\n\tvar eTR_BL = new hxDaedalus_data_Edge();\n\tvar eBL_TR = new hxDaedalus_data_Edge();\n\tvar eTL_BR = new hxDaedalus_data_Edge();\n\tvar eBR_TL = new hxDaedalus_data_Edge();\n\tvar fTL_BL_TR = new hxDaedalus_data_Face();\n\tvar fTR_BL_BR = new hxDaedalus_data_Face();\n\tvar fTL_BR_BL = new hxDaedalus_data_Face();\n\tvar fTL_TR_BR = new hxDaedalus_data_Face();\n\tvar boundShape = new hxDaedalus_data_ConstraintShape();\n\tvar segTop = new hxDaedalus_data_ConstraintSegment();\n\tvar segRight = new hxDaedalus_data_ConstraintSegment();\n\tvar segBot = new hxDaedalus_data_ConstraintSegment();\n\tvar segLeft = new hxDaedalus_data_ConstraintSegment();\n\tvar mesh = new hxDaedalus_data_Mesh(width,height);\n\tvar offset = 10.;\n\tvTL.get_pos().setXY(0 - offset,0 - offset);\n\tvTR.get_pos().setXY(width + offset,0 - offset);\n\tvBR.get_pos().setXY(width + offset,height + offset);\n\tvBL.get_pos().setXY(0 - offset,height + offset);\n\tvTL.setDatas(eTL_TR);\n\tvTR.setDatas(eTR_BR);\n\tvBR.setDatas(eBR_BL);\n\tvBL.setDatas(eBL_TL);\n\teTL_TR.setDatas(vTL,eTR_TL,eTR_BR,fTL_TR_BR,true,true);\n\teTR_TL.setDatas(vTR,eTL_TR,eTL_BL,fTL_BL_TR,true,true);\n\teTR_BR.setDatas(vTR,eBR_TR,eBR_TL,fTL_TR_BR,true,true);\n\teBR_TR.setDatas(vBR,eTR_BR,eTR_BL,fTR_BL_BR,true,true);\n\teBR_BL.setDatas(vBR,eBL_BR,eBL_TL,fTL_BR_BL,true,true);\n\teBL_BR.setDatas(vBL,eBR_BL,eBR_TR,fTR_BL_BR,true,true);\n\teBL_TL.setDatas(vBL,eTL_BL,eTL_BR,fTL_BR_BL,true,true);\n\teTL_BL.setDatas(vTL,eBL_TL,eBL_TR,fTL_BL_TR,true,true);\n\teTR_BL.setDatas(vTR,eBL_TR,eBL_BR,fTR_BL_BR,true,false);\n\teBL_TR.setDatas(vBL,eTR_BL,eTR_TL,fTL_BL_TR,true,false);\n\teTL_BR.setDatas(vTL,eBR_TL,eBR_BL,fTL_BR_BL,false,false);\n\teBR_TL.setDatas(vBR,eTL_BR,eTL_TR,fTL_TR_BR,false,false);\n\tfTL_BL_TR.setDatas(eBL_TR);\n\tfTR_BL_BR.setDatas(eTR_BL);\n\tfTL_BR_BL.setDatas(eBR_BL,false);\n\tfTL_TR_BR.setDatas(eTR_BR,false);\n\tvTL.set_fromConstraintSegments([segTop,segLeft]);\n\tvTR.set_fromConstraintSegments([segTop,segRight]);\n\tvBR.set_fromConstraintSegments([segRight,segBot]);\n\tvBL.set_fromConstraintSegments([segBot,segLeft]);\n\teTL_TR.fromConstraintSegments.push(segTop);\n\teTR_TL.fromConstraintSegments.push(segTop);\n\teTR_BR.fromConstraintSegments.push(segRight);\n\teBR_TR.fromConstraintSegments.push(segRight);\n\teBR_BL.fromConstraintSegments.push(segBot);\n\teBL_BR.fromConstraintSegments.push(segBot);\n\teBL_TL.fromConstraintSegments.push(segLeft);\n\teTL_BL.fromConstraintSegments.push(segLeft);\n\tsegTop.get_edges().push(eTL_TR);\n\tsegRight.get_edges().push(eTR_BR);\n\tsegBot.get_edges().push(eBR_BL);\n\tsegLeft.get_edges().push(eBL_TL);\n\tsegTop.fromShape = boundShape;\n\tsegRight.fromShape = boundShape;\n\tsegBot.fromShape = boundShape;\n\tsegLeft.fromShape = boundShape;\n\tvar _g = 0;\n\tvar _g1 = [segTop,segRight,segBot,segLeft];\n\twhile(_g < _g1.length) {\n\t\tvar f = _g1[_g];\n\t\t++_g;\n\t\tboundShape.segments.push(f);\n\t}\n\tvar _g2 = 0;\n\tvar _g11 = [vTL,vTR,vBR,vBL];\n\twhile(_g2 < _g11.length) {\n\t\tvar f1 = _g11[_g2];\n\t\t++_g2;\n\t\tmesh._vertices.push(f1);\n\t}\n\tvar _g3 = 0;\n\tvar _g12 = [eTL_TR,eTR_TL,eTR_BR,eBR_TR,eBR_BL,eBL_BR,eBL_TL,eTL_BL,eTR_BL,eBL_TR,eTL_BR,eBR_TL];\n\twhile(_g3 < _g12.length) {\n\t\tvar f2 = _g12[_g3];\n\t\t++_g3;\n\t\tmesh._edges.push(f2);\n\t}\n\tvar _g4 = 0;\n\tvar _g13 = [fTL_BL_TR,fTR_BL_BR,fTL_BR_BL,fTL_TR_BR];\n\twhile(_g4 < _g13.length) {\n\t\tvar f3 = _g13[_g4];\n\t\t++_g4;\n\t\tmesh._faces.push(f3);\n\t}\n\tmesh.get___constraintShapes().push(boundShape);\n\tvar securityRect = [];\n\tvar _g5 = 0;\n\tvar _g14 = [0,0,width,0];\n\twhile(_g5 < _g14.length) {\n\t\tvar f4 = _g14[_g5];\n\t\t++_g5;\n\t\tsecurityRect.push(f4);\n\t}\n\tvar _g6 = 0;\n\tvar _g15 = [width,0,width,height];\n\twhile(_g6 < _g15.length) {\n\t\tvar f5 = _g15[_g6];\n\t\t++_g6;\n\t\tsecurityRect.push(f5);\n\t}\n\tvar _g7 = 0;\n\tvar _g16 = [width,height,0,height];\n\twhile(_g7 < _g16.length) {\n\t\tvar f6 = _g16[_g7];\n\t\t++_g7;\n\t\tsecurityRect.push(f6);\n\t}\n\tvar _g8 = 0;\n\tvar _g17 = [0,height,0,0];\n\twhile(_g8 < _g17.length) {\n\t\tvar f7 = _g17[_g8];\n\t\t++_g8;\n\t\tsecurityRect.push(f7);\n\t}\n\tmesh.set_clipping(false);\n\tmesh.insertConstraintShape(securityRect);\n\tmesh.set_clipping(true);\n\treturn mesh;\n};\nhxDaedalus_factories_RectMesh.prototype = {\n\t__class__: hxDaedalus_factories_RectMesh\n};\nvar hxDaedalus_iterators_FromEdgeToRotatedEdges = $hx_exports[\"hxDaedalus\"][\"iterators\"][\"FromEdgeToRotatedEdges\"] = function() {\n};\nhxDaedalus_iterators_FromEdgeToRotatedEdges.__name__ = true;\nhxDaedalus_iterators_FromEdgeToRotatedEdges.prototype = {\n\t__class__: hxDaedalus_iterators_FromEdgeToRotatedEdges\n};\nvar hxDaedalus_iterators_FromFaceToInnerEdges = $hx_exports[\"hxDaedalus\"][\"iterators\"][\"FromFaceToInnerEdges\"] = function() {\n};\nhxDaedalus_iterators_FromFaceToInnerEdges.__name__ = true;\nhxDaedalus_iterators_FromFaceToInnerEdges.prototype = {\n\tset_fromFace: function(value) {\n\t\tthis._fromFace = value;\n\t\tthis._nextEdge = this._fromFace.get_edge();\n\t\treturn value;\n\t}\n\t,next: function() {\n\t\tif(this._nextEdge != null) {\n\t\t\tthis._resultEdge = this._nextEdge;\n\t\t\tthis._nextEdge = this._nextEdge.get_nextLeftEdge();\n\t\t\tif(this._nextEdge == this._fromFace.get_edge()) {\n\t\t\t\tthis._nextEdge = null;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._resultEdge = null;\n\t\t}\n\t\treturn this._resultEdge;\n\t}\n\t,__class__: hxDaedalus_iterators_FromFaceToInnerEdges\n};\nvar hxDaedalus_iterators_FromFaceToInnerVertices = $hx_exports[\"hxDaedalus\"][\"iterators\"][\"FromFaceToInnerVertices\"] = function() {\n};\nhxDaedalus_iterators_FromFaceToInnerVertices.__name__ = true;\nhxDaedalus_iterators_FromFaceToInnerVertices.prototype = {\n\tset_fromFace: function(value) {\n\t\tthis._fromFace = value;\n\t\tthis._nextEdge = this._fromFace.get_edge();\n\t\treturn value;\n\t}\n\t,next: function() {\n\t\tif(this._nextEdge != null) {\n\t\t\tthis._resultVertex = this._nextEdge.get_originVertex();\n\t\t\tthis._nextEdge = this._nextEdge.get_nextLeftEdge();\n\t\t\tif(this._nextEdge == this._fromFace.get_edge()) {\n\t\t\t\tthis._nextEdge = null;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._resultVertex = null;\n\t\t}\n\t\treturn this._resultVertex;\n\t}\n\t,__class__: hxDaedalus_iterators_FromFaceToInnerVertices\n};\nvar hxDaedalus_iterators_FromFaceToNeighbourFaces = $hx_exports[\"hxDaedalus\"][\"iterators\"][\"FromFaceToNeighbourFaces\"] = function() {\n};\nhxDaedalus_iterators_FromFaceToNeighbourFaces.__name__ = true;\nhxDaedalus_iterators_FromFaceToNeighbourFaces.prototype = {\n\tset_fromFace: function(value) {\n\t\tthis._fromFace = value;\n\t\tthis._nextEdge = this._fromFace.get_edge();\n\t\treturn value;\n\t}\n\t,next: function() {\n\t\tif(this._nextEdge != null) {\n\t\t\twhile(true) {\n\t\t\t\tthis._resultFace = this._nextEdge.get_rightFace();\n\t\t\t\tthis._nextEdge = this._nextEdge.get_nextLeftEdge();\n\t\t\t\tif(this._nextEdge == this._fromFace.get_edge()) {\n\t\t\t\t\tthis._nextEdge = null;\n\t\t\t\t\tif(!this._resultFace.get_isReal()) {\n\t\t\t\t\t\tthis._resultFace = null;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(!(!this._resultFace.get_isReal())) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis._resultFace = null;\n\t\t}\n\t\treturn this._resultFace;\n\t}\n\t,__class__: hxDaedalus_iterators_FromFaceToNeighbourFaces\n};\nvar hxDaedalus_iterators_FromMeshToFaces = $hx_exports[\"hxDaedalus\"][\"iterators\"][\"FromMeshToFaces\"] = function() {\n};\nhxDaedalus_iterators_FromMeshToFaces.__name__ = true;\nhxDaedalus_iterators_FromMeshToFaces.prototype = {\n\tset_fromMesh: function(value) {\n\t\tthis._fromMesh = value;\n\t\tthis._currIndex = 0;\n\t\treturn value;\n\t}\n\t,next: function() {\n\t\twhile(true) {\n\t\t\tif(this._currIndex < this._fromMesh._faces.length) {\n\t\t\t\tthis._resultFace = this._fromMesh._faces[this._currIndex];\n\t\t\t\tthis._currIndex++;\n\t\t\t} else {\n\t\t\t\tthis._resultFace = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(!(!this._resultFace.get_isReal())) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn this._resultFace;\n\t}\n\t,__class__: hxDaedalus_iterators_FromMeshToFaces\n};\nvar hxDaedalus_iterators_FromMeshToVertices = $hx_exports[\"hxDaedalus\"][\"iterators\"][\"FromMeshToVertices\"] = function() {\n};\nhxDaedalus_iterators_FromMeshToVertices.__name__ = true;\nhxDaedalus_iterators_FromMeshToVertices.prototype = {\n\tset_fromMesh: function(value) {\n\t\tthis._fromMesh = value;\n\t\tthis._currIndex = 0;\n\t\treturn value;\n\t}\n\t,next: function() {\n\t\twhile(true) {\n\t\t\tif(this._currIndex < this._fromMesh._vertices.length) {\n\t\t\t\tthis._resultVertex = this._fromMesh._vertices[this._currIndex];\n\t\t\t\tthis._currIndex++;\n\t\t\t} else {\n\t\t\t\tthis._resultVertex = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(!(!this._resultVertex.get_isReal())) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn this._resultVertex;\n\t}\n\t,__class__: hxDaedalus_iterators_FromMeshToVertices\n};\nvar hxDaedalus_iterators_FromVertexToHoldingFaces = $hx_exports[\"hxDaedalus\"][\"iterators\"][\"FromVertexToHoldingFaces\"] = function() {\n};\nhxDaedalus_iterators_FromVertexToHoldingFaces.__name__ = true;\nhxDaedalus_iterators_FromVertexToHoldingFaces.prototype = {\n\tset_fromVertex: function(value) {\n\t\tthis._fromVertex = value;\n\t\tthis._nextEdge = this._fromVertex.get_edge();\n\t\treturn value;\n\t}\n\t,next: function() {\n\t\tif(this._nextEdge != null) {\n\t\t\twhile(true) {\n\t\t\t\tthis._resultFace = this._nextEdge.get_leftFace();\n\t\t\t\tthis._nextEdge = this._nextEdge.get_rotLeftEdge();\n\t\t\t\tif(this._nextEdge == this._fromVertex.get_edge()) {\n\t\t\t\t\tthis._nextEdge = null;\n\t\t\t\t\tif(!this._resultFace.get_isReal()) {\n\t\t\t\t\t\tthis._resultFace = null;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(!(!this._resultFace.get_isReal())) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis._resultFace = null;\n\t\t}\n\t\treturn this._resultFace;\n\t}\n\t,__class__: hxDaedalus_iterators_FromVertexToHoldingFaces\n};\nvar hxDaedalus_iterators_FromVertexToIncomingEdges = $hx_exports[\"hxDaedalus\"][\"iterators\"][\"FromVertexToIncomingEdges\"] = function() {\n};\nhxDaedalus_iterators_FromVertexToIncomingEdges.__name__ = true;\nhxDaedalus_iterators_FromVertexToIncomingEdges.prototype = {\n\tset_fromVertex: function(value) {\n\t\tthis._fromVertex = value;\n\t\tthis._nextEdge = this._fromVertex.get_edge();\n\t\twhile(!this._nextEdge.get_isReal()) this._nextEdge = this._nextEdge.get_rotLeftEdge();\n\t\treturn value;\n\t}\n\t,next: function() {\n\t\tif(this._nextEdge != null) {\n\t\t\tthis._resultEdge = this._nextEdge.get_oppositeEdge();\n\t\t\twhile(true) {\n\t\t\t\tthis._nextEdge = this._nextEdge.get_rotLeftEdge();\n\t\t\t\tif(this._nextEdge == this._fromVertex.get_edge()) {\n\t\t\t\t\tthis._nextEdge = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(!(!this._nextEdge.get_isReal())) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis._resultEdge = null;\n\t\t}\n\t\treturn this._resultEdge;\n\t}\n\t,__class__: hxDaedalus_iterators_FromVertexToIncomingEdges\n};\nvar hxDaedalus_iterators_FromVertexToNeighbourVertices = $hx_exports[\"hxDaedalus\"][\"iterators\"][\"FromVertexToNeighbourVertices\"] = function() {\n};\nhxDaedalus_iterators_FromVertexToNeighbourVertices.__name__ = true;\nhxDaedalus_iterators_FromVertexToNeighbourVertices.prototype = {\n\tset_fromVertex: function(value) {\n\t\tthis._fromVertex = value;\n\t\tthis._nextEdge = this._fromVertex.get_edge();\n\t\treturn value;\n\t}\n\t,next: function() {\n\t\tif(this._nextEdge != null) {\n\t\t\tthis._resultVertex = this._nextEdge.get_oppositeEdge().get_originVertex();\n\t\t\twhile(true) {\n\t\t\t\tthis._nextEdge = this._nextEdge.get_rotLeftEdge();\n\t\t\t\tif(!(!this._nextEdge.get_isReal())) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(this._nextEdge == this._fromVertex.get_edge()) {\n\t\t\t\tthis._nextEdge = null;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._resultVertex = null;\n\t\t}\n\t\treturn this._resultVertex;\n\t}\n\t,__class__: hxDaedalus_iterators_FromVertexToNeighbourVertices\n};\nvar hxDaedalus_iterators_FromVertexToOutgoingEdges = $hx_exports[\"hxDaedalus\"][\"iterators\"][\"FromVertexToOutgoingEdges\"] = function() {\n\tthis.realEdgesOnly = true;\n};\nhxDaedalus_iterators_FromVertexToOutgoingEdges.__name__ = true;\nhxDaedalus_iterators_FromVertexToOutgoingEdges.prototype = {\n\tset_fromVertex: function(value) {\n\t\tthis._fromVertex = value;\n\t\tthis._nextEdge = this._fromVertex.get_edge();\n\t\twhile(this.realEdgesOnly && !this._nextEdge.get_isReal()) this._nextEdge = this._nextEdge.get_rotLeftEdge();\n\t\treturn value;\n\t}\n\t,next: function() {\n\t\tif(this._nextEdge != null) {\n\t\t\tthis._resultEdge = this._nextEdge;\n\t\t\twhile(true) {\n\t\t\t\tthis._nextEdge = this._nextEdge.get_rotLeftEdge();\n\t\t\t\tif(this._nextEdge == this._fromVertex.get_edge()) {\n\t\t\t\t\tthis._nextEdge = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(!(this.realEdgesOnly && !this._nextEdge.get_isReal())) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis._resultEdge = null;\n\t\t}\n\t\treturn this._resultEdge;\n\t}\n\t,__class__: hxDaedalus_iterators_FromVertexToOutgoingEdges\n};\nvar hxDaedalus_view_SimpleView = $hx_exports[\"hxDaedalus\"][\"view\"][\"SimpleView\"] = function(targetCanvas) {\n\tthis.faceToEdgeIter = new hxDaedalus_iterators_FromFaceToInnerEdges();\n\tthis.faceAlpha = .5;\n\tthis.faceWidth = 1;\n\tthis.faceColor = 16711935;\n\tthis.entitiesAlpha = .75;\n\tthis.entitiesWidth = 1;\n\tthis.entitiesColor = 65280;\n\tthis.pathsAlpha = .75;\n\tthis.pathsWidth = 1.5;\n\tthis.pathsColor = 16760848;\n\tthis.verticesAlpha = .25;\n\tthis.verticesRadius = .5;\n\tthis.verticesColor = 255;\n\tthis.constraintsAlpha = 1.0;\n\tthis.constraintsWidth = 2;\n\tthis.constraintsColor = 16711680;\n\tthis.edgesAlpha = .25;\n\tthis.edgesWidth = 1;\n\tthis.edgesColor = 10066329;\n\tthis.graphics = new wings_jsCanvas_SimpleDrawingContext(targetCanvas);\n};\nhxDaedalus_view_SimpleView.__name__ = true;\nhxDaedalus_view_SimpleView.prototype = {\n\tdrawVertex: function(vertex) {\n\t\tthis.graphics.graphics.lineStyle(this.verticesRadius,this.verticesColor,this.verticesAlpha);\n\t\tthis.graphics.graphics.beginFill(this.verticesColor,this.verticesAlpha);\n\t\tvar _this = this.graphics;\n\t\tvar cx = vertex.get_pos().x;\n\t\tvar cy = vertex.get_pos().y;\n\t\t_this.graphics.drawCircle(cx,cy,this.verticesRadius);\n\t\tthis.graphics.graphics.endFill();\n\t}\n\t,drawFace: function(face) {\n\t\tthis.faceToEdgeIter.set_fromFace(face);\n\t\tthis.graphics.graphics.beginFill(this.faceColor,this.faceAlpha);\n\t\tthis.graphics.graphics.lineStyle(this.faceWidth,this.faceColor,this.faceAlpha);\n\t\tvar count = 0;\n\t\tvar edge;\n\t\twhile(true) {\n\t\t\tedge = this.faceToEdgeIter.next();\n\t\t\tif(edge == null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(count == 0) {\n\t\t\t\tvar _this = this.graphics;\n\t\t\t\tvar x = edge.get_originVertex().get_pos().x;\n\t\t\t\tvar y = edge.get_originVertex().get_pos().y;\n\t\t\t\t_this.graphics.moveTo(x,y);\n\t\t\t}\n\t\t\tvar _this1 = this.graphics;\n\t\t\tvar x1 = edge.get_destinationVertex().get_pos().x;\n\t\t\tvar y1 = edge.get_destinationVertex().get_pos().y;\n\t\t\t_this1.graphics.lineTo(x1,y1);\n\t\t\t++count;\n\t\t}\n\t\tthis.graphics.graphics.endFill();\n\t}\n\t,drawEdge: function(edge) {\n\t\tif(edge.get_isConstrained()) {\n\t\t\tthis.graphics.graphics.lineStyle(this.constraintsWidth,this.constraintsColor,this.constraintsAlpha);\n\t\t\tvar _this = this.graphics;\n\t\t\tvar x = edge.get_originVertex().get_pos().x;\n\t\t\tvar y = edge.get_originVertex().get_pos().y;\n\t\t\t_this.graphics.moveTo(x,y);\n\t\t\tvar _this1 = this.graphics;\n\t\t\tvar x1 = edge.get_destinationVertex().get_pos().x;\n\t\t\tvar y1 = edge.get_destinationVertex().get_pos().y;\n\t\t\t_this1.graphics.lineTo(x1,y1);\n\t\t} else {\n\t\t\tthis.graphics.graphics.lineStyle(this.edgesWidth,this.edgesColor,this.edgesAlpha);\n\t\t\tvar _this2 = this.graphics;\n\t\t\tvar x2 = edge.get_originVertex().get_pos().x;\n\t\t\tvar y2 = edge.get_originVertex().get_pos().y;\n\t\t\t_this2.graphics.moveTo(x2,y2);\n\t\t\tvar _this3 = this.graphics;\n\t\t\tvar x3 = edge.get_destinationVertex().get_pos().x;\n\t\t\tvar y3 = edge.get_destinationVertex().get_pos().y;\n\t\t\t_this3.graphics.lineTo(x3,y3);\n\t\t}\n\t}\n\t,drawMesh: function(mesh,cleanBefore) {\n\t\tif(cleanBefore == null) {\n\t\t\tcleanBefore = false;\n\t\t}\n\t\tif(cleanBefore) {\n\t\t\tthis.graphics.graphics.clear();\n\t\t}\n\t\tvar all = mesh.getVerticesAndEdges();\n\t\tvar _g = 0;\n\t\tvar _g1 = all.vertices;\n\t\twhile(_g < _g1.length) {\n\t\t\tvar v = _g1[_g];\n\t\t\t++_g;\n\t\t\tthis.drawVertex(v);\n\t\t}\n\t\tvar _g2 = 0;\n\t\tvar _g11 = all.edges;\n\t\twhile(_g2 < _g11.length) {\n\t\t\tvar e = _g11[_g2];\n\t\t\t++_g2;\n\t\t\tthis.drawEdge(e);\n\t\t}\n\t}\n\t,drawEntity: function(entity,cleanBefore) {\n\t\tif(cleanBefore == null) {\n\t\t\tcleanBefore = false;\n\t\t}\n\t\tif(cleanBefore) {\n\t\t\tthis.graphics.graphics.clear();\n\t\t}\n\t\tthis.graphics.graphics.lineStyle(this.entitiesWidth,this.entitiesColor,this.entitiesAlpha);\n\t\tthis.graphics.graphics.beginFill(this.entitiesColor,this.entitiesAlpha);\n\t\tvar _this = this.graphics;\n\t\tvar cx = entity.x;\n\t\tvar cy = entity.y;\n\t\tvar radius = entity.get_radius();\n\t\t_this.graphics.drawCircle(cx,cy,radius);\n\t\tthis.graphics.graphics.endFill();\n\t}\n\t,drawEntities: function(vEntities,cleanBefore) {\n\t\tif(cleanBefore == null) {\n\t\t\tcleanBefore = false;\n\t\t}\n\t\tif(cleanBefore) {\n\t\t\tthis.graphics.graphics.clear();\n\t\t}\n\t\tvar _g1 = 0;\n\t\tvar _g = vEntities.length;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i = _g1++;\n\t\t\tthis.drawEntity(vEntities[i],false);\n\t\t}\n\t}\n\t,drawPath: function(path,cleanBefore) {\n\t\tif(cleanBefore == null) {\n\t\t\tcleanBefore = false;\n\t\t}\n\t\tif(cleanBefore) {\n\t\t\tthis.graphics.graphics.clear();\n\t\t}\n\t\tif(path.length == 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis.graphics.graphics.lineStyle(this.pathsWidth,this.pathsColor,this.pathsAlpha);\n\t\tthis.graphics.graphics.moveTo(path[0],path[1]);\n\t\tvar i = 2;\n\t\twhile(i < path.length) {\n\t\t\tthis.graphics.graphics.lineTo(path[i],path[i + 1]);\n\t\t\tthis.graphics.graphics.moveTo(path[i],path[i + 1]);\n\t\t\ti += 2;\n\t\t}\n\t}\n\t,__class__: hxDaedalus_view_SimpleView\n};\nvar hxPixels__$Pixels_Pixels_$Impl_$ = $hx_exports[\"hxPixels\"][\"_Pixels\"][\"Pixels_Impl_\"] = {};\nhxPixels__$Pixels_Pixels_$Impl_$.__name__ = true;\nhxPixels__$Pixels_Pixels_$Impl_$._new = function(width,height,alloc) {\n\tif(alloc == null) {\n\t\talloc = true;\n\t}\n\tvar this1 = new hxPixels__$Pixels_PixelsData(width,height,alloc);\n\treturn this1;\n};\nhxPixels__$Pixels_Pixels_$Impl_$.getByte = function(this1,i) {\n\treturn this1.bytes.b[(i & -4) + this1.format.channelMap[i & 3]];\n};\nhxPixels__$Pixels_Pixels_$Impl_$.getPixel = function(this1,x,y) {\n\tvar pos = y * this1.width + x << 2;\n\tvar r = this1.bytes.b[pos + this1.format.ch1] << 16;\n\tvar g = this1.bytes.b[pos + this1.format.ch2] << 8;\n\tvar b = this1.bytes.b[pos + this1.format.ch3];\n\treturn r | g | b;\n};\nhxPixels__$Pixels_Pixels_$Impl_$.getPixel32 = function(this1,x,y) {\n\tvar pos = y * this1.width + x << 2;\n\tvar a = this1.bytes.b[pos + this1.format.ch0] << 24;\n\tvar r = this1.bytes.b[pos + this1.format.ch1] << 16;\n\tvar g = this1.bytes.b[pos + this1.format.ch2] << 8;\n\tvar b = this1.bytes.b[pos + this1.format.ch3];\n\treturn a | r | g | b;\n};\nhxPixels__$Pixels_Pixels_$Impl_$.setByte = function(this1,i,value) {\n\tthis1.bytes.b[(i & -4) + this1.format.channelMap[i & 3]] = value & 255;\n};\nhxPixels__$Pixels_Pixels_$Impl_$.setPixel = function(this1,x,y,value) {\n\tvar pos = y * this1.width + x << 2;\n\tvar r = value >> 16 & 255;\n\tvar g = value >> 8 & 255;\n\tvar b = value & 255;\n\tthis1.bytes.b[pos + this1.format.ch1] = r & 255;\n\tthis1.bytes.b[pos + this1.format.ch2] = g & 255;\n\tthis1.bytes.b[pos + this1.format.ch3] = b & 255;\n};\nhxPixels__$Pixels_Pixels_$Impl_$.setPixel32 = function(this1,x,y,value) {\n\tvar pos = y * this1.width + x << 2;\n\tvar a = value >> 24 & 255;\n\tvar r = value >> 16 & 255;\n\tvar g = value >> 8 & 255;\n\tvar b = value & 255;\n\tthis1.bytes.b[pos + this1.format.ch0] = a & 255;\n\tthis1.bytes.b[pos + this1.format.ch1] = r & 255;\n\tthis1.bytes.b[pos + this1.format.ch2] = g & 255;\n\tthis1.bytes.b[pos + this1.format.ch3] = b & 255;\n};\nhxPixels__$Pixels_Pixels_$Impl_$.fillRect = function(this1,x,y,width,height,value) {\n\tvar pos = y * this1.width + x << 2;\n\tvar this2 = new hxPixels__$Pixels_PixelsData(width,1,true);\n\tvar stridePixels = this2;\n\tstridePixels.format = this1.format;\n\tvar stride = width << 2;\n\tvar _g1 = 0;\n\tvar _g = width;\n\twhile(_g1 < _g) {\n\t\tvar x1 = _g1++;\n\t\thxPixels__$Pixels_Pixels_$Impl_$.setPixel32(stridePixels,x1,0,value);\n\t}\n\tvar _g11 = 0;\n\tvar _g2 = height;\n\twhile(_g11 < _g2) {\n\t\tvar y1 = _g11++;\n\t\tthis1.bytes.blit(pos,stridePixels.bytes,0,stride);\n\t\tpos += this1.width << 2;\n\t}\n};\nhxPixels__$Pixels_Pixels_$Impl_$.clone = function(this1) {\n\tvar this2 = new hxPixels__$Pixels_PixelsData(this1.width,this1.height,true);\n\tvar clone = this2;\n\tclone.bytes.blit(0,this1.bytes,0,this1.bytes.length);\n\tclone.format = this1.format;\n\treturn clone;\n};\nhxPixels__$Pixels_Pixels_$Impl_$.fromBytes = function(bytes,width,height,format) {\n\tvar this1 = new hxPixels__$Pixels_PixelsData(width,height,false);\n\tvar pixels = this1;\n\tif(format == null) {\n\t\tformat = hxPixels_PixelFormat.ARGB;\n\t}\n\tpixels.bytes = bytes;\n\treturn pixels;\n};\nhxPixels__$Pixels_Pixels_$Impl_$.convertTo = function(this1,format) {\n\treturn hxPixels__$Pixels_Pixels_$Impl_$.convert(this1,format,true);\n};\nhxPixels__$Pixels_Pixels_$Impl_$.convert = function(pixels,toFormat,inPlace) {\n\tif(inPlace == null) {\n\t\tinPlace = false;\n\t}\n\tvar res = inPlace ? pixels : hxPixels__$Pixels_Pixels_$Impl_$.clone(pixels);\n\tif(toFormat == pixels.format) {\n\t\treturn res;\n\t}\n\tvar i = 0;\n\tvar pos = 0;\n\tif(pixels.format == hxPixels_PixelFormat.BGRA && toFormat == hxPixels_PixelFormat.RGBA || pixels.format == hxPixels_PixelFormat.RGBA && toFormat == hxPixels_PixelFormat.BGRA) {\n\t\twhile(i < pixels.count) {\n\t\t\tvar i1 = pos + 1;\n\t\t\tvar r = pixels.bytes.b[(i1 & -4) + pixels.format.channelMap[i1 & 3]];\n\t\t\tvar i2 = pos + 3;\n\t\t\tvar b = pixels.bytes.b[(i2 & -4) + pixels.format.channelMap[i2 & 3]];\n\t\t\tres.bytes.b[pos + toFormat.ch1] = r & 255;\n\t\t\tres.bytes.b[pos + toFormat.ch3] = b & 255;\n\t\t\t++i;\n\t\t\tpos += 4;\n\t\t}\n\t} else {\n\t\twhile(i < pixels.count) {\n\t\t\tvar a = pixels.bytes.b[(pos & -4) + pixels.format.channelMap[pos & 3]];\n\t\t\tvar i3 = pos + 1;\n\t\t\tvar r1 = pixels.bytes.b[(i3 & -4) + pixels.format.channelMap[i3 & 3]];\n\t\t\tvar i4 = pos + 2;\n\t\t\tvar g = pixels.bytes.b[(i4 & -4) + pixels.format.channelMap[i4 & 3]];\n\t\t\tvar i5 = pos + 3;\n\t\t\tvar b1 = pixels.bytes.b[(i5 & -4) + pixels.format.channelMap[i5 & 3]];\n\t\t\tres.bytes.b[pos + toFormat.ch0] = a & 255;\n\t\t\tres.bytes.b[pos + toFormat.ch1] = r1 & 255;\n\t\t\tres.bytes.b[pos + toFormat.ch2] = g & 255;\n\t\t\tres.bytes.b[pos + toFormat.ch3] = b1 & 255;\n\t\t\t++i;\n\t\t\tpos += 4;\n\t\t}\n\t}\n\tres.format = toFormat;\n\treturn res;\n};\nhxPixels__$Pixels_Pixels_$Impl_$.fromImageData = function(image) {\n\tvar this1 = new hxPixels__$Pixels_PixelsData(image.width,image.height,true);\n\tvar pixels = this1;\n\tpixels.format = hxPixels_PixelFormat.ARGB;\n\tvar data = image.data;\n\tvar _g1 = 0;\n\tvar _g = data.byteLength;\n\twhile(_g1 < _g) {\n\t\tvar i = _g1++;\n\t\tpixels.bytes.b[i] = data[i] & 255;\n\t}\n\treturn pixels;\n};\nvar hxPixels__$Pixels_PixelsData = function(width,height,alloc,format) {\n\tif(alloc == null) {\n\t\talloc = true;\n\t}\n\tthis.count = width * height;\n\tif(alloc) {\n\t\tthis.bytes = new haxe_io_Bytes(new ArrayBuffer(this.count << 2));\n\t}\n\tthis.width = width;\n\tthis.height = height;\n\tthis.format = format != null ? format : hxPixels_PixelFormat.ARGB;\n};\nhxPixels__$Pixels_PixelsData.__name__ = true;\nhxPixels__$Pixels_PixelsData.prototype = {\n\t__class__: hxPixels__$Pixels_PixelsData\n};\nvar hxPixels_PixelFormat = $hx_exports[\"hxPixels\"][\"PixelFormat\"] = function(a,r,g,b,name) {\n\tif(name == null) {\n\t\tname = \"PixelFormat\";\n\t}\n\tthis.channelMap = [a,r,g,b];\n\tthis.ch0 = a;\n\tthis.ch1 = r;\n\tthis.ch2 = g;\n\tthis.ch3 = b;\n\tthis.name = name;\n};\nhxPixels_PixelFormat.__name__ = true;\nhxPixels_PixelFormat.prototype = {\n\tget_A: function() {\n\t\treturn this.ch0;\n\t}\n\t,get_R: function() {\n\t\treturn this.ch1;\n\t}\n\t,get_G: function() {\n\t\treturn this.ch2;\n\t}\n\t,get_B: function() {\n\t\treturn this.ch3;\n\t}\n\t,toString: function() {\n\t\treturn this.name;\n\t}\n\t,__class__: hxPixels_PixelFormat\n};\nvar hxPixels__$Pixels_Pixel_$Impl_$ = $hx_exports[\"hxPixels\"][\"_Pixels\"][\"Pixel_Impl_\"] = {};\nhxPixels__$Pixels_Pixel_$Impl_$.__name__ = true;\nhxPixels__$Pixels_Pixel_$Impl_$.get_A = function(this1) {\n\treturn this1 >> 24 & 255;\n};\nhxPixels__$Pixels_Pixel_$Impl_$.set_A = function(this1,a) {\n\ta &= 255;\n\tthis1 = this1 & 16777215 | a << 24;\n\treturn a;\n};\nhxPixels__$Pixels_Pixel_$Impl_$.get_R = function(this1) {\n\treturn this1 >> 16 & 255;\n};\nhxPixels__$Pixels_Pixel_$Impl_$.set_R = function(this1,r) {\n\tr &= 255;\n\tthis1 = this1 & -16711681 | r << 16;\n\treturn r;\n};\nhxPixels__$Pixels_Pixel_$Impl_$.get_G = function(this1) {\n\treturn this1 >> 8 & 255;\n};\nhxPixels__$Pixels_Pixel_$Impl_$.set_G = function(this1,g) {\n\tg &= 255;\n\tthis1 = this1 & -65281 | g << 8;\n\treturn g;\n};\nhxPixels__$Pixels_Pixel_$Impl_$.get_B = function(this1) {\n\treturn this1 & 255;\n};\nhxPixels__$Pixels_Pixel_$Impl_$.set_B = function(this1,b) {\n\tb &= 255;\n\tthis1 = this1 & -256 | b;\n\treturn b;\n};\nvar js__$Boot_HaxeError = function(val) {\n\tError.call(this);\n\tthis.val = val;\n\tthis.message = String(val);\n\tif(Error.captureStackTrace) {\n\t\tError.captureStackTrace(this,js__$Boot_HaxeError);\n\t}\n};\njs__$Boot_HaxeError.__name__ = true;\njs__$Boot_HaxeError.wrap = function(val) {\n\tif((val instanceof Error)) {\n\t\treturn val;\n\t} else {\n\t\treturn new js__$Boot_HaxeError(val);\n\t}\n};\njs__$Boot_HaxeError.__super__ = Error;\njs__$Boot_HaxeError.prototype = $extend(Error.prototype,{\n\t__class__: js__$Boot_HaxeError\n});\nvar js_Boot = function() { };\njs_Boot.__name__ = true;\njs_Boot.getClass = function(o) {\n\tif((o instanceof Array) && o.__enum__ == null) {\n\t\treturn Array;\n\t} else {\n\t\tvar cl = o.__class__;\n\t\tif(cl != null) {\n\t\t\treturn cl;\n\t\t}\n\t\tvar name = js_Boot.__nativeClassName(o);\n\t\tif(name != null) {\n\t\t\treturn js_Boot.__resolveNativeClass(name);\n\t\t}\n\t\treturn null;\n\t}\n};\njs_Boot.__string_rec = function(o,s) {\n\tif(o == null) {\n\t\treturn \"null\";\n\t}\n\tif(s.length >= 5) {\n\t\treturn \"<...>\";\n\t}\n\tvar t = typeof(o);\n\tif(t == \"function\" && (o.__name__ || o.__ename__)) {\n\t\tt = \"object\";\n\t}\n\tswitch(t) {\n\tcase \"function\":\n\t\treturn \"<function>\";\n\tcase \"object\":\n\t\tif(o instanceof Array) {\n\t\t\tif(o.__enum__) {\n\t\t\t\tif(o.length == 2) {\n\t\t\t\t\treturn o[0];\n\t\t\t\t}\n\t\t\t\tvar str = o[0] + \"(\";\n\t\t\t\ts += \"\\t\";\n\t\t\t\tvar _g1 = 2;\n\t\t\t\tvar _g = o.length;\n\t\t\t\twhile(_g1 < _g) {\n\t\t\t\t\tvar i = _g1++;\n\t\t\t\t\tif(i != 2) {\n\t\t\t\t\t\tstr += \",\" + js_Boot.__string_rec(o[i],s);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstr += js_Boot.__string_rec(o[i],s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn str + \")\";\n\t\t\t}\n\t\t\tvar l = o.length;\n\t\t\tvar i1;\n\t\t\tvar str1 = \"[\";\n\t\t\ts += \"\\t\";\n\t\t\tvar _g11 = 0;\n\t\t\tvar _g2 = l;\n\t\t\twhile(_g11 < _g2) {\n\t\t\t\tvar i2 = _g11++;\n\t\t\t\tstr1 += (i2 > 0 ? \",\" : \"\") + js_Boot.__string_rec(o[i2],s);\n\t\t\t}\n\t\t\tstr1 += \"]\";\n\t\t\treturn str1;\n\t\t}\n\t\tvar tostr;\n\t\ttry {\n\t\t\ttostr = o.toString;\n\t\t} catch( e ) {\n\t\t\treturn \"???\";\n\t\t}\n\t\tif(tostr != null && tostr != Object.toString && typeof(tostr) == \"function\") {\n\t\t\tvar s2 = o.toString();\n\t\t\tif(s2 != \"[object Object]\") {\n\t\t\t\treturn s2;\n\t\t\t}\n\t\t}\n\t\tvar k = null;\n\t\tvar str2 = \"{\\n\";\n\t\ts += \"\\t\";\n\t\tvar hasp = o.hasOwnProperty != null;\n\t\tfor( var k in o ) {\n\t\tif(hasp && !o.hasOwnProperty(k)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif(k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\") {\n\t\t\tcontinue;\n\t\t}\n\t\tif(str2.length != 2) {\n\t\t\tstr2 += \", \\n\";\n\t\t}\n\t\tstr2 += s + k + \" : \" + js_Boot.__string_rec(o[k],s);\n\t\t}\n\t\ts = s.substring(1);\n\t\tstr2 += \"\\n\" + s + \"}\";\n\t\treturn str2;\n\tcase \"string\":\n\t\treturn o;\n\tdefault:\n\t\treturn String(o);\n\t}\n};\njs_Boot.__interfLoop = function(cc,cl) {\n\tif(cc == null) {\n\t\treturn false;\n\t}\n\tif(cc == cl) {\n\t\treturn true;\n\t}\n\tvar intf = cc.__interfaces__;\n\tif(intf != null) {\n\t\tvar _g1 = 0;\n\t\tvar _g = intf.length;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i = _g1++;\n\t\t\tvar i1 = intf[i];\n\t\t\tif(i1 == cl || js_Boot.__interfLoop(i1,cl)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn js_Boot.__interfLoop(cc.__super__,cl);\n};\njs_Boot.__instanceof = function(o,cl) {\n\tif(cl == null) {\n\t\treturn false;\n\t}\n\tswitch(cl) {\n\tcase Array:\n\t\tif((o instanceof Array)) {\n\t\t\treturn o.__enum__ == null;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t\tbreak;\n\tcase Bool:\n\t\treturn typeof(o) == \"boolean\";\n\tcase Dynamic:\n\t\treturn true;\n\tcase Float:\n\t\treturn typeof(o) == \"number\";\n\tcase Int:\n\t\tif(typeof(o) == \"number\") {\n\t\t\treturn (o|0) === o;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t\tbreak;\n\tcase String:\n\t\treturn typeof(o) == \"string\";\n\tdefault:\n\t\tif(o != null) {\n\t\t\tif(typeof(cl) == \"function\") {\n\t\t\t\tif(o instanceof cl) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else if(typeof(cl) == \"object\" && js_Boot.__isNativeObj(cl)) {\n\t\t\t\tif(o instanceof cl) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t\tif(cl == Class ? o.__name__ != null : false) {\n\t\t\treturn true;\n\t\t}\n\t\tif(cl == Enum ? o.__ename__ != null : false) {\n\t\t\treturn true;\n\t\t}\n\t\treturn o.__enum__ == cl;\n\t}\n};\njs_Boot.__nativeClassName = function(o) {\n\tvar name = js_Boot.__toStr.call(o).slice(8,-1);\n\tif(name == \"Object\" || name == \"Function\" || name == \"Math\" || name == \"JSON\") {\n\t\treturn null;\n\t}\n\treturn name;\n};\njs_Boot.__isNativeObj = function(o) {\n\treturn js_Boot.__nativeClassName(o) != null;\n};\njs_Boot.__resolveNativeClass = function(name) {\n\treturn $global[name];\n};\nvar js_html_compat_ArrayBuffer = function(a) {\n\tif((a instanceof Array) && a.__enum__ == null) {\n\t\tthis.a = a;\n\t\tthis.byteLength = a.length;\n\t} else {\n\t\tvar len = a;\n\t\tthis.a = [];\n\t\tvar _g1 = 0;\n\t\tvar _g = len;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i = _g1++;\n\t\t\tthis.a[i] = 0;\n\t\t}\n\t\tthis.byteLength = len;\n\t}\n};\njs_html_compat_ArrayBuffer.__name__ = true;\njs_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {\n\tvar u = new Uint8Array(this,begin,end == null ? null : end - begin);\n\tvar result = new ArrayBuffer(u.byteLength);\n\tvar resultArray = new Uint8Array(result);\n\tresultArray.set(u);\n\treturn result;\n};\njs_html_compat_ArrayBuffer.prototype = {\n\tslice: function(begin,end) {\n\t\treturn new js_html_compat_ArrayBuffer(this.a.slice(begin,end));\n\t}\n\t,__class__: js_html_compat_ArrayBuffer\n};\nvar js_html_compat_Uint8Array = function() { };\njs_html_compat_Uint8Array.__name__ = true;\njs_html_compat_Uint8Array._new = function(arg1,offset,length) {\n\tvar arr;\n\tif(typeof(arg1) == \"number\") {\n\t\tarr = [];\n\t\tvar _g1 = 0;\n\t\tvar _g = arg1;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i = _g1++;\n\t\t\tarr[i] = 0;\n\t\t}\n\t\tarr.byteLength = arr.length;\n\t\tarr.byteOffset = 0;\n\t\tarr.buffer = new js_html_compat_ArrayBuffer(arr);\n\t} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {\n\t\tvar buffer = arg1;\n\t\tif(offset == null) {\n\t\t\toffset = 0;\n\t\t}\n\t\tif(length == null) {\n\t\t\tlength = buffer.byteLength - offset;\n\t\t}\n\t\tif(offset == 0) {\n\t\t\tarr = buffer.a;\n\t\t} else {\n\t\t\tarr = buffer.a.slice(offset,offset + length);\n\t\t}\n\t\tarr.byteLength = arr.length;\n\t\tarr.byteOffset = offset;\n\t\tarr.buffer = buffer;\n\t} else if((arg1 instanceof Array) && arg1.__enum__ == null) {\n\t\tarr = arg1.slice();\n\t\tarr.byteLength = arr.length;\n\t\tarr.byteOffset = 0;\n\t\tarr.buffer = new js_html_compat_ArrayBuffer(arr);\n\t} else {\n\t\tthrow new js__$Boot_HaxeError(\"TODO \" + Std.string(arg1));\n\t}\n\tarr.subarray = js_html_compat_Uint8Array._subarray;\n\tarr.set = js_html_compat_Uint8Array._set;\n\treturn arr;\n};\njs_html_compat_Uint8Array._set = function(arg,offset) {\n\tif(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {\n\t\tvar a = arg;\n\t\tif(arg.byteLength + offset > this.byteLength) {\n\t\t\tthrow new js__$Boot_HaxeError(\"set() outside of range\");\n\t\t}\n\t\tvar _g1 = 0;\n\t\tvar _g = arg.byteLength;\n\t\twhile(_g1 < _g) {\n\t\t\tvar i = _g1++;\n\t\t\tthis[i + offset] = a[i];\n\t\t}\n\t} else if((arg instanceof Array) && arg.__enum__ == null) {\n\t\tvar a1 = arg;\n\t\tif(a1.length + offset > this.byteLength) {\n\t\t\tthrow new js__$Boot_HaxeError(\"set() outside of range\");\n\t\t}\n\t\tvar _g11 = 0;\n\t\tvar _g2 = a1.length;\n\t\twhile(_g11 < _g2) {\n\t\t\tvar i1 = _g11++;\n\t\t\tthis[i1 + offset] = a1[i1];\n\t\t}\n\t} else {\n\t\tthrow new js__$Boot_HaxeError(\"TODO\");\n\t}\n};\njs_html_compat_Uint8Array._subarray = function(start,end) {\n\tvar a = js_html_compat_Uint8Array._new(this.slice(start,end));\n\ta.byteOffset = start;\n\treturn a;\n};\nvar wings_core_ISimpleDrawingContext = $hx_exports[\"wings\"][\"core\"][\"ISimpleDrawingContext\"] = function() { };\nwings_core_ISimpleDrawingContext.__name__ = true;\nwings_core_ISimpleDrawingContext.prototype = {\n\t__class__: wings_core_ISimpleDrawingContext\n};\nvar wings_jsCanvas__$AlphaColor_AlphaColorJS_$Impl_$ = {};\nwings_jsCanvas__$AlphaColor_AlphaColorJS_$Impl_$.__name__ = true;\nwings_jsCanvas__$AlphaColor_AlphaColorJS_$Impl_$.toString = function(this1) {\n\treturn \"#\" + StringTools.hex(this1,8);\n};\nvar wings_jsCanvas_BasicCanvas = $hx_exports[\"wings\"][\"jsCanvas\"][\"BasicCanvas\"] = function() {\n\tthis.canvas = window.document.createElement(\"canvas\");\n\tthis.dom = this.canvas;\n\tthis.body = window.document.body;\n\tthis.surface = this.canvas.getContext(\"2d\",null);\n\tthis.style = this.dom.style;\n\tthis.header = new wings_jsCanvas_CanvasHeader();\n\tthis.canvas.width = this.header.width;\n\tthis.canvas.height = this.header.height;\n\tthis.style.paddingLeft = \"0px\";\n\tthis.style.paddingTop = \"0px\";\n\tthis.style.left = Std.string(0 + \"px\");\n\tthis.style.top = Std.string(0 + \"px\");\n\tthis.style.position = \"absolute\";\n\tthis.style.backgroundColor = this.header.bgColor;\n\tthis.surface.fillStyle = this.header.bgColor;\n\tthis.image = this.dom;\n\tvar s = window.document.createElement(\"style\");\n\ts.innerHTML = \"@keyframes spin { from { transform:rotate( 0deg ); } to { transform:rotate( 360deg ); } }\";\n\twindow.document.getElementsByTagName(\"head\")[0].appendChild(s);\n\ts.animation = \"spin 1s linear infinite\";\n\tthis.loop(this.header.frameRate);\n\tvar body = window.document.body;\n\tbody.appendChild(this.dom);\n};\nwings_jsCanvas_BasicCanvas.__name__ = true;\nwings_jsCanvas_BasicCanvas.prototype = {\n\tloop: function(tim) {\n\t\twindow.requestAnimationFrame($bind(this,this.loop));\n\t\tif(this.onEnterFrame != null) {\n\t\t\tthis.onEnterFrame();\n\t\t}\n\t\treturn true;\n\t}\n\t,clear: function() {\n\t\tthis.surface.clearRect(0,0,this.header.width,this.header.height);\n\t}\n\t,drawCircle: function(x,y,radius) {\n\t\tthis.surface.beginPath();\n\t\tthis.surface.arc(x,y,radius,0,2 * Math.PI,false);\n\t\tthis.surface.stroke();\n\t\tthis.surface.closePath();\n\t}\n\t,drawRect: function(x,y,width,height) {\n\t\tthis.surface.beginPath();\n\t\tthis.surface.moveTo(x,y);\n\t\tthis.surface.lineTo(x + width,y);\n\t\tthis.surface.lineTo(x + width,y + height);\n\t\tthis.surface.lineTo(x,y + height);\n\t\tthis.surface.stroke();\n\t\tthis.surface.closePath();\n\t}\n\t,drawTri: function(points) {\n\t\tthis.surface.beginPath();\n\t\tvar i = 0;\n\t\twhile(i < points.length) {\n\t\t\tif(i == 0) {\n\t\t\t\tthis.surface.moveTo(points[i],points[i + 1]);\n\t\t\t} else {\n\t\t\t\tthis.surface.lineTo(points[i],points[i + 1]);\n\t\t\t}\n\t\t\ti += 2;\n\t\t}\n\t\tthis.surface.stroke();\n\t\tthis.surface.closePath();\n\t}\n\t,lineStyle: function(wid,col,alpha) {\n\t\tthis.surface.lineWidth = wid;\n\t\tif(alpha != null && alpha != 1.0) {\n\t\t\tvar r = col >> 16 & 255;\n\t\t\tvar g = col >> 8 & 255;\n\t\t\tvar b = col & 255;\n\t\t\tthis.surface.strokeStyle = \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + alpha + \")\";\n\t\t} else {\n\t\t\tvar tmp = StringTools.hex(col,6);\n\t\t\tthis.surface.strokeStyle = \"#\" + tmp;\n\t\t}\n\t}\n\t,moveTo: function(x,y) {\n\t\tthis.surface.beginPath();\n\t\tthis.surface.moveTo(x,y);\n\t}\n\t,lineTo: function(x,y) {\n\t\tthis.surface.lineTo(x,y);\n\t\tthis.surface.closePath();\n\t\tthis.surface.stroke();\n\t}\n\t,quadTo: function(cx,cy,ax,ay) {\n\t\tthis.surface.quadraticCurveTo(cx,cy,ax,ay);\n\t\tthis.surface.stroke();\n\t}\n\t,beginFill: function(col,alpha) {\n\t\tif(alpha != null && alpha != 1.0) {\n\t\t\tvar r = col >> 16 & 255;\n\t\t\tvar g = col >> 8 & 255;\n\t\t\tvar b = col & 255;\n\t\t\tthis.surface.fillStyle = \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + alpha + \")\";\n\t\t} else {\n\t\t\tvar tmp = StringTools.hex(col,6);\n\t\t\tthis.surface.fillStyle = \"#\" + tmp;\n\t\t}\n\t\tthis.surface.beginPath();\n\t}\n\t,endFill: function() {\n\t\tthis.surface.stroke();\n\t\tthis.surface.closePath();\n\t\tthis.surface.fill();\n\t}\n\t,__class__: wings_jsCanvas_BasicCanvas\n};\nvar wings_jsCanvas_CanvasHeader = function() {\n\tvar canvasHeader = null.split(\":\");\n\tthis.width = Std.parseInt(canvasHeader[0]);\n\tthis.height = Std.parseInt(canvasHeader[1]);\n\tthis.frameRate = Std.parseInt(canvasHeader[2]);\n\tthis.bgColor = \"#\" + canvasHeader[3];\n};\nwings_jsCanvas_CanvasHeader.__name__ = true;\nwings_jsCanvas_CanvasHeader.prototype = {\n\tparseInt: function(e) {\n\t\treturn Std.parseInt(e);\n\t}\n\t,toHashColor: function(e) {\n\t\treturn \"#\" + e;\n\t}\n\t,__class__: wings_jsCanvas_CanvasHeader\n};\nvar wings_jsCanvas_CanvasPixelMatrix = $hx_exports[\"wings\"][\"jsCanvas\"][\"CanvasPixelMatrix\"] = function(data_,w_,h_) {\n\tthis.data = data_;\n\tthis.width = w_;\n\tthis.height = h_;\n\tthis.lookup = [];\n\tvar count = 0;\n\tvar _g1 = 0;\n\tvar _g = this.height;\n\twhile(_g1 < _g) {\n\t\tvar i = _g1++;\n\t\tthis.lookup[i] = [];\n\t\tvar _g3 = 0;\n\t\tvar _g2 = this.width;\n\t\twhile(_g3 < _g2) {\n\t\t\tvar j = _g3++;\n\t\t\tthis.lookup[i][j] = count * 4 | 0;\n\t\t\t++count;\n\t\t}\n\t}\n};\nwings_jsCanvas_CanvasPixelMatrix.__name__ = true;\nwings_jsCanvas_CanvasPixelMatrix.createCanvasPixelMatrixFromContext = function(context,w_,h_) {\n\tvar imageData = context.getImageData(0,0,w_,h_);\n\tvar dataIn = imageData.data;\n\treturn new wings_jsCanvas_CanvasPixelMatrix(dataIn,w_,h_);\n};\nwings_jsCanvas_CanvasPixelMatrix.prototype = {\n\tgetPixel32: function(w_,h_) {\n\t\tvar offset = this.lookup[h_][w_];\n\t\treturn this.data[offset + 3] << 24 | this.data[offset] << 16 | this.data[offset + 1] << 8 | this.data[offset + 2];\n\t}\n\t,setPixel32: function(w_,h_,value) {\n\t\tvar offset = this.lookup[h_][w_];\n\t\tthis.data[offset + 3] = value >> 24 & 255;\n\t\tthis.data[offset] = value >> 16 & 255;\n\t\tthis.data[offset + 1] = value >> 8 & 255;\n\t\tthis.data[offset + 2] = value & 255;\n\t}\n\t,setPixel: function(w_,h_,value) {\n\t\tvar offset = this.lookup[h_][w_];\n\t\tthis.data[offset] = value >> 16 & 255;\n\t\tthis.data[offset + 1] = value >> 8 & 255;\n\t\tthis.data[offset + 2] = value & 255;\n\t}\n\t,getPixel: function(w_,h_) {\n\t\tvar offset = this.lookup[h_][w_];\n\t\treturn this.data[offset] << 16 | this.data[offset + 1] << 8 | this.data[offset + 2];\n\t}\n\t,__class__: wings_jsCanvas_CanvasPixelMatrix\n};\nvar wings_jsCanvas__$ColorJS_ColorJS_$Impl_$ = {};\nwings_jsCanvas__$ColorJS_ColorJS_$Impl_$.__name__ = true;\nwings_jsCanvas__$ColorJS_ColorJS_$Impl_$.toString = function(this1) {\n\treturn \"#\" + StringTools.hex(this1,6);\n};\nvar wings_jsCanvas_ImageLoader = $hx_exports[\"wings\"][\"jsCanvas\"][\"ImageLoader\"] = function(imageNames,loaded_) {\n\tthis.images = new haxe_ds_StringMap();\n\tthis.loaded = loaded_;\n\tthis.count = imageNames.length;\n\tvar _g = 0;\n\twhile(_g < imageNames.length) {\n\t\tvar name = imageNames[_g];\n\t\t++_g;\n\t\tthis.load(name);\n\t}\n};\nwings_jsCanvas_ImageLoader.__name__ = true;\nwings_jsCanvas_ImageLoader.prototype = {\n\tload: function(img) {\n\t\tvar image = window.document.createElement(\"img\");\n\t\tvar imgStyle = image.style;\n\t\timgStyle.left = \"0px\";\n\t\timgStyle.top = \"0px\";\n\t\timgStyle.paddingLeft = \"0px\";\n\t\timgStyle.paddingTop = \"0px\";\n\t\tvar f = $bind(this,this.store);\n\t\tvar a1 = image;\n\t\tvar a2 = img.split(\"/\").pop();\n\t\timage.onload = function(e) {\n\t\t\tf(a1,a2,e);\n\t\t};\n\t\timgStyle.position = \"absolute\";\n\t\timage.src = img;\n\t}\n\t,store: function(image,name,e) {\n\t\tthis.count--;\n\t\tvar _this = this.images;\n\t\tif(__map_reserved[name] != null) {\n\t\t\t_this.setReserved(name,image);\n\t\t} else {\n\t\t\t_this.h[name] = image;\n\t\t}\n\t\tif(this.count == 0) {\n\t\t\tthis.loaded();\n\t\t}\n\t}\n\t,__class__: wings_jsCanvas_ImageLoader\n};\nvar wings_jsCanvas_SimpleDrawingContext = $hx_exports[\"wings\"][\"jsCanvas\"][\"SimpleDrawingContext\"] = function(graphics) {\n\tthis.graphics = graphics;\n};\nwings_jsCanvas_SimpleDrawingContext.__name__ = true;\nwings_jsCanvas_SimpleDrawingContext.__interfaces__ = [wings_core_ISimpleDrawingContext];\nwings_jsCanvas_SimpleDrawingContext.prototype = {\n\tclear: function() {\n\t\tthis.graphics.clear();\n\t}\n\t,lineStyle: function(thickness,color,alpha) {\n\t\tif(alpha == null) {\n\t\t\talpha = 1;\n\t\t}\n\t\tthis.graphics.lineStyle(thickness,color,alpha);\n\t}\n\t,beginFill: function(color,alpha) {\n\t\tif(alpha == null) {\n\t\t\talpha = 1;\n\t\t}\n\t\tthis.graphics.beginFill(color,alpha);\n\t}\n\t,endFill: function() {\n\t\tthis.graphics.endFill();\n\t}\n\t,moveTo: function(x,y) {\n\t\tthis.graphics.moveTo(x,y);\n\t}\n\t,lineTo: function(x,y) {\n\t\tthis.graphics.lineTo(x,y);\n\t}\n\t,quadTo: function(cx,cy,ax,ay) {\n\t\tthis.graphics.quadTo(cx,cy,ax,ay);\n\t}\n\t,drawCircle: function(cx,cy,radius) {\n\t\tthis.graphics.drawCircle(cx,cy,radius);\n\t}\n\t,drawRect: function(x,y,width,height) {\n\t\tthis.graphics.drawRect(x,y,width,height);\n\t}\n\t,drawEquilaterialTri: function(x,y,radius,direction) {\n\t\tvar third = Math.PI * 2 / 3;\n\t\tvar points = [];\n\t\tvar x1;\n\t\tvar y1;\n\t\tvar _g = 0;\n\t\twhile(_g < 3) {\n\t\t\tvar i = _g++;\n\t\t\tx1 = x + radius * Math.cos(direction + i * third);\n\t\t\ty1 = y + radius * Math.sin(direction + i * third);\n\t\t\tpoints.push(x1);\n\t\t\tpoints.push(y1);\n\t\t}\n\t\tthis.graphics.drawTri(points);\n\t}\n\t,drawTri: function(points) {\n\t\tthis.graphics.drawTri(points);\n\t}\n\t,__class__: wings_jsCanvas_SimpleDrawingContext\n};\nvar $_, $fid = 0;\nfunction $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }\nString.prototype.__class__ = String;\nString.__name__ = true;\nArray.__name__ = true;\nvar Int = { __name__ : [\"Int\"]};\nvar Dynamic = { __name__ : [\"Dynamic\"]};\nvar Float = Number;\nFloat.__name__ = [\"Float\"];\nvar Bool = Boolean;\nBool.__ename__ = [\"Bool\"];\nvar Class = { __name__ : [\"Class\"]};\nvar Enum = { };\nvar __map_reserved = {}\nhxPixels_PixelFormat.ARGB = new hxPixels_PixelFormat(0,1,2,3,\"ARGB\");\nhxPixels_PixelFormat.RGBA = new hxPixels_PixelFormat(3,0,1,2,\"RGBA\");\nhxPixels_PixelFormat.BGRA = new hxPixels_PixelFormat(3,2,1,0,\"BGRA\");\nvar ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;\nif(ArrayBuffer.prototype.slice == null) {\n\tArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;\n}\nvar Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;\nhaxe_ds_ObjectMap.count = 0;\nhxDaedalus_ai_EntityAI.NUM_SEGMENTS = 6;\nhxDaedalus_data_Constants.EPSILON = 0.01;\nhxDaedalus_data_Constants.EPSILON_SQUARED = 0.0001;\nhxDaedalus_data_ConstraintSegment.INC = 0;\nhxDaedalus_data_ConstraintShape.INC = 0;\nhxDaedalus_data_Edge.INC = 0;\nhxDaedalus_data_Face.INC = 0;\nhxDaedalus_data_Mesh.INC = 0;\nhxDaedalus_data_Object.INC = 0;\nhxDaedalus_data_Vertex.INC = 0;\nhxDaedalus_data_graph_Graph.INC = 0;\nhxDaedalus_data_graph_GraphEdge.INC = 0;\nhxDaedalus_data_graph_GraphNode.INC = 0;\nhxDaedalus_data_math_Geom2D.__samples = [];\nhxDaedalus_data_math_Geom2D.__circumcenter = new hxDaedalus_data_math_Point2D();\nhxDaedalus_data_math_Potrace.MAX_INT = 2147483647;\nhxDaedalus_data_math_Potrace.maxDistance = 1;\nhxPixels__$Pixels_Pixels_$Impl_$.CHANNEL_MASK = 3;\nhxPixels__$Pixels_PixelsData.BYTES_PER_PIXEL = 4;\njs_Boot.__toStr = ({ }).toString;\njs_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;\nwings_jsCanvas_CanvasHeader.__meta__ = { fields : { parseInt : { 'static' : null}, toHashColor : { 'static' : null}}};\n})(typeof exports != \"undefined\" ? exports : typeof window != \"undefined\" ? window : typeof self != \"undefined\" ? self : this, typeof window != \"undefined\" ? window : typeof global != \"undefined\" ? global : typeof self != \"undefined\" ? self : this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}