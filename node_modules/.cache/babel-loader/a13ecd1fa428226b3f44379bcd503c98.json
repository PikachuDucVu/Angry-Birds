{"ast":null,"code":"\"use strict\";\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.copyArray = exports.createStage = exports.pointInRect = exports.resizeCanvas = exports.createGameLoop = exports.WindowedMean = exports.TimeKeeper = exports.Pools = exports.Pool = exports.Utils = exports.PowOut = exports.Pow = exports.Interpolation = exports.MathUtils = exports.Color = exports.StringSet = exports.IntSet = exports.Align = void 0;\n\nclass Align {\n  static isLeft(align) {\n    return (align & this.left) !== 0;\n  }\n\n  static isRight(align) {\n    return (align & this.right) !== 0;\n  }\n\n  static isTop(align) {\n    return (align & this.top) !== 0;\n  }\n\n  static isBottom(align) {\n    return (align & this.bottom) !== 0;\n  }\n\n  static isCenterVertical(align) {\n    return (align & this.top) === 0 && (align & this.bottom) === 0;\n  }\n\n  static isCenterHorizontal(align) {\n    return (align & this.left) === 0 && (align & this.right) === 0;\n  }\n\n}\n\nexports.Align = Align;\n_a = Align;\nAlign.center = 1 << 0;\nAlign.top = 1 << 1;\nAlign.bottom = 1 << 2;\nAlign.left = 1 << 3;\nAlign.right = 1 << 4;\nAlign.topLeft = _a.top | _a.left;\nAlign.topRight = _a.top | _a.right;\nAlign.bottomLeft = _a.bottom | _a.left;\nAlign.bottomRight = _a.bottom | _a.right;\n\nclass IntSet {\n  constructor() {\n    this.array = new Array();\n  }\n\n  add(value) {\n    let contains = this.contains(value);\n    this.array[value | 0] = value | 0;\n    return !contains;\n  }\n\n  contains(value) {\n    return this.array[value | 0] !== undefined;\n  }\n\n  remove(value) {\n    this.array[value | 0] = undefined;\n  }\n\n  clear() {\n    this.array.length = 0;\n  }\n\n}\n\nexports.IntSet = IntSet;\n\nclass StringSet {\n  constructor() {\n    this.entries = {};\n    this.size = 0;\n  }\n\n  add(value) {\n    let contains = this.entries[value];\n    this.entries[value] = true;\n\n    if (!contains) {\n      this.size++;\n      return true;\n    }\n\n    return false;\n  }\n\n  addAll(values) {\n    let oldSize = this.size;\n\n    for (var i = 0, n = values.length; i < n; i++) this.add(values[i]);\n\n    return oldSize !== this.size;\n  }\n\n  contains(value) {\n    return this.entries[value];\n  }\n\n  clear() {\n    this.entries = {};\n    this.size = 0;\n  }\n\n}\n\nexports.StringSet = StringSet;\n\nclass Color {\n  constructor() {\n    let r = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let g = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let b = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let a = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    this.a = a;\n  }\n\n  unsafeSet(r, g, b, a) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    this.a = a;\n  }\n\n  set(r, g, b, a) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    this.a = a;\n    return this.clamp();\n  }\n\n  setFromColor(c) {\n    this.r = c.r;\n    this.g = c.g;\n    this.b = c.b;\n    this.a = c.a;\n    return this;\n  }\n\n  setFromString(hex) {\n    hex = hex.charAt(0) === '#' ? hex.substring(1) : hex;\n    this.r = parseInt(hex.substring(0, 2), 16) / 255;\n    this.g = parseInt(hex.substring(2, 4), 16) / 255;\n    this.b = parseInt(hex.substring(4, 6), 16) / 255;\n    this.a = hex.length !== 8 ? 1 : parseInt(hex.substring(6, 8), 16) / 255;\n    return this;\n  }\n\n  add(r, g, b, a) {\n    this.r += r;\n    this.g += g;\n    this.b += b;\n    this.a += a;\n    return this.clamp();\n  }\n\n  clamp() {\n    if (this.r < 0) this.r = 0;else if (this.r > 1) this.r = 1;\n    if (this.g < 0) this.g = 0;else if (this.g > 1) this.g = 1;\n    if (this.b < 0) this.b = 0;else if (this.b > 1) this.b = 1;\n    if (this.a < 0) this.a = 0;else if (this.a > 1) this.a = 1;\n    return this;\n  }\n\n  toIntBits() {\n    return 255 * this.a << 24 | 255 * this.b << 16 | 255 * this.g << 8 | 255 * this.r;\n  }\n\n  static rgba8888ToColor(color, value) {\n    color.r = ((value & 0xff000000) >>> 24) / 255;\n    color.g = ((value & 0x00ff0000) >>> 16) / 255;\n    color.b = ((value & 0x0000ff00) >>> 8) / 255;\n    color.a = (value & 0x000000ff) / 255;\n  }\n\n  static rgb888ToColor(color, value) {\n    color.r = ((value & 0x00ff0000) >>> 16) / 255;\n    color.g = ((value & 0x0000ff00) >>> 8) / 255;\n    color.b = (value & 0x000000ff) / 255;\n  }\n\n  static fromString(hex) {\n    return new Color().setFromString(hex);\n  }\n\n}\n\nexports.Color = Color;\nColor.WHITE = new Color(1, 1, 1, 1);\nColor.RED = new Color(1, 0, 0, 1);\nColor.GREEN = new Color(0, 1, 0, 1);\nColor.BLUE = new Color(0, 0, 1, 1);\nColor.MAGENTA = new Color(1, 0, 1, 1);\n\nclass MathUtils {\n  static clamp(value, min, max) {\n    if (value < min) return min;\n    if (value > max) return max;\n    return value;\n  }\n\n  static cosDeg(degrees) {\n    return Math.cos(degrees * MathUtils.degRad);\n  }\n\n  static sinDeg(degrees) {\n    return Math.sin(degrees * MathUtils.degRad);\n  }\n\n  static signum(value) {\n    return value > 0 ? 1 : value < 0 ? -1 : 0;\n  }\n\n  static toInt(x) {\n    return x > 0 ? Math.floor(x) : Math.ceil(x);\n  }\n\n  static cbrt(x) {\n    let y = Math.pow(Math.abs(x), 1 / 3);\n    return x < 0 ? -y : y;\n  }\n\n  static randomTriangular(min, max) {\n    return MathUtils.randomTriangularWith(min, max, (min + max) * 0.5);\n  }\n\n  static randomTriangularWith(min, max, mode) {\n    let u = Math.random();\n    let d = max - min;\n    if (u <= (mode - min) / d) return min + Math.sqrt(u * d * (mode - min));\n    return max - Math.sqrt((1 - u) * d * (max - mode));\n  }\n\n  static isPowerOfTwo(value) {\n    return value && (value & value - 1) === 0;\n  }\n\n}\n\nexports.MathUtils = MathUtils;\nMathUtils.PI = 3.1415927;\nMathUtils.PI2 = MathUtils.PI * 2;\nMathUtils.radiansToDegrees = 180 / MathUtils.PI;\nMathUtils.radDeg = MathUtils.radiansToDegrees;\nMathUtils.degreesToRadians = MathUtils.PI / 180;\nMathUtils.degRad = MathUtils.degreesToRadians;\n\nclass Interpolation {\n  apply(start, end, a) {\n    return start + (end - start) * this.applyInternal(a);\n  }\n\n}\n\nexports.Interpolation = Interpolation;\n\nclass Pow extends Interpolation {\n  constructor(power) {\n    super();\n    this.power = 2;\n    this.power = power;\n  }\n\n  applyInternal(a) {\n    if (a <= 0.5) return Math.pow(a * 2, this.power) / 2;\n    return Math.pow((a - 1) * 2, this.power) / (this.power % 2 === 0 ? -2 : 2) + 1;\n  }\n\n}\n\nexports.Pow = Pow;\n\nclass PowOut extends Pow {\n  // constructor(power: number) {\n  //   super(power);\n  // }\n  applyInternal(a) {\n    return Math.pow(a - 1, this.power) * (this.power % 2 === 0 ? -1 : 1) + 1;\n  }\n\n}\n\nexports.PowOut = PowOut;\n\nclass Utils {\n  static arrayCopy(source, sourceStart, dest, destStart, numElements) {\n    for (let i = sourceStart, j = destStart; i < sourceStart + numElements; i++, j++) {\n      dest[j] = source[i];\n    }\n  }\n\n  static arrayFill(array, fromIndex, toIndex, value) {\n    for (let i = fromIndex; i < toIndex; i++) array[i] = value;\n  }\n\n  static setArraySize(array, size) {\n    let value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let oldSize = array.length;\n    if (oldSize === size) return array;\n    array.length = size;\n\n    if (oldSize < size) {\n      for (let i = oldSize; i < size; i++) array[i] = value;\n    }\n\n    return array;\n  }\n\n  static ensureArrayCapacity(array, size) {\n    let value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    if (array.length >= size) return array;\n    return Utils.setArraySize(array, size, value);\n  }\n\n  static newArray(size, defaultValue) {\n    let array = new Array(size);\n\n    for (let i = 0; i < size; i++) array[i] = defaultValue;\n\n    return array;\n  }\n\n  static newFloatArray(size) {\n    if (Utils.SUPPORTS_TYPED_ARRAYS) return new Float32Array(size);else {\n      let array = new Array(size);\n\n      for (let i = 0; i < array.length; i++) array[i] = 0;\n\n      return array;\n    }\n  }\n\n  static newShortArray(size) {\n    if (Utils.SUPPORTS_TYPED_ARRAYS) return new Int16Array(size);else {\n      let array = new Array(size);\n\n      for (let i = 0; i < array.length; i++) array[i] = 0;\n\n      return array;\n    }\n  }\n\n  static toFloatArray(array) {\n    return Utils.SUPPORTS_TYPED_ARRAYS ? new Float32Array(array) : array;\n  }\n\n  static toSinglePrecision(value) {\n    return Utils.SUPPORTS_TYPED_ARRAYS ? Math.fround(value) : value;\n  }\n\n  static contains(array, element) {\n    let identity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    for (var i = 0; i < array.length; i++) if (array[i] === element) return true;\n\n    return false;\n  }\n\n  static enumValue(type, name) {\n    return type[name[0].toUpperCase() + name.slice(1)];\n  }\n\n}\n\nexports.Utils = Utils;\nUtils.SUPPORTS_TYPED_ARRAYS = typeof Float32Array !== 'undefined';\n\nclass Pool {\n  constructor(instantiator) {\n    this.items = new Array();\n\n    if (instantiator) {\n      this.instantiator = instantiator;\n    } else {\n      this.instantiator = () => ({});\n    }\n  }\n\n  obtain() {\n    const item = this.items.length > 0 ? this.items.pop() : this.instantiator();\n    return item;\n  }\n\n  free(item) {\n    if (item === null || item === void 0 ? void 0 : item.reset) {\n      item.reset();\n    }\n\n    this.items.push(item);\n  }\n\n  freeAll(items) {\n    for (let i = 0; i < items.length; i++) this.free(items[i]);\n  }\n\n  clear() {\n    this.items.length = 0;\n  }\n\n}\n\nexports.Pool = Pool;\n\nclass Pools {\n  static free(name, object) {\n    if (this.pools[name]) {\n      this.pools[name].free(object);\n    }\n  }\n\n  static freeAll(name, objects) {\n    if (this.pools[name]) {\n      this.pools[name].freeAll(objects);\n    }\n  }\n\n  static get(name, instantiator) {\n    if (this.pools[name]) {\n      return this.pools[name];\n    }\n\n    this.pools[name] = new Pool(instantiator);\n    return this.pools[name];\n  }\n\n  static set(name, pool) {\n    this.pools[name] = pool;\n  }\n\n  static obtain(name, instantiator) {\n    return this.get(name, instantiator).obtain();\n  }\n\n}\n\nexports.Pools = Pools;\nPools.pools = {};\n\nclass TimeKeeper {\n  constructor() {\n    this.maxDelta = 0.064;\n    this.framesPerSecond = 0;\n    this.delta = 0;\n    this.totalTime = 0;\n    this.lastTime = Date.now() / 1000;\n    this.frameCount = 0;\n    this.frameTime = 0;\n  }\n\n  update() {\n    let now = Date.now() / 1000;\n    this.delta = now - this.lastTime;\n    this.frameTime += this.delta;\n    this.totalTime += this.delta;\n    if (this.delta > this.maxDelta) this.delta = this.maxDelta;\n    this.lastTime = now;\n    this.frameCount++;\n\n    if (this.frameTime > 1) {\n      this.framesPerSecond = this.frameCount / this.frameTime;\n      this.frameTime = 0;\n      this.frameCount = 0;\n    }\n  }\n\n}\n\nexports.TimeKeeper = TimeKeeper;\n\nclass WindowedMean {\n  constructor() {\n    let windowSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;\n    this.addedValues = 0;\n    this.lastValue = 0;\n    this.mean = 0;\n    this.dirty = true;\n    this.values = new Array(windowSize);\n  }\n\n  hasEnoughData() {\n    return this.addedValues >= this.values.length;\n  }\n\n  addValue(value) {\n    if (this.addedValues < this.values.length) this.addedValues++;\n    this.values[this.lastValue++] = value;\n    if (this.lastValue > this.values.length - 1) this.lastValue = 0;\n    this.dirty = true;\n  }\n\n  getMean() {\n    if (this.hasEnoughData()) {\n      if (this.dirty) {\n        let mean = 0;\n\n        for (let i = 0; i < this.values.length; i++) mean += this.values[i];\n\n        this.mean = mean / this.values.length;\n        this.dirty = false;\n      }\n\n      return this.mean;\n    }\n\n    return 0;\n  }\n\n}\n\nexports.WindowedMean = WindowedMean;\n\nconst createGameLoop = update => {\n  let lastUpdate = Date.now();\n  let fps = 0;\n  let running = true;\n  let requestId;\n  let frameInLastSecond = 0;\n  let elapsed = 0;\n\n  function loop() {\n    if (running) {\n      const delta = Date.now() - lastUpdate;\n      lastUpdate = Date.now();\n      frameInLastSecond++;\n      elapsed += delta;\n\n      if (elapsed >= 1000) {\n        fps = frameInLastSecond;\n        frameInLastSecond = 0;\n        elapsed -= 1000;\n      }\n\n      requestId = requestAnimationFrame(loop);\n      update(delta / 1000);\n    }\n  }\n\n  loop();\n  return {\n    isRunning: () => running,\n    start: () => {\n      if (!running) {\n        running = true;\n        loop();\n      }\n    },\n    stop: () => {\n      if (requestId) {\n        cancelAnimationFrame(requestId);\n      }\n\n      running = false;\n    },\n    getFps: () => fps\n  };\n};\n\nexports.createGameLoop = createGameLoop;\n\nconst resizeCanvas = (canvas, deviceRatio) => {\n  const devicePixelRatio = deviceRatio || window.devicePixelRatio || 1;\n  const displayWidth = canvas.clientWidth * devicePixelRatio;\n  const displayHeight = canvas.clientHeight * devicePixelRatio;\n\n  if (canvas.width !== displayWidth || canvas.height !== displayHeight) {\n    canvas.width = displayWidth;\n    canvas.height = displayHeight;\n  }\n\n  return [displayWidth, displayHeight];\n};\n\nexports.resizeCanvas = resizeCanvas;\n\nconst pointInRect = (pX, pY, x, y, width, height) => {\n  return pX > x && pX < x + width && pY > y && pY < y + height;\n};\n\nexports.pointInRect = pointInRect;\n\nconst createStage = options => {\n  const defaultOptions = {\n    hidden: false,\n    info: true\n  };\n  options = Object.assign(Object.assign({}, defaultOptions), options);\n  const wrapper = document.createElement('div');\n  wrapper.setAttribute('style', `position:fixed;top:0;left:0;right:0;bottom:0;`);\n\n  if (options.wrapperClassName) {\n    wrapper.className = options.wrapperClassName;\n  }\n\n  if (options.hidden) {\n    wrapper.style.display = 'none';\n  }\n\n  const canvas = document.createElement('canvas');\n  canvas.setAttribute('style', `width:100%;height:100%;`);\n  const info = document.createElement('div');\n  info.setAttribute('style', `position:absolute;top:1em;left:1em;color:white`);\n\n  if (!options.info) {\n    info.style.display = 'none';\n  }\n\n  wrapper.appendChild(canvas);\n  wrapper.appendChild(info);\n  document.body.appendChild(wrapper);\n  return {\n    getCanvas: () => canvas,\n    getInfo: () => info,\n    show: () => wrapper.style.display = 'block',\n    hide: () => wrapper.style.display = 'none',\n    cleanup: () => document.body.removeChild(wrapper)\n  };\n};\n\nexports.createStage = createStage;\n\nconst copyArray = function (src, target) {\n  let targetOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let srcOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  let count = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : target.length;\n\n  for (let i = 0; i < count; i++) {\n    target[targetOffset + i] = src[srcOffset + i];\n  }\n};\n\nexports.copyArray = copyArray;","map":{"version":3,"names":["_a","Object","defineProperty","exports","value","copyArray","createStage","pointInRect","resizeCanvas","createGameLoop","WindowedMean","TimeKeeper","Pools","Pool","Utils","PowOut","Pow","Interpolation","MathUtils","Color","StringSet","IntSet","Align","isLeft","align","left","isRight","right","isTop","top","isBottom","bottom","isCenterVertical","isCenterHorizontal","center","topLeft","topRight","bottomLeft","bottomRight","constructor","array","Array","add","contains","undefined","remove","clear","length","entries","size","addAll","values","oldSize","i","n","r","g","b","a","unsafeSet","set","clamp","setFromColor","c","setFromString","hex","charAt","substring","parseInt","toIntBits","rgba8888ToColor","color","rgb888ToColor","fromString","WHITE","RED","GREEN","BLUE","MAGENTA","min","max","cosDeg","degrees","Math","cos","degRad","sinDeg","sin","signum","toInt","x","floor","ceil","cbrt","y","pow","abs","randomTriangular","randomTriangularWith","mode","u","random","d","sqrt","isPowerOfTwo","PI","PI2","radiansToDegrees","radDeg","degreesToRadians","apply","start","end","applyInternal","power","arrayCopy","source","sourceStart","dest","destStart","numElements","j","arrayFill","fromIndex","toIndex","setArraySize","ensureArrayCapacity","newArray","defaultValue","newFloatArray","SUPPORTS_TYPED_ARRAYS","Float32Array","newShortArray","Int16Array","toFloatArray","toSinglePrecision","fround","element","identity","enumValue","type","name","toUpperCase","slice","instantiator","items","obtain","item","pop","free","reset","push","freeAll","object","pools","objects","get","pool","maxDelta","framesPerSecond","delta","totalTime","lastTime","Date","now","frameCount","frameTime","update","windowSize","addedValues","lastValue","mean","dirty","hasEnoughData","addValue","getMean","lastUpdate","fps","running","requestId","frameInLastSecond","elapsed","loop","requestAnimationFrame","isRunning","stop","cancelAnimationFrame","getFps","canvas","deviceRatio","devicePixelRatio","window","displayWidth","clientWidth","displayHeight","clientHeight","width","height","pX","pY","options","defaultOptions","hidden","info","assign","wrapper","document","createElement","setAttribute","wrapperClassName","className","style","display","appendChild","body","getCanvas","getInfo","show","hide","cleanup","removeChild","src","target","targetOffset","srcOffset","count"],"sources":["D:/projects/test-game/node_modules/gdxts/dist/lib/Utils.js"],"sourcesContent":["\"use strict\";\r\nvar _a;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.copyArray = exports.createStage = exports.pointInRect = exports.resizeCanvas = exports.createGameLoop = exports.WindowedMean = exports.TimeKeeper = exports.Pools = exports.Pool = exports.Utils = exports.PowOut = exports.Pow = exports.Interpolation = exports.MathUtils = exports.Color = exports.StringSet = exports.IntSet = exports.Align = void 0;\r\nclass Align {\r\n    static isLeft(align) {\r\n        return (align & this.left) !== 0;\r\n    }\r\n    static isRight(align) {\r\n        return (align & this.right) !== 0;\r\n    }\r\n    static isTop(align) {\r\n        return (align & this.top) !== 0;\r\n    }\r\n    static isBottom(align) {\r\n        return (align & this.bottom) !== 0;\r\n    }\r\n    static isCenterVertical(align) {\r\n        return (align & this.top) === 0 && (align & this.bottom) === 0;\r\n    }\r\n    static isCenterHorizontal(align) {\r\n        return (align & this.left) === 0 && (align & this.right) === 0;\r\n    }\r\n}\r\nexports.Align = Align;\r\n_a = Align;\r\nAlign.center = 1 << 0;\r\nAlign.top = 1 << 1;\r\nAlign.bottom = 1 << 2;\r\nAlign.left = 1 << 3;\r\nAlign.right = 1 << 4;\r\nAlign.topLeft = _a.top | _a.left;\r\nAlign.topRight = _a.top | _a.right;\r\nAlign.bottomLeft = _a.bottom | _a.left;\r\nAlign.bottomRight = _a.bottom | _a.right;\r\nclass IntSet {\r\n    constructor() {\r\n        this.array = new Array();\r\n    }\r\n    add(value) {\r\n        let contains = this.contains(value);\r\n        this.array[value | 0] = value | 0;\r\n        return !contains;\r\n    }\r\n    contains(value) {\r\n        return this.array[value | 0] !== undefined;\r\n    }\r\n    remove(value) {\r\n        this.array[value | 0] = undefined;\r\n    }\r\n    clear() {\r\n        this.array.length = 0;\r\n    }\r\n}\r\nexports.IntSet = IntSet;\r\nclass StringSet {\r\n    constructor() {\r\n        this.entries = {};\r\n        this.size = 0;\r\n    }\r\n    add(value) {\r\n        let contains = this.entries[value];\r\n        this.entries[value] = true;\r\n        if (!contains) {\r\n            this.size++;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    addAll(values) {\r\n        let oldSize = this.size;\r\n        for (var i = 0, n = values.length; i < n; i++)\r\n            this.add(values[i]);\r\n        return oldSize !== this.size;\r\n    }\r\n    contains(value) {\r\n        return this.entries[value];\r\n    }\r\n    clear() {\r\n        this.entries = {};\r\n        this.size = 0;\r\n    }\r\n}\r\nexports.StringSet = StringSet;\r\nclass Color {\r\n    constructor(r = 0, g = 0, b = 0, a = 0) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n    }\r\n    unsafeSet(r, g, b, a) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n    }\r\n    set(r, g, b, a) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n        return this.clamp();\r\n    }\r\n    setFromColor(c) {\r\n        this.r = c.r;\r\n        this.g = c.g;\r\n        this.b = c.b;\r\n        this.a = c.a;\r\n        return this;\r\n    }\r\n    setFromString(hex) {\r\n        hex = hex.charAt(0) === '#' ? hex.substring(1) : hex;\r\n        this.r = parseInt(hex.substring(0, 2), 16) / 255;\r\n        this.g = parseInt(hex.substring(2, 4), 16) / 255;\r\n        this.b = parseInt(hex.substring(4, 6), 16) / 255;\r\n        this.a = hex.length !== 8 ? 1 : parseInt(hex.substring(6, 8), 16) / 255;\r\n        return this;\r\n    }\r\n    add(r, g, b, a) {\r\n        this.r += r;\r\n        this.g += g;\r\n        this.b += b;\r\n        this.a += a;\r\n        return this.clamp();\r\n    }\r\n    clamp() {\r\n        if (this.r < 0)\r\n            this.r = 0;\r\n        else if (this.r > 1)\r\n            this.r = 1;\r\n        if (this.g < 0)\r\n            this.g = 0;\r\n        else if (this.g > 1)\r\n            this.g = 1;\r\n        if (this.b < 0)\r\n            this.b = 0;\r\n        else if (this.b > 1)\r\n            this.b = 1;\r\n        if (this.a < 0)\r\n            this.a = 0;\r\n        else if (this.a > 1)\r\n            this.a = 1;\r\n        return this;\r\n    }\r\n    toIntBits() {\r\n        return ((255 * this.a) << 24) | ((255 * this.b) << 16) | ((255 * this.g) << 8) | (255 * this.r);\r\n    }\r\n    static rgba8888ToColor(color, value) {\r\n        color.r = ((value & 0xff000000) >>> 24) / 255;\r\n        color.g = ((value & 0x00ff0000) >>> 16) / 255;\r\n        color.b = ((value & 0x0000ff00) >>> 8) / 255;\r\n        color.a = (value & 0x000000ff) / 255;\r\n    }\r\n    static rgb888ToColor(color, value) {\r\n        color.r = ((value & 0x00ff0000) >>> 16) / 255;\r\n        color.g = ((value & 0x0000ff00) >>> 8) / 255;\r\n        color.b = (value & 0x000000ff) / 255;\r\n    }\r\n    static fromString(hex) {\r\n        return new Color().setFromString(hex);\r\n    }\r\n}\r\nexports.Color = Color;\r\nColor.WHITE = new Color(1, 1, 1, 1);\r\nColor.RED = new Color(1, 0, 0, 1);\r\nColor.GREEN = new Color(0, 1, 0, 1);\r\nColor.BLUE = new Color(0, 0, 1, 1);\r\nColor.MAGENTA = new Color(1, 0, 1, 1);\r\nclass MathUtils {\r\n    static clamp(value, min, max) {\r\n        if (value < min)\r\n            return min;\r\n        if (value > max)\r\n            return max;\r\n        return value;\r\n    }\r\n    static cosDeg(degrees) {\r\n        return Math.cos(degrees * MathUtils.degRad);\r\n    }\r\n    static sinDeg(degrees) {\r\n        return Math.sin(degrees * MathUtils.degRad);\r\n    }\r\n    static signum(value) {\r\n        return value > 0 ? 1 : value < 0 ? -1 : 0;\r\n    }\r\n    static toInt(x) {\r\n        return x > 0 ? Math.floor(x) : Math.ceil(x);\r\n    }\r\n    static cbrt(x) {\r\n        let y = Math.pow(Math.abs(x), 1 / 3);\r\n        return x < 0 ? -y : y;\r\n    }\r\n    static randomTriangular(min, max) {\r\n        return MathUtils.randomTriangularWith(min, max, (min + max) * 0.5);\r\n    }\r\n    static randomTriangularWith(min, max, mode) {\r\n        let u = Math.random();\r\n        let d = max - min;\r\n        if (u <= (mode - min) / d)\r\n            return min + Math.sqrt(u * d * (mode - min));\r\n        return max - Math.sqrt((1 - u) * d * (max - mode));\r\n    }\r\n    static isPowerOfTwo(value) {\r\n        return value && (value & (value - 1)) === 0;\r\n    }\r\n}\r\nexports.MathUtils = MathUtils;\r\nMathUtils.PI = 3.1415927;\r\nMathUtils.PI2 = MathUtils.PI * 2;\r\nMathUtils.radiansToDegrees = 180 / MathUtils.PI;\r\nMathUtils.radDeg = MathUtils.radiansToDegrees;\r\nMathUtils.degreesToRadians = MathUtils.PI / 180;\r\nMathUtils.degRad = MathUtils.degreesToRadians;\r\nclass Interpolation {\r\n    apply(start, end, a) {\r\n        return start + (end - start) * this.applyInternal(a);\r\n    }\r\n}\r\nexports.Interpolation = Interpolation;\r\nclass Pow extends Interpolation {\r\n    constructor(power) {\r\n        super();\r\n        this.power = 2;\r\n        this.power = power;\r\n    }\r\n    applyInternal(a) {\r\n        if (a <= 0.5)\r\n            return Math.pow(a * 2, this.power) / 2;\r\n        return Math.pow((a - 1) * 2, this.power) / (this.power % 2 === 0 ? -2 : 2) + 1;\r\n    }\r\n}\r\nexports.Pow = Pow;\r\nclass PowOut extends Pow {\r\n    // constructor(power: number) {\r\n    //   super(power);\r\n    // }\r\n    applyInternal(a) {\r\n        return Math.pow(a - 1, this.power) * (this.power % 2 === 0 ? -1 : 1) + 1;\r\n    }\r\n}\r\nexports.PowOut = PowOut;\r\nclass Utils {\r\n    static arrayCopy(source, sourceStart, dest, destStart, numElements) {\r\n        for (let i = sourceStart, j = destStart; i < sourceStart + numElements; i++, j++) {\r\n            dest[j] = source[i];\r\n        }\r\n    }\r\n    static arrayFill(array, fromIndex, toIndex, value) {\r\n        for (let i = fromIndex; i < toIndex; i++)\r\n            array[i] = value;\r\n    }\r\n    static setArraySize(array, size, value = 0) {\r\n        let oldSize = array.length;\r\n        if (oldSize === size)\r\n            return array;\r\n        array.length = size;\r\n        if (oldSize < size) {\r\n            for (let i = oldSize; i < size; i++)\r\n                array[i] = value;\r\n        }\r\n        return array;\r\n    }\r\n    static ensureArrayCapacity(array, size, value = 0) {\r\n        if (array.length >= size)\r\n            return array;\r\n        return Utils.setArraySize(array, size, value);\r\n    }\r\n    static newArray(size, defaultValue) {\r\n        let array = new Array(size);\r\n        for (let i = 0; i < size; i++)\r\n            array[i] = defaultValue;\r\n        return array;\r\n    }\r\n    static newFloatArray(size) {\r\n        if (Utils.SUPPORTS_TYPED_ARRAYS)\r\n            return new Float32Array(size);\r\n        else {\r\n            let array = new Array(size);\r\n            for (let i = 0; i < array.length; i++)\r\n                array[i] = 0;\r\n            return array;\r\n        }\r\n    }\r\n    static newShortArray(size) {\r\n        if (Utils.SUPPORTS_TYPED_ARRAYS)\r\n            return new Int16Array(size);\r\n        else {\r\n            let array = new Array(size);\r\n            for (let i = 0; i < array.length; i++)\r\n                array[i] = 0;\r\n            return array;\r\n        }\r\n    }\r\n    static toFloatArray(array) {\r\n        return Utils.SUPPORTS_TYPED_ARRAYS ? new Float32Array(array) : array;\r\n    }\r\n    static toSinglePrecision(value) {\r\n        return Utils.SUPPORTS_TYPED_ARRAYS ? Math.fround(value) : value;\r\n    }\r\n    static contains(array, element, identity = true) {\r\n        for (var i = 0; i < array.length; i++)\r\n            if (array[i] === element)\r\n                return true;\r\n        return false;\r\n    }\r\n    static enumValue(type, name) {\r\n        return type[name[0].toUpperCase() + name.slice(1)];\r\n    }\r\n}\r\nexports.Utils = Utils;\r\nUtils.SUPPORTS_TYPED_ARRAYS = typeof Float32Array !== 'undefined';\r\nclass Pool {\r\n    constructor(instantiator) {\r\n        this.items = new Array();\r\n        if (instantiator) {\r\n            this.instantiator = instantiator;\r\n        }\r\n        else {\r\n            this.instantiator = () => ({});\r\n        }\r\n    }\r\n    obtain() {\r\n        const item = this.items.length > 0 ? this.items.pop() : this.instantiator();\r\n        return item;\r\n    }\r\n    free(item) {\r\n        if (item === null || item === void 0 ? void 0 : item.reset) {\r\n            item.reset();\r\n        }\r\n        this.items.push(item);\r\n    }\r\n    freeAll(items) {\r\n        for (let i = 0; i < items.length; i++)\r\n            this.free(items[i]);\r\n    }\r\n    clear() {\r\n        this.items.length = 0;\r\n    }\r\n}\r\nexports.Pool = Pool;\r\nclass Pools {\r\n    static free(name, object) {\r\n        if (this.pools[name]) {\r\n            this.pools[name].free(object);\r\n        }\r\n    }\r\n    static freeAll(name, objects) {\r\n        if (this.pools[name]) {\r\n            this.pools[name].freeAll(objects);\r\n        }\r\n    }\r\n    static get(name, instantiator) {\r\n        if (this.pools[name]) {\r\n            return this.pools[name];\r\n        }\r\n        this.pools[name] = new Pool(instantiator);\r\n        return this.pools[name];\r\n    }\r\n    static set(name, pool) {\r\n        this.pools[name] = pool;\r\n    }\r\n    static obtain(name, instantiator) {\r\n        return this.get(name, instantiator).obtain();\r\n    }\r\n}\r\nexports.Pools = Pools;\r\nPools.pools = {};\r\nclass TimeKeeper {\r\n    constructor() {\r\n        this.maxDelta = 0.064;\r\n        this.framesPerSecond = 0;\r\n        this.delta = 0;\r\n        this.totalTime = 0;\r\n        this.lastTime = Date.now() / 1000;\r\n        this.frameCount = 0;\r\n        this.frameTime = 0;\r\n    }\r\n    update() {\r\n        let now = Date.now() / 1000;\r\n        this.delta = now - this.lastTime;\r\n        this.frameTime += this.delta;\r\n        this.totalTime += this.delta;\r\n        if (this.delta > this.maxDelta)\r\n            this.delta = this.maxDelta;\r\n        this.lastTime = now;\r\n        this.frameCount++;\r\n        if (this.frameTime > 1) {\r\n            this.framesPerSecond = this.frameCount / this.frameTime;\r\n            this.frameTime = 0;\r\n            this.frameCount = 0;\r\n        }\r\n    }\r\n}\r\nexports.TimeKeeper = TimeKeeper;\r\nclass WindowedMean {\r\n    constructor(windowSize = 32) {\r\n        this.addedValues = 0;\r\n        this.lastValue = 0;\r\n        this.mean = 0;\r\n        this.dirty = true;\r\n        this.values = new Array(windowSize);\r\n    }\r\n    hasEnoughData() {\r\n        return this.addedValues >= this.values.length;\r\n    }\r\n    addValue(value) {\r\n        if (this.addedValues < this.values.length)\r\n            this.addedValues++;\r\n        this.values[this.lastValue++] = value;\r\n        if (this.lastValue > this.values.length - 1)\r\n            this.lastValue = 0;\r\n        this.dirty = true;\r\n    }\r\n    getMean() {\r\n        if (this.hasEnoughData()) {\r\n            if (this.dirty) {\r\n                let mean = 0;\r\n                for (let i = 0; i < this.values.length; i++)\r\n                    mean += this.values[i];\r\n                this.mean = mean / this.values.length;\r\n                this.dirty = false;\r\n            }\r\n            return this.mean;\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nexports.WindowedMean = WindowedMean;\r\nconst createGameLoop = (update) => {\r\n    let lastUpdate = Date.now();\r\n    let fps = 0;\r\n    let running = true;\r\n    let requestId;\r\n    let frameInLastSecond = 0;\r\n    let elapsed = 0;\r\n    function loop() {\r\n        if (running) {\r\n            const delta = Date.now() - lastUpdate;\r\n            lastUpdate = Date.now();\r\n            frameInLastSecond++;\r\n            elapsed += delta;\r\n            if (elapsed >= 1000) {\r\n                fps = frameInLastSecond;\r\n                frameInLastSecond = 0;\r\n                elapsed -= 1000;\r\n            }\r\n            requestId = requestAnimationFrame(loop);\r\n            update(delta / 1000);\r\n        }\r\n    }\r\n    loop();\r\n    return {\r\n        isRunning: () => running,\r\n        start: () => {\r\n            if (!running) {\r\n                running = true;\r\n                loop();\r\n            }\r\n        },\r\n        stop: () => {\r\n            if (requestId) {\r\n                cancelAnimationFrame(requestId);\r\n            }\r\n            running = false;\r\n        },\r\n        getFps: () => fps\r\n    };\r\n};\r\nexports.createGameLoop = createGameLoop;\r\nconst resizeCanvas = (canvas, deviceRatio) => {\r\n    const devicePixelRatio = deviceRatio || window.devicePixelRatio || 1;\r\n    const displayWidth = canvas.clientWidth * devicePixelRatio;\r\n    const displayHeight = canvas.clientHeight * devicePixelRatio;\r\n    if (canvas.width !== displayWidth || canvas.height !== displayHeight) {\r\n        canvas.width = displayWidth;\r\n        canvas.height = displayHeight;\r\n    }\r\n    return [displayWidth, displayHeight];\r\n};\r\nexports.resizeCanvas = resizeCanvas;\r\nconst pointInRect = (pX, pY, x, y, width, height) => {\r\n    return pX > x && pX < x + width && pY > y && pY < y + height;\r\n};\r\nexports.pointInRect = pointInRect;\r\nconst createStage = (options) => {\r\n    const defaultOptions = {\r\n        hidden: false,\r\n        info: true\r\n    };\r\n    options = Object.assign(Object.assign({}, defaultOptions), options);\r\n    const wrapper = document.createElement('div');\r\n    wrapper.setAttribute('style', `position:fixed;top:0;left:0;right:0;bottom:0;`);\r\n    if (options.wrapperClassName) {\r\n        wrapper.className = options.wrapperClassName;\r\n    }\r\n    if (options.hidden) {\r\n        wrapper.style.display = 'none';\r\n    }\r\n    const canvas = document.createElement('canvas');\r\n    canvas.setAttribute('style', `width:100%;height:100%;`);\r\n    const info = document.createElement('div');\r\n    info.setAttribute('style', `position:absolute;top:1em;left:1em;color:white`);\r\n    if (!options.info) {\r\n        info.style.display = 'none';\r\n    }\r\n    wrapper.appendChild(canvas);\r\n    wrapper.appendChild(info);\r\n    document.body.appendChild(wrapper);\r\n    return {\r\n        getCanvas: () => canvas,\r\n        getInfo: () => info,\r\n        show: () => (wrapper.style.display = 'block'),\r\n        hide: () => (wrapper.style.display = 'none'),\r\n        cleanup: () => document.body.removeChild(wrapper)\r\n    };\r\n};\r\nexports.createStage = createStage;\r\nconst copyArray = (src, target, targetOffset = 0, srcOffset = 0, count = target.length) => {\r\n    for (let i = 0; i < count; i++) {\r\n        target[targetOffset + i] = src[srcOffset + i];\r\n    }\r\n};\r\nexports.copyArray = copyArray;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}