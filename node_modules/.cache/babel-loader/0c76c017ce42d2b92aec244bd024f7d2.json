{"ast":null,"code":"import _initializerDefineProperty from \"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js\";\nimport _applyDecoratedDescriptor from \"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\";\nimport _initializerWarningHelper from \"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper.js\";\n\nvar _dec, _dec2, _dec3, _dec4, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;\n\nimport { System, Inject } from \"flat-ecs\";\nexport let NextLevelSystem = (_dec = Inject(\"physicWorld\"), _dec2 = Inject(\"levelState\"), _dec3 = Inject(\"bird\"), _dec4 = Inject(\"pigs\"), (_class = class NextLevelSystem extends System {\n  constructor() {\n    super(...arguments);\n\n    _initializerDefineProperty(this, \"physicWorld\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"levelState\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"bird\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"pigs\", _descriptor4, this);\n  }\n\n  initialized() {}\n\n  process() {\n    if (this.pigs.length === 0) {\n      this.levelState.conditionWin = true; // this.levelState.birdCount = 0;\n    }\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"physicWorld\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"levelState\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"bird\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"pigs\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class));","map":{"version":3,"names":["System","Inject","NextLevelSystem","initialized","process","pigs","length","levelState","conditionWin"],"sources":["D:/projects/test-game/src/system/NextLevelSystem.ts"],"sourcesContent":["import { b2Body, b2World } from \"box2d.ts\";\r\nimport { System, Inject } from \"flat-ecs\";\r\nimport { LevelState } from \"../data/LevelState\";\r\n\r\nexport class NextLevelSystem extends System {\r\n  @Inject(\"physicWorld\") physicWorld: b2World;\r\n  @Inject(\"levelState\") levelState: LevelState;\r\n  @Inject(\"bird\") bird: b2Body[];\r\n  @Inject(\"pigs\") pigs: b2Body[];\r\n\r\n  initialized() {}\r\n\r\n  process(): void {\r\n    if (this.pigs.length === 0) {\r\n      this.levelState.conditionWin = true;\r\n      // this.levelState.birdCount = 0;\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;;;;;AACA,SAASA,MAAT,EAAiBC,MAAjB,QAA+B,UAA/B;AAGA,WAAaC,eAAb,WACGD,MAAM,CAAC,aAAD,CADT,UAEGA,MAAM,CAAC,YAAD,CAFT,UAGGA,MAAM,CAAC,MAAD,CAHT,UAIGA,MAAM,CAAC,MAAD,CAJT,YAAO,MAAMC,eAAN,SAA8BF,MAA9B,CAAqC;EAAA;IAAA;;IAAA;;IAAA;;IAAA;;IAAA;EAAA;;EAM1CG,WAAW,GAAG,CAAE;;EAEhBC,OAAO,GAAS;IACd,IAAI,KAAKC,IAAL,CAAUC,MAAV,KAAqB,CAAzB,EAA4B;MAC1B,KAAKC,UAAL,CAAgBC,YAAhB,GAA+B,IAA/B,CAD0B,CAE1B;IACD;EACF;;AAbyC,CAA5C;EAAA;EAAA;EAAA;EAAA;AAAA;EAAA;EAAA;EAAA;EAAA;AAAA;EAAA;EAAA;EAAA;EAAA;AAAA;EAAA;EAAA;EAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}