{"ast":null,"code":"import { createStage, createViewport, createGameLoop, ShapeRenderer, Texture, TextureRegion, PolygonBatch, Animation, PlayMode, ViewportInputHandler, InputEvent, Vector2 } from \"gdxts\";\nexport const initTest2 = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext(); // eslint-disable-next-line\n  // const texture = await Texture.load(gl, \"./charizard.png\");\n\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n  const walkDownAnimation = new Animation(regions.slice(0, 4), 0.2);\n  const walkLeftAnimation = new Animation(regions.slice(4, 8), 0.2);\n  const walkRightAnimation = new Animation(regions.slice(8, 12), 0.2);\n  const walkUpAnimation = new Animation(regions.slice(12, 16), 0.2);\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  const characterPosition = new Vector2(250, 500);\n  let rotation = 0; // const ROTATION_SPEED = Math.PI * 2;\n\n  let frame = 0;\n  gl.clearColor(0, 0, 0, 1);\n  let nextPositon = new Vector2(250, 500);\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    nextPositon = inputHandler.getTouchedWorldCoord();\n    rotation = Math.atan2(nextPositon.y - characterPosition.y, nextPositon.x - characterPosition.x) * 180 / Math.PI;\n    console.log(rotation);\n  });\n  const moveSpeed = 150;\n  createGameLoop(delta => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n    let region = walkDownAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n\n    if (characterPosition.x !== nextPositon.x || characterPosition.y !== nextPositon.y) {\n      frame += delta;\n\n      if (characterPosition.x < nextPositon.x) {\n        region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n        characterPosition.x = Math.min(characterPosition.x + delta * moveSpeed, nextPositon.x);\n      }\n\n      if (characterPosition.y < nextPositon.y) {\n        region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n        characterPosition.y = Math.min(characterPosition.y + delta * moveSpeed, nextPositon.y);\n      }\n\n      if (characterPosition.x > nextPositon.x) {\n        region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n        characterPosition.x = Math.max(characterPosition.x - delta * moveSpeed, nextPositon.x);\n      }\n\n      if (characterPosition.y > nextPositon.y) {\n        region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n        characterPosition.y = Math.max(characterPosition.y - delta * moveSpeed, nextPositon.y);\n      }\n    } else {\n      frame = 0;\n    }\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin(); // console.log(frame);\n\n    region.draw(batch, characterPosition.x - 50, characterPosition.y, 100, 100);\n    batch.end();\n  });\n};","map":{"version":3,"names":["createStage","createViewport","createGameLoop","ShapeRenderer","Texture","TextureRegion","PolygonBatch","Animation","PlayMode","ViewportInputHandler","InputEvent","Vector2","initTest2","stage","canvas","getCanvas","viewport","gl","getContext","characterTexture","load","regions","splitTexture","walkDownAnimation","slice","walkLeftAnimation","walkRightAnimation","walkUpAnimation","shapeRenderer","batch","camera","getCamera","inputHandler","characterPosition","rotation","frame","clearColor","nextPositon","addEventListener","TouchStart","x","y","getTouchedWorldCoord","Math","atan2","PI","console","log","moveSpeed","delta","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end","region","getKeyFrame","NORMAL","LOOP","min","max","draw"],"sources":["D:/projects/test-game/src/test2.ts"],"sourcesContent":["import {\r\n  createStage,\r\n  createViewport,\r\n  createGameLoop,\r\n  ShapeRenderer,\r\n  Texture,\r\n  TextureRegion,\r\n  PolygonBatch,\r\n  Animation,\r\n  PlayMode,\r\n  ViewportInputHandler,\r\n  InputEvent,\r\n  Vector2,\r\n} from \"gdxts\";\r\n\r\nexport const initTest2 = async () => {\r\n  const stage = createStage();\r\n  const canvas = stage.getCanvas();\r\n  const viewport = createViewport(canvas, 500, 1000);\r\n  const gl = viewport.getContext();\r\n\r\n  // eslint-disable-next-line\r\n  // const texture = await Texture.load(gl, \"./charizard.png\");\r\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\r\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\r\n\r\n  const walkDownAnimation = new Animation(regions.slice(0, 4), 0.2);\r\n  const walkLeftAnimation = new Animation(regions.slice(4, 8), 0.2);\r\n  const walkRightAnimation = new Animation(regions.slice(8, 12), 0.2);\r\n  const walkUpAnimation = new Animation(regions.slice(12, 16), 0.2);\r\n\r\n  const shapeRenderer = new ShapeRenderer(gl);\r\n  const batch = new PolygonBatch(gl);\r\n  const camera = viewport.getCamera();\r\n\r\n  const inputHandler = new ViewportInputHandler(viewport);\r\n  const characterPosition = new Vector2(250, 500);\r\n\r\n  let rotation = 0;\r\n  // const ROTATION_SPEED = Math.PI * 2;\r\n  let frame = 0;\r\n  gl.clearColor(0, 0, 0, 1);\r\n\r\n  let nextPositon = new Vector2(250, 500);\r\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\r\n    nextPositon = inputHandler.getTouchedWorldCoord();\r\n    rotation =\r\n      (Math.atan2(\r\n        nextPositon.y - characterPosition.y,\r\n        nextPositon.x - characterPosition.x\r\n      ) *\r\n        180) /\r\n      Math.PI;\r\n    console.log(rotation);\r\n  });\r\n\r\n  const moveSpeed = 150;\r\n\r\n  createGameLoop((delta: number) => {\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    shapeRenderer.setProjection(camera.projectionView.values);\r\n    shapeRenderer.begin();\r\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\r\n    shapeRenderer.end();\r\n    let region = walkDownAnimation.getKeyFrame(frame, PlayMode.NORMAL);\r\n\r\n    if (\r\n      characterPosition.x !== nextPositon.x ||\r\n      characterPosition.y !== nextPositon.y\r\n    ) {\r\n      frame += delta;\r\n      if (characterPosition.x < nextPositon.x) {\r\n        region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\r\n        characterPosition.x = Math.min(\r\n          characterPosition.x + delta * moveSpeed,\r\n          nextPositon.x\r\n        );\r\n      }\r\n      if (characterPosition.y < nextPositon.y) {\r\n        region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\r\n        characterPosition.y = Math.min(\r\n          characterPosition.y + delta * moveSpeed,\r\n          nextPositon.y\r\n        );\r\n      }\r\n      if (characterPosition.x > nextPositon.x) {\r\n        region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\r\n        characterPosition.x = Math.max(\r\n          characterPosition.x - delta * moveSpeed,\r\n          nextPositon.x\r\n        );\r\n      }\r\n\r\n      if (characterPosition.y > nextPositon.y) {\r\n        region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\r\n        characterPosition.y = Math.max(\r\n          characterPosition.y - delta * moveSpeed,\r\n          nextPositon.y\r\n        );\r\n      }\r\n    } else {\r\n      frame = 0;\r\n    }\r\n\r\n    batch.setProjection(camera.projectionView.values);\r\n    batch.begin();\r\n    // console.log(frame);\r\n    region.draw(batch, characterPosition.x - 50, characterPosition.y, 100, 100);\r\n    batch.end();\r\n  });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}