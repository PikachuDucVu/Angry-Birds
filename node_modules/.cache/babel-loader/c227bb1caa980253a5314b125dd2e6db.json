{"ast":null,"code":"export default (update => {\n  let lastUpdate = Date.now();\n  let fps = 0;\n  let running = true;\n  let requestId;\n  let frameInLastSecond = 0;\n  let elapsed = 0;\n\n  function loop() {\n    if (running) {\n      const delta = Date.now() - lastUpdate;\n      lastUpdate = Date.now();\n      frameInLastSecond++;\n      elapsed += delta;\n\n      if (elapsed >= 1000) {\n        fps = frameInLastSecond;\n        frameInLastSecond = 0;\n        elapsed -= 1000;\n      }\n\n      requestId = requestAnimationFrame(loop);\n      update(delta / 1000);\n    }\n  }\n\n  loop();\n  return {\n    isRunning: () => running,\n    start: () => {\n      if (!running) {\n        running = true;\n        loop();\n      }\n    },\n    stop: () => {\n      if (requestId) {\n        cancelAnimationFrame(requestId);\n      }\n\n      running = false;\n    },\n    getFps: () => fps\n  };\n});","map":{"version":3,"names":["update","lastUpdate","Date","now","fps","running","requestId","frameInLastSecond","elapsed","loop","delta","requestAnimationFrame","isRunning","start","stop","cancelAnimationFrame","getFps"],"sources":["D:/projects/test-game/node_modules/gdxjs/lib/createGameLoop.js"],"sourcesContent":["export default (update => {\n  let lastUpdate = Date.now();\n  let fps = 0;\n  let running = true;\n  let requestId;\n  let frameInLastSecond = 0;\n  let elapsed = 0;\n\n  function loop() {\n    if (running) {\n      const delta = Date.now() - lastUpdate;\n      lastUpdate = Date.now();\n      frameInLastSecond++;\n      elapsed += delta;\n\n      if (elapsed >= 1000) {\n        fps = frameInLastSecond;\n        frameInLastSecond = 0;\n        elapsed -= 1000;\n      }\n\n      requestId = requestAnimationFrame(loop);\n      update(delta / 1000);\n    }\n  }\n\n  loop();\n  return {\n    isRunning: () => running,\n    start: () => {\n      if (!running) {\n        running = true;\n        loop();\n      }\n    },\n    stop: () => {\n      if (requestId) {\n        cancelAnimationFrame(requestId);\n      }\n\n      running = false;\n    },\n    getFps: () => fps\n  };\n});"],"mappings":"AAAA,gBAAgBA,MAAM,IAAI;EACxB,IAAIC,UAAU,GAAGC,IAAI,CAACC,GAAL,EAAjB;EACA,IAAIC,GAAG,GAAG,CAAV;EACA,IAAIC,OAAO,GAAG,IAAd;EACA,IAAIC,SAAJ;EACA,IAAIC,iBAAiB,GAAG,CAAxB;EACA,IAAIC,OAAO,GAAG,CAAd;;EAEA,SAASC,IAAT,GAAgB;IACd,IAAIJ,OAAJ,EAAa;MACX,MAAMK,KAAK,GAAGR,IAAI,CAACC,GAAL,KAAaF,UAA3B;MACAA,UAAU,GAAGC,IAAI,CAACC,GAAL,EAAb;MACAI,iBAAiB;MACjBC,OAAO,IAAIE,KAAX;;MAEA,IAAIF,OAAO,IAAI,IAAf,EAAqB;QACnBJ,GAAG,GAAGG,iBAAN;QACAA,iBAAiB,GAAG,CAApB;QACAC,OAAO,IAAI,IAAX;MACD;;MAEDF,SAAS,GAAGK,qBAAqB,CAACF,IAAD,CAAjC;MACAT,MAAM,CAACU,KAAK,GAAG,IAAT,CAAN;IACD;EACF;;EAEDD,IAAI;EACJ,OAAO;IACLG,SAAS,EAAE,MAAMP,OADZ;IAELQ,KAAK,EAAE,MAAM;MACX,IAAI,CAACR,OAAL,EAAc;QACZA,OAAO,GAAG,IAAV;QACAI,IAAI;MACL;IACF,CAPI;IAQLK,IAAI,EAAE,MAAM;MACV,IAAIR,SAAJ,EAAe;QACbS,oBAAoB,CAACT,SAAD,CAApB;MACD;;MAEDD,OAAO,GAAG,KAAV;IACD,CAdI;IAeLW,MAAM,EAAE,MAAMZ;EAfT,CAAP;AAiBD,CA5CD"},"metadata":{},"sourceType":"module"}