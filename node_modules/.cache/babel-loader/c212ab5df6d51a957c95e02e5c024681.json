{"ast":null,"code":"import { b2BodyDef, b2BodyType, b2ContactListener, b2PolygonShape, b2World } from \"box2d.ts\";\nimport { World } from \"flat-ecs\";\nimport { PolygonBatch, ShapeRenderer, Vector2, ViewportInputHandler } from \"gdxts\";\nimport { Constants } from \"../Constants\";\nimport { BackgroundRenderSystem } from \"../system/BackgroundRenderSystem\";\nimport { BirdRenderSystem } from \"../system/BirdRenderSystem\";\nimport { BoxAndPigSystem } from \"../system/BoxAndPigSystem\";\nimport { BoxesAndPigsRenderSystem } from \"../system/BoxesAndPigsRenderSystem\";\nimport { ContactListenerSystem } from \"../system/ContactListenerSystem\";\nimport { inputHandlerSystem } from \"../system/inputHandleSystem\";\nimport { NextLevelSystem } from \"../system/NextLevelSystem\";\nimport { ShapeRendererSystem } from \"../system/ShapeRendererSystem\";\nimport { SlingshotRenderSystem } from \"../system/SlingshotRenderSystem\";\nimport { createBall } from \"../utils/gameUtil\";\nconst levelState = {\n  birdCount: 0,\n  conditionWin: false,\n  currentLevel: 1,\n  transition: false,\n  remainingTimeOfUseSpecialSkill: 3\n};\nexport const createGameScreen = async (assetManager, viewport) => {\n  const createWall = (world, x, y, width, height) => {\n    const bodyDef = new b2BodyDef();\n    bodyDef.type = b2BodyType.b2_staticBody;\n    bodyDef.position.Set(x + width / 2, y + height / 2);\n    const body = world.CreateBody(bodyDef);\n    const shape = new b2PolygonShape();\n    shape.SetAsBox(width / 2, height / 2);\n    body.SetUserData(\"ground\");\n    body.CreateFixture(shape);\n  };\n\n  const createBox = (world, x, y, width, height, userData) => {\n    const bodyDef = new b2BodyDef();\n    bodyDef.type = b2BodyType.b2_dynamicBody;\n    bodyDef.position.Set(x + width / 2, y + height / 2);\n    const body = world.CreateBody(bodyDef);\n    const shape = new b2PolygonShape();\n    shape.SetAsBox(width * 0.5, height * 0.5);\n    body.SetUserData({\n      name: userData.name,\n      durability: 0\n    });\n    body.CreateFixture(shape);\n    return body;\n  };\n\n  const gl = viewport.getContext();\n  const shapeRenderer = new ShapeRenderer(gl);\n  const inputHandler = new ViewportInputHandler(viewport);\n  const camera = viewport.getCamera();\n  const batch = new PolygonBatch(gl);\n  camera.setYDown(true);\n  batch.setYDown(true);\n  const physicWorld = new b2World({\n    x: 0,\n    y: 10\n  });\n  const BALL_RADIUS = 0.2;\n  let offset = 0.5;\n  let birdNumber = 1;\n  let bird = [createBall(physicWorld, 2, 3.45, BALL_RADIUS, \"RedBird\")];\n\n  for (let i = 0; i < 1; i++) {\n    bird.push(createBall(physicWorld, 1.5 - offset * i, 3.85, BALL_RADIUS, \"RedBird\"));\n  }\n\n  for (let i = 1; i < 3; i++) {\n    bird.push(createBall(physicWorld, 1.5 - offset * i, 3.85, BALL_RADIUS, \"YellowBird\"));\n  }\n\n  const BOX_SIZE = 0.5;\n  const PIG_SIZE = 0.3;\n  let pigs = [];\n  let boxes = [];\n  let birdOnSlingShot = true;\n  let mapData;\n  levelState.transition = false;\n  levelState.birdCount = 0;\n  levelState.conditionWin = false;\n  mapData = await fetch(`./level${levelState.currentLevel}.tmj`).then(res => res.json());\n  let wallData = mapData.layers.find(l => l.name === \"walls\").objects;\n  let boxData = mapData.layers.find(b => b.name === \"boxes\").objects;\n  let pigsData = mapData.layers.find(p => p.name === \"pigs\").objects;\n\n  for (let wall of wallData) {\n    createWall(physicWorld, wall.x / Constants.METER_TO_WORLD, wall.y / Constants.METER_TO_WORLD, wall.width / Constants.METER_TO_WORLD, wall.height / Constants.METER_TO_WORLD);\n  }\n\n  for (let box of boxData) {\n    boxes.push(createBox(physicWorld, box.x / Constants.METER_TO_WORLD, box.y / Constants.METER_TO_WORLD, BOX_SIZE, BOX_SIZE, {\n      name: `box`\n    }));\n  }\n\n  for (let pig of pigsData) {\n    pigs.push(createBox(physicWorld, pig.x / Constants.METER_TO_WORLD, pig.y / Constants.METER_TO_WORLD, PIG_SIZE, PIG_SIZE, {\n      name: `pig`\n    }));\n  }\n\n  const originPosition = new Vector2(bird[0].GetPosition().x * Constants.METER_TO_WORLD, bird[0].GetPosition().y * Constants.METER_TO_WORLD);\n  let slingPos = new Vector2(bird[0].GetPosition().x * Constants.METER_TO_WORLD, bird[0].GetPosition().y * Constants.METER_TO_WORLD);\n  let specialSkillOfYellowBird = [createBall(physicWorld, bird[levelState.birdCount - 1].GetUserData().x, bird[levelState.birdCount - 1].GetUserData().y, Constants.BALL_RADIUS, \"YellowBirdClone\"), createBall(physicWorld, bird[levelState.birdCount - 1].GetUserData().x, bird[levelState.birdCount - 1].GetUserData().y, Constants.BALL_RADIUS, \"YellowBirdClone\")];\n  const world = new World();\n  const contactListener = new b2ContactListener();\n  gl.clearColor(0, 0, 0, 1);\n  physicWorld.SetContactListener(contactListener);\n  world.register(\"inputHandler\", inputHandler);\n  world.register(\"contactListener\", contactListener);\n  world.register(\"gl\", gl);\n  world.register(\"shapeRenderer\", shapeRenderer);\n  world.register(\"assetManager\", assetManager);\n  world.register(\"viewport\", viewport);\n  world.register(\"batch\", batch);\n  world.register(\"bird\", bird);\n  world.register(\"levelState\", levelState);\n  world.register(\"boxes\", boxes);\n  world.register(\"pigs\", pigs);\n  world.register(\"originPosition\", originPosition);\n  world.register(\"slingPos\", slingPos);\n  world.register(\"physicWorld\", physicWorld);\n  world.register(\"birdOnSlingShot\", birdOnSlingShot);\n  world.register(\"birdNumber\", birdNumber);\n  world.register(\"specialSkillOfYellowBird\", specialSkillOfYellowBird);\n  world.addSystem(new BackgroundRenderSystem(), false);\n  world.addSystem(new ShapeRendererSystem(), false);\n  world.addSystem(new inputHandlerSystem(), false);\n  world.addSystem(new BirdRenderSystem(), false);\n  world.addSystem(new BoxesAndPigsRenderSystem(), false);\n  world.addSystem(new BoxAndPigSystem(), false);\n  world.addSystem(new SlingshotRenderSystem(), false);\n  world.addSystem(new ContactListenerSystem(), false);\n  world.addSystem(new NextLevelSystem(), false);\n  return {\n    update(delta) {\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      batch.setProjection(camera.combined);\n      shapeRenderer.setProjection(camera.combined);\n      world.setDelta(delta);\n      world.processActiveSystem();\n      world.processPassiveSystem();\n      physicWorld.Step(delta, 8, 3);\n      levelState.remainingTimeOfUseSpecialSkill -= delta;\n    },\n\n    dispose() {\n      batch.dispose();\n      inputHandler.cleanup();\n    }\n\n  };\n};","map":{"version":3,"names":["b2BodyDef","b2BodyType","b2ContactListener","b2PolygonShape","b2World","World","PolygonBatch","ShapeRenderer","Vector2","ViewportInputHandler","Constants","BackgroundRenderSystem","BirdRenderSystem","BoxAndPigSystem","BoxesAndPigsRenderSystem","ContactListenerSystem","inputHandlerSystem","NextLevelSystem","ShapeRendererSystem","SlingshotRenderSystem","createBall","levelState","birdCount","conditionWin","currentLevel","transition","remainingTimeOfUseSpecialSkill","createGameScreen","assetManager","viewport","createWall","world","x","y","width","height","bodyDef","type","b2_staticBody","position","Set","body","CreateBody","shape","SetAsBox","SetUserData","CreateFixture","createBox","userData","b2_dynamicBody","name","durability","gl","getContext","shapeRenderer","inputHandler","camera","getCamera","batch","setYDown","physicWorld","BALL_RADIUS","offset","birdNumber","bird","i","push","BOX_SIZE","PIG_SIZE","pigs","boxes","birdOnSlingShot","mapData","fetch","then","res","json","wallData","layers","find","l","objects","boxData","b","pigsData","p","wall","METER_TO_WORLD","box","pig","originPosition","GetPosition","slingPos","specialSkillOfYellowBird","GetUserData","contactListener","clearColor","SetContactListener","register","addSystem","update","delta","clear","COLOR_BUFFER_BIT","setProjection","combined","setDelta","processActiveSystem","processPassiveSystem","Step","dispose","cleanup"],"sources":["D:/projects/test-game/src/screen/GameScreen.ts"],"sourcesContent":["import {\r\n  b2Body,\r\n  b2BodyDef,\r\n  b2BodyType,\r\n  b2CircleShape,\r\n  b2ContactListener,\r\n  b2FixtureDef,\r\n  b2PolygonShape,\r\n  b2World,\r\n} from \"box2d.ts\";\r\nimport { World } from \"flat-ecs\";\r\nimport {\r\n  AssetManager,\r\n  PolygonBatch,\r\n  Screen,\r\n  ShapeRenderer,\r\n  Vector2,\r\n  Viewport,\r\n  ViewportInputHandler,\r\n} from \"gdxts\";\r\nimport { Constants } from \"../Constants\";\r\nimport { LevelState } from \"../data/LevelState\";\r\nimport { BackgroundRenderSystem } from \"../system/BackgroundRenderSystem\";\r\nimport { BirdRenderSystem } from \"../system/BirdRenderSystem\";\r\nimport { BoxAndPigSystem } from \"../system/BoxAndPigSystem\";\r\nimport { BoxesAndPigsRenderSystem } from \"../system/BoxesAndPigsRenderSystem\";\r\nimport { ContactListenerSystem } from \"../system/ContactListenerSystem\";\r\nimport { inputHandlerSystem } from \"../system/inputHandleSystem\";\r\nimport { NextLevelSystem } from \"../system/NextLevelSystem\";\r\nimport { ShapeRendererSystem } from \"../system/ShapeRendererSystem\";\r\nimport { SlingshotRenderSystem } from \"../system/SlingshotRenderSystem\";\r\nimport { createBall } from \"../utils/gameUtil\";\r\n\r\nconst levelState: LevelState = {\r\n  birdCount: 0,\r\n  conditionWin: false,\r\n  currentLevel: 1,\r\n  transition: false,\r\n  remainingTimeOfUseSpecialSkill: 3,\r\n};\r\n\r\nexport const createGameScreen = async (\r\n  assetManager: AssetManager,\r\n  viewport: Viewport\r\n): Promise<Screen> => {\r\n  const createWall = (\r\n    world: b2World,\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ) => {\r\n    const bodyDef = new b2BodyDef();\r\n    bodyDef.type = b2BodyType.b2_staticBody;\r\n    bodyDef.position.Set(x + width / 2, y + height / 2);\r\n    const body = world.CreateBody(bodyDef);\r\n    const shape = new b2PolygonShape();\r\n    shape.SetAsBox(width / 2, height / 2);\r\n    body.SetUserData(\"ground\");\r\n    body.CreateFixture(shape);\r\n  };\r\n\r\n  const createBox = (\r\n    world: b2World,\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number,\r\n    userData: {\r\n      name: string;\r\n    }\r\n  ): b2Body => {\r\n    const bodyDef = new b2BodyDef();\r\n    bodyDef.type = b2BodyType.b2_dynamicBody;\r\n    bodyDef.position.Set(x + width / 2, y + height / 2);\r\n    const body = world.CreateBody(bodyDef);\r\n    const shape = new b2PolygonShape();\r\n    shape.SetAsBox(width * 0.5, height * 0.5);\r\n    body.SetUserData({\r\n      name: userData.name,\r\n      durability: 0,\r\n    });\r\n    body.CreateFixture(shape);\r\n    return body;\r\n  };\r\n\r\n  const gl = viewport.getContext();\r\n  const shapeRenderer = new ShapeRenderer(gl);\r\n  const inputHandler = new ViewportInputHandler(viewport);\r\n  const camera = viewport.getCamera();\r\n  const batch = new PolygonBatch(gl);\r\n  camera.setYDown(true);\r\n  batch.setYDown(true);\r\n\r\n  const physicWorld = new b2World({\r\n    x: 0,\r\n    y: 10,\r\n  });\r\n  const BALL_RADIUS = 0.2;\r\n\r\n  let offset = 0.5;\r\n  let birdNumber = 1;\r\n  let bird: b2Body[] = [\r\n    createBall(physicWorld, 2, 3.45, BALL_RADIUS, \"RedBird\"),\r\n  ];\r\n\r\n  for (let i = 0; i < 1; i++) {\r\n    bird.push(\r\n      createBall(physicWorld, 1.5 - offset * i, 3.85, BALL_RADIUS, \"RedBird\")\r\n    );\r\n  }\r\n  for (let i = 1; i < 3; i++) {\r\n    bird.push(\r\n      createBall(physicWorld, 1.5 - offset * i, 3.85, BALL_RADIUS, \"YellowBird\")\r\n    );\r\n  }\r\n  const BOX_SIZE = 0.5;\r\n  const PIG_SIZE = 0.3;\r\n  let pigs: b2Body[] = [];\r\n  let boxes: b2Body[] = [];\r\n  let birdOnSlingShot = true;\r\n  let mapData: any;\r\n  levelState.transition = false;\r\n  levelState.birdCount = 0;\r\n  levelState.conditionWin = false;\r\n\r\n  mapData = await fetch(`./level${levelState.currentLevel}.tmj`).then((res) =>\r\n    res.json()\r\n  );\r\n\r\n  let wallData = mapData.layers.find((l: any) => l.name === \"walls\").objects;\r\n  let boxData = mapData.layers.find((b: any) => b.name === \"boxes\").objects;\r\n  let pigsData = mapData.layers.find((p: any) => p.name === \"pigs\").objects;\r\n\r\n  for (let wall of wallData) {\r\n    createWall(\r\n      physicWorld,\r\n      wall.x / Constants.METER_TO_WORLD,\r\n      wall.y / Constants.METER_TO_WORLD,\r\n      wall.width / Constants.METER_TO_WORLD,\r\n      wall.height / Constants.METER_TO_WORLD\r\n    );\r\n  }\r\n  for (let box of boxData) {\r\n    boxes.push(\r\n      createBox(\r\n        physicWorld,\r\n        box.x / Constants.METER_TO_WORLD,\r\n        box.y / Constants.METER_TO_WORLD,\r\n        BOX_SIZE,\r\n        BOX_SIZE,\r\n        {\r\n          name: `box`,\r\n        }\r\n      )\r\n    );\r\n  }\r\n  for (let pig of pigsData) {\r\n    pigs.push(\r\n      createBox(\r\n        physicWorld,\r\n        pig.x / Constants.METER_TO_WORLD,\r\n        pig.y / Constants.METER_TO_WORLD,\r\n        PIG_SIZE,\r\n        PIG_SIZE,\r\n        {\r\n          name: `pig`,\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  const originPosition = new Vector2(\r\n    bird[0].GetPosition().x * Constants.METER_TO_WORLD,\r\n    bird[0].GetPosition().y * Constants.METER_TO_WORLD\r\n  );\r\n  let slingPos = new Vector2(\r\n    bird[0].GetPosition().x * Constants.METER_TO_WORLD,\r\n    bird[0].GetPosition().y * Constants.METER_TO_WORLD\r\n  );\r\n  let specialSkillOfYellowBird = [\r\n    createBall(\r\n      physicWorld,\r\n      bird[levelState.birdCount - 1].GetUserData().x,\r\n      bird[levelState.birdCount - 1].GetUserData().y,\r\n      Constants.BALL_RADIUS,\r\n      \"YellowBirdClone\"\r\n    ),\r\n    createBall(\r\n      physicWorld,\r\n      bird[levelState.birdCount - 1].GetUserData().x,\r\n      bird[levelState.birdCount - 1].GetUserData().y,\r\n      Constants.BALL_RADIUS,\r\n      \"YellowBirdClone\"\r\n    ),\r\n  ];\r\n\r\n  const world = new World();\r\n  const contactListener = new b2ContactListener();\r\n\r\n  gl.clearColor(0, 0, 0, 1);\r\n  physicWorld.SetContactListener(contactListener);\r\n\r\n  world.register(\"inputHandler\", inputHandler);\r\n  world.register(\"contactListener\", contactListener);\r\n  world.register(\"gl\", gl);\r\n  world.register(\"shapeRenderer\", shapeRenderer);\r\n  world.register(\"assetManager\", assetManager);\r\n  world.register(\"viewport\", viewport);\r\n  world.register(\"batch\", batch);\r\n  world.register(\"bird\", bird);\r\n  world.register(\"levelState\", levelState);\r\n  world.register(\"boxes\", boxes);\r\n  world.register(\"pigs\", pigs);\r\n  world.register(\"originPosition\", originPosition);\r\n  world.register(\"slingPos\", slingPos);\r\n  world.register(\"physicWorld\", physicWorld);\r\n  world.register(\"birdOnSlingShot\", birdOnSlingShot);\r\n  world.register(\"birdNumber\", birdNumber);\r\n  world.register(\"specialSkillOfYellowBird\", specialSkillOfYellowBird);\r\n\r\n  world.addSystem(new BackgroundRenderSystem(), false);\r\n  world.addSystem(new ShapeRendererSystem(), false);\r\n  world.addSystem(new inputHandlerSystem(), false);\r\n  world.addSystem(new BirdRenderSystem(), false);\r\n  world.addSystem(new BoxesAndPigsRenderSystem(), false);\r\n  world.addSystem(new BoxAndPigSystem(), false);\r\n  world.addSystem(new SlingshotRenderSystem(), false);\r\n  world.addSystem(new ContactListenerSystem(), false);\r\n  world.addSystem(new NextLevelSystem(), false);\r\n\r\n  return {\r\n    update(delta: number) {\r\n      gl.clear(gl.COLOR_BUFFER_BIT);\r\n      batch.setProjection(camera.combined);\r\n      shapeRenderer.setProjection(camera.combined);\r\n      world.setDelta(delta);\r\n      world.processActiveSystem();\r\n      world.processPassiveSystem();\r\n      physicWorld.Step(delta, 8, 3);\r\n      levelState.remainingTimeOfUseSpecialSkill -= delta;\r\n    },\r\n    dispose(): void {\r\n      batch.dispose();\r\n      inputHandler.cleanup();\r\n    },\r\n  };\r\n};\r\n"],"mappings":"AAAA,SAEEA,SAFF,EAGEC,UAHF,EAKEC,iBALF,EAOEC,cAPF,EAQEC,OARF,QASO,UATP;AAUA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAEEC,YAFF,EAIEC,aAJF,EAKEC,OALF,EAOEC,oBAPF,QAQO,OARP;AASA,SAASC,SAAT,QAA0B,cAA1B;AAEA,SAASC,sBAAT,QAAuC,kCAAvC;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,wBAAT,QAAyC,oCAAzC;AACA,SAASC,qBAAT,QAAsC,iCAAtC;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,mBAAT,QAAoC,+BAApC;AACA,SAASC,qBAAT,QAAsC,iCAAtC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,MAAMC,UAAsB,GAAG;EAC7BC,SAAS,EAAE,CADkB;EAE7BC,YAAY,EAAE,KAFe;EAG7BC,YAAY,EAAE,CAHe;EAI7BC,UAAU,EAAE,KAJiB;EAK7BC,8BAA8B,EAAE;AALH,CAA/B;AAQA,OAAO,MAAMC,gBAAgB,GAAG,OAC9BC,YAD8B,EAE9BC,QAF8B,KAGV;EACpB,MAAMC,UAAU,GAAG,CACjBC,KADiB,EAEjBC,CAFiB,EAGjBC,CAHiB,EAIjBC,KAJiB,EAKjBC,MALiB,KAMd;IACH,MAAMC,OAAO,GAAG,IAAIpC,SAAJ,EAAhB;IACAoC,OAAO,CAACC,IAAR,GAAepC,UAAU,CAACqC,aAA1B;IACAF,OAAO,CAACG,QAAR,CAAiBC,GAAjB,CAAqBR,CAAC,GAAGE,KAAK,GAAG,CAAjC,EAAoCD,CAAC,GAAGE,MAAM,GAAG,CAAjD;IACA,MAAMM,IAAI,GAAGV,KAAK,CAACW,UAAN,CAAiBN,OAAjB,CAAb;IACA,MAAMO,KAAK,GAAG,IAAIxC,cAAJ,EAAd;IACAwC,KAAK,CAACC,QAAN,CAAeV,KAAK,GAAG,CAAvB,EAA0BC,MAAM,GAAG,CAAnC;IACAM,IAAI,CAACI,WAAL,CAAiB,QAAjB;IACAJ,IAAI,CAACK,aAAL,CAAmBH,KAAnB;EACD,CAfD;;EAiBA,MAAMI,SAAS,GAAG,CAChBhB,KADgB,EAEhBC,CAFgB,EAGhBC,CAHgB,EAIhBC,KAJgB,EAKhBC,MALgB,EAMhBa,QANgB,KASL;IACX,MAAMZ,OAAO,GAAG,IAAIpC,SAAJ,EAAhB;IACAoC,OAAO,CAACC,IAAR,GAAepC,UAAU,CAACgD,cAA1B;IACAb,OAAO,CAACG,QAAR,CAAiBC,GAAjB,CAAqBR,CAAC,GAAGE,KAAK,GAAG,CAAjC,EAAoCD,CAAC,GAAGE,MAAM,GAAG,CAAjD;IACA,MAAMM,IAAI,GAAGV,KAAK,CAACW,UAAN,CAAiBN,OAAjB,CAAb;IACA,MAAMO,KAAK,GAAG,IAAIxC,cAAJ,EAAd;IACAwC,KAAK,CAACC,QAAN,CAAeV,KAAK,GAAG,GAAvB,EAA4BC,MAAM,GAAG,GAArC;IACAM,IAAI,CAACI,WAAL,CAAiB;MACfK,IAAI,EAAEF,QAAQ,CAACE,IADA;MAEfC,UAAU,EAAE;IAFG,CAAjB;IAIAV,IAAI,CAACK,aAAL,CAAmBH,KAAnB;IACA,OAAOF,IAAP;EACD,CAtBD;;EAwBA,MAAMW,EAAE,GAAGvB,QAAQ,CAACwB,UAAT,EAAX;EACA,MAAMC,aAAa,GAAG,IAAI/C,aAAJ,CAAkB6C,EAAlB,CAAtB;EACA,MAAMG,YAAY,GAAG,IAAI9C,oBAAJ,CAAyBoB,QAAzB,CAArB;EACA,MAAM2B,MAAM,GAAG3B,QAAQ,CAAC4B,SAAT,EAAf;EACA,MAAMC,KAAK,GAAG,IAAIpD,YAAJ,CAAiB8C,EAAjB,CAAd;EACAI,MAAM,CAACG,QAAP,CAAgB,IAAhB;EACAD,KAAK,CAACC,QAAN,CAAe,IAAf;EAEA,MAAMC,WAAW,GAAG,IAAIxD,OAAJ,CAAY;IAC9B4B,CAAC,EAAE,CAD2B;IAE9BC,CAAC,EAAE;EAF2B,CAAZ,CAApB;EAIA,MAAM4B,WAAW,GAAG,GAApB;EAEA,IAAIC,MAAM,GAAG,GAAb;EACA,IAAIC,UAAU,GAAG,CAAjB;EACA,IAAIC,IAAc,GAAG,CACnB5C,UAAU,CAACwC,WAAD,EAAc,CAAd,EAAiB,IAAjB,EAAuBC,WAAvB,EAAoC,SAApC,CADS,CAArB;;EAIA,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;IAC1BD,IAAI,CAACE,IAAL,CACE9C,UAAU,CAACwC,WAAD,EAAc,MAAME,MAAM,GAAGG,CAA7B,EAAgC,IAAhC,EAAsCJ,WAAtC,EAAmD,SAAnD,CADZ;EAGD;;EACD,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;IAC1BD,IAAI,CAACE,IAAL,CACE9C,UAAU,CAACwC,WAAD,EAAc,MAAME,MAAM,GAAGG,CAA7B,EAAgC,IAAhC,EAAsCJ,WAAtC,EAAmD,YAAnD,CADZ;EAGD;;EACD,MAAMM,QAAQ,GAAG,GAAjB;EACA,MAAMC,QAAQ,GAAG,GAAjB;EACA,IAAIC,IAAc,GAAG,EAArB;EACA,IAAIC,KAAe,GAAG,EAAtB;EACA,IAAIC,eAAe,GAAG,IAAtB;EACA,IAAIC,OAAJ;EACAnD,UAAU,CAACI,UAAX,GAAwB,KAAxB;EACAJ,UAAU,CAACC,SAAX,GAAuB,CAAvB;EACAD,UAAU,CAACE,YAAX,GAA0B,KAA1B;EAEAiD,OAAO,GAAG,MAAMC,KAAK,CAAE,UAASpD,UAAU,CAACG,YAAa,MAAnC,CAAL,CAA+CkD,IAA/C,CAAqDC,GAAD,IAClEA,GAAG,CAACC,IAAJ,EADc,CAAhB;EAIA,IAAIC,QAAQ,GAAGL,OAAO,CAACM,MAAR,CAAeC,IAAf,CAAqBC,CAAD,IAAYA,CAAC,CAAC9B,IAAF,KAAW,OAA3C,EAAoD+B,OAAnE;EACA,IAAIC,OAAO,GAAGV,OAAO,CAACM,MAAR,CAAeC,IAAf,CAAqBI,CAAD,IAAYA,CAAC,CAACjC,IAAF,KAAW,OAA3C,EAAoD+B,OAAlE;EACA,IAAIG,QAAQ,GAAGZ,OAAO,CAACM,MAAR,CAAeC,IAAf,CAAqBM,CAAD,IAAYA,CAAC,CAACnC,IAAF,KAAW,MAA3C,EAAmD+B,OAAlE;;EAEA,KAAK,IAAIK,IAAT,IAAiBT,QAAjB,EAA2B;IACzB/C,UAAU,CACR8B,WADQ,EAER0B,IAAI,CAACtD,CAAL,GAAStB,SAAS,CAAC6E,cAFX,EAGRD,IAAI,CAACrD,CAAL,GAASvB,SAAS,CAAC6E,cAHX,EAIRD,IAAI,CAACpD,KAAL,GAAaxB,SAAS,CAAC6E,cAJf,EAKRD,IAAI,CAACnD,MAAL,GAAczB,SAAS,CAAC6E,cALhB,CAAV;EAOD;;EACD,KAAK,IAAIC,GAAT,IAAgBN,OAAhB,EAAyB;IACvBZ,KAAK,CAACJ,IAAN,CACEnB,SAAS,CACPa,WADO,EAEP4B,GAAG,CAACxD,CAAJ,GAAQtB,SAAS,CAAC6E,cAFX,EAGPC,GAAG,CAACvD,CAAJ,GAAQvB,SAAS,CAAC6E,cAHX,EAIPpB,QAJO,EAKPA,QALO,EAMP;MACEjB,IAAI,EAAG;IADT,CANO,CADX;EAYD;;EACD,KAAK,IAAIuC,GAAT,IAAgBL,QAAhB,EAA0B;IACxBf,IAAI,CAACH,IAAL,CACEnB,SAAS,CACPa,WADO,EAEP6B,GAAG,CAACzD,CAAJ,GAAQtB,SAAS,CAAC6E,cAFX,EAGPE,GAAG,CAACxD,CAAJ,GAAQvB,SAAS,CAAC6E,cAHX,EAIPnB,QAJO,EAKPA,QALO,EAMP;MACElB,IAAI,EAAG;IADT,CANO,CADX;EAYD;;EAED,MAAMwC,cAAc,GAAG,IAAIlF,OAAJ,CACrBwD,IAAI,CAAC,CAAD,CAAJ,CAAQ2B,WAAR,GAAsB3D,CAAtB,GAA0BtB,SAAS,CAAC6E,cADf,EAErBvB,IAAI,CAAC,CAAD,CAAJ,CAAQ2B,WAAR,GAAsB1D,CAAtB,GAA0BvB,SAAS,CAAC6E,cAFf,CAAvB;EAIA,IAAIK,QAAQ,GAAG,IAAIpF,OAAJ,CACbwD,IAAI,CAAC,CAAD,CAAJ,CAAQ2B,WAAR,GAAsB3D,CAAtB,GAA0BtB,SAAS,CAAC6E,cADvB,EAEbvB,IAAI,CAAC,CAAD,CAAJ,CAAQ2B,WAAR,GAAsB1D,CAAtB,GAA0BvB,SAAS,CAAC6E,cAFvB,CAAf;EAIA,IAAIM,wBAAwB,GAAG,CAC7BzE,UAAU,CACRwC,WADQ,EAERI,IAAI,CAAC3C,UAAU,CAACC,SAAX,GAAuB,CAAxB,CAAJ,CAA+BwE,WAA/B,GAA6C9D,CAFrC,EAGRgC,IAAI,CAAC3C,UAAU,CAACC,SAAX,GAAuB,CAAxB,CAAJ,CAA+BwE,WAA/B,GAA6C7D,CAHrC,EAIRvB,SAAS,CAACmD,WAJF,EAKR,iBALQ,CADmB,EAQ7BzC,UAAU,CACRwC,WADQ,EAERI,IAAI,CAAC3C,UAAU,CAACC,SAAX,GAAuB,CAAxB,CAAJ,CAA+BwE,WAA/B,GAA6C9D,CAFrC,EAGRgC,IAAI,CAAC3C,UAAU,CAACC,SAAX,GAAuB,CAAxB,CAAJ,CAA+BwE,WAA/B,GAA6C7D,CAHrC,EAIRvB,SAAS,CAACmD,WAJF,EAKR,iBALQ,CARmB,CAA/B;EAiBA,MAAM9B,KAAK,GAAG,IAAI1B,KAAJ,EAAd;EACA,MAAM0F,eAAe,GAAG,IAAI7F,iBAAJ,EAAxB;EAEAkD,EAAE,CAAC4C,UAAH,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;EACApC,WAAW,CAACqC,kBAAZ,CAA+BF,eAA/B;EAEAhE,KAAK,CAACmE,QAAN,CAAe,cAAf,EAA+B3C,YAA/B;EACAxB,KAAK,CAACmE,QAAN,CAAe,iBAAf,EAAkCH,eAAlC;EACAhE,KAAK,CAACmE,QAAN,CAAe,IAAf,EAAqB9C,EAArB;EACArB,KAAK,CAACmE,QAAN,CAAe,eAAf,EAAgC5C,aAAhC;EACAvB,KAAK,CAACmE,QAAN,CAAe,cAAf,EAA+BtE,YAA/B;EACAG,KAAK,CAACmE,QAAN,CAAe,UAAf,EAA2BrE,QAA3B;EACAE,KAAK,CAACmE,QAAN,CAAe,OAAf,EAAwBxC,KAAxB;EACA3B,KAAK,CAACmE,QAAN,CAAe,MAAf,EAAuBlC,IAAvB;EACAjC,KAAK,CAACmE,QAAN,CAAe,YAAf,EAA6B7E,UAA7B;EACAU,KAAK,CAACmE,QAAN,CAAe,OAAf,EAAwB5B,KAAxB;EACAvC,KAAK,CAACmE,QAAN,CAAe,MAAf,EAAuB7B,IAAvB;EACAtC,KAAK,CAACmE,QAAN,CAAe,gBAAf,EAAiCR,cAAjC;EACA3D,KAAK,CAACmE,QAAN,CAAe,UAAf,EAA2BN,QAA3B;EACA7D,KAAK,CAACmE,QAAN,CAAe,aAAf,EAA8BtC,WAA9B;EACA7B,KAAK,CAACmE,QAAN,CAAe,iBAAf,EAAkC3B,eAAlC;EACAxC,KAAK,CAACmE,QAAN,CAAe,YAAf,EAA6BnC,UAA7B;EACAhC,KAAK,CAACmE,QAAN,CAAe,0BAAf,EAA2CL,wBAA3C;EAEA9D,KAAK,CAACoE,SAAN,CAAgB,IAAIxF,sBAAJ,EAAhB,EAA8C,KAA9C;EACAoB,KAAK,CAACoE,SAAN,CAAgB,IAAIjF,mBAAJ,EAAhB,EAA2C,KAA3C;EACAa,KAAK,CAACoE,SAAN,CAAgB,IAAInF,kBAAJ,EAAhB,EAA0C,KAA1C;EACAe,KAAK,CAACoE,SAAN,CAAgB,IAAIvF,gBAAJ,EAAhB,EAAwC,KAAxC;EACAmB,KAAK,CAACoE,SAAN,CAAgB,IAAIrF,wBAAJ,EAAhB,EAAgD,KAAhD;EACAiB,KAAK,CAACoE,SAAN,CAAgB,IAAItF,eAAJ,EAAhB,EAAuC,KAAvC;EACAkB,KAAK,CAACoE,SAAN,CAAgB,IAAIhF,qBAAJ,EAAhB,EAA6C,KAA7C;EACAY,KAAK,CAACoE,SAAN,CAAgB,IAAIpF,qBAAJ,EAAhB,EAA6C,KAA7C;EACAgB,KAAK,CAACoE,SAAN,CAAgB,IAAIlF,eAAJ,EAAhB,EAAuC,KAAvC;EAEA,OAAO;IACLmF,MAAM,CAACC,KAAD,EAAgB;MACpBjD,EAAE,CAACkD,KAAH,CAASlD,EAAE,CAACmD,gBAAZ;MACA7C,KAAK,CAAC8C,aAAN,CAAoBhD,MAAM,CAACiD,QAA3B;MACAnD,aAAa,CAACkD,aAAd,CAA4BhD,MAAM,CAACiD,QAAnC;MACA1E,KAAK,CAAC2E,QAAN,CAAeL,KAAf;MACAtE,KAAK,CAAC4E,mBAAN;MACA5E,KAAK,CAAC6E,oBAAN;MACAhD,WAAW,CAACiD,IAAZ,CAAiBR,KAAjB,EAAwB,CAAxB,EAA2B,CAA3B;MACAhF,UAAU,CAACK,8BAAX,IAA6C2E,KAA7C;IACD,CAVI;;IAWLS,OAAO,GAAS;MACdpD,KAAK,CAACoD,OAAN;MACAvD,YAAY,CAACwD,OAAb;IACD;;EAdI,CAAP;AAgBD,CA9MM"},"metadata":{},"sourceType":"module"}