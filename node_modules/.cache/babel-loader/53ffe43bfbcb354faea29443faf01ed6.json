{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Shader = void 0;\n\nconst WebGL_1 = require(\"./WebGL\");\n\nclass Shader {\n  constructor(context, vertexShader, fragmentShader) {\n    this.vertexShader = vertexShader;\n    this.fragmentShader = fragmentShader;\n    this.vs = null;\n    this.fs = null;\n    this.program = null;\n    this.tmp2x2 = new Float32Array(2 * 2);\n    this.tmp3x3 = new Float32Array(3 * 3);\n    this.tmp4x4 = new Float32Array(4 * 4);\n    this.vsSource = vertexShader;\n    this.fsSource = fragmentShader;\n    this.context = context instanceof WebGL_1.ManagedWebGLRenderingContext ? context : new WebGL_1.ManagedWebGLRenderingContext(context);\n    this.context.addRestorable(this);\n    this.compile();\n  }\n\n  getProgram() {\n    return this.program;\n  }\n\n  getVertexShader() {\n    return this.vertexShader;\n  }\n\n  getFragmentShader() {\n    return this.fragmentShader;\n  }\n\n  getVertexShaderSource() {\n    return this.vsSource;\n  }\n\n  getFragmentSource() {\n    return this.fsSource;\n  }\n\n  compile() {\n    let gl = this.context.gl;\n\n    try {\n      this.vs = this.compileShader(gl.VERTEX_SHADER, this.vertexShader);\n      this.fs = this.compileShader(gl.FRAGMENT_SHADER, this.fragmentShader);\n      this.program = this.compileProgram(this.vs, this.fs);\n    } catch (e) {\n      this.dispose();\n      throw e;\n    }\n  }\n\n  compileShader(type, source) {\n    let gl = this.context.gl;\n    let shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      let error = \"Couldn't compile shader: \" + gl.getShaderInfoLog(shader);\n      gl.deleteShader(shader);\n      if (!gl.isContextLost()) throw new Error(error);\n    }\n\n    return shader;\n  }\n\n  compileProgram(vs, fs) {\n    let gl = this.context.gl;\n    let program = gl.createProgram();\n    gl.attachShader(program, vs);\n    gl.attachShader(program, fs);\n    gl.linkProgram(program);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      let error = \"Couldn't compile shader program: \" + gl.getProgramInfoLog(program);\n      gl.deleteProgram(program);\n      if (!gl.isContextLost()) throw new Error(error);\n    }\n\n    return program;\n  }\n\n  restore() {\n    this.compile();\n  }\n\n  bind() {\n    this.context.gl.useProgram(this.program);\n  }\n\n  unbind() {\n    this.context.gl.useProgram(null);\n  }\n\n  setUniformi(uniform, value) {\n    this.context.gl.uniform1i(this.getUniformLocation(uniform), value);\n  }\n\n  setUniformf(uniform, value) {\n    this.context.gl.uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  setUniform2f(uniform, value, value2) {\n    this.context.gl.uniform2f(this.getUniformLocation(uniform), value, value2);\n  }\n\n  setUniform3f(uniform, value, value2, value3) {\n    this.context.gl.uniform3f(this.getUniformLocation(uniform), value, value2, value3);\n  }\n\n  setUniform4f(uniform, value, value2, value3, value4) {\n    this.context.gl.uniform4f(this.getUniformLocation(uniform), value, value2, value3, value4);\n  }\n\n  setUniform2x2f(uniform, value) {\n    let gl = this.context.gl;\n    this.tmp2x2.set(value);\n    gl.uniformMatrix2fv(this.getUniformLocation(uniform), false, this.tmp2x2);\n  }\n\n  setUniform3x3f(uniform, value) {\n    let gl = this.context.gl;\n    this.tmp3x3.set(value);\n    gl.uniformMatrix3fv(this.getUniformLocation(uniform), false, this.tmp3x3);\n  }\n\n  setUniform4x4f(uniform, value) {\n    let gl = this.context.gl;\n    this.tmp4x4.set(value);\n    gl.uniformMatrix4fv(this.getUniformLocation(uniform), false, this.tmp4x4);\n  }\n\n  getUniformLocation(uniform) {\n    let gl = this.context.gl;\n    let location = gl.getUniformLocation(this.program, uniform);\n    if (!location && !gl.isContextLost()) throw new Error(`Couldn't find location for uniform ${uniform}`);\n    return location;\n  }\n\n  getAttributeLocation(attribute) {\n    let gl = this.context.gl;\n    let location = gl.getAttribLocation(this.program, attribute);\n    if (location === -1 && !gl.isContextLost()) throw new Error(`Couldn't find location for attribute ${attribute}`);\n    return location;\n  }\n\n  dispose() {\n    this.context.removeRestorable(this);\n    let gl = this.context.gl;\n\n    if (this.vs) {\n      gl.deleteShader(this.vs);\n      this.vs = null;\n    }\n\n    if (this.fs) {\n      gl.deleteShader(this.fs);\n      this.fs = null;\n    }\n\n    if (this.program) {\n      gl.deleteProgram(this.program);\n      this.program = null;\n    }\n  }\n\n  static newColoredTextured(context) {\n    let vs = `\n         attribute vec4 ${Shader.POSITION};\n         attribute vec4 ${Shader.COLOR};\n         attribute vec2 ${Shader.TEXCOORDS};\n         uniform mat4 ${Shader.MVP_MATRIX};\n         varying vec4 v_color;\n         varying vec2 v_texCoords;\n \n         void main () {\n           v_color = ${Shader.COLOR};\n           v_texCoords = ${Shader.TEXCOORDS};\n           gl_Position = ${Shader.MVP_MATRIX} * ${Shader.POSITION};\n         }\n       `;\n    let fs = `\n         #ifdef GL_ES\n           #define LOWP lowp\n           precision mediump float;\n         #else\n           #define LOWP\n         #endif\n         varying LOWP vec4 v_color;\n         varying vec2 v_texCoords;\n         uniform sampler2D u_texture;\n \n         void main () {\n           gl_FragColor = v_color * texture2D(u_texture, v_texCoords);\n         }\n       `;\n    return new Shader(context, vs, fs);\n  }\n\n  static newTwoColoredTextured(context) {\n    let vs = `\n         attribute vec4 ${Shader.POSITION};\n         attribute vec4 ${Shader.COLOR};\n         attribute vec4 ${Shader.COLOR2};\n         attribute vec2 ${Shader.TEXCOORDS};\n         uniform mat4 ${Shader.MVP_MATRIX};\n         varying vec4 v_light;\n         varying vec4 v_dark;\n         varying vec2 v_texCoords;\n \n         void main () {\n           v_light = ${Shader.COLOR};\n           v_dark = ${Shader.COLOR2};\n           v_texCoords = ${Shader.TEXCOORDS};\n           gl_Position = ${Shader.MVP_MATRIX} * ${Shader.POSITION};\n         }\n       `;\n    let fs = `\n         #ifdef GL_ES\n           #define LOWP lowp\n           precision mediump float;\n         #else\n           #define LOWP\n         #endif\n         varying LOWP vec4 v_light;\n         varying LOWP vec4 v_dark;\n         varying vec2 v_texCoords;\n         uniform sampler2D u_texture;\n \n         void main () {\n           vec4 texColor = texture2D(u_texture, v_texCoords);\n           gl_FragColor.a = texColor.a * v_light.a;\n           gl_FragColor.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n         }\n       `;\n    return new Shader(context, vs, fs);\n  }\n\n  static newColored(context) {\n    let vs = `\n         attribute vec4 ${Shader.POSITION};\n         attribute vec4 ${Shader.COLOR};\n         uniform mat4 ${Shader.MVP_MATRIX};\n         varying vec4 v_color;\n \n         void main () {\n           v_color = ${Shader.COLOR};\n           gl_Position = ${Shader.MVP_MATRIX} * ${Shader.POSITION};\n         }\n       `;\n    let fs = `\n         #ifdef GL_ES\n           #define LOWP lowp\n           precision mediump float;\n         #else\n           #define LOWP\n         #endif\n         varying LOWP vec4 v_color;\n \n         void main () {\n           gl_FragColor = v_color;\n         }\n       `;\n    return new Shader(context, vs, fs);\n  }\n\n}\n\nexports.Shader = Shader;\nShader.MVP_MATRIX = \"u_projTrans\";\nShader.POSITION = \"a_position\";\nShader.COLOR = \"a_color\";\nShader.COLOR2 = \"a_color2\";\nShader.TEXCOORDS = \"a_texCoords\";\nShader.SAMPLER = \"u_texture\";","map":{"version":3,"names":["Object","defineProperty","exports","value","Shader","WebGL_1","require","constructor","context","vertexShader","fragmentShader","vs","fs","program","tmp2x2","Float32Array","tmp3x3","tmp4x4","vsSource","fsSource","ManagedWebGLRenderingContext","addRestorable","compile","getProgram","getVertexShader","getFragmentShader","getVertexShaderSource","getFragmentSource","gl","compileShader","VERTEX_SHADER","FRAGMENT_SHADER","compileProgram","e","dispose","type","source","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","deleteShader","isContextLost","Error","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","restore","bind","useProgram","unbind","setUniformi","uniform","uniform1i","getUniformLocation","setUniformf","uniform1f","setUniform2f","value2","uniform2f","setUniform3f","value3","uniform3f","setUniform4f","value4","uniform4f","setUniform2x2f","set","uniformMatrix2fv","setUniform3x3f","uniformMatrix3fv","setUniform4x4f","uniformMatrix4fv","location","getAttributeLocation","attribute","getAttribLocation","removeRestorable","newColoredTextured","POSITION","COLOR","TEXCOORDS","MVP_MATRIX","newTwoColoredTextured","COLOR2","newColored","SAMPLER"],"sources":["D:/projects/test-game/node_modules/gdxts/dist/lib/Shader.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Shader = void 0;\nconst WebGL_1 = require(\"./WebGL\");\nclass Shader {\n    constructor(context, vertexShader, fragmentShader) {\n        this.vertexShader = vertexShader;\n        this.fragmentShader = fragmentShader;\n        this.vs = null;\n        this.fs = null;\n        this.program = null;\n        this.tmp2x2 = new Float32Array(2 * 2);\n        this.tmp3x3 = new Float32Array(3 * 3);\n        this.tmp4x4 = new Float32Array(4 * 4);\n        this.vsSource = vertexShader;\n        this.fsSource = fragmentShader;\n        this.context =\n            context instanceof WebGL_1.ManagedWebGLRenderingContext\n                ? context\n                : new WebGL_1.ManagedWebGLRenderingContext(context);\n        this.context.addRestorable(this);\n        this.compile();\n    }\n    getProgram() {\n        return this.program;\n    }\n    getVertexShader() {\n        return this.vertexShader;\n    }\n    getFragmentShader() {\n        return this.fragmentShader;\n    }\n    getVertexShaderSource() {\n        return this.vsSource;\n    }\n    getFragmentSource() {\n        return this.fsSource;\n    }\n    compile() {\n        let gl = this.context.gl;\n        try {\n            this.vs = this.compileShader(gl.VERTEX_SHADER, this.vertexShader);\n            this.fs = this.compileShader(gl.FRAGMENT_SHADER, this.fragmentShader);\n            this.program = this.compileProgram(this.vs, this.fs);\n        }\n        catch (e) {\n            this.dispose();\n            throw e;\n        }\n    }\n    compileShader(type, source) {\n        let gl = this.context.gl;\n        let shader = gl.createShader(type);\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            let error = \"Couldn't compile shader: \" + gl.getShaderInfoLog(shader);\n            gl.deleteShader(shader);\n            if (!gl.isContextLost())\n                throw new Error(error);\n        }\n        return shader;\n    }\n    compileProgram(vs, fs) {\n        let gl = this.context.gl;\n        let program = gl.createProgram();\n        gl.attachShader(program, vs);\n        gl.attachShader(program, fs);\n        gl.linkProgram(program);\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n            let error = \"Couldn't compile shader program: \" + gl.getProgramInfoLog(program);\n            gl.deleteProgram(program);\n            if (!gl.isContextLost())\n                throw new Error(error);\n        }\n        return program;\n    }\n    restore() {\n        this.compile();\n    }\n    bind() {\n        this.context.gl.useProgram(this.program);\n    }\n    unbind() {\n        this.context.gl.useProgram(null);\n    }\n    setUniformi(uniform, value) {\n        this.context.gl.uniform1i(this.getUniformLocation(uniform), value);\n    }\n    setUniformf(uniform, value) {\n        this.context.gl.uniform1f(this.getUniformLocation(uniform), value);\n    }\n    setUniform2f(uniform, value, value2) {\n        this.context.gl.uniform2f(this.getUniformLocation(uniform), value, value2);\n    }\n    setUniform3f(uniform, value, value2, value3) {\n        this.context.gl.uniform3f(this.getUniformLocation(uniform), value, value2, value3);\n    }\n    setUniform4f(uniform, value, value2, value3, value4) {\n        this.context.gl.uniform4f(this.getUniformLocation(uniform), value, value2, value3, value4);\n    }\n    setUniform2x2f(uniform, value) {\n        let gl = this.context.gl;\n        this.tmp2x2.set(value);\n        gl.uniformMatrix2fv(this.getUniformLocation(uniform), false, this.tmp2x2);\n    }\n    setUniform3x3f(uniform, value) {\n        let gl = this.context.gl;\n        this.tmp3x3.set(value);\n        gl.uniformMatrix3fv(this.getUniformLocation(uniform), false, this.tmp3x3);\n    }\n    setUniform4x4f(uniform, value) {\n        let gl = this.context.gl;\n        this.tmp4x4.set(value);\n        gl.uniformMatrix4fv(this.getUniformLocation(uniform), false, this.tmp4x4);\n    }\n    getUniformLocation(uniform) {\n        let gl = this.context.gl;\n        let location = gl.getUniformLocation(this.program, uniform);\n        if (!location && !gl.isContextLost())\n            throw new Error(`Couldn't find location for uniform ${uniform}`);\n        return location;\n    }\n    getAttributeLocation(attribute) {\n        let gl = this.context.gl;\n        let location = gl.getAttribLocation(this.program, attribute);\n        if (location === -1 && !gl.isContextLost())\n            throw new Error(`Couldn't find location for attribute ${attribute}`);\n        return location;\n    }\n    dispose() {\n        this.context.removeRestorable(this);\n        let gl = this.context.gl;\n        if (this.vs) {\n            gl.deleteShader(this.vs);\n            this.vs = null;\n        }\n        if (this.fs) {\n            gl.deleteShader(this.fs);\n            this.fs = null;\n        }\n        if (this.program) {\n            gl.deleteProgram(this.program);\n            this.program = null;\n        }\n    }\n    static newColoredTextured(context) {\n        let vs = `\n         attribute vec4 ${Shader.POSITION};\n         attribute vec4 ${Shader.COLOR};\n         attribute vec2 ${Shader.TEXCOORDS};\n         uniform mat4 ${Shader.MVP_MATRIX};\n         varying vec4 v_color;\n         varying vec2 v_texCoords;\n \n         void main () {\n           v_color = ${Shader.COLOR};\n           v_texCoords = ${Shader.TEXCOORDS};\n           gl_Position = ${Shader.MVP_MATRIX} * ${Shader.POSITION};\n         }\n       `;\n        let fs = `\n         #ifdef GL_ES\n           #define LOWP lowp\n           precision mediump float;\n         #else\n           #define LOWP\n         #endif\n         varying LOWP vec4 v_color;\n         varying vec2 v_texCoords;\n         uniform sampler2D u_texture;\n \n         void main () {\n           gl_FragColor = v_color * texture2D(u_texture, v_texCoords);\n         }\n       `;\n        return new Shader(context, vs, fs);\n    }\n    static newTwoColoredTextured(context) {\n        let vs = `\n         attribute vec4 ${Shader.POSITION};\n         attribute vec4 ${Shader.COLOR};\n         attribute vec4 ${Shader.COLOR2};\n         attribute vec2 ${Shader.TEXCOORDS};\n         uniform mat4 ${Shader.MVP_MATRIX};\n         varying vec4 v_light;\n         varying vec4 v_dark;\n         varying vec2 v_texCoords;\n \n         void main () {\n           v_light = ${Shader.COLOR};\n           v_dark = ${Shader.COLOR2};\n           v_texCoords = ${Shader.TEXCOORDS};\n           gl_Position = ${Shader.MVP_MATRIX} * ${Shader.POSITION};\n         }\n       `;\n        let fs = `\n         #ifdef GL_ES\n           #define LOWP lowp\n           precision mediump float;\n         #else\n           #define LOWP\n         #endif\n         varying LOWP vec4 v_light;\n         varying LOWP vec4 v_dark;\n         varying vec2 v_texCoords;\n         uniform sampler2D u_texture;\n \n         void main () {\n           vec4 texColor = texture2D(u_texture, v_texCoords);\n           gl_FragColor.a = texColor.a * v_light.a;\n           gl_FragColor.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n         }\n       `;\n        return new Shader(context, vs, fs);\n    }\n    static newColored(context) {\n        let vs = `\n         attribute vec4 ${Shader.POSITION};\n         attribute vec4 ${Shader.COLOR};\n         uniform mat4 ${Shader.MVP_MATRIX};\n         varying vec4 v_color;\n \n         void main () {\n           v_color = ${Shader.COLOR};\n           gl_Position = ${Shader.MVP_MATRIX} * ${Shader.POSITION};\n         }\n       `;\n        let fs = `\n         #ifdef GL_ES\n           #define LOWP lowp\n           precision mediump float;\n         #else\n           #define LOWP\n         #endif\n         varying LOWP vec4 v_color;\n \n         void main () {\n           gl_FragColor = v_color;\n         }\n       `;\n        return new Shader(context, vs, fs);\n    }\n}\nexports.Shader = Shader;\nShader.MVP_MATRIX = \"u_projTrans\";\nShader.POSITION = \"a_position\";\nShader.COLOR = \"a_color\";\nShader.COLOR2 = \"a_color2\";\nShader.TEXCOORDS = \"a_texCoords\";\nShader.SAMPLER = \"u_texture\";\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}