{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AssetManager = void 0;\n\nconst BitmapFont_1 = require(\"./BitmapFont\");\n\nconst Texture_1 = require(\"./Texture\");\n\nconst TextureAtlas_1 = require(\"./TextureAtlas\");\n\nclass AssetManager {\n  constructor(gl) {\n    this.promises = [];\n    this.atlases = new Map();\n    this.textures = new Map();\n    this.jsonData = new Map();\n    this.binaryData = new Map();\n    this.done = 0;\n    this.listeners = [];\n    this.fonts = new Map();\n    this.gl = gl;\n  }\n\n  addListener(handler) {\n    this.listeners.push(handler);\n  }\n\n  reportDone() {\n    this.done++;\n\n    for (const handler of this.listeners) {\n      handler(this.done / this.getTotal() * 100, this.done >= this.getTotal());\n    }\n  }\n\n  loadAtlas(path, name) {\n    const promise = TextureAtlas_1.TextureAtlas.load(this.gl, path, {}).then(atlas => {\n      this.atlases.set(name, atlas);\n      this.reportDone();\n      return atlas;\n    });\n    this.promises.push(promise);\n    return promise;\n  }\n\n  getAtlas(name) {\n    return this.atlases.get(name);\n  }\n\n  loadJsonData(path, name) {\n    const promise = fetch(path).then(res => res.json()).then(json => {\n      this.jsonData.set(name, json);\n      this.reportDone();\n      return json;\n    });\n    this.promises.push(promise);\n    return promise;\n  }\n\n  getJsonData(name) {\n    return this.jsonData.get(name);\n  }\n\n  loadBinaryData(path, name) {\n    const promise = fetch(path).then(res => res.arrayBuffer()).then(buffer => {\n      this.binaryData.set(name, buffer);\n      this.reportDone();\n      return buffer;\n    });\n    this.promises.push(promise);\n    return promise;\n  }\n\n  getBinaryData(name) {\n    return this.binaryData.get(name);\n  }\n\n  loadFont(path, name) {\n    let flip = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const promise = BitmapFont_1.BitmapFont.load(this.gl, path, flip).then(font => {\n      this.fonts.set(name, font);\n      this.reportDone();\n      return font;\n    });\n    this.promises.push(promise);\n    return promise;\n  }\n\n  getFont(name) {\n    return this.fonts.get(name);\n  }\n\n  loadTexture(path, name) {\n    const promise = Texture_1.Texture.load(this.gl, path).then(texture => {\n      this.textures.set(name, texture);\n      this.reportDone();\n      return texture;\n    });\n    this.promises.push(promise);\n    return promise;\n  }\n\n  getTexture(name) {\n    return this.textures.get(name);\n  }\n\n  finishLoading() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield Promise.all(this.promises);\n    });\n  }\n\n  getDone() {\n    return this.done;\n  }\n\n  getTotal() {\n    return this.promises.length;\n  }\n\n  disposeAll() {\n    const atlasKeys = [...this.atlases.keys()];\n    atlasKeys.forEach(key => {\n      var _a;\n\n      const textureRegions = ((_a = this.atlases.get(key)) === null || _a === void 0 ? void 0 : _a.getRegions()) || [];\n      textureRegions.forEach(texture => {\n        var _a;\n\n        (_a = texture.texture) === null || _a === void 0 ? void 0 : _a.destroy();\n      });\n      this.atlases.delete(key);\n    });\n    const localTextureKeys = [...this.textures.keys()];\n    localTextureKeys.forEach(key => {\n      var _a;\n\n      (_a = this.textures.get(key)) === null || _a === void 0 ? void 0 : _a.destroy();\n      this.textures.delete(key);\n    });\n    const fontMapKeys = [...this.fonts.keys()];\n    fontMapKeys.forEach(key => {\n      var _a;\n\n      const textureRegions = ((_a = this.fonts.get(key)) === null || _a === void 0 ? void 0 : _a.getRegions()) || [];\n      textureRegions.forEach(texture => {\n        var _a;\n\n        (_a = texture.texture) === null || _a === void 0 ? void 0 : _a.destroy();\n      });\n      this.fonts.delete(key);\n    });\n  }\n\n}\n\nexports.AssetManager = AssetManager;\nexports.default = AssetManager;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","AssetManager","BitmapFont_1","require","Texture_1","TextureAtlas_1","constructor","gl","promises","atlases","Map","textures","jsonData","binaryData","listeners","fonts","addListener","handler","push","reportDone","getTotal","loadAtlas","path","name","promise","TextureAtlas","load","atlas","set","getAtlas","get","loadJsonData","fetch","res","json","getJsonData","loadBinaryData","arrayBuffer","buffer","getBinaryData","loadFont","flip","BitmapFont","font","getFont","loadTexture","Texture","texture","getTexture","finishLoading","all","getDone","length","disposeAll","atlasKeys","keys","forEach","key","_a","textureRegions","getRegions","destroy","delete","localTextureKeys","fontMapKeys","default"],"sources":["D:/projects/test-game/node_modules/gdxts/dist/lib/AssetManager.js"],"sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AssetManager = void 0;\r\nconst BitmapFont_1 = require(\"./BitmapFont\");\r\nconst Texture_1 = require(\"./Texture\");\r\nconst TextureAtlas_1 = require(\"./TextureAtlas\");\r\nclass AssetManager {\r\n    constructor(gl) {\r\n        this.promises = [];\r\n        this.atlases = new Map();\r\n        this.textures = new Map();\r\n        this.jsonData = new Map();\r\n        this.binaryData = new Map();\r\n        this.done = 0;\r\n        this.listeners = [];\r\n        this.fonts = new Map();\r\n        this.gl = gl;\r\n    }\r\n    addListener(handler) {\r\n        this.listeners.push(handler);\r\n    }\r\n    reportDone() {\r\n        this.done++;\r\n        for (const handler of this.listeners) {\r\n            handler((this.done / this.getTotal()) * 100, this.done >= this.getTotal());\r\n        }\r\n    }\r\n    loadAtlas(path, name) {\r\n        const promise = TextureAtlas_1.TextureAtlas.load(this.gl, path, {}).then(atlas => {\r\n            this.atlases.set(name, atlas);\r\n            this.reportDone();\r\n            return atlas;\r\n        });\r\n        this.promises.push(promise);\r\n        return promise;\r\n    }\r\n    getAtlas(name) {\r\n        return this.atlases.get(name);\r\n    }\r\n    loadJsonData(path, name) {\r\n        const promise = fetch(path)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n            this.jsonData.set(name, json);\r\n            this.reportDone();\r\n            return json;\r\n        });\r\n        this.promises.push(promise);\r\n        return promise;\r\n    }\r\n    getJsonData(name) {\r\n        return this.jsonData.get(name);\r\n    }\r\n    loadBinaryData(path, name) {\r\n        const promise = fetch(path)\r\n            .then(res => res.arrayBuffer())\r\n            .then(buffer => {\r\n            this.binaryData.set(name, buffer);\r\n            this.reportDone();\r\n            return buffer;\r\n        });\r\n        this.promises.push(promise);\r\n        return promise;\r\n    }\r\n    getBinaryData(name) {\r\n        return this.binaryData.get(name);\r\n    }\r\n    loadFont(path, name, flip = false) {\r\n        const promise = BitmapFont_1.BitmapFont.load(this.gl, path, flip).then(font => {\r\n            this.fonts.set(name, font);\r\n            this.reportDone();\r\n            return font;\r\n        });\r\n        this.promises.push(promise);\r\n        return promise;\r\n    }\r\n    getFont(name) {\r\n        return this.fonts.get(name);\r\n    }\r\n    loadTexture(path, name) {\r\n        const promise = Texture_1.Texture.load(this.gl, path).then(texture => {\r\n            this.textures.set(name, texture);\r\n            this.reportDone();\r\n            return texture;\r\n        });\r\n        this.promises.push(promise);\r\n        return promise;\r\n    }\r\n    getTexture(name) {\r\n        return this.textures.get(name);\r\n    }\r\n    finishLoading() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield Promise.all(this.promises);\r\n        });\r\n    }\r\n    getDone() {\r\n        return this.done;\r\n    }\r\n    getTotal() {\r\n        return this.promises.length;\r\n    }\r\n    disposeAll() {\r\n        const atlasKeys = [...this.atlases.keys()];\r\n        atlasKeys.forEach(key => {\r\n            var _a;\r\n            const textureRegions = ((_a = this.atlases.get(key)) === null || _a === void 0 ? void 0 : _a.getRegions()) || [];\r\n            textureRegions.forEach(texture => {\r\n                var _a;\r\n                (_a = texture.texture) === null || _a === void 0 ? void 0 : _a.destroy();\r\n            });\r\n            this.atlases.delete(key);\r\n        });\r\n        const localTextureKeys = [...this.textures.keys()];\r\n        localTextureKeys.forEach(key => {\r\n            var _a;\r\n            (_a = this.textures.get(key)) === null || _a === void 0 ? void 0 : _a.destroy();\r\n            this.textures.delete(key);\r\n        });\r\n        const fontMapKeys = [...this.fonts.keys()];\r\n        fontMapKeys.forEach(key => {\r\n            var _a;\r\n            const textureRegions = ((_a = this.fonts.get(key)) === null || _a === void 0 ? void 0 : _a.getRegions()) || [];\r\n            textureRegions.forEach(texture => {\r\n                var _a;\r\n                (_a = texture.texture) === null || _a === void 0 ? void 0 : _a.destroy();\r\n            });\r\n            this.fonts.delete(key);\r\n        });\r\n    }\r\n}\r\nexports.AssetManager = AssetManager;\r\nexports.default = AssetManager;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}