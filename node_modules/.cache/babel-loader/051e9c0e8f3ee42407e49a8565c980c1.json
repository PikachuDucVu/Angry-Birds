{"ast":null,"code":"import { createGameLoop, createStage, createViewport, InputEvent, PolygonBatch, ShapeRenderer, Texture, Vector2, ViewportInputHandler } from \"gdxts\";\nexport const init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 600, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./flappy-bird.gif\");\n  const obstacles = await Texture.load(gl, \"./obstacle.webp\");\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  const characterTexture = await Texture.load(gl, \"./bird.png\");\n  let characterPosition = new Vector2(250, 500);\n  gl.clearColor(0, 0, 0, 1);\n  let lastClick = false;\n  let speedGame = 150;\n  let count = 0;\n  let firstClick = false;\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    count = 0;\n    speedGame = 150;\n    firstClick = true;\n    lastClick = true;\n  });\n\n  function moveOfBird(delta) {\n    if (lastClick) {\n      lastClick = true;\n      characterPosition.y = characterPosition.y + speedGame * delta;\n      count += speedGame * delta;\n\n      if (count >= 100) {\n        lastClick = false;\n        count--;\n      } // console.log(lastClick);\n\n    }\n\n    if (lastClick === false) {\n      characterPosition.y -= speedGame * delta;\n\n      if (count >= 0 && count < 100) {\n        count -= speedGame * 1.025 * delta;\n      }\n    }\n  }\n\n  createGameLoop(delta => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 600, 1000);\n    shapeRenderer.end();\n    console.log(characterPosition.y, speedGame);\n\n    if (firstClick === true) {\n      moveOfBird(delta);\n    }\n\n    if (characterPosition.y <= 190) {\n      firstClick = false;\n      lastClick = false;\n      speedGame = 0;\n    } // characterPosition = 190 => gameover\n\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 600, 1000);\n    batch.draw(characterTexture, characterPosition.x, characterPosition.y, 60, 60);\n    batch.draw(obstacles, 595, 195, 150, 200);\n    batch.end();\n  });\n};\ninit();","map":{"version":3,"names":["createGameLoop","createStage","createViewport","InputEvent","PolygonBatch","ShapeRenderer","Texture","Vector2","ViewportInputHandler","init","stage","canvas","getCanvas","viewport","gl","getContext","background","load","obstacles","shapeRenderer","batch","camera","getCamera","inputHandler","characterTexture","characterPosition","clearColor","lastClick","speedGame","count","firstClick","addEventListener","TouchStart","x","y","moveOfBird","delta","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end","console","log","draw"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createGameLoop,\n  createStage,\n  createViewport,\n  InputEvent,\n  PolygonBatch,\n  ShapeRenderer,\n  Texture,\n  Vector2,\n  ViewportInputHandler,\n} from \"gdxts\";\nimport { init2 } from \"./PokemonGame\";\nexport const init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 600, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./flappy-bird.gif\");\n  const obstacles = await Texture.load(gl, \"./obstacle.webp\");\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n\n  const characterTexture = await Texture.load(gl, \"./bird.png\");\n  let characterPosition = new Vector2(250, 500);\n\n  gl.clearColor(0, 0, 0, 1);\n  let lastClick = false;\n  let speedGame = 150;\n  let count = 0;\n  let firstClick = false;\n\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    count = 0;\n    speedGame = 150;\n    firstClick = true;\n    lastClick = true;\n  });\n\n  function moveOfBird(delta: number) {\n    if (lastClick) {\n      lastClick = true;\n      characterPosition.y = characterPosition.y + speedGame * delta;\n      count += speedGame * delta;\n\n      if (count >= 100) {\n        lastClick = false;\n        count--;\n      }\n\n      // console.log(lastClick);\n    }\n\n    if (lastClick === false) {\n      characterPosition.y -= speedGame * delta;\n      if (count >= 0 && count < 100) {\n        count -= speedGame * 1.025 * delta;\n      }\n    }\n  }\n\n  createGameLoop((delta: number) => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 600, 1000);\n    shapeRenderer.end();\n    console.log(characterPosition.y, speedGame);\n\n    if (firstClick === true) {\n      moveOfBird(delta);\n    }\n    if (characterPosition.y <= 190) {\n      firstClick = false;\n      lastClick = false;\n      speedGame = 0;\n    }\n    // characterPosition = 190 => gameover\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 600, 1000);\n    batch.draw(\n      characterTexture,\n      characterPosition.x,\n      characterPosition.y,\n      60,\n      60\n    );\n    batch.draw(obstacles, 595, 195, 150, 200);\n    batch.end();\n  });\n};\n\ninit();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}