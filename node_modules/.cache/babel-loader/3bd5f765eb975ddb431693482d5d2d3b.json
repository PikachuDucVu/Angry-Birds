{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"D:/projects/test-game/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"D:/projects/test-game/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Texture = exports.TextureWrap = exports.TextureFilter = void 0;\nvar TextureFilter;\n\n(function (TextureFilter) {\n  TextureFilter[TextureFilter[\"Nearest\"] = 9728] = \"Nearest\";\n  TextureFilter[TextureFilter[\"Linear\"] = 9729] = \"Linear\";\n  TextureFilter[TextureFilter[\"MipMap\"] = 9987] = \"MipMap\";\n  TextureFilter[TextureFilter[\"MipMapNearestNearest\"] = 9984] = \"MipMapNearestNearest\";\n  TextureFilter[TextureFilter[\"MipMapLinearNearest\"] = 9985] = \"MipMapLinearNearest\";\n  TextureFilter[TextureFilter[\"MipMapNearestLinear\"] = 9986] = \"MipMapNearestLinear\";\n  TextureFilter[TextureFilter[\"MipMapLinearLinear\"] = 9987] = \"MipMapLinearLinear\"; // WebGLRenderingContext.LINEAR_MIPMAP_LINEAR\n})(TextureFilter = exports.TextureFilter || (exports.TextureFilter = {}));\n\nvar TextureWrap;\n\n(function (TextureWrap) {\n  TextureWrap[TextureWrap[\"MirroredRepeat\"] = 33648] = \"MirroredRepeat\";\n  TextureWrap[TextureWrap[\"ClampToEdge\"] = 33071] = \"ClampToEdge\";\n  TextureWrap[TextureWrap[\"Repeat\"] = 10497] = \"Repeat\"; // WebGLRenderingContext.REPEAT\n})(TextureWrap = exports.TextureWrap || (exports.TextureWrap = {}));\n\nvar Texture = /*#__PURE__*/function () {\n  function Texture(context, image) {\n    var useMipMaps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    _classCallCheck(this, Texture);\n\n    this.texture = null;\n    this.boundUnit = 0;\n    this.useMipMaps = false;\n    this.width = 0;\n    this.height = 0;\n    this._image = image;\n    this.context = context;\n    this.useMipMaps = useMipMaps;\n    this.restore();\n    this.width = image.width;\n    this.height = image.height;\n  }\n\n  _createClass(Texture, [{\n    key: \"getImage\",\n    value: function getImage() {\n      return this._image;\n    }\n  }, {\n    key: \"getWebGLTexture\",\n    value: function getWebGLTexture() {\n      return this.texture;\n    }\n  }, {\n    key: \"setFilters\",\n    value: function setFilters(minFilter, magFilter) {\n      var gl = this.context;\n      this.bind();\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, Texture.validateMagFilter(magFilter));\n    }\n  }, {\n    key: \"setWraps\",\n    value: function setWraps(uWrap, vWrap) {\n      var gl = this.context;\n      this.bind();\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, uWrap);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, vWrap);\n    }\n  }, {\n    key: \"update\",\n    value: function update(useMipMaps) {\n      var gl = this.context;\n      if (!this.texture) this.texture = this.context.createTexture();\n      this.bind();\n      if (Texture.DISABLE_UNPACK_PREMULTIPLIED_ALPHA_WEBGL) gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._image);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, useMipMaps ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      if (useMipMaps) gl.generateMipmap(gl.TEXTURE_2D);\n    }\n  }, {\n    key: \"restore\",\n    value: function restore() {\n      this.texture = null;\n      this.update(this.useMipMaps);\n    }\n  }, {\n    key: \"bind\",\n    value: function bind() {\n      var unit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var gl = this.context;\n      this.boundUnit = unit;\n      gl.activeTexture(gl.TEXTURE0 + unit);\n      gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    }\n  }, {\n    key: \"unbind\",\n    value: function unbind() {\n      var gl = this.context;\n      gl.activeTexture(gl.TEXTURE0 + this.boundUnit);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      var gl = this.context;\n      gl.deleteTexture(this.texture);\n    }\n  }], [{\n    key: \"load\",\n    value: function load(gl, url) {\n      var useMipmaps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      return new Promise(function (resolve) {\n        var image = new Image();\n\n        image.onload = function () {\n          resolve(new Texture(gl, image, useMipmaps));\n        };\n\n        image.src = url;\n      });\n    }\n  }, {\n    key: \"validateMagFilter\",\n    value: function validateMagFilter(magFilter) {\n      switch (magFilter) {\n        case TextureFilter.MipMap:\n        case TextureFilter.MipMapLinearLinear:\n        case TextureFilter.MipMapLinearNearest:\n        case TextureFilter.MipMapNearestLinear:\n        case TextureFilter.MipMapNearestNearest:\n          return TextureFilter.Linear;\n\n        default:\n          return magFilter;\n      }\n    }\n  }]);\n\n  return Texture;\n}();\n\nexports.Texture = Texture;\nTexture.DISABLE_UNPACK_PREMULTIPLIED_ALPHA_WEBGL = false;","map":{"version":3,"names":["Object","defineProperty","exports","value","Texture","TextureWrap","TextureFilter","context","image","useMipMaps","texture","boundUnit","width","height","_image","restore","minFilter","magFilter","gl","bind","texParameteri","TEXTURE_2D","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","validateMagFilter","uWrap","vWrap","TEXTURE_WRAP_S","TEXTURE_WRAP_T","createTexture","DISABLE_UNPACK_PREMULTIPLIED_ALPHA_WEBGL","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","LINEAR","LINEAR_MIPMAP_LINEAR","CLAMP_TO_EDGE","generateMipmap","update","unit","activeTexture","TEXTURE0","bindTexture","deleteTexture","url","useMipmaps","Promise","resolve","Image","onload","src","MipMap","MipMapLinearLinear","MipMapLinearNearest","MipMapNearestLinear","MipMapNearestNearest","Linear"],"sources":["D:/projects/test-game/node_modules/gdxts/dist/lib/Texture.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Texture = exports.TextureWrap = exports.TextureFilter = void 0;\r\nvar TextureFilter;\r\n(function (TextureFilter) {\r\n    TextureFilter[TextureFilter[\"Nearest\"] = 9728] = \"Nearest\";\r\n    TextureFilter[TextureFilter[\"Linear\"] = 9729] = \"Linear\";\r\n    TextureFilter[TextureFilter[\"MipMap\"] = 9987] = \"MipMap\";\r\n    TextureFilter[TextureFilter[\"MipMapNearestNearest\"] = 9984] = \"MipMapNearestNearest\";\r\n    TextureFilter[TextureFilter[\"MipMapLinearNearest\"] = 9985] = \"MipMapLinearNearest\";\r\n    TextureFilter[TextureFilter[\"MipMapNearestLinear\"] = 9986] = \"MipMapNearestLinear\";\r\n    TextureFilter[TextureFilter[\"MipMapLinearLinear\"] = 9987] = \"MipMapLinearLinear\"; // WebGLRenderingContext.LINEAR_MIPMAP_LINEAR\r\n})(TextureFilter = exports.TextureFilter || (exports.TextureFilter = {}));\r\nvar TextureWrap;\r\n(function (TextureWrap) {\r\n    TextureWrap[TextureWrap[\"MirroredRepeat\"] = 33648] = \"MirroredRepeat\";\r\n    TextureWrap[TextureWrap[\"ClampToEdge\"] = 33071] = \"ClampToEdge\";\r\n    TextureWrap[TextureWrap[\"Repeat\"] = 10497] = \"Repeat\"; // WebGLRenderingContext.REPEAT\r\n})(TextureWrap = exports.TextureWrap || (exports.TextureWrap = {}));\r\nclass Texture {\r\n    constructor(context, image, useMipMaps = false) {\r\n        this.texture = null;\r\n        this.boundUnit = 0;\r\n        this.useMipMaps = false;\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this._image = image;\r\n        this.context = context;\r\n        this.useMipMaps = useMipMaps;\r\n        this.restore();\r\n        this.width = image.width;\r\n        this.height = image.height;\r\n    }\r\n    getImage() {\r\n        return this._image;\r\n    }\r\n    static load(gl, url, useMipmaps = false) {\r\n        return new Promise(resolve => {\r\n            const image = new Image();\r\n            image.onload = () => {\r\n                resolve(new Texture(gl, image, useMipmaps));\r\n            };\r\n            image.src = url;\r\n        });\r\n    }\r\n    getWebGLTexture() {\r\n        return this.texture;\r\n    }\r\n    setFilters(minFilter, magFilter) {\r\n        let gl = this.context;\r\n        this.bind();\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, Texture.validateMagFilter(magFilter));\r\n    }\r\n    static validateMagFilter(magFilter) {\r\n        switch (magFilter) {\r\n            case TextureFilter.MipMap:\r\n            case TextureFilter.MipMapLinearLinear:\r\n            case TextureFilter.MipMapLinearNearest:\r\n            case TextureFilter.MipMapNearestLinear:\r\n            case TextureFilter.MipMapNearestNearest:\r\n                return TextureFilter.Linear;\r\n            default:\r\n                return magFilter;\r\n        }\r\n    }\r\n    setWraps(uWrap, vWrap) {\r\n        let gl = this.context;\r\n        this.bind();\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, uWrap);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, vWrap);\r\n    }\r\n    update(useMipMaps) {\r\n        let gl = this.context;\r\n        if (!this.texture)\r\n            this.texture = this.context.createTexture();\r\n        this.bind();\r\n        if (Texture.DISABLE_UNPACK_PREMULTIPLIED_ALPHA_WEBGL)\r\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._image);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, useMipMaps ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        if (useMipMaps)\r\n            gl.generateMipmap(gl.TEXTURE_2D);\r\n    }\r\n    restore() {\r\n        this.texture = null;\r\n        this.update(this.useMipMaps);\r\n    }\r\n    bind(unit = 0) {\r\n        let gl = this.context;\r\n        this.boundUnit = unit;\r\n        gl.activeTexture(gl.TEXTURE0 + unit);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    }\r\n    unbind() {\r\n        let gl = this.context;\r\n        gl.activeTexture(gl.TEXTURE0 + this.boundUnit);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n    }\r\n    dispose() {\r\n        let gl = this.context;\r\n        gl.deleteTexture(this.texture);\r\n    }\r\n}\r\nexports.Texture = Texture;\r\nTexture.DISABLE_UNPACK_PREMULTIPLIED_ALPHA_WEBGL = false;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}