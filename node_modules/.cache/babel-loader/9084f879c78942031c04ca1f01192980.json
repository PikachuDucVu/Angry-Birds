{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"D:/projects/test-game/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"D:/projects/test-game/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Shader = void 0;\n\nvar WebGL_1 = require(\"./WebGL\");\n\nvar Shader = /*#__PURE__*/function () {\n  function Shader(context, vertexShader, fragmentShader) {\n    _classCallCheck(this, Shader);\n\n    this.vertexShader = vertexShader;\n    this.fragmentShader = fragmentShader;\n    this.vs = null;\n    this.fs = null;\n    this.program = null;\n    this.tmp2x2 = new Float32Array(2 * 2);\n    this.tmp3x3 = new Float32Array(3 * 3);\n    this.tmp4x4 = new Float32Array(4 * 4);\n    this.vsSource = vertexShader;\n    this.fsSource = fragmentShader;\n    this.context = context instanceof WebGL_1.ManagedWebGLRenderingContext ? context : new WebGL_1.ManagedWebGLRenderingContext(context);\n    this.context.addRestorable(this);\n    this.compile();\n  }\n\n  _createClass(Shader, [{\n    key: \"getProgram\",\n    value: function getProgram() {\n      return this.program;\n    }\n  }, {\n    key: \"getVertexShader\",\n    value: function getVertexShader() {\n      return this.vertexShader;\n    }\n  }, {\n    key: \"getFragmentShader\",\n    value: function getFragmentShader() {\n      return this.fragmentShader;\n    }\n  }, {\n    key: \"getVertexShaderSource\",\n    value: function getVertexShaderSource() {\n      return this.vsSource;\n    }\n  }, {\n    key: \"getFragmentSource\",\n    value: function getFragmentSource() {\n      return this.fsSource;\n    }\n  }, {\n    key: \"compile\",\n    value: function compile() {\n      var gl = this.context.gl;\n\n      try {\n        this.vs = this.compileShader(gl.VERTEX_SHADER, this.vertexShader);\n        this.fs = this.compileShader(gl.FRAGMENT_SHADER, this.fragmentShader);\n        this.program = this.compileProgram(this.vs, this.fs);\n      } catch (e) {\n        this.dispose();\n        throw e;\n      }\n    }\n  }, {\n    key: \"compileShader\",\n    value: function compileShader(type, source) {\n      var gl = this.context.gl;\n      var shader = gl.createShader(type);\n      gl.shaderSource(shader, source);\n      gl.compileShader(shader);\n\n      if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        var error = \"Couldn't compile shader: \" + gl.getShaderInfoLog(shader);\n        gl.deleteShader(shader);\n        if (!gl.isContextLost()) throw new Error(error);\n      }\n\n      return shader;\n    }\n  }, {\n    key: \"compileProgram\",\n    value: function compileProgram(vs, fs) {\n      var gl = this.context.gl;\n      var program = gl.createProgram();\n      gl.attachShader(program, vs);\n      gl.attachShader(program, fs);\n      gl.linkProgram(program);\n\n      if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        var error = \"Couldn't compile shader program: \" + gl.getProgramInfoLog(program);\n        gl.deleteProgram(program);\n        if (!gl.isContextLost()) throw new Error(error);\n      }\n\n      return program;\n    }\n  }, {\n    key: \"restore\",\n    value: function restore() {\n      this.compile();\n    }\n  }, {\n    key: \"bind\",\n    value: function bind() {\n      this.context.gl.useProgram(this.program);\n    }\n  }, {\n    key: \"unbind\",\n    value: function unbind() {\n      this.context.gl.useProgram(null);\n    }\n  }, {\n    key: \"setUniformi\",\n    value: function setUniformi(uniform, value) {\n      this.context.gl.uniform1i(this.getUniformLocation(uniform), value);\n    }\n  }, {\n    key: \"setUniformf\",\n    value: function setUniformf(uniform, value) {\n      this.context.gl.uniform1f(this.getUniformLocation(uniform), value);\n    }\n  }, {\n    key: \"setUniform2f\",\n    value: function setUniform2f(uniform, value, value2) {\n      this.context.gl.uniform2f(this.getUniformLocation(uniform), value, value2);\n    }\n  }, {\n    key: \"setUniform3f\",\n    value: function setUniform3f(uniform, value, value2, value3) {\n      this.context.gl.uniform3f(this.getUniformLocation(uniform), value, value2, value3);\n    }\n  }, {\n    key: \"setUniform4f\",\n    value: function setUniform4f(uniform, value, value2, value3, value4) {\n      this.context.gl.uniform4f(this.getUniformLocation(uniform), value, value2, value3, value4);\n    }\n  }, {\n    key: \"setUniform2x2f\",\n    value: function setUniform2x2f(uniform, value) {\n      var gl = this.context.gl;\n      this.tmp2x2.set(value);\n      gl.uniformMatrix2fv(this.getUniformLocation(uniform), false, this.tmp2x2);\n    }\n  }, {\n    key: \"setUniform3x3f\",\n    value: function setUniform3x3f(uniform, value) {\n      var gl = this.context.gl;\n      this.tmp3x3.set(value);\n      gl.uniformMatrix3fv(this.getUniformLocation(uniform), false, this.tmp3x3);\n    }\n  }, {\n    key: \"setUniform4x4f\",\n    value: function setUniform4x4f(uniform, value) {\n      var gl = this.context.gl;\n      this.tmp4x4.set(value);\n      gl.uniformMatrix4fv(this.getUniformLocation(uniform), false, this.tmp4x4);\n    }\n  }, {\n    key: \"getUniformLocation\",\n    value: function getUniformLocation(uniform) {\n      var gl = this.context.gl;\n      var location = gl.getUniformLocation(this.program, uniform);\n      if (!location && !gl.isContextLost()) throw new Error(\"Couldn't find location for uniform \".concat(uniform));\n      return location;\n    }\n  }, {\n    key: \"getAttributeLocation\",\n    value: function getAttributeLocation(attribute) {\n      var gl = this.context.gl;\n      var location = gl.getAttribLocation(this.program, attribute);\n      if (location === -1 && !gl.isContextLost()) throw new Error(\"Couldn't find location for attribute \".concat(attribute));\n      return location;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.context.removeRestorable(this);\n      var gl = this.context.gl;\n\n      if (this.vs) {\n        gl.deleteShader(this.vs);\n        this.vs = null;\n      }\n\n      if (this.fs) {\n        gl.deleteShader(this.fs);\n        this.fs = null;\n      }\n\n      if (this.program) {\n        gl.deleteProgram(this.program);\n        this.program = null;\n      }\n    }\n  }], [{\n    key: \"newColoredTextured\",\n    value: function newColoredTextured(context) {\n      var vs = \"\\n         attribute vec4 \".concat(Shader.POSITION, \";\\n         attribute vec4 \").concat(Shader.COLOR, \";\\n         attribute vec2 \").concat(Shader.TEXCOORDS, \";\\n         uniform mat4 \").concat(Shader.MVP_MATRIX, \";\\n         varying vec4 v_color;\\n         varying vec2 v_texCoords;\\n \\n         void main () {\\n           v_color = \").concat(Shader.COLOR, \";\\n           v_texCoords = \").concat(Shader.TEXCOORDS, \";\\n           gl_Position = \").concat(Shader.MVP_MATRIX, \" * \").concat(Shader.POSITION, \";\\n         }\\n       \");\n      var fs = \"\\n         #ifdef GL_ES\\n           #define LOWP lowp\\n           precision mediump float;\\n         #else\\n           #define LOWP\\n         #endif\\n         varying LOWP vec4 v_color;\\n         varying vec2 v_texCoords;\\n         uniform sampler2D u_texture;\\n \\n         void main () {\\n           gl_FragColor = v_color * texture2D(u_texture, v_texCoords);\\n         }\\n       \";\n      return new Shader(context, vs, fs);\n    }\n  }, {\n    key: \"newTwoColoredTextured\",\n    value: function newTwoColoredTextured(context) {\n      var vs = \"\\n         attribute vec4 \".concat(Shader.POSITION, \";\\n         attribute vec4 \").concat(Shader.COLOR, \";\\n         attribute vec4 \").concat(Shader.COLOR2, \";\\n         attribute vec2 \").concat(Shader.TEXCOORDS, \";\\n         uniform mat4 \").concat(Shader.MVP_MATRIX, \";\\n         varying vec4 v_light;\\n         varying vec4 v_dark;\\n         varying vec2 v_texCoords;\\n \\n         void main () {\\n           v_light = \").concat(Shader.COLOR, \";\\n           v_dark = \").concat(Shader.COLOR2, \";\\n           v_texCoords = \").concat(Shader.TEXCOORDS, \";\\n           gl_Position = \").concat(Shader.MVP_MATRIX, \" * \").concat(Shader.POSITION, \";\\n         }\\n       \");\n      var fs = \"\\n         #ifdef GL_ES\\n           #define LOWP lowp\\n           precision mediump float;\\n         #else\\n           #define LOWP\\n         #endif\\n         varying LOWP vec4 v_light;\\n         varying LOWP vec4 v_dark;\\n         varying vec2 v_texCoords;\\n         uniform sampler2D u_texture;\\n \\n         void main () {\\n           vec4 texColor = texture2D(u_texture, v_texCoords);\\n           gl_FragColor.a = texColor.a * v_light.a;\\n           gl_FragColor.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\\n         }\\n       \";\n      return new Shader(context, vs, fs);\n    }\n  }, {\n    key: \"newColored\",\n    value: function newColored(context) {\n      var vs = \"\\n         attribute vec4 \".concat(Shader.POSITION, \";\\n         attribute vec4 \").concat(Shader.COLOR, \";\\n         uniform mat4 \").concat(Shader.MVP_MATRIX, \";\\n         varying vec4 v_color;\\n \\n         void main () {\\n           v_color = \").concat(Shader.COLOR, \";\\n           gl_Position = \").concat(Shader.MVP_MATRIX, \" * \").concat(Shader.POSITION, \";\\n         }\\n       \");\n      var fs = \"\\n         #ifdef GL_ES\\n           #define LOWP lowp\\n           precision mediump float;\\n         #else\\n           #define LOWP\\n         #endif\\n         varying LOWP vec4 v_color;\\n \\n         void main () {\\n           gl_FragColor = v_color;\\n         }\\n       \";\n      return new Shader(context, vs, fs);\n    }\n  }]);\n\n  return Shader;\n}();\n\nexports.Shader = Shader;\nShader.MVP_MATRIX = \"u_projTrans\";\nShader.POSITION = \"a_position\";\nShader.COLOR = \"a_color\";\nShader.COLOR2 = \"a_color2\";\nShader.TEXCOORDS = \"a_texCoords\";\nShader.SAMPLER = \"u_texture\";","map":{"version":3,"names":["Object","defineProperty","exports","value","Shader","WebGL_1","require","context","vertexShader","fragmentShader","vs","fs","program","tmp2x2","Float32Array","tmp3x3","tmp4x4","vsSource","fsSource","ManagedWebGLRenderingContext","addRestorable","compile","gl","compileShader","VERTEX_SHADER","FRAGMENT_SHADER","compileProgram","e","dispose","type","source","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","deleteShader","isContextLost","Error","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","useProgram","uniform","uniform1i","getUniformLocation","uniform1f","value2","uniform2f","value3","uniform3f","value4","uniform4f","set","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","location","attribute","getAttribLocation","removeRestorable","POSITION","COLOR","TEXCOORDS","MVP_MATRIX","COLOR2","SAMPLER"],"sources":["D:/projects/test-game/node_modules/gdxts/dist/lib/Shader.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Shader = void 0;\nconst WebGL_1 = require(\"./WebGL\");\nclass Shader {\n    constructor(context, vertexShader, fragmentShader) {\n        this.vertexShader = vertexShader;\n        this.fragmentShader = fragmentShader;\n        this.vs = null;\n        this.fs = null;\n        this.program = null;\n        this.tmp2x2 = new Float32Array(2 * 2);\n        this.tmp3x3 = new Float32Array(3 * 3);\n        this.tmp4x4 = new Float32Array(4 * 4);\n        this.vsSource = vertexShader;\n        this.fsSource = fragmentShader;\n        this.context =\n            context instanceof WebGL_1.ManagedWebGLRenderingContext\n                ? context\n                : new WebGL_1.ManagedWebGLRenderingContext(context);\n        this.context.addRestorable(this);\n        this.compile();\n    }\n    getProgram() {\n        return this.program;\n    }\n    getVertexShader() {\n        return this.vertexShader;\n    }\n    getFragmentShader() {\n        return this.fragmentShader;\n    }\n    getVertexShaderSource() {\n        return this.vsSource;\n    }\n    getFragmentSource() {\n        return this.fsSource;\n    }\n    compile() {\n        let gl = this.context.gl;\n        try {\n            this.vs = this.compileShader(gl.VERTEX_SHADER, this.vertexShader);\n            this.fs = this.compileShader(gl.FRAGMENT_SHADER, this.fragmentShader);\n            this.program = this.compileProgram(this.vs, this.fs);\n        }\n        catch (e) {\n            this.dispose();\n            throw e;\n        }\n    }\n    compileShader(type, source) {\n        let gl = this.context.gl;\n        let shader = gl.createShader(type);\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            let error = \"Couldn't compile shader: \" + gl.getShaderInfoLog(shader);\n            gl.deleteShader(shader);\n            if (!gl.isContextLost())\n                throw new Error(error);\n        }\n        return shader;\n    }\n    compileProgram(vs, fs) {\n        let gl = this.context.gl;\n        let program = gl.createProgram();\n        gl.attachShader(program, vs);\n        gl.attachShader(program, fs);\n        gl.linkProgram(program);\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n            let error = \"Couldn't compile shader program: \" + gl.getProgramInfoLog(program);\n            gl.deleteProgram(program);\n            if (!gl.isContextLost())\n                throw new Error(error);\n        }\n        return program;\n    }\n    restore() {\n        this.compile();\n    }\n    bind() {\n        this.context.gl.useProgram(this.program);\n    }\n    unbind() {\n        this.context.gl.useProgram(null);\n    }\n    setUniformi(uniform, value) {\n        this.context.gl.uniform1i(this.getUniformLocation(uniform), value);\n    }\n    setUniformf(uniform, value) {\n        this.context.gl.uniform1f(this.getUniformLocation(uniform), value);\n    }\n    setUniform2f(uniform, value, value2) {\n        this.context.gl.uniform2f(this.getUniformLocation(uniform), value, value2);\n    }\n    setUniform3f(uniform, value, value2, value3) {\n        this.context.gl.uniform3f(this.getUniformLocation(uniform), value, value2, value3);\n    }\n    setUniform4f(uniform, value, value2, value3, value4) {\n        this.context.gl.uniform4f(this.getUniformLocation(uniform), value, value2, value3, value4);\n    }\n    setUniform2x2f(uniform, value) {\n        let gl = this.context.gl;\n        this.tmp2x2.set(value);\n        gl.uniformMatrix2fv(this.getUniformLocation(uniform), false, this.tmp2x2);\n    }\n    setUniform3x3f(uniform, value) {\n        let gl = this.context.gl;\n        this.tmp3x3.set(value);\n        gl.uniformMatrix3fv(this.getUniformLocation(uniform), false, this.tmp3x3);\n    }\n    setUniform4x4f(uniform, value) {\n        let gl = this.context.gl;\n        this.tmp4x4.set(value);\n        gl.uniformMatrix4fv(this.getUniformLocation(uniform), false, this.tmp4x4);\n    }\n    getUniformLocation(uniform) {\n        let gl = this.context.gl;\n        let location = gl.getUniformLocation(this.program, uniform);\n        if (!location && !gl.isContextLost())\n            throw new Error(`Couldn't find location for uniform ${uniform}`);\n        return location;\n    }\n    getAttributeLocation(attribute) {\n        let gl = this.context.gl;\n        let location = gl.getAttribLocation(this.program, attribute);\n        if (location === -1 && !gl.isContextLost())\n            throw new Error(`Couldn't find location for attribute ${attribute}`);\n        return location;\n    }\n    dispose() {\n        this.context.removeRestorable(this);\n        let gl = this.context.gl;\n        if (this.vs) {\n            gl.deleteShader(this.vs);\n            this.vs = null;\n        }\n        if (this.fs) {\n            gl.deleteShader(this.fs);\n            this.fs = null;\n        }\n        if (this.program) {\n            gl.deleteProgram(this.program);\n            this.program = null;\n        }\n    }\n    static newColoredTextured(context) {\n        let vs = `\n         attribute vec4 ${Shader.POSITION};\n         attribute vec4 ${Shader.COLOR};\n         attribute vec2 ${Shader.TEXCOORDS};\n         uniform mat4 ${Shader.MVP_MATRIX};\n         varying vec4 v_color;\n         varying vec2 v_texCoords;\n \n         void main () {\n           v_color = ${Shader.COLOR};\n           v_texCoords = ${Shader.TEXCOORDS};\n           gl_Position = ${Shader.MVP_MATRIX} * ${Shader.POSITION};\n         }\n       `;\n        let fs = `\n         #ifdef GL_ES\n           #define LOWP lowp\n           precision mediump float;\n         #else\n           #define LOWP\n         #endif\n         varying LOWP vec4 v_color;\n         varying vec2 v_texCoords;\n         uniform sampler2D u_texture;\n \n         void main () {\n           gl_FragColor = v_color * texture2D(u_texture, v_texCoords);\n         }\n       `;\n        return new Shader(context, vs, fs);\n    }\n    static newTwoColoredTextured(context) {\n        let vs = `\n         attribute vec4 ${Shader.POSITION};\n         attribute vec4 ${Shader.COLOR};\n         attribute vec4 ${Shader.COLOR2};\n         attribute vec2 ${Shader.TEXCOORDS};\n         uniform mat4 ${Shader.MVP_MATRIX};\n         varying vec4 v_light;\n         varying vec4 v_dark;\n         varying vec2 v_texCoords;\n \n         void main () {\n           v_light = ${Shader.COLOR};\n           v_dark = ${Shader.COLOR2};\n           v_texCoords = ${Shader.TEXCOORDS};\n           gl_Position = ${Shader.MVP_MATRIX} * ${Shader.POSITION};\n         }\n       `;\n        let fs = `\n         #ifdef GL_ES\n           #define LOWP lowp\n           precision mediump float;\n         #else\n           #define LOWP\n         #endif\n         varying LOWP vec4 v_light;\n         varying LOWP vec4 v_dark;\n         varying vec2 v_texCoords;\n         uniform sampler2D u_texture;\n \n         void main () {\n           vec4 texColor = texture2D(u_texture, v_texCoords);\n           gl_FragColor.a = texColor.a * v_light.a;\n           gl_FragColor.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n         }\n       `;\n        return new Shader(context, vs, fs);\n    }\n    static newColored(context) {\n        let vs = `\n         attribute vec4 ${Shader.POSITION};\n         attribute vec4 ${Shader.COLOR};\n         uniform mat4 ${Shader.MVP_MATRIX};\n         varying vec4 v_color;\n \n         void main () {\n           v_color = ${Shader.COLOR};\n           gl_Position = ${Shader.MVP_MATRIX} * ${Shader.POSITION};\n         }\n       `;\n        let fs = `\n         #ifdef GL_ES\n           #define LOWP lowp\n           precision mediump float;\n         #else\n           #define LOWP\n         #endif\n         varying LOWP vec4 v_color;\n \n         void main () {\n           gl_FragColor = v_color;\n         }\n       `;\n        return new Shader(context, vs, fs);\n    }\n}\nexports.Shader = Shader;\nShader.MVP_MATRIX = \"u_projTrans\";\nShader.POSITION = \"a_position\";\nShader.COLOR = \"a_color\";\nShader.COLOR2 = \"a_color2\";\nShader.TEXCOORDS = \"a_texCoords\";\nShader.SAMPLER = \"u_texture\";\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}