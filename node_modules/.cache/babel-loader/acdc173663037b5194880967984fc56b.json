{"ast":null,"code":"import _initializerDefineProperty from \"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js\";\nimport _applyDecoratedDescriptor from \"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\";\nimport _initializerWarningHelper from \"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper.js\";\n\nvar _dec, _dec2, _dec3, _dec4, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;\n\nimport { System, Inject } from \"flat-ecs\";\nexport let Level2System = (_dec = Inject(\"levelState\"), _dec2 = Inject(\"physicWorld\"), _dec3 = Inject(\"bird\"), _dec4 = Inject(\"pigs\"), (_class = class Level2System extends System {\n  constructor() {\n    super(...arguments);\n\n    _initializerDefineProperty(this, \"levelState\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"physicWorld\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"bird\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"pigs\", _descriptor4, this);\n  }\n\n  initialized() {}\n\n  process() {\n    if (this.levelState.conditionWin) {}\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"levelState\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"physicWorld\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"bird\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"pigs\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class));","map":{"version":3,"names":["System","Inject","Level2System","initialized","process","levelState","conditionWin"],"sources":["D:/projects/test-game/src/data/Level2System.ts"],"sourcesContent":["import { b2Body, b2World } from \"box2d.ts\";\r\nimport { System, Inject } from \"flat-ecs\";\r\nimport { LevelState } from \"./LevelState\";\r\n\r\nexport class Level2System extends System {\r\n  @Inject(\"levelState\") levelState: LevelState;\r\n  @Inject(\"physicWorld\") physicWorld: b2World;\r\n  @Inject(\"bird\") bird: b2Body[];\r\n  @Inject(\"pigs\") pigs: b2Body[];\r\n\r\n  initialized() {}\r\n  process(): void {\r\n    if (this.levelState.conditionWin) {\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;;;;;AACA,SAASA,MAAT,EAAiBC,MAAjB,QAA+B,UAA/B;AAGA,WAAaC,YAAb,WACGD,MAAM,CAAC,YAAD,CADT,UAEGA,MAAM,CAAC,aAAD,CAFT,UAGGA,MAAM,CAAC,MAAD,CAHT,UAIGA,MAAM,CAAC,MAAD,CAJT,YAAO,MAAMC,YAAN,SAA2BF,MAA3B,CAAkC;EAAA;IAAA;;IAAA;;IAAA;;IAAA;;IAAA;EAAA;;EAMvCG,WAAW,GAAG,CAAE;;EAChBC,OAAO,GAAS;IACd,IAAI,KAAKC,UAAL,CAAgBC,YAApB,EAAkC,CACjC;EACF;;AAVsC,CAAzC;EAAA;EAAA;EAAA;EAAA;AAAA;EAAA;EAAA;EAAA;EAAA;AAAA;EAAA;EAAA;EAAA;EAAA;AAAA;EAAA;EAAA;EAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}