{"ast":null,"code":"import { createStage, createViewport, createGameLoop, ShapeRenderer, Texture, PolygonBatch } from \"gdxts\";\n\nconst init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n  const texture = await Texture.load(gl, \"./charizard.png\");\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  let rotation = 0;\n  const ROTATION_SPEED = Math.PI * 2;\n  gl.clearColor(0, 0, 0, 1);\n  createGameLoop(delta => {\n    rotation += ROTATION_SPEED * delta;\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    let scale = Math.abs(Math.sin(rotation));\n    batch.draw(texture, 10, 10, 200, 200, 100, 100, rotation, scale, scale);\n    batch.end();\n  });\n};\n\ninit();\nexport {};","map":{"version":3,"names":["createStage","createViewport","createGameLoop","ShapeRenderer","Texture","PolygonBatch","init","stage","canvas","getCanvas","viewport","gl","getContext","texture","load","characterTexture","shapeRenderer","batch","camera","getCamera","rotation","ROTATION_SPEED","Math","PI","clearColor","delta","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end","scale","abs","sin","draw"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createStage,\n  createViewport,\n  createGameLoop,\n  ShapeRenderer,\n  Color,\n  Texture,\n  PolygonBatch,\n} from \"gdxts\";\n\nconst init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n\n  const texture = await Texture.load(gl, \"./charizard.png\");\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n\n  let rotation = 0;\n  const ROTATION_SPEED = Math.PI * 2;\n  gl.clearColor(0, 0, 0, 1);\n  createGameLoop((delta: number) => {\n    rotation += ROTATION_SPEED * delta;\n\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    let scale = Math.abs(Math.sin(rotation));\n    batch.draw(texture, 10, 10, 200, 200, 100, 100, rotation, scale, scale);\n    batch.end();\n  });\n};\ninit();\n\nexport {};\n"],"mappings":"AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,aAJF,EAMEC,OANF,EAOEC,YAPF,QAQO,OARP;;AAUA,MAAMC,IAAI,GAAG,YAAY;EACvB,MAAMC,KAAK,GAAGP,WAAW,EAAzB;EACA,MAAMQ,MAAM,GAAGD,KAAK,CAACE,SAAN,EAAf;EAEA,MAAMC,QAAQ,GAAGT,cAAc,CAACO,MAAD,EAAS,GAAT,EAAc,IAAd,CAA/B;EACA,MAAMG,EAAE,GAAGD,QAAQ,CAACE,UAAT,EAAX;EAEA,MAAMC,OAAO,GAAG,MAAMT,OAAO,CAACU,IAAR,CAAaH,EAAb,EAAiB,iBAAjB,CAAtB;EACA,MAAMI,gBAAgB,GAAG,MAAMX,OAAO,CAACU,IAAR,CAAaH,EAAb,EAAiB,mBAAjB,CAA/B;EAEA,MAAMK,aAAa,GAAG,IAAIb,aAAJ,CAAkBQ,EAAlB,CAAtB;EACA,MAAMM,KAAK,GAAG,IAAIZ,YAAJ,CAAiBM,EAAjB,CAAd;EACA,MAAMO,MAAM,GAAGR,QAAQ,CAACS,SAAT,EAAf;EAEA,IAAIC,QAAQ,GAAG,CAAf;EACA,MAAMC,cAAc,GAAGC,IAAI,CAACC,EAAL,GAAU,CAAjC;EACAZ,EAAE,CAACa,UAAH,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;EACAtB,cAAc,CAAEuB,KAAD,IAAmB;IAChCL,QAAQ,IAAIC,cAAc,GAAGI,KAA7B;IAEAd,EAAE,CAACe,KAAH,CAASf,EAAE,CAACgB,gBAAZ;IACAX,aAAa,CAACY,aAAd,CAA4BV,MAAM,CAACW,cAAP,CAAsBC,MAAlD;IACAd,aAAa,CAACe,KAAd;IACAf,aAAa,CAACgB,IAAd,CAAmB,IAAnB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,GAA/B,EAAoC,IAApC;IACAhB,aAAa,CAACiB,GAAd;IAEAhB,KAAK,CAACW,aAAN,CAAoBV,MAAM,CAACW,cAAP,CAAsBC,MAA1C;IACAb,KAAK,CAACc,KAAN;IACA,IAAIG,KAAK,GAAGZ,IAAI,CAACa,GAAL,CAASb,IAAI,CAACc,GAAL,CAAShB,QAAT,CAAT,CAAZ;IACAH,KAAK,CAACoB,IAAN,CAAWxB,OAAX,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,GAAtC,EAA2C,GAA3C,EAAgDO,QAAhD,EAA0Dc,KAA1D,EAAiEA,KAAjE;IACAjB,KAAK,CAACgB,GAAN;EACD,CAda,CAAd;AAeD,CAhCD;;AAiCA3B,IAAI;AAEJ"},"metadata":{},"sourceType":"module"}