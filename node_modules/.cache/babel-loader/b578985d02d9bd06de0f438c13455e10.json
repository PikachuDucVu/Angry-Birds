{"ast":null,"code":"import { createStage, createViewport, createGameLoop, ShapeRenderer, Texture, TextureRegion, PolygonBatch, Animation, PlayMode, ViewportInputHandler, InputEvent, Vector2 } from \"gdxts\";\nimport Walkable from \"walkable\";\nexport const init = async () => {\n  let walkable = new Walkable(500, 1000);\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./pokemon-bg.jpg\");\n  const mapData = await fetch(\"./test.tmj\").then(res => res.json());\n  const obstacles = mapData.layers.find(l => l.name === \"obstacles\").objects.map(rect => ({ ...rect,\n    y: 1000 - rect.y - rect.height\n  }));\n\n  for (let rect of obstacles) {\n    walkable.addRect(rect.width, rect.height, rect.x, rect.y);\n  } // eslint-disable-next-line\n  // const texture = await Texture.load(gl, \"./charizard.png\");\n\n\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\"); // const apple = await Texture.load(gl, \"./apple.png\");\n\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n  const walkDownAnimation = new Animation(regions.slice(0, 4), 0.2);\n  const walkLeftAnimation = new Animation(regions.slice(4, 8), 0.2);\n  const walkRightAnimation = new Animation(regions.slice(8, 12), 0.2);\n  const walkUpAnimation = new Animation(regions.slice(12, 16), 0.2);\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  let characterPosition = new Vector2(250, 500);\n  let frame = 0;\n  let rotation = 0;\n  let vectorResult = new Vector2();\n  let d = new Vector2();\n  let count = 0;\n  gl.clearColor(0, 0, 0, 1);\n  let nextPosition = new Vector2(250, 500);\n  const path = [];\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    path.length = 0;\n    count = 0;\n    nextPosition = inputHandler.getTouchedWorldCoord();\n    walkable.findPath(characterPosition.x, characterPosition.y, nextPosition.x, nextPosition.y, 15, path);\n    console.log(path);\n    nextPosition.x = path[0];\n    nextPosition.y = path[1];\n    rotation = Math.atan2(nextPosition.y - characterPosition.y, nextPosition.x - characterPosition.x) * 180 / Math.PI;\n  });\n  var region = walkDownAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n  const moveSpeed = 150;\n  createGameLoop(delta => {\n    vectorResult.x = nextPosition.x - characterPosition.x;\n    vectorResult.y = nextPosition.y - characterPosition.y;\n    d = vectorResult.normalize();\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n\n    if (characterPosition.x !== nextPosition.x || characterPosition.y !== nextPosition.y) {\n      frame += delta;\n\n      if (rotation >= -45 && rotation < 45) {\n        region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      }\n\n      if (rotation >= -135 && rotation < -45) {\n        region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      }\n\n      if (rotation >= 45 && rotation < 135) {\n        region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      }\n\n      if (rotation >= 135 && rotation < 180 || rotation <= -135 && rotation > -180) {\n        region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      }\n\n      if (characterPosition.x < nextPosition.x) {\n        characterPosition.x = Math.min(characterPosition.x + d.x * moveSpeed * delta, nextPosition.x);\n      }\n\n      if (characterPosition.y < nextPosition.y) {\n        characterPosition.y = Math.min(characterPosition.y + d.y * moveSpeed * delta, nextPosition.y);\n      }\n\n      if (characterPosition.x > nextPosition.x) {\n        characterPosition.x = Math.max(characterPosition.x + d.x * moveSpeed * delta, nextPosition.x);\n      }\n\n      if (characterPosition.y > nextPosition.y) {\n        characterPosition.y = Math.max(characterPosition.y + d.y * moveSpeed * delta, nextPosition.y);\n      }\n    } else {\n      frame = 0;\n      setTimeout(() => {\n        region = walkDownAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n      }, 0.2);\n\n      if (count < path.length) {\n        count += 2;\n      } else {\n        count = 0;\n      }\n\n      nextPosition.x = path[count];\n      nextPosition.y = path[count + 1];\n      console.log(rotation);\n      rotation = Math.atan2(nextPosition.y - characterPosition.y, nextPosition.x - characterPosition.x) * 180 / Math.PI;\n    }\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 500, 1000);\n    region.draw(batch, characterPosition.x - 50, characterPosition.y - 20, 100, 100);\n    batch.end(); // shapeRenderer.begin();\n    // for (let rect of obstacles) {\n    //   shapeRenderer.rect(\n    //     false,\n    //     rect.x,\n    //     rect.y,\n    //     rect.width,\n    //     rect.height,\n    //     Color.WHITE\n    //   );\n    // }\n    // if (path.length >= 4) {\n    //   for (let i = 2; i <= path.length; i += 2) {\n    //     shapeRenderer.line(\n    //       path[i - 2],\n    //       path[i - 1],\n    //       path[i],\n    //       path[i + 1],\n    //       Color.WHITE\n    //     );\n    //   }\n    // }\n    // shapeRenderer.end();\n  });\n};\ninit();","map":{"version":3,"names":["createStage","createViewport","createGameLoop","ShapeRenderer","Texture","TextureRegion","PolygonBatch","Animation","PlayMode","ViewportInputHandler","InputEvent","Vector2","Walkable","init","walkable","stage","canvas","getCanvas","viewport","gl","getContext","background","load","mapData","fetch","then","res","json","obstacles","layers","find","l","name","objects","map","rect","y","height","addRect","width","x","characterTexture","regions","splitTexture","walkDownAnimation","slice","walkLeftAnimation","walkRightAnimation","walkUpAnimation","shapeRenderer","batch","camera","getCamera","inputHandler","characterPosition","frame","rotation","vectorResult","d","count","clearColor","nextPosition","path","addEventListener","TouchStart","length","getTouchedWorldCoord","findPath","console","log","Math","atan2","PI","region","getKeyFrame","NORMAL","moveSpeed","delta","normalize","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","end","LOOP","min","max","setTimeout","draw"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createStage,\n  createViewport,\n  createGameLoop,\n  ShapeRenderer,\n  Texture,\n  TextureRegion,\n  PolygonBatch,\n  Animation,\n  PlayMode,\n  ViewportInputHandler,\n  InputEvent,\n  Vector2,\n  Color,\n} from \"gdxts\";\nimport Walkable from \"walkable\";\n\nexport const init = async () => {\n  let walkable = new Walkable(500, 1000);\n\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./pokemon-bg.jpg\");\n\n  const mapData = await fetch(\"./test.tmj\").then((res) => res.json());\n  const obstacles = mapData.layers\n    .find((l: any) => l.name === \"obstacles\")\n    .objects.map((rect: any) => ({\n      ...rect,\n      y: 1000 - rect.y - rect.height,\n    }));\n\n  for (let rect of obstacles) {\n    walkable.addRect(rect.width, rect.height, rect.x, rect.y);\n  }\n\n  // eslint-disable-next-line\n  // const texture = await Texture.load(gl, \"./charizard.png\");\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  // const apple = await Texture.load(gl, \"./apple.png\");\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n\n  const walkDownAnimation = new Animation(regions.slice(0, 4), 0.2);\n  const walkLeftAnimation = new Animation(regions.slice(4, 8), 0.2);\n  const walkRightAnimation = new Animation(regions.slice(8, 12), 0.2);\n  const walkUpAnimation = new Animation(regions.slice(12, 16), 0.2);\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  let characterPosition = new Vector2(250, 500);\n\n  let frame = 0;\n  let rotation = 0;\n  let vectorResult = new Vector2();\n  let d = new Vector2();\n\n  let count = 0;\n\n  gl.clearColor(0, 0, 0, 1);\n  let nextPosition = new Vector2(250, 500);\n  const path: number[] = [];\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    path.length = 0;\n    count = 0;\n    nextPosition = inputHandler.getTouchedWorldCoord();\n    walkable.findPath(\n      characterPosition.x,\n      characterPosition.y,\n      nextPosition.x,\n      nextPosition.y,\n      15,\n      path\n    );\n    console.log(path);\n\n    nextPosition.x = path[0];\n    nextPosition.y = path[1];\n    rotation =\n      (Math.atan2(\n        nextPosition.y - characterPosition.y,\n        nextPosition.x - characterPosition.x\n      ) *\n        180) /\n      Math.PI;\n  });\n  var region = walkDownAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n  const moveSpeed = 150;\n\n  createGameLoop((delta: number) => {\n    vectorResult.x = nextPosition.x - characterPosition.x;\n    vectorResult.y = nextPosition.y - characterPosition.y;\n    d = vectorResult.normalize();\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n\n    if (\n      characterPosition.x !== nextPosition.x ||\n      characterPosition.y !== nextPosition.y\n    ) {\n      frame += delta;\n      if (rotation >= -45 && rotation < 45) {\n        region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      }\n      if (rotation >= -135 && rotation < -45) {\n        region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      }\n      if (rotation >= 45 && rotation < 135) {\n        region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      }\n      if (\n        (rotation >= 135 && rotation < 180) ||\n        (rotation <= -135 && rotation > -180)\n      ) {\n        region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      }\n\n      if (characterPosition.x < nextPosition.x) {\n        characterPosition.x = Math.min(\n          characterPosition.x + d.x * moveSpeed * delta,\n          nextPosition.x\n        );\n      }\n      if (characterPosition.y < nextPosition.y) {\n        characterPosition.y = Math.min(\n          characterPosition.y + d.y * moveSpeed * delta,\n          nextPosition.y\n        );\n      }\n      if (characterPosition.x > nextPosition.x) {\n        characterPosition.x = Math.max(\n          characterPosition.x + d.x * moveSpeed * delta,\n          nextPosition.x\n        );\n      }\n      if (characterPosition.y > nextPosition.y) {\n        characterPosition.y = Math.max(\n          characterPosition.y + d.y * moveSpeed * delta,\n          nextPosition.y\n        );\n      }\n    } else {\n      frame = 0;\n      setTimeout(() => {\n        region = walkDownAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n      }, 0.2);\n      if (count < path.length) {\n        count += 2;\n      } else {\n        count = 0;\n      }\n      nextPosition.x = path[count];\n      nextPosition.y = path[count + 1];\n      console.log(rotation);\n      rotation =\n        (Math.atan2(\n          nextPosition.y - characterPosition.y,\n          nextPosition.x - characterPosition.x\n        ) *\n          180) /\n        Math.PI;\n    }\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 500, 1000);\n    region.draw(\n      batch,\n      characterPosition.x - 50,\n      characterPosition.y - 20,\n      100,\n      100\n    );\n    batch.end();\n\n    // shapeRenderer.begin();\n    // for (let rect of obstacles) {\n    //   shapeRenderer.rect(\n    //     false,\n    //     rect.x,\n    //     rect.y,\n    //     rect.width,\n    //     rect.height,\n    //     Color.WHITE\n    //   );\n    // }\n\n    // if (path.length >= 4) {\n    //   for (let i = 2; i <= path.length; i += 2) {\n    //     shapeRenderer.line(\n    //       path[i - 2],\n    //       path[i - 1],\n    //       path[i],\n    //       path[i + 1],\n    //       Color.WHITE\n    //     );\n    //   }\n    // }\n\n    // shapeRenderer.end();\n  });\n};\n\ninit();\n"],"mappings":"AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,aAJF,EAKEC,OALF,EAMEC,aANF,EAOEC,YAPF,EAQEC,SARF,EASEC,QATF,EAUEC,oBAVF,EAWEC,UAXF,EAYEC,OAZF,QAcO,OAdP;AAeA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAO,MAAMC,IAAI,GAAG,YAAY;EAC9B,IAAIC,QAAQ,GAAG,IAAIF,QAAJ,CAAa,GAAb,EAAkB,IAAlB,CAAf;EAEA,MAAMG,KAAK,GAAGf,WAAW,EAAzB;EACA,MAAMgB,MAAM,GAAGD,KAAK,CAACE,SAAN,EAAf;EACA,MAAMC,QAAQ,GAAGjB,cAAc,CAACe,MAAD,EAAS,GAAT,EAAc,IAAd,CAA/B;EACA,MAAMG,EAAE,GAAGD,QAAQ,CAACE,UAAT,EAAX;EACA,MAAMC,UAAU,GAAG,MAAMjB,OAAO,CAACkB,IAAR,CAAaH,EAAb,EAAiB,kBAAjB,CAAzB;EAEA,MAAMI,OAAO,GAAG,MAAMC,KAAK,CAAC,YAAD,CAAL,CAAoBC,IAApB,CAA0BC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAlC,CAAtB;EACA,MAAMC,SAAS,GAAGL,OAAO,CAACM,MAAR,CACfC,IADe,CACTC,CAAD,IAAYA,CAAC,CAACC,IAAF,KAAW,WADb,EAEfC,OAFe,CAEPC,GAFO,CAEFC,IAAD,KAAgB,EAC3B,GAAGA,IADwB;IAE3BC,CAAC,EAAE,OAAOD,IAAI,CAACC,CAAZ,GAAgBD,IAAI,CAACE;EAFG,CAAhB,CAFG,CAAlB;;EAOA,KAAK,IAAIF,IAAT,IAAiBP,SAAjB,EAA4B;IAC1Bd,QAAQ,CAACwB,OAAT,CAAiBH,IAAI,CAACI,KAAtB,EAA6BJ,IAAI,CAACE,MAAlC,EAA0CF,IAAI,CAACK,CAA/C,EAAkDL,IAAI,CAACC,CAAvD;EACD,CAnB6B,CAqB9B;EACA;;;EACA,MAAMK,gBAAgB,GAAG,MAAMrC,OAAO,CAACkB,IAAR,CAAaH,EAAb,EAAiB,mBAAjB,CAA/B,CAvB8B,CAwB9B;;EACA,MAAMuB,OAAO,GAAGrC,aAAa,CAACsC,YAAd,CAA2BF,gBAA3B,EAA6C,CAA7C,EAAgD,CAAhD,CAAhB;EAEA,MAAMG,iBAAiB,GAAG,IAAIrC,SAAJ,CAAcmC,OAAO,CAACG,KAAR,CAAc,CAAd,EAAiB,CAAjB,CAAd,EAAmC,GAAnC,CAA1B;EACA,MAAMC,iBAAiB,GAAG,IAAIvC,SAAJ,CAAcmC,OAAO,CAACG,KAAR,CAAc,CAAd,EAAiB,CAAjB,CAAd,EAAmC,GAAnC,CAA1B;EACA,MAAME,kBAAkB,GAAG,IAAIxC,SAAJ,CAAcmC,OAAO,CAACG,KAAR,CAAc,CAAd,EAAiB,EAAjB,CAAd,EAAoC,GAApC,CAA3B;EACA,MAAMG,eAAe,GAAG,IAAIzC,SAAJ,CAAcmC,OAAO,CAACG,KAAR,CAAc,EAAd,EAAkB,EAAlB,CAAd,EAAqC,GAArC,CAAxB;EAEA,MAAMI,aAAa,GAAG,IAAI9C,aAAJ,CAAkBgB,EAAlB,CAAtB;EACA,MAAM+B,KAAK,GAAG,IAAI5C,YAAJ,CAAiBa,EAAjB,CAAd;EACA,MAAMgC,MAAM,GAAGjC,QAAQ,CAACkC,SAAT,EAAf;EACA,MAAMC,YAAY,GAAG,IAAI5C,oBAAJ,CAAyBS,QAAzB,CAArB;EACA,IAAIoC,iBAAiB,GAAG,IAAI3C,OAAJ,CAAY,GAAZ,EAAiB,GAAjB,CAAxB;EAEA,IAAI4C,KAAK,GAAG,CAAZ;EACA,IAAIC,QAAQ,GAAG,CAAf;EACA,IAAIC,YAAY,GAAG,IAAI9C,OAAJ,EAAnB;EACA,IAAI+C,CAAC,GAAG,IAAI/C,OAAJ,EAAR;EAEA,IAAIgD,KAAK,GAAG,CAAZ;EAEAxC,EAAE,CAACyC,UAAH,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;EACA,IAAIC,YAAY,GAAG,IAAIlD,OAAJ,CAAY,GAAZ,EAAiB,GAAjB,CAAnB;EACA,MAAMmD,IAAc,GAAG,EAAvB;EACAT,YAAY,CAACU,gBAAb,CAA8BrD,UAAU,CAACsD,UAAzC,EAAqD,CAACxB,CAAD,EAAIJ,CAAJ,KAAU;IAC7D0B,IAAI,CAACG,MAAL,GAAc,CAAd;IACAN,KAAK,GAAG,CAAR;IACAE,YAAY,GAAGR,YAAY,CAACa,oBAAb,EAAf;IACApD,QAAQ,CAACqD,QAAT,CACEb,iBAAiB,CAACd,CADpB,EAEEc,iBAAiB,CAAClB,CAFpB,EAGEyB,YAAY,CAACrB,CAHf,EAIEqB,YAAY,CAACzB,CAJf,EAKE,EALF,EAME0B,IANF;IAQAM,OAAO,CAACC,GAAR,CAAYP,IAAZ;IAEAD,YAAY,CAACrB,CAAb,GAAiBsB,IAAI,CAAC,CAAD,CAArB;IACAD,YAAY,CAACzB,CAAb,GAAiB0B,IAAI,CAAC,CAAD,CAArB;IACAN,QAAQ,GACLc,IAAI,CAACC,KAAL,CACCV,YAAY,CAACzB,CAAb,GAAiBkB,iBAAiB,CAAClB,CADpC,EAECyB,YAAY,CAACrB,CAAb,GAAiBc,iBAAiB,CAACd,CAFpC,IAIC,GAJF,GAKA8B,IAAI,CAACE,EANP;EAOD,CAvBD;EAwBA,IAAIC,MAAM,GAAG7B,iBAAiB,CAAC8B,WAAlB,CAA8BnB,KAA9B,EAAqC/C,QAAQ,CAACmE,MAA9C,CAAb;EACA,MAAMC,SAAS,GAAG,GAAlB;EAEA1E,cAAc,CAAE2E,KAAD,IAAmB;IAChCpB,YAAY,CAACjB,CAAb,GAAiBqB,YAAY,CAACrB,CAAb,GAAiBc,iBAAiB,CAACd,CAApD;IACAiB,YAAY,CAACrB,CAAb,GAAiByB,YAAY,CAACzB,CAAb,GAAiBkB,iBAAiB,CAAClB,CAApD;IACAsB,CAAC,GAAGD,YAAY,CAACqB,SAAb,EAAJ;IACA3D,EAAE,CAAC4D,KAAH,CAAS5D,EAAE,CAAC6D,gBAAZ;IACA/B,aAAa,CAACgC,aAAd,CAA4B9B,MAAM,CAAC+B,cAAP,CAAsBC,MAAlD;IACAlC,aAAa,CAACmC,KAAd;IACAnC,aAAa,CAACd,IAAd,CAAmB,IAAnB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,GAA/B,EAAoC,IAApC;IACAc,aAAa,CAACoC,GAAd;;IAEA,IACE/B,iBAAiB,CAACd,CAAlB,KAAwBqB,YAAY,CAACrB,CAArC,IACAc,iBAAiB,CAAClB,CAAlB,KAAwByB,YAAY,CAACzB,CAFvC,EAGE;MACAmB,KAAK,IAAIsB,KAAT;;MACA,IAAIrB,QAAQ,IAAI,CAAC,EAAb,IAAmBA,QAAQ,GAAG,EAAlC,EAAsC;QACpCiB,MAAM,GAAG1B,kBAAkB,CAAC2B,WAAnB,CAA+BnB,KAA/B,EAAsC/C,QAAQ,CAAC8E,IAA/C,CAAT;MACD;;MACD,IAAI9B,QAAQ,IAAI,CAAC,GAAb,IAAoBA,QAAQ,GAAG,CAAC,EAApC,EAAwC;QACtCiB,MAAM,GAAG7B,iBAAiB,CAAC8B,WAAlB,CAA8BnB,KAA9B,EAAqC/C,QAAQ,CAAC8E,IAA9C,CAAT;MACD;;MACD,IAAI9B,QAAQ,IAAI,EAAZ,IAAkBA,QAAQ,GAAG,GAAjC,EAAsC;QACpCiB,MAAM,GAAGzB,eAAe,CAAC0B,WAAhB,CAA4BnB,KAA5B,EAAmC/C,QAAQ,CAAC8E,IAA5C,CAAT;MACD;;MACD,IACG9B,QAAQ,IAAI,GAAZ,IAAmBA,QAAQ,GAAG,GAA/B,IACCA,QAAQ,IAAI,CAAC,GAAb,IAAoBA,QAAQ,GAAG,CAAC,GAFnC,EAGE;QACAiB,MAAM,GAAG3B,iBAAiB,CAAC4B,WAAlB,CAA8BnB,KAA9B,EAAqC/C,QAAQ,CAAC8E,IAA9C,CAAT;MACD;;MAED,IAAIhC,iBAAiB,CAACd,CAAlB,GAAsBqB,YAAY,CAACrB,CAAvC,EAA0C;QACxCc,iBAAiB,CAACd,CAAlB,GAAsB8B,IAAI,CAACiB,GAAL,CACpBjC,iBAAiB,CAACd,CAAlB,GAAsBkB,CAAC,CAAClB,CAAF,GAAMoC,SAAN,GAAkBC,KADpB,EAEpBhB,YAAY,CAACrB,CAFO,CAAtB;MAID;;MACD,IAAIc,iBAAiB,CAAClB,CAAlB,GAAsByB,YAAY,CAACzB,CAAvC,EAA0C;QACxCkB,iBAAiB,CAAClB,CAAlB,GAAsBkC,IAAI,CAACiB,GAAL,CACpBjC,iBAAiB,CAAClB,CAAlB,GAAsBsB,CAAC,CAACtB,CAAF,GAAMwC,SAAN,GAAkBC,KADpB,EAEpBhB,YAAY,CAACzB,CAFO,CAAtB;MAID;;MACD,IAAIkB,iBAAiB,CAACd,CAAlB,GAAsBqB,YAAY,CAACrB,CAAvC,EAA0C;QACxCc,iBAAiB,CAACd,CAAlB,GAAsB8B,IAAI,CAACkB,GAAL,CACpBlC,iBAAiB,CAACd,CAAlB,GAAsBkB,CAAC,CAAClB,CAAF,GAAMoC,SAAN,GAAkBC,KADpB,EAEpBhB,YAAY,CAACrB,CAFO,CAAtB;MAID;;MACD,IAAIc,iBAAiB,CAAClB,CAAlB,GAAsByB,YAAY,CAACzB,CAAvC,EAA0C;QACxCkB,iBAAiB,CAAClB,CAAlB,GAAsBkC,IAAI,CAACkB,GAAL,CACpBlC,iBAAiB,CAAClB,CAAlB,GAAsBsB,CAAC,CAACtB,CAAF,GAAMwC,SAAN,GAAkBC,KADpB,EAEpBhB,YAAY,CAACzB,CAFO,CAAtB;MAID;IACF,CA7CD,MA6CO;MACLmB,KAAK,GAAG,CAAR;MACAkC,UAAU,CAAC,MAAM;QACfhB,MAAM,GAAG7B,iBAAiB,CAAC8B,WAAlB,CAA8BnB,KAA9B,EAAqC/C,QAAQ,CAACmE,MAA9C,CAAT;MACD,CAFS,EAEP,GAFO,CAAV;;MAGA,IAAIhB,KAAK,GAAGG,IAAI,CAACG,MAAjB,EAAyB;QACvBN,KAAK,IAAI,CAAT;MACD,CAFD,MAEO;QACLA,KAAK,GAAG,CAAR;MACD;;MACDE,YAAY,CAACrB,CAAb,GAAiBsB,IAAI,CAACH,KAAD,CAArB;MACAE,YAAY,CAACzB,CAAb,GAAiB0B,IAAI,CAACH,KAAK,GAAG,CAAT,CAArB;MACAS,OAAO,CAACC,GAAR,CAAYb,QAAZ;MACAA,QAAQ,GACLc,IAAI,CAACC,KAAL,CACCV,YAAY,CAACzB,CAAb,GAAiBkB,iBAAiB,CAAClB,CADpC,EAECyB,YAAY,CAACrB,CAAb,GAAiBc,iBAAiB,CAACd,CAFpC,IAIC,GAJF,GAKA8B,IAAI,CAACE,EANP;IAOD;;IAEDtB,KAAK,CAAC+B,aAAN,CAAoB9B,MAAM,CAAC+B,cAAP,CAAsBC,MAA1C;IACAjC,KAAK,CAACkC,KAAN;IACAlC,KAAK,CAACwC,IAAN,CAAWrE,UAAX,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,GAA7B,EAAkC,IAAlC;IACAoD,MAAM,CAACiB,IAAP,CACExC,KADF,EAEEI,iBAAiB,CAACd,CAAlB,GAAsB,EAFxB,EAGEc,iBAAiB,CAAClB,CAAlB,GAAsB,EAHxB,EAIE,GAJF,EAKE,GALF;IAOAc,KAAK,CAACmC,GAAN,GAvFgC,CAyFhC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;EACD,CAlHa,CAAd;AAmHD,CA9LM;AAgMPxE,IAAI"},"metadata":{},"sourceType":"module"}