{"ast":null,"code":"import _initializerDefineProperty from \"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js\";\nimport _applyDecoratedDescriptor from \"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\";\nimport _initializerWarningHelper from \"D:/projects/test-game/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper.js\";\n\nvar _dec, _dec2, _dec3, _dec4, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;\n\nimport { System, Inject } from \"flat-ecs\";\nimport { Constants } from \"../Constants\";\nexport let BirdRenderSystem = (_dec = Inject(\"gl\"), _dec2 = Inject(\"assetManager\"), _dec3 = Inject(\"batch\"), _dec4 = Inject(\"bird\"), (_class = class BirdRenderSystem extends System {\n  constructor() {\n    super(...arguments);\n    this.birdAsset = void 0;\n    this.rotation = 0;\n\n    _initializerDefineProperty(this, \"gl\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"assetManager\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"batch\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"bird\", _descriptor4, this);\n  }\n\n  initialized() {\n    this.birdAsset = this.assetManager.getTexture(\"birdAsset\");\n  }\n\n  process() {\n    this.batch.begin();\n\n    for (let i = 0; i < this.bird.length; i++) {\n      this.batch.draw(this.birdAsset, this.bird[i].GetPosition().x * Constants.METER_TO_WORLD - 25, this.bird[i].GetPosition().y * Constants.METER_TO_WORLD - 25, Constants.BOX_SIZE * Constants.METER_TO_WORLD, Constants.BOX_SIZE * Constants.METER_TO_WORLD, 0, 0, this.rotation += 0.05);\n    }\n\n    this.batch.end();\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"gl\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"assetManager\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"batch\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"bird\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class));","map":{"version":3,"names":["System","Inject","Constants","BirdRenderSystem","birdAsset","rotation","initialized","assetManager","getTexture","process","batch","begin","i","bird","length","draw","GetPosition","x","METER_TO_WORLD","y","BOX_SIZE","end"],"sources":["D:/projects/test-game/src/system/BirdRenderSystem.ts"],"sourcesContent":["import { b2Body } from \"box2d.ts\";\r\nimport { System, Inject } from \"flat-ecs\";\r\nimport { AssetManager, PolygonBatch, Texture } from \"gdxts\";\r\nimport { Constants } from \"../Constants\";\r\n\r\nexport class BirdRenderSystem extends System {\r\n  birdAsset: Texture;\r\n  rotation = 0;\r\n\r\n  @Inject(\"gl\") gl: WebGLRenderingContext;\r\n  @Inject(\"assetManager\") assetManager: AssetManager;\r\n  @Inject(\"batch\") batch: PolygonBatch;\r\n  @Inject(\"bird\") bird: b2Body[];\r\n  initialized(): void {\r\n    this.birdAsset = this.assetManager.getTexture(\"birdAsset\") as Texture;\r\n  }\r\n  process(): void {\r\n    this.batch.begin();\r\n    for (let i = 0; i < this.bird.length; i++) {\r\n      this.batch.draw(\r\n        this.birdAsset,\r\n        this.bird[i].GetPosition().x * Constants.METER_TO_WORLD - 25,\r\n        this.bird[i].GetPosition().y * Constants.METER_TO_WORLD - 25,\r\n        Constants.BOX_SIZE * Constants.METER_TO_WORLD,\r\n        Constants.BOX_SIZE * Constants.METER_TO_WORLD,\r\n        0,\r\n        0,\r\n        (this.rotation += 0.05)\r\n      );\r\n    }\r\n    this.batch.end();\r\n  }\r\n}\r\n"],"mappings":";;;;;;AACA,SAASA,MAAT,EAAiBC,MAAjB,QAA+B,UAA/B;AAEA,SAASC,SAAT,QAA0B,cAA1B;AAEA,WAAaC,gBAAb,WAIGF,MAAM,CAAC,IAAD,CAJT,UAKGA,MAAM,CAAC,cAAD,CALT,UAMGA,MAAM,CAAC,OAAD,CANT,UAOGA,MAAM,CAAC,MAAD,CAPT,YAAO,MAAME,gBAAN,SAA+BH,MAA/B,CAAsC;EAAA;IAAA;IAAA,KAC3CI,SAD2C;IAAA,KAE3CC,QAF2C,GAEhC,CAFgC;;IAAA;;IAAA;;IAAA;;IAAA;EAAA;;EAQ3CC,WAAW,GAAS;IAClB,KAAKF,SAAL,GAAiB,KAAKG,YAAL,CAAkBC,UAAlB,CAA6B,WAA7B,CAAjB;EACD;;EACDC,OAAO,GAAS;IACd,KAAKC,KAAL,CAAWC,KAAX;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,IAAL,CAAUC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;MACzC,KAAKF,KAAL,CAAWK,IAAX,CACE,KAAKX,SADP,EAEE,KAAKS,IAAL,CAAUD,CAAV,EAAaI,WAAb,GAA2BC,CAA3B,GAA+Bf,SAAS,CAACgB,cAAzC,GAA0D,EAF5D,EAGE,KAAKL,IAAL,CAAUD,CAAV,EAAaI,WAAb,GAA2BG,CAA3B,GAA+BjB,SAAS,CAACgB,cAAzC,GAA0D,EAH5D,EAIEhB,SAAS,CAACkB,QAAV,GAAqBlB,SAAS,CAACgB,cAJjC,EAKEhB,SAAS,CAACkB,QAAV,GAAqBlB,SAAS,CAACgB,cALjC,EAME,CANF,EAOE,CAPF,EAQG,KAAKb,QAAL,IAAiB,IARpB;IAUD;;IACD,KAAKK,KAAL,CAAWW,GAAX;EACD;;AA1B0C,CAA7C;EAAA;EAAA;EAAA;EAAA;AAAA;EAAA;EAAA;EAAA;EAAA;AAAA;EAAA;EAAA;EAAA;EAAA;AAAA;EAAA;EAAA;EAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}