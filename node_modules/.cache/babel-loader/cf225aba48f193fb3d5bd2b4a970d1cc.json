{"ast":null,"code":"import { createGameLoop, createStage, createViewport, PolygonBatch, ShapeRenderer, Texture, Vector2 } from \"gdxts\";\nexport const init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 1500, 2000);\n  const gl = viewport.getContext();\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const background = await Texture.load(gl, \"./TetrisBg.png\");\n  const border = await Texture.load(gl, \"./border.png\");\n  const bgRight = await Texture.load(gl, \"./bg1.png\");\n  const block = await Texture.load(gl, \"./7251.png\");\n  const redBlock = await Texture.load(gl, \"./RedBlock.png\");\n  const purpleBlock = await Texture.load(gl, \"./PurpleBlock.png\");\n  const orangeBlock = await Texture.load(gl, \"./OrangeBlock.png\");\n  const yellowBlock = await Texture.load(gl, \"./YellowBlock.png\");\n  const blueBlock = await Texture.load(gl, \"./BlueBlock.png\");\n  const blueSkyBlock = await Texture.load(gl, \"./BlueSkyBlock.png\");\n  const greenBlock = await Texture.load(gl, \"./GreenBlock.png\");\n  let map = new Array(); //tetromino\n\n  const squareBlock = [[1, 1], [1, 1]]; //I\n\n  const iBlock1 = [2, 2, 2, 2];\n  const iBlock2 = [[2], [2], [2], [2]]; //J\n\n  const jBlock1 = [[3, 0, 0], [3, 3, 3]];\n  const jBlock2 = [[3, 3], [3, 0], [3, 0]];\n  const jBlock3 = [[3, 3, 3], [0, 0, 3]]; //L\n\n  const LBlock1 = [[0, 0, 4], [4, 4, 4]];\n  const LBlock2 = [[4, 4], [0, 4], [0, 4]]; //s\n\n  const sBlock1 = [[0, 5, 5], [5, 5, 0]];\n  const sBlock2 = [[5, 0], [5, 5], [0, 5]]; //t\n\n  const tBlock1 = [[0, 6, 0], [6, 6, 6]];\n  const tBlock2 = [[6, 0], [6, 6], [6, 0]];\n  const tBlock3 = [[7, 7, 7], [0, 7, 0]];\n  const tBlock4 = [[0, 7], [7, 7], [0, 7]]; //z\n\n  const zBlock1 = [[8, 8, 0], [0, 8, 8]];\n  const zBlock2 = [[8, 0], [8, 8], [0, 8]]; //config game\n\n  let blockPosition = new Vector2(83, 83);\n  let currentBlock = squareBlock;\n  let timeDelay = 0;\n\n  function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  } // draw the map\n\n\n  for (let row = 0; row < 24; row++) {\n    //22+2\n    map[row] = new Array();\n\n    for (let col = 0; col < 10; col++) {\n      map[row].push(0);\n    }\n  }\n\n  function blockTracking() {\n    for (let row = 0; row < currentBlock.length; row++) {\n      for (let col = 0; col < currentBlock[row].length; col++) {\n        map[22 + row][5 + col] = currentBlock[row][col];\n      }\n    }\n  }\n\n  let index = 0;\n\n  function drawTest() {\n    index = 0;\n\n    for (let row = 0; row < map.length; row++) {\n      for (let col = 0; col < map[row].length; col++) {\n        if (map[row][col] != 0) {\n          console.log(map[row][col]);\n          batch.draw(yellowBlock, col * blockPosition.x, row * blockPosition.y, 83, 83);\n        }\n      }\n    }\n  }\n\n  window.addEventListener(\"keypress\", function (e) {\n    if (e) {}\n  }); // console.log(currentBlock.length);\n  // console.log(map);\n\n  createGameLoop(delta => {\n    timeDelay += delta; // console.log(timeDelay);\n\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 1000, 2000);\n    shapeRenderer.end();\n\n    if (timeDelay >= 0.5) {\n      if (blockPosition.y >= 91) {\n        blockPosition.y -= 83;\n      }\n\n      timeDelay = 0;\n    }\n\n    blockTracking(); //draw border\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 1000, 2000);\n    drawTest();\n    batch.draw(border, 0, 0, 1000, 2000);\n    batch.draw(bgRight, 1000, 0, 500, 2000);\n    batch.end();\n  });\n};\ninit();","map":{"version":3,"names":["createGameLoop","createStage","createViewport","PolygonBatch","ShapeRenderer","Texture","Vector2","init","stage","canvas","getCanvas","viewport","gl","getContext","shapeRenderer","batch","camera","getCamera","background","load","border","bgRight","block","redBlock","purpleBlock","orangeBlock","yellowBlock","blueBlock","blueSkyBlock","greenBlock","map","Array","squareBlock","iBlock1","iBlock2","jBlock1","jBlock2","jBlock3","LBlock1","LBlock2","sBlock1","sBlock2","tBlock1","tBlock2","tBlock3","tBlock4","zBlock1","zBlock2","blockPosition","currentBlock","timeDelay","getRandomInt","min","max","Math","floor","random","row","col","push","blockTracking","length","index","drawTest","console","log","draw","x","y","window","addEventListener","e","delta","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createGameLoop,\n  createStage,\n  createViewport,\n  PolygonBatch,\n  ShapeRenderer,\n  Texture,\n  Vector2,\n  BitmapFont,\n  TextureRegion,\n  Color,\n} from \"gdxts\";\n\nexport const init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 1500, 2000);\n  const gl = viewport.getContext();\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n\n  const background = await Texture.load(gl, \"./TetrisBg.png\");\n  const border = await Texture.load(gl, \"./border.png\");\n  const bgRight = await Texture.load(gl, \"./bg1.png\");\n  const block = await Texture.load(gl, \"./7251.png\");\n  const redBlock = await Texture.load(gl, \"./RedBlock.png\");\n  const purpleBlock = await Texture.load(gl, \"./PurpleBlock.png\");\n  const orangeBlock = await Texture.load(gl, \"./OrangeBlock.png\");\n  const yellowBlock = await Texture.load(gl, \"./YellowBlock.png\");\n  const blueBlock = await Texture.load(gl, \"./BlueBlock.png\");\n  const blueSkyBlock = await Texture.load(gl, \"./BlueSkyBlock.png\");\n  const greenBlock = await Texture.load(gl, \"./GreenBlock.png\");\n\n  let map = new Array();\n\n  //tetromino\n  const squareBlock = [\n    [1, 1],\n    [1, 1],\n  ];\n  //I\n  const iBlock1 = [2, 2, 2, 2];\n  const iBlock2 = [[2], [2], [2], [2]];\n\n  //J\n  const jBlock1 = [\n    [3, 0, 0],\n    [3, 3, 3],\n  ];\n  const jBlock2 = [\n    [3, 3],\n    [3, 0],\n    [3, 0],\n  ];\n  const jBlock3 = [\n    [3, 3, 3],\n    [0, 0, 3],\n  ];\n  //L\n  const LBlock1 = [\n    [0, 0, 4],\n    [4, 4, 4],\n  ];\n  const LBlock2 = [\n    [4, 4],\n    [0, 4],\n    [0, 4],\n  ];\n  //s\n  const sBlock1 = [\n    [0, 5, 5],\n    [5, 5, 0],\n  ];\n  const sBlock2 = [\n    [5, 0],\n    [5, 5],\n    [0, 5],\n  ];\n  //t\n  const tBlock1 = [\n    [0, 6, 0],\n    [6, 6, 6],\n  ];\n  const tBlock2 = [\n    [6, 0],\n    [6, 6],\n    [6, 0],\n  ];\n  const tBlock3 = [\n    [7, 7, 7],\n    [0, 7, 0],\n  ];\n  const tBlock4 = [\n    [0, 7],\n    [7, 7],\n    [0, 7],\n  ];\n  //z\n  const zBlock1 = [\n    [8, 8, 0],\n    [0, 8, 8],\n  ];\n  const zBlock2 = [\n    [8, 0],\n    [8, 8],\n    [0, 8],\n  ];\n\n  //config game\n\n  let blockPosition = new Vector2(83, 83);\n  let currentBlock = squareBlock;\n  let timeDelay = 0;\n\n  function getRandomInt(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n  // draw the map\n  for (let row = 0; row < 24; row++) {\n    //22+2\n    map[row] = new Array();\n    for (let col = 0; col < 10; col++) {\n      map[row].push(0);\n    }\n  }\n\n  function blockTracking() {\n    for (let row = 0; row < currentBlock.length; row++) {\n      for (let col = 0; col < currentBlock[row].length; col++) {\n        map[22 + row][5 + col] = currentBlock[row][col];\n      }\n    }\n  }\n  let index = 0;\n\n  function drawTest() {\n    index = 0;\n    for (let row = 0; row < map.length; row++) {\n      for (let col = 0; col < map[row].length; col++) {\n        if (map[row][col] != 0) {\n          console.log(map[row][col]);\n          batch.draw(\n            yellowBlock,\n            col * blockPosition.x,\n            row * blockPosition.y,\n            83,\n            83\n          );\n        }\n      }\n    }\n  }\n  window.addEventListener(\"keypress\", function (e) {\n    if (e) {\n    }\n  });\n\n  // console.log(currentBlock.length);\n  // console.log(map);\n  createGameLoop((delta: number) => {\n    timeDelay += delta;\n    // console.log(timeDelay);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 1000, 2000);\n    shapeRenderer.end();\n\n    if (timeDelay >= 0.5) {\n      if (blockPosition.y >= 91) {\n        blockPosition.y -= 83;\n      }\n      timeDelay = 0;\n    }\n    blockTracking();\n\n    //draw border\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 1000, 2000);\n    drawTest();\n    batch.draw(border, 0, 0, 1000, 2000);\n\n    batch.draw(bgRight, 1000, 0, 500, 2000);\n    batch.end();\n  });\n};\n\ninit();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}