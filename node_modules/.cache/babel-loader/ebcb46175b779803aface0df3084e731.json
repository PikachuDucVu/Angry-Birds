{"ast":null,"code":"import { createGameLoop, createStage, createViewport, InputEvent, PolygonBatch, ShapeRenderer, Texture, Vector2, ViewportInputHandler } from \"gdxts\";\nexport const init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 600, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./flappy-bird.gif\");\n  const obstacles = await Texture.load(gl, \"./obstacle.webp\");\n  const gameovericon = await Texture.load(gl, \"./gameover.png\");\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  const characterTexture = await Texture.load(gl, \"./bird.png\");\n  let characterPosition = new Vector2(250, 500);\n  let rotationOfBird = 0;\n  let obstaclePosition1 = new Vector2(595, 195);\n  let obstaclePosition2 = new Vector2(995, 195);\n  gl.clearColor(0, 0, 0, 1);\n  let lastClick = false;\n  let speedGame = 185;\n  let obstacleSpeed = speedGame;\n  let count = 0;\n  let heightObstacleUp1 = 300;\n  let heightObstacleDown1 = 270;\n  let heightObstacleUp2 = 350;\n  let heightObstacleDown2 = 220;\n  let firstClick = false;\n  let runningGame = true;\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    firstClick = true;\n\n    if (firstClick === true && runningGame === true) {\n      speedGame = 185;\n      count = 0;\n      rotationOfBird = -0.1;\n    }\n\n    lastClick = true;\n  });\n\n  function moveOfBird(delta) {\n    if (lastClick) {\n      lastClick = true;\n      characterPosition.y = characterPosition.y + (speedGame *= 1.02) * delta;\n      count += speedGame * delta;\n\n      if (rotationOfBird <= 0.25) {\n        setTimeout(() => {\n          rotationOfBird += 0.05; // console.log(rotationOfBird);\n        }, 50);\n      }\n\n      if (count >= 80) {\n        lastClick = false;\n        count--;\n      }\n    }\n\n    if (lastClick === false) {\n      characterPosition.y -= speedGame * delta;\n\n      if (count >= -30 && count < 80) {\n        count -= (speedGame *= 1.025) * delta;\n      }\n\n      if (rotationOfBird >= -1) {\n        rotationOfBird -= 0.07;\n      }\n    }\n  }\n\n  function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  function obstacleMove(delta) {\n    obstaclePosition1.x -= obstacleSpeed * delta;\n    obstaclePosition2.x -= obstacleSpeed * delta;\n\n    if (obstaclePosition1.x < -200) {\n      obstaclePosition1.set(695, 195);\n      randomHeightOfObstacle(); // heightObstacleUp1 = getRandomInt(200, 800);\n      // heightObstacleDown1 = getRandomInt(200, 800);\n\n      if (obstacleSpeed <= 500) {\n        obstacleSpeed *= 1.02;\n      }\n    }\n\n    if (obstaclePosition2.x < -200) {\n      obstaclePosition2.set(695, 195);\n      randomHeightOfObstacle();\n\n      if (obstacleSpeed <= 500) {\n        obstacleSpeed *= 1.02;\n      }\n    }\n  }\n\n  function randomHeightOfObstacle() {\n    if (obstaclePosition1.x >= 600) {\n      let optionOfObstacle1 = getRandomInt(1, 5);\n\n      switch (optionOfObstacle1) {\n        case 1:\n          heightObstacleDown1 = 150;\n          heightObstacleUp1 = 500;\n          break;\n\n        case 2:\n          heightObstacleDown1 = 250;\n          heightObstacleUp1 = 400;\n          break;\n\n        case 3:\n          heightObstacleDown1 = 350;\n          heightObstacleUp1 = 300;\n          break;\n\n        case 4:\n          heightObstacleDown1 = 450;\n          heightObstacleUp1 = 200;\n          break;\n\n        case 5:\n          heightObstacleDown1 = 550;\n          heightObstacleUp1 = 125;\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    if (obstaclePosition2.x >= 600) {\n      let optionOfObstacle2 = getRandomInt(1, 5);\n\n      switch (optionOfObstacle2) {\n        case 1:\n          heightObstacleDown2 = 150;\n          heightObstacleUp2 = 500;\n          break;\n\n        case 2:\n          heightObstacleDown2 = 250;\n          heightObstacleUp2 = 400;\n          break;\n\n        case 3:\n          heightObstacleDown2 = 350;\n          heightObstacleUp2 = 300;\n          break;\n\n        case 4:\n          heightObstacleDown2 = 450;\n          heightObstacleUp2 = 200;\n          break;\n\n        case 5:\n          heightObstacleDown2 = 550;\n          heightObstacleUp2 = 125;\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  createGameLoop(delta => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 600, 1000);\n    shapeRenderer.end(); // console.log(characterPosition.y, speedGame);\n\n    if (firstClick === true && runningGame === true) {\n      moveOfBird(delta);\n      obstacleMove(delta);\n    }\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 600, 1000);\n    batch.draw(characterTexture, characterPosition.x, characterPosition.y, 60, 60, 30, 30, rotationOfBird); // obstacle 1\n\n    batch.draw(obstacles, obstaclePosition1.x, obstaclePosition1.y, 150, heightObstacleDown1 // heightDown // default = 270 // max 500 min 150\n    );\n    batch.draw(obstacles, obstaclePosition1.x, obstaclePosition1.y + 610, 150, heightObstacleUp1, // heightUp // default = 300 // max 500 min 150\n    75, 100, 47.13); // obstacles 2\n\n    batch.draw(obstacles, obstaclePosition2.x, obstaclePosition2.y, 150, heightObstacleDown2 // height ben duoi default = 270 // max 500 min 150\n    );\n    batch.draw(obstacles, obstaclePosition2.x, obstaclePosition2.y + 610, 150, heightObstacleUp2, // height ben tren // default = 300 // max 500 min 150\n    75, 100, 47.13);\n\n    if (characterPosition.y <= 190) {\n      runningGame = false;\n      firstClick = false;\n      lastClick = false;\n      speedGame = 0;\n      batch.draw(gameovericon, 50, 500, 500, 250);\n    } // console.log(characterPosition.y, heightObstacleDown1);\n    // console.log(characterPosition.y, heightObstacleUp1);\n\n\n    console.log(Math.abs(characterPosition.x - obstaclePosition1.x));\n\n    if (Math.abs(characterPosition.x - obstaclePosition1.x) <= 90 || Math.abs(characterPosition.x - obstaclePosition2.x) <= 90) {\n      console.log(\"warning\");\n\n      if (characterPosition.y - heightObstacleDown1 <= 30 && characterPosition.y - heightObstacleDown1 >= 30 || Math.abs(characterPosition.y - heightObstacleDown2) <= 50) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedGame = 0;\n      }\n    }\n\n    batch.end();\n  });\n};\ninit();","map":{"version":3,"names":["createGameLoop","createStage","createViewport","InputEvent","PolygonBatch","ShapeRenderer","Texture","Vector2","ViewportInputHandler","init","stage","canvas","getCanvas","viewport","gl","getContext","background","load","obstacles","gameovericon","shapeRenderer","batch","camera","getCamera","inputHandler","characterTexture","characterPosition","rotationOfBird","obstaclePosition1","obstaclePosition2","clearColor","lastClick","speedGame","obstacleSpeed","count","heightObstacleUp1","heightObstacleDown1","heightObstacleUp2","heightObstacleDown2","firstClick","runningGame","addEventListener","TouchStart","x","y","moveOfBird","delta","setTimeout","getRandomInt","min","max","Math","floor","random","obstacleMove","set","randomHeightOfObstacle","optionOfObstacle1","optionOfObstacle2","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end","draw","console","log","abs"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createGameLoop,\n  createStage,\n  createViewport,\n  InputEvent,\n  PolygonBatch,\n  ShapeRenderer,\n  Texture,\n  Vector2,\n  ViewportInputHandler,\n} from \"gdxts\";\nimport { init2 } from \"./PokemonGame\";\nexport const init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 600, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./flappy-bird.gif\");\n  const obstacles = await Texture.load(gl, \"./obstacle.webp\");\n  const gameovericon = await Texture.load(gl, \"./gameover.png\");\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n\n  const characterTexture = await Texture.load(gl, \"./bird.png\");\n  let characterPosition = new Vector2(250, 500);\n  let rotationOfBird = 0;\n  let obstaclePosition1 = new Vector2(595, 195);\n  let obstaclePosition2 = new Vector2(995, 195);\n\n  gl.clearColor(0, 0, 0, 1);\n  let lastClick = false;\n  let speedGame = 185;\n  let obstacleSpeed = speedGame;\n  let count = 0;\n  let heightObstacleUp1 = 300;\n  let heightObstacleDown1 = 270;\n  let heightObstacleUp2 = 350;\n  let heightObstacleDown2 = 220;\n  let firstClick = false;\n  let runningGame = true;\n\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    firstClick = true;\n\n    if (firstClick === true && runningGame === true) {\n      speedGame = 185;\n      count = 0;\n      rotationOfBird = -0.1;\n    }\n\n    lastClick = true;\n  });\n\n  function moveOfBird(delta: number) {\n    if (lastClick) {\n      lastClick = true;\n      characterPosition.y = characterPosition.y + (speedGame *= 1.02) * delta;\n      count += speedGame * delta;\n      if (rotationOfBird <= 0.25) {\n        setTimeout(() => {\n          rotationOfBird += 0.05;\n          // console.log(rotationOfBird);\n        }, 50);\n      }\n\n      if (count >= 80) {\n        lastClick = false;\n        count--;\n      }\n    }\n\n    if (lastClick === false) {\n      characterPosition.y -= speedGame * delta;\n      if (count >= -30 && count < 80) {\n        count -= (speedGame *= 1.025) * delta;\n      }\n      if (rotationOfBird >= -1) {\n        rotationOfBird -= 0.07;\n      }\n    }\n  }\n\n  function getRandomInt(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  function obstacleMove(delta: number) {\n    obstaclePosition1.x -= obstacleSpeed * delta;\n    obstaclePosition2.x -= obstacleSpeed * delta;\n\n    if (obstaclePosition1.x < -200) {\n      obstaclePosition1.set(695, 195);\n      randomHeightOfObstacle();\n      // heightObstacleUp1 = getRandomInt(200, 800);\n      // heightObstacleDown1 = getRandomInt(200, 800);\n\n      if (obstacleSpeed <= 500) {\n        obstacleSpeed *= 1.02;\n      }\n    }\n    if (obstaclePosition2.x < -200) {\n      obstaclePosition2.set(695, 195);\n      randomHeightOfObstacle();\n      if (obstacleSpeed <= 500) {\n        obstacleSpeed *= 1.02;\n      }\n    }\n  }\n\n  function randomHeightOfObstacle() {\n    if (obstaclePosition1.x >= 600) {\n      let optionOfObstacle1 = getRandomInt(1, 5);\n      switch (optionOfObstacle1) {\n        case 1:\n          heightObstacleDown1 = 150;\n          heightObstacleUp1 = 500;\n          break;\n\n        case 2:\n          heightObstacleDown1 = 250;\n          heightObstacleUp1 = 400;\n          break;\n        case 3:\n          heightObstacleDown1 = 350;\n          heightObstacleUp1 = 300;\n          break;\n        case 4:\n          heightObstacleDown1 = 450;\n          heightObstacleUp1 = 200;\n          break;\n        case 5:\n          heightObstacleDown1 = 550;\n          heightObstacleUp1 = 125;\n          break;\n        default:\n          break;\n      }\n    }\n\n    if (obstaclePosition2.x >= 600) {\n      let optionOfObstacle2 = getRandomInt(1, 5);\n      switch (optionOfObstacle2) {\n        case 1:\n          heightObstacleDown2 = 150;\n          heightObstacleUp2 = 500;\n          break;\n\n        case 2:\n          heightObstacleDown2 = 250;\n          heightObstacleUp2 = 400;\n          break;\n        case 3:\n          heightObstacleDown2 = 350;\n          heightObstacleUp2 = 300;\n          break;\n        case 4:\n          heightObstacleDown2 = 450;\n          heightObstacleUp2 = 200;\n          break;\n        case 5:\n          heightObstacleDown2 = 550;\n          heightObstacleUp2 = 125;\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  createGameLoop((delta: number) => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 600, 1000);\n    shapeRenderer.end();\n    // console.log(characterPosition.y, speedGame);\n\n    if (firstClick === true && runningGame === true) {\n      moveOfBird(delta);\n      obstacleMove(delta);\n    }\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 600, 1000);\n    batch.draw(\n      characterTexture,\n      characterPosition.x,\n      characterPosition.y,\n      60,\n      60,\n      30,\n      30,\n      rotationOfBird\n    );\n\n    // obstacle 1\n    batch.draw(\n      obstacles,\n      obstaclePosition1.x,\n      obstaclePosition1.y,\n      150,\n      heightObstacleDown1 // heightDown // default = 270 // max 500 min 150\n    );\n    batch.draw(\n      obstacles,\n      obstaclePosition1.x,\n      obstaclePosition1.y + 610,\n      150,\n      heightObstacleUp1, // heightUp // default = 300 // max 500 min 150\n      75,\n      100,\n      47.13\n    );\n\n    // obstacles 2\n    batch.draw(\n      obstacles,\n      obstaclePosition2.x,\n      obstaclePosition2.y,\n      150,\n      heightObstacleDown2 // height ben duoi default = 270 // max 500 min 150\n    );\n    batch.draw(\n      obstacles,\n      obstaclePosition2.x,\n      obstaclePosition2.y + 610,\n      150,\n      heightObstacleUp2, // height ben tren // default = 300 // max 500 min 150\n      75,\n      100,\n      47.13\n    );\n\n    if (characterPosition.y <= 190) {\n      runningGame = false;\n      firstClick = false;\n      lastClick = false;\n      speedGame = 0;\n      batch.draw(gameovericon, 50, 500, 500, 250);\n    }\n    // console.log(characterPosition.y, heightObstacleDown1);\n    // console.log(characterPosition.y, heightObstacleUp1);\n    console.log(Math.abs(characterPosition.x - obstaclePosition1.x));\n    if (\n      Math.abs(characterPosition.x - obstaclePosition1.x) <= 90 ||\n      Math.abs(characterPosition.x - obstaclePosition2.x) <= 90\n    ) {\n      console.log(\"warning\");\n      if (\n        (characterPosition.y - heightObstacleDown1 <= 30 &&\n          characterPosition.y - heightObstacleDown1 >= 30) ||\n        Math.abs(characterPosition.y - heightObstacleDown2) <= 50\n      ) {\n        batch.draw(gameovericon, 50, 500, 500, 250);\n        runningGame = false;\n        firstClick = false;\n        lastClick = false;\n        speedGame = 0;\n      }\n    }\n\n    batch.end();\n  });\n};\n\ninit();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}