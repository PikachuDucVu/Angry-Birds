{"ast":null,"code":"/**\n * Bit twiddling hacks for JavaScript.\n *\n * Author: Mikola Lysenko\n *\n * Ported from Stanford bit twiddling hack library:\n *    http://graphics.stanford.edu/~seander/bithacks.html\n */\n\"use strict\";\n\"use restrict\"; //Number of bits in an integer\n\nvar INT_BITS = 32; //Constants\n\nexports.INT_BITS = INT_BITS;\nexports.INT_MAX = 0x7fffffff;\nexports.INT_MIN = -1 << INT_BITS - 1; //Returns -1, 0, +1 depending on sign of x\n\nexports.sign = function (v) {\n  return (v > 0) - (v < 0);\n}; //Computes absolute value of integer\n\n\nexports.abs = function (v) {\n  var mask = v >> INT_BITS - 1;\n  return (v ^ mask) - mask;\n}; //Computes minimum of integers x and y\n\n\nexports.min = function (x, y) {\n  return y ^ (x ^ y) & -(x < y);\n}; //Computes maximum of integers x and y\n\n\nexports.max = function (x, y) {\n  return x ^ (x ^ y) & -(x < y);\n}; //Checks if a number is a power of two\n\n\nexports.isPow2 = function (v) {\n  return !(v & v - 1) && !!v;\n}; //Computes log base 2 of v\n\n\nexports.log2 = function (v) {\n  var r, shift;\n  r = (v > 0xFFFF) << 4;\n  v >>>= r;\n  shift = (v > 0xFF) << 3;\n  v >>>= shift;\n  r |= shift;\n  shift = (v > 0xF) << 2;\n  v >>>= shift;\n  r |= shift;\n  shift = (v > 0x3) << 1;\n  v >>>= shift;\n  r |= shift;\n  return r | v >> 1;\n}; //Computes log base 10 of v\n\n\nexports.log10 = function (v) {\n  return v >= 1000000000 ? 9 : v >= 100000000 ? 8 : v >= 10000000 ? 7 : v >= 1000000 ? 6 : v >= 100000 ? 5 : v >= 10000 ? 4 : v >= 1000 ? 3 : v >= 100 ? 2 : v >= 10 ? 1 : 0;\n}; //Counts number of bits\n\n\nexports.popCount = function (v) {\n  v = v - (v >>> 1 & 0x55555555);\n  v = (v & 0x33333333) + (v >>> 2 & 0x33333333);\n  return (v + (v >>> 4) & 0xF0F0F0F) * 0x1010101 >>> 24;\n}; //Counts number of trailing zeros\n\n\nfunction countTrailingZeros(v) {\n  var c = 32;\n  v &= -v;\n  if (v) c--;\n  if (v & 0x0000FFFF) c -= 16;\n  if (v & 0x00FF00FF) c -= 8;\n  if (v & 0x0F0F0F0F) c -= 4;\n  if (v & 0x33333333) c -= 2;\n  if (v & 0x55555555) c -= 1;\n  return c;\n}\n\nexports.countTrailingZeros = countTrailingZeros; //Rounds to next power of 2\n\nexports.nextPow2 = function (v) {\n  v += v === 0;\n  --v;\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v + 1;\n}; //Rounds down to previous power of 2\n\n\nexports.prevPow2 = function (v) {\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v - (v >>> 1);\n}; //Computes parity of word\n\n\nexports.parity = function (v) {\n  v ^= v >>> 16;\n  v ^= v >>> 8;\n  v ^= v >>> 4;\n  v &= 0xf;\n  return 0x6996 >>> v & 1;\n};\n\nvar REVERSE_TABLE = new Array(256);\n\n(function (tab) {\n  for (var i = 0; i < 256; ++i) {\n    var v = i,\n        r = i,\n        s = 7;\n\n    for (v >>>= 1; v; v >>>= 1) {\n      r <<= 1;\n      r |= v & 1;\n      --s;\n    }\n\n    tab[i] = r << s & 0xff;\n  }\n})(REVERSE_TABLE); //Reverse bits in a 32 bit word\n\n\nexports.reverse = function (v) {\n  return REVERSE_TABLE[v & 0xff] << 24 | REVERSE_TABLE[v >>> 8 & 0xff] << 16 | REVERSE_TABLE[v >>> 16 & 0xff] << 8 | REVERSE_TABLE[v >>> 24 & 0xff];\n}; //Interleave bits of 2 coordinates with 16 bits.  Useful for fast quadtree codes\n\n\nexports.interleave2 = function (x, y) {\n  x &= 0xFFFF;\n  x = (x | x << 8) & 0x00FF00FF;\n  x = (x | x << 4) & 0x0F0F0F0F;\n  x = (x | x << 2) & 0x33333333;\n  x = (x | x << 1) & 0x55555555;\n  y &= 0xFFFF;\n  y = (y | y << 8) & 0x00FF00FF;\n  y = (y | y << 4) & 0x0F0F0F0F;\n  y = (y | y << 2) & 0x33333333;\n  y = (y | y << 1) & 0x55555555;\n  return x | y << 1;\n}; //Extracts the nth interleaved component\n\n\nexports.deinterleave2 = function (v, n) {\n  v = v >>> n & 0x55555555;\n  v = (v | v >>> 1) & 0x33333333;\n  v = (v | v >>> 2) & 0x0F0F0F0F;\n  v = (v | v >>> 4) & 0x00FF00FF;\n  v = (v | v >>> 16) & 0x000FFFF;\n  return v << 16 >> 16;\n}; //Interleave bits of 3 coordinates, each with 10 bits.  Useful for fast octree codes\n\n\nexports.interleave3 = function (x, y, z) {\n  x &= 0x3FF;\n  x = (x | x << 16) & 4278190335;\n  x = (x | x << 8) & 251719695;\n  x = (x | x << 4) & 3272356035;\n  x = (x | x << 2) & 1227133513;\n  y &= 0x3FF;\n  y = (y | y << 16) & 4278190335;\n  y = (y | y << 8) & 251719695;\n  y = (y | y << 4) & 3272356035;\n  y = (y | y << 2) & 1227133513;\n  x |= y << 1;\n  z &= 0x3FF;\n  z = (z | z << 16) & 4278190335;\n  z = (z | z << 8) & 251719695;\n  z = (z | z << 4) & 3272356035;\n  z = (z | z << 2) & 1227133513;\n  return x | z << 2;\n}; //Extracts nth interleaved component of a 3-tuple\n\n\nexports.deinterleave3 = function (v, n) {\n  v = v >>> n & 1227133513;\n  v = (v | v >>> 2) & 3272356035;\n  v = (v | v >>> 4) & 251719695;\n  v = (v | v >>> 8) & 4278190335;\n  v = (v | v >>> 16) & 0x3FF;\n  return v << 22 >> 22;\n}; //Computes next combination in colexicographic order (this is mistakenly called nextPermutation on the bit twiddling hacks page)\n\n\nexports.nextCombination = function (v) {\n  var t = v | v - 1;\n  return t + 1 | (~t & -~t) - 1 >>> countTrailingZeros(v) + 1;\n};","map":{"version":3,"names":["INT_BITS","exports","INT_MAX","INT_MIN","sign","v","abs","mask","min","x","y","max","isPow2","log2","r","shift","log10","popCount","countTrailingZeros","c","nextPow2","prevPow2","parity","REVERSE_TABLE","Array","tab","i","s","reverse","interleave2","deinterleave2","n","interleave3","z","deinterleave3","nextCombination","t"],"sources":["D:/projects/test-game/node_modules/bit-twiddle/twiddle.js"],"sourcesContent":["/**\n * Bit twiddling hacks for JavaScript.\n *\n * Author: Mikola Lysenko\n *\n * Ported from Stanford bit twiddling hack library:\n *    http://graphics.stanford.edu/~seander/bithacks.html\n */\n\n\"use strict\"; \"use restrict\";\n\n//Number of bits in an integer\nvar INT_BITS = 32;\n\n//Constants\nexports.INT_BITS  = INT_BITS;\nexports.INT_MAX   =  0x7fffffff;\nexports.INT_MIN   = -1<<(INT_BITS-1);\n\n//Returns -1, 0, +1 depending on sign of x\nexports.sign = function(v) {\n  return (v > 0) - (v < 0);\n}\n\n//Computes absolute value of integer\nexports.abs = function(v) {\n  var mask = v >> (INT_BITS-1);\n  return (v ^ mask) - mask;\n}\n\n//Computes minimum of integers x and y\nexports.min = function(x, y) {\n  return y ^ ((x ^ y) & -(x < y));\n}\n\n//Computes maximum of integers x and y\nexports.max = function(x, y) {\n  return x ^ ((x ^ y) & -(x < y));\n}\n\n//Checks if a number is a power of two\nexports.isPow2 = function(v) {\n  return !(v & (v-1)) && (!!v);\n}\n\n//Computes log base 2 of v\nexports.log2 = function(v) {\n  var r, shift;\n  r =     (v > 0xFFFF) << 4; v >>>= r;\n  shift = (v > 0xFF  ) << 3; v >>>= shift; r |= shift;\n  shift = (v > 0xF   ) << 2; v >>>= shift; r |= shift;\n  shift = (v > 0x3   ) << 1; v >>>= shift; r |= shift;\n  return r | (v >> 1);\n}\n\n//Computes log base 10 of v\nexports.log10 = function(v) {\n  return  (v >= 1000000000) ? 9 : (v >= 100000000) ? 8 : (v >= 10000000) ? 7 :\n          (v >= 1000000) ? 6 : (v >= 100000) ? 5 : (v >= 10000) ? 4 :\n          (v >= 1000) ? 3 : (v >= 100) ? 2 : (v >= 10) ? 1 : 0;\n}\n\n//Counts number of bits\nexports.popCount = function(v) {\n  v = v - ((v >>> 1) & 0x55555555);\n  v = (v & 0x33333333) + ((v >>> 2) & 0x33333333);\n  return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n}\n\n//Counts number of trailing zeros\nfunction countTrailingZeros(v) {\n  var c = 32;\n  v &= -v;\n  if (v) c--;\n  if (v & 0x0000FFFF) c -= 16;\n  if (v & 0x00FF00FF) c -= 8;\n  if (v & 0x0F0F0F0F) c -= 4;\n  if (v & 0x33333333) c -= 2;\n  if (v & 0x55555555) c -= 1;\n  return c;\n}\nexports.countTrailingZeros = countTrailingZeros;\n\n//Rounds to next power of 2\nexports.nextPow2 = function(v) {\n  v += v === 0;\n  --v;\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v + 1;\n}\n\n//Rounds down to previous power of 2\nexports.prevPow2 = function(v) {\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v - (v>>>1);\n}\n\n//Computes parity of word\nexports.parity = function(v) {\n  v ^= v >>> 16;\n  v ^= v >>> 8;\n  v ^= v >>> 4;\n  v &= 0xf;\n  return (0x6996 >>> v) & 1;\n}\n\nvar REVERSE_TABLE = new Array(256);\n\n(function(tab) {\n  for(var i=0; i<256; ++i) {\n    var v = i, r = i, s = 7;\n    for (v >>>= 1; v; v >>>= 1) {\n      r <<= 1;\n      r |= v & 1;\n      --s;\n    }\n    tab[i] = (r << s) & 0xff;\n  }\n})(REVERSE_TABLE);\n\n//Reverse bits in a 32 bit word\nexports.reverse = function(v) {\n  return  (REVERSE_TABLE[ v         & 0xff] << 24) |\n          (REVERSE_TABLE[(v >>> 8)  & 0xff] << 16) |\n          (REVERSE_TABLE[(v >>> 16) & 0xff] << 8)  |\n           REVERSE_TABLE[(v >>> 24) & 0xff];\n}\n\n//Interleave bits of 2 coordinates with 16 bits.  Useful for fast quadtree codes\nexports.interleave2 = function(x, y) {\n  x &= 0xFFFF;\n  x = (x | (x << 8)) & 0x00FF00FF;\n  x = (x | (x << 4)) & 0x0F0F0F0F;\n  x = (x | (x << 2)) & 0x33333333;\n  x = (x | (x << 1)) & 0x55555555;\n\n  y &= 0xFFFF;\n  y = (y | (y << 8)) & 0x00FF00FF;\n  y = (y | (y << 4)) & 0x0F0F0F0F;\n  y = (y | (y << 2)) & 0x33333333;\n  y = (y | (y << 1)) & 0x55555555;\n\n  return x | (y << 1);\n}\n\n//Extracts the nth interleaved component\nexports.deinterleave2 = function(v, n) {\n  v = (v >>> n) & 0x55555555;\n  v = (v | (v >>> 1))  & 0x33333333;\n  v = (v | (v >>> 2))  & 0x0F0F0F0F;\n  v = (v | (v >>> 4))  & 0x00FF00FF;\n  v = (v | (v >>> 16)) & 0x000FFFF;\n  return (v << 16) >> 16;\n}\n\n\n//Interleave bits of 3 coordinates, each with 10 bits.  Useful for fast octree codes\nexports.interleave3 = function(x, y, z) {\n  x &= 0x3FF;\n  x  = (x | (x<<16)) & 4278190335;\n  x  = (x | (x<<8))  & 251719695;\n  x  = (x | (x<<4))  & 3272356035;\n  x  = (x | (x<<2))  & 1227133513;\n\n  y &= 0x3FF;\n  y  = (y | (y<<16)) & 4278190335;\n  y  = (y | (y<<8))  & 251719695;\n  y  = (y | (y<<4))  & 3272356035;\n  y  = (y | (y<<2))  & 1227133513;\n  x |= (y << 1);\n  \n  z &= 0x3FF;\n  z  = (z | (z<<16)) & 4278190335;\n  z  = (z | (z<<8))  & 251719695;\n  z  = (z | (z<<4))  & 3272356035;\n  z  = (z | (z<<2))  & 1227133513;\n  \n  return x | (z << 2);\n}\n\n//Extracts nth interleaved component of a 3-tuple\nexports.deinterleave3 = function(v, n) {\n  v = (v >>> n)       & 1227133513;\n  v = (v | (v>>>2))   & 3272356035;\n  v = (v | (v>>>4))   & 251719695;\n  v = (v | (v>>>8))   & 4278190335;\n  v = (v | (v>>>16))  & 0x3FF;\n  return (v<<22)>>22;\n}\n\n//Computes next combination in colexicographic order (this is mistakenly called nextPermutation on the bit twiddling hacks page)\nexports.nextCombination = function(v) {\n  var t = v | (v - 1);\n  return (t + 1) | (((~t & -~t) - 1) >>> (countTrailingZeros(v) + 1));\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}