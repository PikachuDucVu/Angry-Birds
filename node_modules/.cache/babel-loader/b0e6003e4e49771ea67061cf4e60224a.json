{"ast":null,"code":"import { createGameLoop, createStage, createViewport, PolygonBatch, ShapeRenderer, Texture, ViewportInputHandler } from \"gdxts\";\nimport { init2 } from \"./PokemonGame\";\nexport const init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./flappy-bird.gif\");\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  const characterTexture = await Texture.load(gl, \"./bird.png\");\n  gl.clearColor(0, 0, 0, 1);\n  createGameLoop(delta => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 500, 1000);\n  });\n};\ninit2();","map":{"version":3,"names":["createGameLoop","createStage","createViewport","PolygonBatch","ShapeRenderer","Texture","ViewportInputHandler","init2","init","stage","canvas","getCanvas","viewport","gl","getContext","background","load","shapeRenderer","batch","camera","getCamera","inputHandler","characterTexture","clearColor","delta","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end","draw"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createGameLoop,\n  createStage,\n  createViewport,\n  PolygonBatch,\n  ShapeRenderer,\n  Texture,\n  ViewportInputHandler,\n} from \"gdxts\";\nimport { init2 } from \"./PokemonGame\";\nexport const init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./flappy-bird.gif\");\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n\n  const characterTexture = await Texture.load(gl, \"./bird.png\");\n  gl.clearColor(0, 0, 0, 1);\n\n  createGameLoop((delta: number) => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 500, 1000);\n  });\n};\ninit2();\n"],"mappings":"AAAA,SACEA,cADF,EAEEC,WAFF,EAGEC,cAHF,EAIEC,YAJF,EAKEC,aALF,EAMEC,OANF,EAOEC,oBAPF,QAQO,OARP;AASA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAO,MAAMC,IAAI,GAAG,YAAY;EAC9B,MAAMC,KAAK,GAAGR,WAAW,EAAzB;EACA,MAAMS,MAAM,GAAGD,KAAK,CAACE,SAAN,EAAf;EACA,MAAMC,QAAQ,GAAGV,cAAc,CAACQ,MAAD,EAAS,GAAT,EAAc,IAAd,CAA/B;EACA,MAAMG,EAAE,GAAGD,QAAQ,CAACE,UAAT,EAAX;EACA,MAAMC,UAAU,GAAG,MAAMV,OAAO,CAACW,IAAR,CAAaH,EAAb,EAAiB,mBAAjB,CAAzB;EAEA,MAAMI,aAAa,GAAG,IAAIb,aAAJ,CAAkBS,EAAlB,CAAtB;EACA,MAAMK,KAAK,GAAG,IAAIf,YAAJ,CAAiBU,EAAjB,CAAd;EACA,MAAMM,MAAM,GAAGP,QAAQ,CAACQ,SAAT,EAAf;EACA,MAAMC,YAAY,GAAG,IAAIf,oBAAJ,CAAyBM,QAAzB,CAArB;EAEA,MAAMU,gBAAgB,GAAG,MAAMjB,OAAO,CAACW,IAAR,CAAaH,EAAb,EAAiB,YAAjB,CAA/B;EACAA,EAAE,CAACU,UAAH,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;EAEAvB,cAAc,CAAEwB,KAAD,IAAmB;IAChCX,EAAE,CAACY,KAAH,CAASZ,EAAE,CAACa,gBAAZ;IACAT,aAAa,CAACU,aAAd,CAA4BR,MAAM,CAACS,cAAP,CAAsBC,MAAlD;IACAZ,aAAa,CAACa,KAAd;IACAb,aAAa,CAACc,IAAd,CAAmB,IAAnB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,GAA/B,EAAoC,IAApC;IACAd,aAAa,CAACe,GAAd;IAEAd,KAAK,CAACS,aAAN,CAAoBR,MAAM,CAACS,cAAP,CAAsBC,MAA1C;IACAX,KAAK,CAACY,KAAN;IACAZ,KAAK,CAACe,IAAN,CAAWlB,UAAX,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,GAA7B,EAAkC,IAAlC;EACD,CAVa,CAAd;AAWD,CA1BM;AA2BPR,KAAK"},"metadata":{},"sourceType":"module"}