{"ast":null,"code":"import { createStage, createViewport, createGameLoop, ShapeRenderer, Color, Texture } from \"gdxts\";\n\nconst init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n  const texture = await Texture.load(gl, \"./charizard.png\");\n  const shapeRenderer = new ShapeRenderer(gl);\n  const camera = viewport.getCamera();\n  gl.clearColor(0, 0, 0, 1);\n  createGameLoop(delta => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.rect(true, 10, 10, 100, 100, Color.RED);\n    shapeRenderer.end();\n  });\n};\n\ninit();\nexport {};","map":{"version":3,"names":["createStage","createViewport","createGameLoop","ShapeRenderer","Color","Texture","init","stage","canvas","getCanvas","viewport","gl","getContext","texture","load","shapeRenderer","camera","getCamera","clearColor","delta","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","RED","end"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createStage,\n  createViewport,\n  createGameLoop,\n  ShapeRenderer,\n  Color,\n  Texture,\n} from \"gdxts\";\n\nconst init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n\n  const texture = await Texture.load(gl, \"./charizard.png\");\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const camera = viewport.getCamera();\n\n  gl.clearColor(0, 0, 0, 1);\n  createGameLoop((delta: number) => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.rect(true, 10, 10, 100, 100, Color.RED);\n    shapeRenderer.end();\n  });\n};\ninit();\n\nexport {};\n"],"mappings":"AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,aAJF,EAKEC,KALF,EAMEC,OANF,QAOO,OAPP;;AASA,MAAMC,IAAI,GAAG,YAAY;EACvB,MAAMC,KAAK,GAAGP,WAAW,EAAzB;EACA,MAAMQ,MAAM,GAAGD,KAAK,CAACE,SAAN,EAAf;EAEA,MAAMC,QAAQ,GAAGT,cAAc,CAACO,MAAD,EAAS,GAAT,EAAc,IAAd,CAA/B;EACA,MAAMG,EAAE,GAAGD,QAAQ,CAACE,UAAT,EAAX;EAEA,MAAMC,OAAO,GAAG,MAAMR,OAAO,CAACS,IAAR,CAAaH,EAAb,EAAiB,iBAAjB,CAAtB;EAEA,MAAMI,aAAa,GAAG,IAAIZ,aAAJ,CAAkBQ,EAAlB,CAAtB;EACA,MAAMK,MAAM,GAAGN,QAAQ,CAACO,SAAT,EAAf;EAEAN,EAAE,CAACO,UAAH,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;EACAhB,cAAc,CAAEiB,KAAD,IAAmB;IAChCR,EAAE,CAACS,KAAH,CAAST,EAAE,CAACU,gBAAZ;IACAN,aAAa,CAACO,aAAd,CAA4BN,MAAM,CAACO,cAAP,CAAsBC,MAAlD;IACAT,aAAa,CAACU,KAAd;IACAV,aAAa,CAACW,IAAd,CAAmB,IAAnB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,GAA/B,EAAoC,IAApC;IACAX,aAAa,CAACW,IAAd,CAAmB,IAAnB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,GAAjC,EAAsC,GAAtC,EAA2CtB,KAAK,CAACuB,GAAjD;IACAZ,aAAa,CAACa,GAAd;EACD,CAPa,CAAd;AAQD,CArBD;;AAsBAtB,IAAI;AAEJ"},"metadata":{},"sourceType":"module"}