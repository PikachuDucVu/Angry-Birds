{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"D:/projects/test-game/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"D:/projects/test-game/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OrthoCamera = void 0;\n\nvar Matrix4_1 = require(\"./Matrix4\");\n\nvar Vector3_1 = require(\"./Vector3\");\n\nvar OrthoCamera = /*#__PURE__*/function () {\n  function OrthoCamera(viewportWidth, viewportHeight, screenWidth, screenHeight) {\n    _classCallCheck(this, OrthoCamera);\n\n    this.position = new Vector3_1.Vector3(0, 0, 0);\n    this.direction = new Vector3_1.Vector3(0, 0, -1);\n    this.up = new Vector3_1.Vector3(0, 1, 0);\n    this.near = 0;\n    this.far = 100;\n    this.zoom = 1;\n    this.viewportWidth = 0;\n    this.viewportHeight = 0;\n    this.projectionView = new Matrix4_1.Matrix4();\n    this.inverseProjectionView = new Matrix4_1.Matrix4();\n    this.projection = new Matrix4_1.Matrix4();\n    this.view = new Matrix4_1.Matrix4();\n    this.tmp3 = new Vector3_1.Vector3();\n    this.resize(viewportWidth, viewportHeight, screenWidth, screenHeight);\n  }\n\n  _createClass(OrthoCamera, [{\n    key: \"setYDown\",\n    value: function setYDown(yDown) {\n      if (yDown) {\n        this.up.set(0, -1, 0);\n        this.direction.set(0, 0, 1);\n      } else {\n        this.up.set(0, 1, 0);\n        this.direction.set(0, 0, -1);\n      }\n\n      this.update();\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(viewportWidth, viewportHeight, screenWidth, screenHeight) {\n      this.viewportWidth = viewportWidth;\n      this.viewportHeight = viewportHeight;\n      this.screenWidth = screenWidth;\n      this.screenHeight = screenHeight;\n      this.update();\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(cameraX, cameraY) {\n      this.position.set(cameraX, cameraY, this.position.z);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var projection = this.projection;\n      var view = this.view;\n      var projectionView = this.projectionView;\n      var inverseProjectionView = this.inverseProjectionView;\n      var zoom = this.zoom,\n          viewportWidth = this.viewportWidth,\n          viewportHeight = this.viewportHeight;\n      projection.ortho(zoom * (-viewportWidth / 2), zoom * (viewportWidth / 2), zoom * (-viewportHeight / 2), zoom * (viewportHeight / 2), this.near, this.far);\n      view.lookAt(this.position, this.direction, this.up);\n      projectionView.set(projection.values);\n      projectionView.multiply(view);\n      inverseProjectionView.set(projectionView.values).invert();\n      this.combined = projectionView.values;\n    }\n  }, {\n    key: \"screenToWorld\",\n    value: function screenToWorld(screenCoords, screenWidth, screenHeight) {\n      screenWidth = screenWidth || this.screenWidth;\n      screenHeight = screenHeight || this.screenHeight;\n      var x = screenCoords.x,\n          y = screenHeight - screenCoords.y - 1;\n      screenCoords.x = 2 * x / screenWidth - 1;\n      screenCoords.y = 2 * y / screenHeight - 1;\n      screenCoords.z = 2 * screenCoords.z - 1;\n      screenCoords.project(this.inverseProjectionView);\n      return screenCoords;\n    }\n  }, {\n    key: \"worldToScreen\",\n    value: function worldToScreen(worldCoords, screenWidth, screenHeight) {\n      screenWidth = screenWidth || this.screenWidth;\n      screenHeight = screenHeight || this.screenHeight;\n      worldCoords.project(this.projectionView);\n      worldCoords.x = screenWidth * (worldCoords.x + 1) / 2;\n      worldCoords.y = screenHeight * (worldCoords.y + 1) / 2;\n      worldCoords.z = (worldCoords.z + 1) / 2;\n      return worldCoords;\n    }\n  }, {\n    key: \"unprojectVector2\",\n    value: function unprojectVector2(worldCoord, screenCoord) {\n      this.tmp3.set(screenCoord.x, screenCoord.y, 0);\n      this.screenToWorld(this.tmp3);\n      worldCoord.set(this.tmp3.x, this.tmp3.y);\n    }\n  }, {\n    key: \"setViewport\",\n    value: function setViewport(viewportWidth, viewportHeight) {\n      this.viewportWidth = viewportWidth;\n      this.viewportHeight = viewportHeight;\n    }\n  }]);\n\n  return OrthoCamera;\n}();\n\nexports.OrthoCamera = OrthoCamera;","map":{"version":3,"names":["Object","defineProperty","exports","value","OrthoCamera","Matrix4_1","require","Vector3_1","viewportWidth","viewportHeight","screenWidth","screenHeight","position","Vector3","direction","up","near","far","zoom","projectionView","Matrix4","inverseProjectionView","projection","view","tmp3","resize","yDown","set","update","cameraX","cameraY","z","ortho","lookAt","values","multiply","invert","combined","screenCoords","x","y","project","worldCoords","worldCoord","screenCoord","screenToWorld"],"sources":["D:/projects/test-game/node_modules/gdxts/dist/lib/Camera.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OrthoCamera = void 0;\r\nconst Matrix4_1 = require(\"./Matrix4\");\r\nconst Vector3_1 = require(\"./Vector3\");\r\nclass OrthoCamera {\r\n    constructor(viewportWidth, viewportHeight, screenWidth, screenHeight) {\r\n        this.position = new Vector3_1.Vector3(0, 0, 0);\r\n        this.direction = new Vector3_1.Vector3(0, 0, -1);\r\n        this.up = new Vector3_1.Vector3(0, 1, 0);\r\n        this.near = 0;\r\n        this.far = 100;\r\n        this.zoom = 1;\r\n        this.viewportWidth = 0;\r\n        this.viewportHeight = 0;\r\n        this.projectionView = new Matrix4_1.Matrix4();\r\n        this.inverseProjectionView = new Matrix4_1.Matrix4();\r\n        this.projection = new Matrix4_1.Matrix4();\r\n        this.view = new Matrix4_1.Matrix4();\r\n        this.tmp3 = new Vector3_1.Vector3();\r\n        this.resize(viewportWidth, viewportHeight, screenWidth, screenHeight);\r\n    }\r\n    setYDown(yDown) {\r\n        if (yDown) {\r\n            this.up.set(0, -1, 0);\r\n            this.direction.set(0, 0, 1);\r\n        }\r\n        else {\r\n            this.up.set(0, 1, 0);\r\n            this.direction.set(0, 0, -1);\r\n        }\r\n        this.update();\r\n    }\r\n    resize(viewportWidth, viewportHeight, screenWidth, screenHeight) {\r\n        this.viewportWidth = viewportWidth;\r\n        this.viewportHeight = viewportHeight;\r\n        this.screenWidth = screenWidth;\r\n        this.screenHeight = screenHeight;\r\n        this.update();\r\n    }\r\n    setPosition(cameraX, cameraY) {\r\n        this.position.set(cameraX, cameraY, this.position.z);\r\n    }\r\n    update() {\r\n        let projection = this.projection;\r\n        let view = this.view;\r\n        let projectionView = this.projectionView;\r\n        let inverseProjectionView = this.inverseProjectionView;\r\n        let zoom = this.zoom, viewportWidth = this.viewportWidth, viewportHeight = this.viewportHeight;\r\n        projection.ortho(zoom * (-viewportWidth / 2), zoom * (viewportWidth / 2), zoom * (-viewportHeight / 2), zoom * (viewportHeight / 2), this.near, this.far);\r\n        view.lookAt(this.position, this.direction, this.up);\r\n        projectionView.set(projection.values);\r\n        projectionView.multiply(view);\r\n        inverseProjectionView.set(projectionView.values).invert();\r\n        this.combined = projectionView.values;\r\n    }\r\n    screenToWorld(screenCoords, screenWidth, screenHeight) {\r\n        screenWidth = screenWidth || this.screenWidth;\r\n        screenHeight = screenHeight || this.screenHeight;\r\n        let x = screenCoords.x, y = screenHeight - screenCoords.y - 1;\r\n        screenCoords.x = (2 * x) / screenWidth - 1;\r\n        screenCoords.y = (2 * y) / screenHeight - 1;\r\n        screenCoords.z = 2 * screenCoords.z - 1;\r\n        screenCoords.project(this.inverseProjectionView);\r\n        return screenCoords;\r\n    }\r\n    worldToScreen(worldCoords, screenWidth, screenHeight) {\r\n        screenWidth = screenWidth || this.screenWidth;\r\n        screenHeight = screenHeight || this.screenHeight;\r\n        worldCoords.project(this.projectionView);\r\n        worldCoords.x = (screenWidth * (worldCoords.x + 1)) / 2;\r\n        worldCoords.y = (screenHeight * (worldCoords.y + 1)) / 2;\r\n        worldCoords.z = (worldCoords.z + 1) / 2;\r\n        return worldCoords;\r\n    }\r\n    unprojectVector2(worldCoord, screenCoord) {\r\n        this.tmp3.set(screenCoord.x, screenCoord.y, 0);\r\n        this.screenToWorld(this.tmp3);\r\n        worldCoord.set(this.tmp3.x, this.tmp3.y);\r\n    }\r\n    setViewport(viewportWidth, viewportHeight) {\r\n        this.viewportWidth = viewportWidth;\r\n        this.viewportHeight = viewportHeight;\r\n    }\r\n}\r\nexports.OrthoCamera = OrthoCamera;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}