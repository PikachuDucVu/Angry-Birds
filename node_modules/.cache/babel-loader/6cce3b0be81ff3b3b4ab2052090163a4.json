{"ast":null,"code":"import { createGameLoop, createStage, createViewport, PolygonBatch, ShapeRenderer, Texture, Vector2, ViewportInputHandler } from \"gdxts\";\nexport const init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 1500, 2000);\n  const gl = viewport.getContext();\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  const background = await Texture.load(gl, \"./TetrisBg.png\");\n  const bgRight = await Texture.load(gl, \"./bg1.png\");\n  const block = await Texture.load(gl, \"./7251.png\"); //config game\n\n  let blockPosition = new Vector2(500, 1915); //tetromino\n\n  const squareBlock = [[1, 1], [1, 1]]; //I\n\n  const iBlock1 = [1, 1, 1, 1];\n  const iBlock2 = [[1], [1], [1], [1]]; //J\n\n  const jBlock1 = [[1, 0, 0], [1, 1, 1]];\n  const jBlock2 = [[1, 1], [1, 0], [1, 0]];\n  const jBlock3 = [[1, 1, 1], [0, 0, 1]]; //L\n\n  const LBlock1 = [[0, 0, 1], [1, 1, 1]];\n  const LBlock2 = [[1, 1], [0, 1], [0, 1]]; //s\n\n  const sBlock1 = [[0, 1, 1], [1, 1, 0]];\n  const sBlock2 = [[1, 0], [1, 1], [0, 1]]; //t\n\n  const tBlock1 = [[0, 1, 0], [1, 1, 1]];\n  const tBlock2 = [[1, 0], [1, 1], [1, 0]];\n  const tBlock3 = [[1, 1, 1], [0, 1, 0]];\n  const tBlock4 = [[0, 1], [1, 1], [0, 1]]; //z\n\n  const zBlock1 = [[1, 1, 0], [0, 1, 1]];\n  const zBlock2 = [[1, 0], [1, 1], [0, 1]];\n\n  function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  createGameLoop(delta => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 1000, 2000);\n    shapeRenderer.end(); //draw background\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 1000, 2000);\n    batch.draw(block, blockPosition.x, blockPosition.y, 84, 84);\n    batch.draw(bgRight, 1000, 0, 500, 2000);\n    batch.end();\n  });\n};\ninit();","map":{"version":3,"names":["createGameLoop","createStage","createViewport","PolygonBatch","ShapeRenderer","Texture","Vector2","ViewportInputHandler","init","stage","canvas","getCanvas","viewport","gl","getContext","shapeRenderer","batch","camera","getCamera","inputHandler","background","load","bgRight","block","blockPosition","squareBlock","iBlock1","iBlock2","jBlock1","jBlock2","jBlock3","LBlock1","LBlock2","sBlock1","sBlock2","tBlock1","tBlock2","tBlock3","tBlock4","zBlock1","zBlock2","getRandomInt","min","max","Math","floor","random","delta","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end","draw","x","y"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createGameLoop,\n  createStage,\n  createViewport,\n  InputEvent,\n  PolygonBatch,\n  ShapeRenderer,\n  Texture,\n  Vector2,\n  ViewportInputHandler,\n  BitmapFont,\n  TextureRegion,\n  Animation,\n  PlayMode,\n  Color,\n} from \"gdxts\";\n\nexport const init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 1500, 2000);\n  const gl = viewport.getContext();\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n\n  const background = await Texture.load(gl, \"./TetrisBg.png\");\n  const bgRight = await Texture.load(gl, \"./bg1.png\");\n  const block = await Texture.load(gl, \"./7251.png\");\n\n  //config game\n  let blockPosition = new Vector2(500, 1915);\n\n  //tetromino\n  const squareBlock = [\n    [1, 1],\n    [1, 1],\n  ];\n  //I\n  const iBlock1 = [1, 1, 1, 1];\n  const iBlock2 = [[1], [1], [1], [1]];\n\n  //J\n  const jBlock1 = [\n    [1, 0, 0],\n    [1, 1, 1],\n  ];\n  const jBlock2 = [\n    [1, 1],\n    [1, 0],\n    [1, 0],\n  ];\n  const jBlock3 = [\n    [1, 1, 1],\n    [0, 0, 1],\n  ];\n  //L\n  const LBlock1 = [\n    [0, 0, 1],\n    [1, 1, 1],\n  ];\n  const LBlock2 = [\n    [1, 1],\n    [0, 1],\n    [0, 1],\n  ];\n  //s\n  const sBlock1 = [\n    [0, 1, 1],\n    [1, 1, 0],\n  ];\n  const sBlock2 = [\n    [1, 0],\n    [1, 1],\n    [0, 1],\n  ];\n  //t\n  const tBlock1 = [\n    [0, 1, 0],\n    [1, 1, 1],\n  ];\n  const tBlock2 = [\n    [1, 0],\n    [1, 1],\n    [1, 0],\n  ];\n  const tBlock3 = [\n    [1, 1, 1],\n    [0, 1, 0],\n  ];\n  const tBlock4 = [\n    [0, 1],\n    [1, 1],\n    [0, 1],\n  ];\n  //z\n  const zBlock1 = [\n    [1, 1, 0],\n    [0, 1, 1],\n  ];\n  const zBlock2 = [\n    [1, 0],\n    [1, 1],\n    [0, 1],\n  ];\n\n  function getRandomInt(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  createGameLoop((delta: number) => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 1000, 2000);\n    shapeRenderer.end();\n\n    //draw background\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 1000, 2000);\n    batch.draw(block, blockPosition.x, blockPosition.y, 84, 84);\n    batch.draw(bgRight, 1000, 0, 500, 2000);\n    batch.end();\n  });\n};\n\ninit();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}