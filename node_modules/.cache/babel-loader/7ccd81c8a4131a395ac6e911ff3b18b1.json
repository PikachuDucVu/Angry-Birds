{"ast":null,"code":"import { createGameLoop, createStage, createViewport, InputEvent, PolygonBatch, ShapeRenderer, Texture, Vector2, ViewportInputHandler, BitmapFont, TextureRegion, Animation, PlayMode } from \"gdxts\";\n/*\r\n1. draw bird\r\n2. draw pipe\r\n3. spawn pipe\r\n4. move pipe\r\n5. apply gravity to bird\r\n6. move bird (check inputHandler, apply speedY to bird, rotate bird)\r\n7. check collision (check win condition)\r\n8. try again\r\n*/\n\nexport const init2 = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 600, 1000);\n  const gl = viewport.getContext();\n  const background1 = await Texture.load(gl, \"./flappy-bird.gif\");\n  const background2 = await Texture.load(gl, \"./flappy-bird2.gif\");\n  const obstacles = await Texture.load(gl, \"./obstacle.webp\");\n  const gameovericon = await Texture.load(gl, \"./gameover.png\");\n  const tapToPlay = await Texture.load(gl, \"./taptoplay.png\");\n  const font = await BitmapFont.load(gl, \"./font.fnt\");\n  const newBird = await Texture.load(gl, \"./newbird.png\");\n  const regions = TextureRegion.splitTexture(newBird, 3, 1);\n  const birdAnimation = new Animation(regions.slice(0, 3), 0.25);\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport); //config of bá»‰d\n\n  let characterPosition = new Vector2(250, 500);\n  let rotationOfBird = 0;\n  let i = 0;\n  let frame = 0; // animation\n\n  let firstClick = false;\n  let falling = true;\n  let runningGame = true; //config obstacle\n\n  let obstaclePosition = [495, 195, 995, 195];\n  let obstacleSpeed = 400;\n  let heightObstacleUp1 = 300;\n  let heightObstacleDown1 = 270;\n  let heightObstacleUp2 = 350;\n  let heightObstacleDown2 = 220; //config game\n\n  let speedY = 0;\n  let gravityOfBird = 0;\n  let gravityGame = 0;\n  let tryagainmode = false;\n  gl.clearColor(0, 0, 0, 1);\n  let layerbg2 = 595;\n  let layerbg1 = 0;\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    firstClick = true;\n\n    if (firstClick === true && runningGame === true) {\n      speedY = 520;\n      rotationOfBird = 0;\n      gravityOfBird = 0;\n      gravityGame = 200;\n    } //try again\n\n\n    if (tryagainmode === true && runningGame === false) {\n      characterPosition = new Vector2(250, 500); // redeclare\n\n      rotationOfBird = 0;\n      i = 0;\n      frame = 0;\n      layerbg2 = 595;\n      layerbg1 = 0;\n      speedY = 0;\n      gravityOfBird = 0;\n      gravityGame = 0;\n      obstaclePosition = [495, 195, 995, 195];\n      obstacleSpeed = 400;\n      heightObstacleUp1 = 300;\n      heightObstacleDown1 = 270;\n      heightObstacleUp2 = 350;\n      heightObstacleDown2 = 220;\n      firstClick = false;\n      falling = true;\n      runningGame = true;\n    }\n\n    falling = false;\n  });\n\n  function moveOfBird(delta) {\n    if (falling === false) {\n      characterPosition.y = characterPosition.y + speedY * delta;\n\n      if (rotationOfBird <= 0.3) {\n        setTimeout(() => {\n          rotationOfBird += 0.04; // console.log(rotationOfBird);\n        }, 50);\n      }\n\n      if (speedY <= 20) {\n        falling = true;\n      }\n    }\n\n    if (falling === true) {\n      characterPosition.y -= gravityGame * delta;\n\n      if (rotationOfBird >= -1.1) {\n        setTimeout(() => {\n          rotationOfBird -= 0.15 - delta;\n        }, 25);\n      }\n    }\n  }\n\n  function spawnAndMovePipe(delta) {\n    obstaclePosition[0] -= obstacleSpeed * delta;\n    obstaclePosition[2] -= obstacleSpeed * delta; //bg move\n\n    layerbg1 -= delta * obstacleSpeed;\n    layerbg2 -= delta * obstacleSpeed; // respawn pipe\n\n    if (obstaclePosition[0] < -200) {\n      obstaclePosition[0] = 695;\n      randomHeightOfObstacle();\n\n      if (obstacleSpeed <= 520) {\n        obstacleSpeed *= 1.02;\n      }\n    }\n\n    if (obstaclePosition[2] < -200) {\n      obstaclePosition[2] = 695;\n      randomHeightOfObstacle();\n\n      if (obstacleSpeed <= 500) {\n        obstacleSpeed *= 1.02;\n      }\n    }\n  } //random height of obstacle\n\n\n  function randomHeightOfObstacle() {\n    if (obstaclePosition[0] >= 600) {\n      let optionOfObstacle1 = getRandomInt(1, 5);\n\n      switch (optionOfObstacle1) {\n        case 1:\n          heightObstacleDown1 = 150;\n          heightObstacleUp1 = 450; //\n\n          break;\n\n        case 2:\n          heightObstacleDown1 = 250;\n          heightObstacleUp1 = 350;\n          break;\n\n        case 3:\n          heightObstacleDown1 = 350;\n          heightObstacleUp1 = 250;\n          break;\n\n        case 4:\n          heightObstacleDown1 = 450;\n          heightObstacleUp1 = 150;\n          break;\n\n        case 5:\n          heightObstacleDown1 = 550;\n          heightObstacleUp1 = 125;\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    if (obstaclePosition[2] >= 600) {\n      let optionOfObstacle2 = getRandomInt(1, 5);\n\n      switch (optionOfObstacle2) {\n        case 1:\n          heightObstacleDown2 = 150;\n          heightObstacleUp2 = 450;\n          break;\n\n        case 2:\n          heightObstacleDown2 = 250;\n          heightObstacleUp2 = 350;\n          break;\n\n        case 3:\n          heightObstacleDown2 = 350;\n          heightObstacleUp2 = 250;\n          break;\n\n        case 4:\n          heightObstacleDown2 = 450;\n          heightObstacleUp2 = 150;\n          break;\n\n        case 5:\n          heightObstacleDown2 = 550;\n          heightObstacleUp2 = 125;\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  } // try again\n\n\n  createGameLoop(delta => {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 600, 1000);\n    shapeRenderer.end();\n    frame += delta;\n    gravityOfBird += delta;\n    speedY = speedY - 20 - gravityOfBird;\n    gravityGame += 250 * delta;\n\n    if (firstClick === true && runningGame === true) {\n      spawnAndMovePipe(delta);\n      moveOfBird(delta);\n    } // draw background\n\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background2, layerbg2, 0, 600, 1000);\n    batch.draw(background1, layerbg1, 0, 600, 1000);\n\n    if (layerbg1 <= -595) {\n      layerbg1 = 590;\n    }\n\n    if (layerbg2 <= -595) {\n      layerbg2 = 590;\n    } //draw obstacle\n\n\n    batch.draw(obstacles, obstaclePosition[0] - 50, obstaclePosition[1], 150, heightObstacleDown1 // heightDown // default = 270 // max 500 min 150\n    );\n    batch.draw(obstacles, obstaclePosition[0] - 50, obstaclePosition[1] + 610, 150, heightObstacleUp1, // heightUp // default = 300 // max 500 min 150\n    75, 100, 47.13);\n    batch.draw(obstacles, obstaclePosition[2] - 50, obstaclePosition[3], 150, heightObstacleDown2 // heightDown // default = 270 // max 500 min 150\n    );\n    batch.draw(obstacles, obstaclePosition[2] - 50, obstaclePosition[3] + 610, 150, heightObstacleUp2, // heightUp // default = 300 // max 500 min 150\n    75, 100, 47.13); //draw chim\n\n    let region = birdAnimation.getKeyFrame(frame, PlayMode.LOOP);\n\n    if (i > 0.2) {\n      i = 0;\n      frame %= 3;\n    }\n\n    region.draw(batch, characterPosition.x, 680, // height of chim\n    60, 60, 30, 30, rotationOfBird); //gameover\n\n    if (firstClick === false && runningGame === true) {\n      batch.draw(tapToPlay, 180, 330, 200, 200);\n    }\n\n    if (characterPosition.y <= 190) {\n      runningGame = false;\n      firstClick = false;\n      falling = false;\n      speedY = 0;\n    }\n\n    if (Math.abs(characterPosition.x - obstaclePosition[0]) <= 90) {\n      // crash with obstacleDown\n      if (characterPosition.y - 90 - heightObstacleDown1 <= 90) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      } // crash with obstacleUp\n\n\n      if (heightObstacleUp1 === 300 && characterPosition.y >= 660) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      }\n\n      if (heightObstacleUp1 === 450 && characterPosition.y >= 510) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      }\n\n      if (heightObstacleUp1 === 350 && characterPosition.y >= 610) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      }\n\n      if (heightObstacleUp1 === 250 && characterPosition.y >= 710) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      }\n\n      if (heightObstacleUp1 === 150 && characterPosition.y >= 810) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      }\n\n      if (heightObstacleUp1 === 125 && characterPosition.y >= 830) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      }\n    }\n\n    if (Math.abs(characterPosition.x - obstaclePosition[2]) <= 90) {\n      if (characterPosition.y - 90 - heightObstacleDown2 <= 90) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      }\n\n      if (heightObstacleUp2 === 350 && characterPosition.y >= 610) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      }\n\n      if (heightObstacleUp2 === 500 && characterPosition.y >= 460) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      }\n\n      if (heightObstacleUp2 === 400 && characterPosition.y >= 560) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      }\n\n      if (heightObstacleUp2 === 300 && characterPosition.y >= 660) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0; // correct\n      }\n\n      if (heightObstacleUp2 === 200 && characterPosition.y >= 760) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      }\n\n      if (heightObstacleUp2 === 125 && characterPosition.y >= 830) {\n        runningGame = false;\n        firstClick = false;\n        speedY = 0;\n      }\n    }\n\n    if (runningGame === false) {\n      batch.draw(gameovericon, 50, 500, 500, 250);\n\n      if (characterPosition.y >= 190) {\n        characterPosition.y -= gravityGame * delta;\n      }\n\n      font.draw(batch, \"F5 TO TRYAGAIN\", 220, 450, 250);\n\n      if (rotationOfBird >= -1.2) {\n        rotationOfBird -= 0.1 - delta;\n      }\n\n      tryagainmode = true;\n      console.log(tryagainmode);\n    }\n\n    batch.end(); //wait a click to try again\n  });\n};","map":{"version":3,"names":["createGameLoop","createStage","createViewport","InputEvent","PolygonBatch","ShapeRenderer","Texture","Vector2","ViewportInputHandler","BitmapFont","TextureRegion","Animation","PlayMode","init2","stage","canvas","getCanvas","viewport","gl","getContext","background1","load","background2","obstacles","gameovericon","tapToPlay","font","newBird","regions","splitTexture","birdAnimation","slice","shapeRenderer","batch","camera","getCamera","inputHandler","characterPosition","rotationOfBird","i","frame","firstClick","falling","runningGame","obstaclePosition","obstacleSpeed","heightObstacleUp1","heightObstacleDown1","heightObstacleUp2","heightObstacleDown2","speedY","gravityOfBird","gravityGame","tryagainmode","clearColor","layerbg2","layerbg1","addEventListener","TouchStart","x","y","moveOfBird","delta","setTimeout","spawnAndMovePipe","randomHeightOfObstacle","optionOfObstacle1","getRandomInt","optionOfObstacle2","min","max","Math","floor","random","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end","draw","region","getKeyFrame","LOOP","abs","console","log"],"sources":["D:/projects/test-game/src/index2.ts"],"sourcesContent":["import {\r\n  createGameLoop,\r\n  createStage,\r\n  createViewport,\r\n  InputEvent,\r\n  PolygonBatch,\r\n  ShapeRenderer,\r\n  Texture,\r\n  Vector2,\r\n  ViewportInputHandler,\r\n  BitmapFont,\r\n  TextureRegion,\r\n  Animation,\r\n  PlayMode,\r\n} from \"gdxts\";\r\n\r\n/*\r\n1. draw bird\r\n2. draw pipe\r\n3. spawn pipe\r\n4. move pipe\r\n5. apply gravity to bird\r\n6. move bird (check inputHandler, apply speedY to bird, rotate bird)\r\n7. check collision (check win condition)\r\n8. try again\r\n*/\r\n\r\nexport const init2 = async () => {\r\n  const stage = createStage();\r\n  const canvas = stage.getCanvas();\r\n  const viewport = createViewport(canvas, 600, 1000);\r\n  const gl = viewport.getContext();\r\n\r\n  const background1 = await Texture.load(gl, \"./flappy-bird.gif\");\r\n  const background2 = await Texture.load(gl, \"./flappy-bird2.gif\");\r\n  const obstacles = await Texture.load(gl, \"./obstacle.webp\");\r\n  const gameovericon = await Texture.load(gl, \"./gameover.png\");\r\n  const tapToPlay = await Texture.load(gl, \"./taptoplay.png\");\r\n  const font = await BitmapFont.load(gl, \"./font.fnt\");\r\n  const newBird = await Texture.load(gl, \"./newbird.png\");\r\n  const regions = TextureRegion.splitTexture(newBird, 3, 1);\r\n  const birdAnimation = new Animation(regions.slice(0, 3), 0.25);\r\n\r\n  const shapeRenderer = new ShapeRenderer(gl);\r\n  const batch = new PolygonBatch(gl);\r\n  const camera = viewport.getCamera();\r\n  const inputHandler = new ViewportInputHandler(viewport);\r\n\r\n  //config of bá»‰d\r\n  let characterPosition = new Vector2(250, 500);\r\n  let rotationOfBird = 0;\r\n  let i = 0;\r\n  let frame = 0; // animation\r\n\r\n  let firstClick = false;\r\n  let falling = true;\r\n  let runningGame = true;\r\n\r\n  //config obstacle\r\n  let obstaclePosition = [495, 195, 995, 195];\r\n  let obstacleSpeed = 400;\r\n  let heightObstacleUp1 = 300;\r\n  let heightObstacleDown1 = 270;\r\n  let heightObstacleUp2 = 350;\r\n  let heightObstacleDown2 = 220;\r\n\r\n  //config game\r\n  let speedY = 0;\r\n  let gravityOfBird = 0;\r\n  let gravityGame = 0;\r\n  let tryagainmode = false;\r\n\r\n  gl.clearColor(0, 0, 0, 1);\r\n  let layerbg2 = 595;\r\n  let layerbg1 = 0;\r\n\r\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\r\n    firstClick = true;\r\n\r\n    if (firstClick === true && runningGame === true) {\r\n      speedY = 520;\r\n      rotationOfBird = 0;\r\n      gravityOfBird = 0;\r\n      gravityGame = 200;\r\n    }\r\n\r\n    //try again\r\n    if (tryagainmode === true && runningGame === false) {\r\n      characterPosition = new Vector2(250, 500);\r\n\r\n      // redeclare\r\n\r\n      rotationOfBird = 0;\r\n      i = 0;\r\n      frame = 0;\r\n\r\n      layerbg2 = 595;\r\n      layerbg1 = 0;\r\n\r\n      speedY = 0;\r\n      gravityOfBird = 0;\r\n      gravityGame = 0;\r\n\r\n      obstaclePosition = [495, 195, 995, 195];\r\n      obstacleSpeed = 400;\r\n      heightObstacleUp1 = 300;\r\n      heightObstacleDown1 = 270;\r\n      heightObstacleUp2 = 350;\r\n      heightObstacleDown2 = 220;\r\n\r\n      firstClick = false;\r\n      falling = true;\r\n      runningGame = true;\r\n    }\r\n\r\n    falling = false;\r\n  });\r\n\r\n  function moveOfBird(delta: number) {\r\n    if (falling === false) {\r\n      characterPosition.y = characterPosition.y + speedY * delta;\r\n      if (rotationOfBird <= 0.3) {\r\n        setTimeout(() => {\r\n          rotationOfBird += 0.04;\r\n          // console.log(rotationOfBird);\r\n        }, 50);\r\n      }\r\n\r\n      if (speedY <= 20) {\r\n        falling = true;\r\n      }\r\n    }\r\n\r\n    if (falling === true) {\r\n      characterPosition.y -= gravityGame * delta;\r\n      if (rotationOfBird >= -1.1) {\r\n        setTimeout(() => {\r\n          rotationOfBird -= 0.15 - delta;\r\n        }, 25);\r\n      }\r\n    }\r\n  }\r\n\r\n  function spawnAndMovePipe(delta: number) {\r\n    obstaclePosition[0] -= obstacleSpeed * delta;\r\n    obstaclePosition[2] -= obstacleSpeed * delta;\r\n\r\n    //bg move\r\n    layerbg1 -= delta * obstacleSpeed;\r\n    layerbg2 -= delta * obstacleSpeed;\r\n\r\n    // respawn pipe\r\n    if (obstaclePosition[0] < -200) {\r\n      obstaclePosition[0] = 695;\r\n      randomHeightOfObstacle();\r\n\r\n      if (obstacleSpeed <= 520) {\r\n        obstacleSpeed *= 1.02;\r\n      }\r\n    }\r\n    if (obstaclePosition[2] < -200) {\r\n      obstaclePosition[2] = 695;\r\n      randomHeightOfObstacle();\r\n\r\n      if (obstacleSpeed <= 500) {\r\n        obstacleSpeed *= 1.02;\r\n      }\r\n    }\r\n  }\r\n\r\n  //random height of obstacle\r\n  function randomHeightOfObstacle() {\r\n    if (obstaclePosition[0] >= 600) {\r\n      let optionOfObstacle1 = getRandomInt(1, 5);\r\n      switch (optionOfObstacle1) {\r\n        case 1:\r\n          heightObstacleDown1 = 150;\r\n          heightObstacleUp1 = 450; //\r\n          break;\r\n\r\n        case 2:\r\n          heightObstacleDown1 = 250;\r\n          heightObstacleUp1 = 350;\r\n          break;\r\n        case 3:\r\n          heightObstacleDown1 = 350;\r\n          heightObstacleUp1 = 250;\r\n          break;\r\n        case 4:\r\n          heightObstacleDown1 = 450;\r\n          heightObstacleUp1 = 150;\r\n          break;\r\n        case 5:\r\n          heightObstacleDown1 = 550;\r\n          heightObstacleUp1 = 125;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (obstaclePosition[2] >= 600) {\r\n      let optionOfObstacle2 = getRandomInt(1, 5);\r\n      switch (optionOfObstacle2) {\r\n        case 1:\r\n          heightObstacleDown2 = 150;\r\n          heightObstacleUp2 = 450;\r\n          break;\r\n\r\n        case 2:\r\n          heightObstacleDown2 = 250;\r\n          heightObstacleUp2 = 350;\r\n          break;\r\n        case 3:\r\n          heightObstacleDown2 = 350;\r\n          heightObstacleUp2 = 250;\r\n          break;\r\n        case 4:\r\n          heightObstacleDown2 = 450;\r\n          heightObstacleUp2 = 150;\r\n          break;\r\n        case 5:\r\n          heightObstacleDown2 = 550;\r\n          heightObstacleUp2 = 125;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  function getRandomInt(min: number, max: number) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  }\r\n\r\n  // try again\r\n\r\n  createGameLoop((delta: number) => {\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    shapeRenderer.setProjection(camera.projectionView.values);\r\n    shapeRenderer.begin();\r\n    shapeRenderer.rect(true, 0, 0, 600, 1000);\r\n    shapeRenderer.end();\r\n\r\n    frame += delta;\r\n    gravityOfBird += delta;\r\n    speedY = speedY - 20 - gravityOfBird;\r\n    gravityGame += 250 * delta;\r\n\r\n    if (firstClick === true && runningGame === true) {\r\n      spawnAndMovePipe(delta);\r\n      moveOfBird(delta);\r\n    }\r\n\r\n    // draw background\r\n    batch.setProjection(camera.projectionView.values);\r\n    batch.begin();\r\n    batch.draw(background2, layerbg2, 0, 600, 1000);\r\n    batch.draw(background1, layerbg1, 0, 600, 1000);\r\n    if (layerbg1 <= -595) {\r\n      layerbg1 = 590;\r\n    }\r\n    if (layerbg2 <= -595) {\r\n      layerbg2 = 590;\r\n    }\r\n\r\n    //draw obstacle\r\n    batch.draw(\r\n      obstacles,\r\n      obstaclePosition[0] - 50,\r\n      obstaclePosition[1],\r\n      150,\r\n      heightObstacleDown1 // heightDown // default = 270 // max 500 min 150\r\n    );\r\n    batch.draw(\r\n      obstacles,\r\n      obstaclePosition[0] - 50,\r\n      obstaclePosition[1] + 610,\r\n      150,\r\n      heightObstacleUp1, // heightUp // default = 300 // max 500 min 150\r\n      75,\r\n      100,\r\n      47.13\r\n    );\r\n    batch.draw(\r\n      obstacles,\r\n      obstaclePosition[2] - 50,\r\n      obstaclePosition[3],\r\n      150,\r\n      heightObstacleDown2 // heightDown // default = 270 // max 500 min 150\r\n    );\r\n    batch.draw(\r\n      obstacles,\r\n      obstaclePosition[2] - 50,\r\n      obstaclePosition[3] + 610,\r\n      150,\r\n      heightObstacleUp2, // heightUp // default = 300 // max 500 min 150\r\n      75,\r\n      100,\r\n      47.13\r\n    );\r\n\r\n    //draw chim\r\n    let region = birdAnimation.getKeyFrame(frame, PlayMode.LOOP);\r\n    if (i > 0.2) {\r\n      i = 0;\r\n      frame %= 3;\r\n    }\r\n    region.draw(\r\n      batch,\r\n      characterPosition.x,\r\n      680, // height of chim\r\n      60,\r\n      60,\r\n      30,\r\n      30,\r\n      rotationOfBird\r\n    );\r\n\r\n    //gameover\r\n    if (firstClick === false && runningGame === true) {\r\n      batch.draw(tapToPlay, 180, 330, 200, 200);\r\n    }\r\n\r\n    if (characterPosition.y <= 190) {\r\n      runningGame = false;\r\n      firstClick = false;\r\n      falling = false;\r\n      speedY = 0;\r\n    }\r\n\r\n    if (Math.abs(characterPosition.x - obstaclePosition[0]) <= 90) {\r\n      // crash with obstacleDown\r\n      if (characterPosition.y - 90 - heightObstacleDown1 <= 90) {\r\n        runningGame = false;\r\n        firstClick = false;\r\n        speedY = 0;\r\n      }\r\n      // crash with obstacleUp\r\n      if (heightObstacleUp1 === 300 && characterPosition.y >= 660) {\r\n        runningGame = false;\r\n        firstClick = false;\r\n        speedY = 0;\r\n      }\r\n      if (heightObstacleUp1 === 450 && characterPosition.y >= 510) {\r\n        runningGame = false;\r\n        firstClick = false;\r\n        speedY = 0;\r\n      }\r\n      if (heightObstacleUp1 === 350 && characterPosition.y >= 610) {\r\n        runningGame = false;\r\n        firstClick = false;\r\n        speedY = 0;\r\n      }\r\n      if (heightObstacleUp1 === 250 && characterPosition.y >= 710) {\r\n        runningGame = false;\r\n        firstClick = false;\r\n        speedY = 0;\r\n      }\r\n      if (heightObstacleUp1 === 150 && characterPosition.y >= 810) {\r\n        runningGame = false;\r\n        firstClick = false;\r\n        speedY = 0;\r\n      }\r\n      if (heightObstacleUp1 === 125 && characterPosition.y >= 830) {\r\n        runningGame = false;\r\n        firstClick = false;\r\n        speedY = 0;\r\n      }\r\n    }\r\n\r\n    if (Math.abs(characterPosition.x - obstaclePosition[2]) <= 90) {\r\n      if (characterPosition.y - 90 - heightObstacleDown2 <= 90) {\r\n        runningGame = false;\r\n        firstClick = false;\r\n        speedY = 0;\r\n      }\r\n      if (heightObstacleUp2 === 350 && characterPosition.y >= 610) {\r\n        runningGame = false;\r\n        firstClick = false;\r\n        speedY = 0;\r\n      }\r\n      if (heightObstacleUp2 === 500 && characterPosition.y >= 460) {\r\n        runningGame = false;\r\n        firstClick = false;\r\n        speedY = 0;\r\n      }\r\n      if (heightObstacleUp2 === 400 && characterPosition.y >= 560) {\r\n        runningGame = false;\r\n        firstClick = false;\r\n        speedY = 0;\r\n      }\r\n      if (heightObstacleUp2 === 300 && characterPosition.y >= 660) {\r\n        runningGame = false;\r\n        firstClick = false;\r\n        speedY = 0; // correct\r\n      }\r\n      if (heightObstacleUp2 === 200 && characterPosition.y >= 760) {\r\n        runningGame = false;\r\n        firstClick = false;\r\n        speedY = 0;\r\n      }\r\n      if (heightObstacleUp2 === 125 && characterPosition.y >= 830) {\r\n        runningGame = false;\r\n        firstClick = false;\r\n        speedY = 0;\r\n      }\r\n    }\r\n    if (runningGame === false) {\r\n      batch.draw(gameovericon, 50, 500, 500, 250);\r\n      if (characterPosition.y >= 190) {\r\n        characterPosition.y -= gravityGame * delta;\r\n      }\r\n      font.draw(batch, \"F5 TO TRYAGAIN\", 220, 450, 250);\r\n      if (rotationOfBird >= -1.2) {\r\n        rotationOfBird -= 0.1 - delta;\r\n      }\r\n\r\n      tryagainmode = true;\r\n      console.log(tryagainmode);\r\n    }\r\n    batch.end();\r\n\r\n    //wait a click to try again\r\n  });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}