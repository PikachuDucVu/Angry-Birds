{"ast":null,"code":"import { createStage, createViewport, createGameLoop, ShapeRenderer, Texture, TextureRegion, PolygonBatch, Animation } from \"gdxts\";\n\nconst init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext(); // eslint-disable-next-line\n\n  const texture = await Texture.load(gl, \"./charizard.png\");\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n  const walkDownAnimation = new Animation(regions.slice(0, 4), 0.2);\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera(); // let rotation = 0;\n  // const ROTATION_SPEED = Math.PI * 2;\n  // let i = 0;\n  // let frame = 0;\n\n  gl.clearColor(0, 0, 0, 1);\n  createGameLoop(delta => {\n    // rotation += ROTATION_SPEED * delta;\n    // i += delta;\n    // if (i > 0.2) {\n    //   i = 0;\n    //   frame++;\n    //   frame %= 4;\n    // }\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n    batch.setProjection(camera.projectionView.values);\n    batch.begin(); // batch.draw(\n    //   characterTexture,\n    //   10,\n    //   10,\n    //   500,\n    //   500\n    //   // 100,\n    //   // 100\n    //   // rotation,\n    //   // scale,\n    //   // scale\n    // );\n    // regions[frame + 12].draw(batch, 100, 100, 100, 100);\n\n    batch.end();\n  });\n};\n\ninit();\nexport {};","map":{"version":3,"names":["createStage","createViewport","createGameLoop","ShapeRenderer","Texture","TextureRegion","PolygonBatch","Animation","init","stage","canvas","getCanvas","viewport","gl","getContext","texture","load","characterTexture","regions","splitTexture","walkDownAnimation","slice","shapeRenderer","batch","camera","getCamera","clearColor","delta","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createStage,\n  createViewport,\n  createGameLoop,\n  ShapeRenderer,\n  Texture,\n  TextureRegion,\n  PolygonBatch,\n  Animation,\n} from \"gdxts\";\n\nconst init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n\n  // eslint-disable-next-line\n  const texture = await Texture.load(gl, \"./charizard.png\");\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n\n  const walkDownAnimation = new Animation(regions.slice(0, 4), 0.2);\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n\n  // let rotation = 0;\n  // const ROTATION_SPEED = Math.PI * 2;\n  // let i = 0;\n  // let frame = 0;\n  gl.clearColor(0, 0, 0, 1);\n  createGameLoop((delta: number) => {\n    // rotation += ROTATION_SPEED * delta;\n    // i += delta;\n    // if (i > 0.2) {\n    //   i = 0;\n    //   frame++;\n    //   frame %= 4;\n    // }\n\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    // batch.draw(\n    //   characterTexture,\n    //   10,\n    //   10,\n    //   500,\n    //   500\n    //   // 100,\n    //   // 100\n    //   // rotation,\n    //   // scale,\n    //   // scale\n    // );\n\n    // regions[frame + 12].draw(batch, 100, 100, 100, 100);\n\n    batch.end();\n  });\n};\ninit();\n\nexport {};\n"],"mappings":"AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,aAJF,EAKEC,OALF,EAMEC,aANF,EAOEC,YAPF,EAQEC,SARF,QASO,OATP;;AAWA,MAAMC,IAAI,GAAG,YAAY;EACvB,MAAMC,KAAK,GAAGT,WAAW,EAAzB;EACA,MAAMU,MAAM,GAAGD,KAAK,CAACE,SAAN,EAAf;EAEA,MAAMC,QAAQ,GAAGX,cAAc,CAACS,MAAD,EAAS,GAAT,EAAc,IAAd,CAA/B;EACA,MAAMG,EAAE,GAAGD,QAAQ,CAACE,UAAT,EAAX,CALuB,CAOvB;;EACA,MAAMC,OAAO,GAAG,MAAMX,OAAO,CAACY,IAAR,CAAaH,EAAb,EAAiB,iBAAjB,CAAtB;EACA,MAAMI,gBAAgB,GAAG,MAAMb,OAAO,CAACY,IAAR,CAAaH,EAAb,EAAiB,mBAAjB,CAA/B;EACA,MAAMK,OAAO,GAAGb,aAAa,CAACc,YAAd,CAA2BF,gBAA3B,EAA6C,CAA7C,EAAgD,CAAhD,CAAhB;EAEA,MAAMG,iBAAiB,GAAG,IAAIb,SAAJ,CAAcW,OAAO,CAACG,KAAR,CAAc,CAAd,EAAiB,CAAjB,CAAd,EAAmC,GAAnC,CAA1B;EAEA,MAAMC,aAAa,GAAG,IAAInB,aAAJ,CAAkBU,EAAlB,CAAtB;EACA,MAAMU,KAAK,GAAG,IAAIjB,YAAJ,CAAiBO,EAAjB,CAAd;EACA,MAAMW,MAAM,GAAGZ,QAAQ,CAACa,SAAT,EAAf,CAhBuB,CAkBvB;EACA;EACA;EACA;;EACAZ,EAAE,CAACa,UAAH,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;EACAxB,cAAc,CAAEyB,KAAD,IAAmB;IAChC;IACA;IACA;IACA;IACA;IACA;IACA;IAEAd,EAAE,CAACe,KAAH,CAASf,EAAE,CAACgB,gBAAZ;IACAP,aAAa,CAACQ,aAAd,CAA4BN,MAAM,CAACO,cAAP,CAAsBC,MAAlD;IACAV,aAAa,CAACW,KAAd;IACAX,aAAa,CAACY,IAAd,CAAmB,IAAnB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,GAA/B,EAAoC,IAApC;IACAZ,aAAa,CAACa,GAAd;IAEAZ,KAAK,CAACO,aAAN,CAAoBN,MAAM,CAACO,cAAP,CAAsBC,MAA1C;IACAT,KAAK,CAACU,KAAN,GAhBgC,CAiBhC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;;IAEAV,KAAK,CAACY,GAAN;EACD,CAjCa,CAAd;AAkCD,CAzDD;;AA0DA3B,IAAI;AAEJ"},"metadata":{},"sourceType":"module"}