{"ast":null,"code":"import { createStage, createViewport, createGameLoop, ShapeRenderer, Texture, TextureRegion, PolygonBatch, Animation, PlayMode, ViewportInputHandler, InputEvent } from \"gdxts\";\nimport Vector2 from \"gdxts/dist/lib/Vector2\";\n\nconst init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext(); // eslint-disable-next-line\n  // const texture = await Texture.load(gl, \"./charizard.png\");\n\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n  const walkDownAnimation = new Animation(regions.slice(0, 4), 0.2);\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  const previousPosition = new Vector2(250, 500);\n  const characterPosition = previousPosition;\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    const coord = inputHandler.getTouchedWorldCoord();\n    characterPosition.set(coord.x, coord.y);\n    console.log(previousPosition);\n  });\n  let rotation = 0; // const ROTATION_SPEED = Math.PI * 2;\n\n  let i = 0; // let frame = 0;\n\n  gl.clearColor(0, 0, 0, 1);\n  createGameLoop(delta => {\n    // rotation\n    // i += delta;\n    // if (i > 0.2) {\n    //   i = 0;\n    //   frame++;\n    //   frame %= 4;\n    // }\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n    batch.setProjection(camera.projectionView.values);\n    batch.begin(); // batch.draw(\n    //   characterTexture,\n    //   10,\n    //   10,\n    //   500,\n    //   500\n    //   // 100,\n    //   // 100\n    //   // rotation,\n    //   // scale,\n    //   // scale\n    // );\n    // regions[frame + 12].draw(batch, 100, 100, 100, 100);\n\n    const region = walkDownAnimation.getKeyFrame(i, PlayMode.LOOP);\n    region.draw(batch, characterPosition.x - 50, characterPosition.y, 100, 100);\n    batch.end();\n  });\n};\n\ninit();\nexport {};","map":{"version":3,"names":["createStage","createViewport","createGameLoop","ShapeRenderer","Texture","TextureRegion","PolygonBatch","Animation","PlayMode","ViewportInputHandler","InputEvent","Vector2","init","stage","canvas","getCanvas","viewport","gl","getContext","characterTexture","load","regions","splitTexture","walkDownAnimation","slice","shapeRenderer","batch","camera","getCamera","inputHandler","previousPosition","characterPosition","addEventListener","TouchStart","x","y","coord","getTouchedWorldCoord","set","console","log","rotation","i","clearColor","delta","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end","region","getKeyFrame","LOOP","draw"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createStage,\n  createViewport,\n  createGameLoop,\n  ShapeRenderer,\n  Texture,\n  TextureRegion,\n  PolygonBatch,\n  Animation,\n  PlayMode,\n  ViewportInputHandler,\n  InputEvent,\n} from \"gdxts\";\nimport Vector2 from \"gdxts/dist/lib/Vector2\";\n\nconst init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n\n  // eslint-disable-next-line\n  // const texture = await Texture.load(gl, \"./charizard.png\");\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n\n  const walkDownAnimation = new Animation(regions.slice(0, 4), 0.2);\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n\n  const inputHandler = new ViewportInputHandler(viewport);\n  const previousPosition = new Vector2(250, 500);\n  const characterPosition = previousPosition;\n\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    const coord = inputHandler.getTouchedWorldCoord();\n    characterPosition.set(coord.x, coord.y);\n    console.log(previousPosition);\n  });\n\n  let rotation = 0;\n  // const ROTATION_SPEED = Math.PI * 2;\n  let i = 0;\n  // let frame = 0;\n  gl.clearColor(0, 0, 0, 1);\n  createGameLoop((delta: number) => {\n    // rotation\n    // i += delta;\n    // if (i > 0.2) {\n    //   i = 0;\n    //   frame++;\n    //   frame %= 4;\n    // }\n\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    // batch.draw(\n    //   characterTexture,\n    //   10,\n    //   10,\n    //   500,\n    //   500\n    //   // 100,\n    //   // 100\n    //   // rotation,\n    //   // scale,\n    //   // scale\n    // );\n\n    // regions[frame + 12].draw(batch, 100, 100, 100, 100);\n\n    const region = walkDownAnimation.getKeyFrame(i, PlayMode.LOOP);\n    region.draw(batch, characterPosition.x - 50, characterPosition.y, 100, 100);\n\n    batch.end();\n  });\n};\ninit();\n\nexport {};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}