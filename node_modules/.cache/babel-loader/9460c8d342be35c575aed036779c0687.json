{"ast":null,"code":"import { createStage, createViewport, createGameLoop, ShapeRenderer, Texture, TextureRegion, PolygonBatch, Animation, PlayMode, ViewportInputHandler, InputEvent } from \"gdxts\";\nimport Vector2 from \"gdxts/dist/lib/Vector2\";\n\nconst init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext(); // eslint-disable-next-line\n  // const texture = await Texture.load(gl, \"./charizard.png\");\n\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n  const walkAnimation = new Animation(regions.slice(0, 4), 0.2);\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  const characterPosition = new Vector2(250, 500);\n  let rotation = Math.atan(characterPosition.y / characterPosition.x / Math.PI) * 180; // const ROTATION_SPEED = Math.PI * 2;\n\n  let i = 0;\n  let frame = 0;\n  let movingCharacter = false;\n  gl.clearColor(0, 0, 0, 1);\n  let nextPositon;\n  let tempx = 0;\n  let tempy = 0; // let temp = characterPosition;\n\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    nextPositon = inputHandler.getTouchedWorldCoord();\n    nextPositon.set(Math.round(nextPositon.x), Math.round(nextPositon.y));\n    rotation = Math.atan(nextPositon.y / nextPositon.x) / Math.PI * 180;\n    rotation = Math.round(rotation); // if (rotation < 0) {\n    //   rotation += 180;\n    // }\n\n    rotation = Math.atan(nextPositon.y / nextPositon.x) / Math.PI * 180;\n    rotation = Math.round(rotation);\n    console.log(rotation, nextPositon, tempx, tempy); // tempx = 0;\n    // tempy = 0;\n  });\n  const moveSpeed = 10;\n\n  function changePosition(delta) {\n    if (characterPosition.x < nextPositon.x) {\n      characterPosition.x = Math.min(characterPosition.x + delta * moveSpeed, nextPositon.x);\n      console.log(delta);\n    }\n\n    if (characterPosition.y < nextPositon.y) {\n      characterPosition.y = Math.min(characterPosition.y + delta * moveSpeed, nextPositon.y);\n    }\n  }\n\n  createGameLoop(delta => {\n    i += delta;\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n    let region = walkAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n\n    if (characterPosition.x !== nextPositon.x || characterPosition.y !== nextPositon.y) {\n      if (i > 0.2) {\n        i = 0;\n        frame++;\n        frame = frame % 4;\n        movingCharacter = true;\n      }\n    } else {\n      frame = 0;\n      movingCharacter = false;\n    } // if (\n    //   rotation >= 0 &&\n    //   rotation < 90 &&\n    //   (characterPosition.x !== nextPositon.x ||\n    //     characterPosition.y !== nextPositon.y)\n    // ) {\n    //   // region = walkAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n    //   changePosition();\n    // } else if (\n    //   rotation >= 90 &&\n    //   rotation < 180 &&\n    //   (characterPosition.x !== nextPositon.x ||\n    //     characterPosition.y !== nextPositon.y)\n    // ) {\n    //   frame = frame++;\n    //   frame = (frame % 4) * 2;\n    //   region = walkAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n    //   changePosition();\n    // } else if (\n    //   rotation >= 180 &&\n    //   rotation < 270 &&\n    //   (characterPosition.x !== nextPositon.x ||\n    //     characterPosition.y !== nextPositon.y)\n    // ) {\n    //   frame = 8;\n    //   while (frame <= 12) {\n    //     frame++;\n    //     region = walkAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n    //   }\n    //   changePosition();\n    // }\n    // console.log(frame + \" \" + i);\n\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    changePosition(delta); // batch.draw(\n    //   characterTexture,\n    //   10,\n    //   10,\n    //   500,\n    //   500,\n    //   100,\n    //   100\n    //   // rotation,\n    //   // scale,\n    //   // scale\n    // );\n    // if (movingCharacter === false) {\n    //   characterPosition.set(nextPositon.x, nextPositon.y);\n    //   // console.log(characterPosition);\n    // }\n    // console.log(movingCharacter);\n\n    region.draw(batch, characterPosition.x - 50, characterPosition.y, 100, 100);\n    batch.end();\n  });\n};\n\ninit();\nexport {};","map":{"version":3,"names":["createStage","createViewport","createGameLoop","ShapeRenderer","Texture","TextureRegion","PolygonBatch","Animation","PlayMode","ViewportInputHandler","InputEvent","Vector2","init","stage","canvas","getCanvas","viewport","gl","getContext","characterTexture","load","regions","splitTexture","walkAnimation","slice","shapeRenderer","batch","camera","getCamera","inputHandler","characterPosition","rotation","Math","atan","y","x","PI","i","frame","movingCharacter","clearColor","nextPositon","tempx","tempy","addEventListener","TouchStart","getTouchedWorldCoord","set","round","console","log","moveSpeed","changePosition","delta","min","clear","COLOR_BUFFER_BIT","setProjection","projectionView","values","begin","rect","end","region","getKeyFrame","NORMAL","draw"],"sources":["D:/projects/test-game/src/index.ts"],"sourcesContent":["import {\n  createStage,\n  createViewport,\n  createGameLoop,\n  ShapeRenderer,\n  Texture,\n  TextureRegion,\n  PolygonBatch,\n  Animation,\n  PlayMode,\n  ViewportInputHandler,\n  InputEvent,\n} from \"gdxts\";\nimport Vector2 from \"gdxts/dist/lib/Vector2\";\n\nconst init = async () => {\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n\n  // eslint-disable-next-line\n  // const texture = await Texture.load(gl, \"./charizard.png\");\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n\n  const walkAnimation = new Animation(regions.slice(0, 4), 0.2);\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n\n  const inputHandler = new ViewportInputHandler(viewport);\n  const characterPosition = new Vector2(250, 500);\n\n  let rotation =\n    Math.atan(characterPosition.y / characterPosition.x / Math.PI) * 180;\n  // const ROTATION_SPEED = Math.PI * 2;\n  let i = 0;\n  let frame = 0;\n  let movingCharacter: boolean = false;\n  gl.clearColor(0, 0, 0, 1);\n\n  let nextPositon: any;\n  let tempx = 0;\n  let tempy = 0;\n  // let temp = characterPosition;\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    nextPositon = inputHandler.getTouchedWorldCoord();\n    nextPositon.set(Math.round(nextPositon.x), Math.round(nextPositon.y));\n\n    rotation = (Math.atan(nextPositon.y / nextPositon.x) / Math.PI) * 180;\n    rotation = Math.round(rotation);\n    // if (rotation < 0) {\n    //   rotation += 180;\n    // }\n    rotation = (Math.atan(nextPositon.y / nextPositon.x) / Math.PI) * 180;\n    rotation = Math.round(rotation);\n    console.log(rotation, nextPositon, tempx, tempy);\n    // tempx = 0;\n    // tempy = 0;\n  });\n  const moveSpeed = 10;\n  function changePosition(delta: number) {\n    if (characterPosition.x < nextPositon.x) {\n      characterPosition.x = Math.min(\n        characterPosition.x + delta * moveSpeed,\n        nextPositon.x\n      );\n      console.log(delta);\n    }\n    if (characterPosition.y < nextPositon.y) {\n      characterPosition.y = Math.min(\n        characterPosition.y + delta * moveSpeed,\n        nextPositon.y\n      );\n    }\n  }\n\n  createGameLoop((delta: number) => {\n    i += delta;\n\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n    let region = walkAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n    if (\n      characterPosition.x !== nextPositon.x ||\n      characterPosition.y !== nextPositon.y\n    ) {\n      if (i > 0.2) {\n        i = 0;\n        frame++;\n        frame = frame % 4;\n        movingCharacter = true;\n      }\n    } else {\n      frame = 0;\n      movingCharacter = false;\n    }\n\n    // if (\n    //   rotation >= 0 &&\n    //   rotation < 90 &&\n    //   (characterPosition.x !== nextPositon.x ||\n    //     characterPosition.y !== nextPositon.y)\n    // ) {\n    //   // region = walkAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n    //   changePosition();\n    // } else if (\n    //   rotation >= 90 &&\n    //   rotation < 180 &&\n    //   (characterPosition.x !== nextPositon.x ||\n    //     characterPosition.y !== nextPositon.y)\n    // ) {\n    //   frame = frame++;\n    //   frame = (frame % 4) * 2;\n    //   region = walkAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n    //   changePosition();\n    // } else if (\n    //   rotation >= 180 &&\n    //   rotation < 270 &&\n    //   (characterPosition.x !== nextPositon.x ||\n    //     characterPosition.y !== nextPositon.y)\n    // ) {\n    //   frame = 8;\n    //   while (frame <= 12) {\n    //     frame++;\n    //     region = walkAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n    //   }\n    //   changePosition();\n    // }\n\n    // console.log(frame + \" \" + i);\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    changePosition(delta);\n    // batch.draw(\n    //   characterTexture,\n    //   10,\n    //   10,\n    //   500,\n    //   500,\n    //   100,\n    //   100\n    //   // rotation,\n    //   // scale,\n    //   // scale\n    // );\n    // if (movingCharacter === false) {\n    //   characterPosition.set(nextPositon.x, nextPositon.y);\n    //   // console.log(characterPosition);\n    // }\n    // console.log(movingCharacter);\n    region.draw(batch, characterPosition.x - 50, characterPosition.y, 100, 100);\n    batch.end();\n  });\n};\ninit();\n\nexport {};\n"],"mappings":"AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,aAJF,EAKEC,OALF,EAMEC,aANF,EAOEC,YAPF,EAQEC,SARF,EASEC,QATF,EAUEC,oBAVF,EAWEC,UAXF,QAYO,OAZP;AAaA,OAAOC,OAAP,MAAoB,wBAApB;;AAEA,MAAMC,IAAI,GAAG,YAAY;EACvB,MAAMC,KAAK,GAAGb,WAAW,EAAzB;EACA,MAAMc,MAAM,GAAGD,KAAK,CAACE,SAAN,EAAf;EACA,MAAMC,QAAQ,GAAGf,cAAc,CAACa,MAAD,EAAS,GAAT,EAAc,IAAd,CAA/B;EACA,MAAMG,EAAE,GAAGD,QAAQ,CAACE,UAAT,EAAX,CAJuB,CAMvB;EACA;;EACA,MAAMC,gBAAgB,GAAG,MAAMf,OAAO,CAACgB,IAAR,CAAaH,EAAb,EAAiB,mBAAjB,CAA/B;EACA,MAAMI,OAAO,GAAGhB,aAAa,CAACiB,YAAd,CAA2BH,gBAA3B,EAA6C,CAA7C,EAAgD,CAAhD,CAAhB;EAEA,MAAMI,aAAa,GAAG,IAAIhB,SAAJ,CAAcc,OAAO,CAACG,KAAR,CAAc,CAAd,EAAiB,CAAjB,CAAd,EAAmC,GAAnC,CAAtB;EAEA,MAAMC,aAAa,GAAG,IAAItB,aAAJ,CAAkBc,EAAlB,CAAtB;EACA,MAAMS,KAAK,GAAG,IAAIpB,YAAJ,CAAiBW,EAAjB,CAAd;EACA,MAAMU,MAAM,GAAGX,QAAQ,CAACY,SAAT,EAAf;EAEA,MAAMC,YAAY,GAAG,IAAIpB,oBAAJ,CAAyBO,QAAzB,CAArB;EACA,MAAMc,iBAAiB,GAAG,IAAInB,OAAJ,CAAY,GAAZ,EAAiB,GAAjB,CAA1B;EAEA,IAAIoB,QAAQ,GACVC,IAAI,CAACC,IAAL,CAAUH,iBAAiB,CAACI,CAAlB,GAAsBJ,iBAAiB,CAACK,CAAxC,GAA4CH,IAAI,CAACI,EAA3D,IAAiE,GADnE,CApBuB,CAsBvB;;EACA,IAAIC,CAAC,GAAG,CAAR;EACA,IAAIC,KAAK,GAAG,CAAZ;EACA,IAAIC,eAAwB,GAAG,KAA/B;EACAtB,EAAE,CAACuB,UAAH,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;EAEA,IAAIC,WAAJ;EACA,IAAIC,KAAK,GAAG,CAAZ;EACA,IAAIC,KAAK,GAAG,CAAZ,CA9BuB,CA+BvB;;EACAd,YAAY,CAACe,gBAAb,CAA8BlC,UAAU,CAACmC,UAAzC,EAAqD,CAACV,CAAD,EAAID,CAAJ,KAAU;IAC7DO,WAAW,GAAGZ,YAAY,CAACiB,oBAAb,EAAd;IACAL,WAAW,CAACM,GAAZ,CAAgBf,IAAI,CAACgB,KAAL,CAAWP,WAAW,CAACN,CAAvB,CAAhB,EAA2CH,IAAI,CAACgB,KAAL,CAAWP,WAAW,CAACP,CAAvB,CAA3C;IAEAH,QAAQ,GAAIC,IAAI,CAACC,IAAL,CAAUQ,WAAW,CAACP,CAAZ,GAAgBO,WAAW,CAACN,CAAtC,IAA2CH,IAAI,CAACI,EAAjD,GAAuD,GAAlE;IACAL,QAAQ,GAAGC,IAAI,CAACgB,KAAL,CAAWjB,QAAX,CAAX,CAL6D,CAM7D;IACA;IACA;;IACAA,QAAQ,GAAIC,IAAI,CAACC,IAAL,CAAUQ,WAAW,CAACP,CAAZ,GAAgBO,WAAW,CAACN,CAAtC,IAA2CH,IAAI,CAACI,EAAjD,GAAuD,GAAlE;IACAL,QAAQ,GAAGC,IAAI,CAACgB,KAAL,CAAWjB,QAAX,CAAX;IACAkB,OAAO,CAACC,GAAR,CAAYnB,QAAZ,EAAsBU,WAAtB,EAAmCC,KAAnC,EAA0CC,KAA1C,EAX6D,CAY7D;IACA;EACD,CAdD;EAeA,MAAMQ,SAAS,GAAG,EAAlB;;EACA,SAASC,cAAT,CAAwBC,KAAxB,EAAuC;IACrC,IAAIvB,iBAAiB,CAACK,CAAlB,GAAsBM,WAAW,CAACN,CAAtC,EAAyC;MACvCL,iBAAiB,CAACK,CAAlB,GAAsBH,IAAI,CAACsB,GAAL,CACpBxB,iBAAiB,CAACK,CAAlB,GAAsBkB,KAAK,GAAGF,SADV,EAEpBV,WAAW,CAACN,CAFQ,CAAtB;MAIAc,OAAO,CAACC,GAAR,CAAYG,KAAZ;IACD;;IACD,IAAIvB,iBAAiB,CAACI,CAAlB,GAAsBO,WAAW,CAACP,CAAtC,EAAyC;MACvCJ,iBAAiB,CAACI,CAAlB,GAAsBF,IAAI,CAACsB,GAAL,CACpBxB,iBAAiB,CAACI,CAAlB,GAAsBmB,KAAK,GAAGF,SADV,EAEpBV,WAAW,CAACP,CAFQ,CAAtB;IAID;EACF;;EAEDhC,cAAc,CAAEmD,KAAD,IAAmB;IAChChB,CAAC,IAAIgB,KAAL;IAEApC,EAAE,CAACsC,KAAH,CAAStC,EAAE,CAACuC,gBAAZ;IACA/B,aAAa,CAACgC,aAAd,CAA4B9B,MAAM,CAAC+B,cAAP,CAAsBC,MAAlD;IACAlC,aAAa,CAACmC,KAAd;IACAnC,aAAa,CAACoC,IAAd,CAAmB,IAAnB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,GAA/B,EAAoC,IAApC;IACApC,aAAa,CAACqC,GAAd;IACA,IAAIC,MAAM,GAAGxC,aAAa,CAACyC,WAAd,CAA0B1B,KAA1B,EAAiC9B,QAAQ,CAACyD,MAA1C,CAAb;;IACA,IACEnC,iBAAiB,CAACK,CAAlB,KAAwBM,WAAW,CAACN,CAApC,IACAL,iBAAiB,CAACI,CAAlB,KAAwBO,WAAW,CAACP,CAFtC,EAGE;MACA,IAAIG,CAAC,GAAG,GAAR,EAAa;QACXA,CAAC,GAAG,CAAJ;QACAC,KAAK;QACLA,KAAK,GAAGA,KAAK,GAAG,CAAhB;QACAC,eAAe,GAAG,IAAlB;MACD;IACF,CAVD,MAUO;MACLD,KAAK,GAAG,CAAR;MACAC,eAAe,GAAG,KAAlB;IACD,CAtB+B,CAwBhC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;;;IAEAb,KAAK,CAAC+B,aAAN,CAAoB9B,MAAM,CAAC+B,cAAP,CAAsBC,MAA1C;IACAjC,KAAK,CAACkC,KAAN;IACAR,cAAc,CAACC,KAAD,CAAd,CA5DgC,CA6DhC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACAU,MAAM,CAACG,IAAP,CAAYxC,KAAZ,EAAmBI,iBAAiB,CAACK,CAAlB,GAAsB,EAAzC,EAA6CL,iBAAiB,CAACI,CAA/D,EAAkE,GAAlE,EAAuE,GAAvE;IACAR,KAAK,CAACoC,GAAN;EACD,CAhFa,CAAd;AAiFD,CAjJD;;AAkJAlD,IAAI;AAEJ"},"metadata":{},"sourceType":"module"}