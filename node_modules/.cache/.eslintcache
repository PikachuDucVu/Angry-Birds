[{"D:\\projects\\test-game\\src\\index.ts":"1","D:\\projects\\test-game\\src\\PokemonGame.ts":"2"},{"size":5246,"mtime":1658732174469,"results":"3","hashOfConfig":"4"},{"size":5978,"mtime":1658720277585,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"9"},"1wyhpi",{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\test-game\\src\\index.ts",["13"],[],"import {\n  createGameLoop,\n  createStage,\n  createViewport,\n  InputEvent,\n  PolygonBatch,\n  ShapeRenderer,\n  Texture,\n  Vector2,\n  ViewportInputHandler,\n  BitmapFont,\n  TextureRegion,\n  Animation,\n  PlayMode,\n} from \"gdxts\";\nimport Walkable from \"walkable\";\nexport const init = async () => {\n  let walkable = new Walkable(500, 1000);\n\n  const stage = createStage();\n  const canvas = stage.getCanvas();\n  const viewport = createViewport(canvas, 500, 1000);\n  const gl = viewport.getContext();\n  const background = await Texture.load(gl, \"./pokemon-bg.jpg\");\n\n  const mapData = await fetch(\"./test.tmj\").then((res) => res.json());\n  const obstacles = mapData.layers\n    .find((l: any) => l.name === \"obstacles\")\n    .objects.map((rect: any) => ({\n      ...rect,\n      y: 1000 - rect.y - rect.height,\n    }));\n\n  for (let rect of obstacles) {\n    walkable.addRect(rect.width, rect.height, rect.x, rect.y);\n  }\n\n  // eslint-disable-next-line\n  // const texture = await Texture.load(gl, \"./charizard.png\");\n  const characterTexture = await Texture.load(gl, \"./spritesheet.png\");\n  // const apple = await Texture.load(gl, \"./apple.png\");\n  const regions = TextureRegion.splitTexture(characterTexture, 4, 4);\n\n  const walkDownAnimation = new Animation(regions.slice(0, 4), 0.2);\n  const walkLeftAnimation = new Animation(regions.slice(4, 8), 0.2);\n  const walkRightAnimation = new Animation(regions.slice(8, 12), 0.2);\n  const walkUpAnimation = new Animation(regions.slice(12, 16), 0.2);\n\n  const shapeRenderer = new ShapeRenderer(gl);\n  const batch = new PolygonBatch(gl);\n  const camera = viewport.getCamera();\n  const inputHandler = new ViewportInputHandler(viewport);\n  let characterPosition = new Vector2(250, 500);\n\n  let frame = 0;\n  let rotation = 0;\n  let vectorResult = new Vector2();\n  let d = new Vector2();\n\n  let count = 0;\n\n  gl.clearColor(0, 0, 0, 1);\n  let nextPosition = new Vector2(250, 500);\n  const path: number[] = [];\n  inputHandler.addEventListener(InputEvent.TouchStart, (x, y) => {\n    path.length = 0;\n    count = 0;\n    nextPosition = inputHandler.getTouchedWorldCoord();\n    walkable.findPath(\n      characterPosition.x,\n      characterPosition.y,\n      nextPosition.x,\n      nextPosition.y,\n      10,\n      path\n    );\n    console.log(path);\n\n    nextPosition.x = path[0];\n    nextPosition.y = path[1];\n    rotation =\n      (Math.atan2(\n        nextPosition.y - characterPosition.y,\n        nextPosition.x - characterPosition.x\n      ) *\n        180) /\n      Math.PI;\n  });\n  var region = walkDownAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n  const moveSpeed = 150;\n\n  createGameLoop((delta: number) => {\n    vectorResult.x = nextPosition.x - characterPosition.x;\n    vectorResult.y = nextPosition.y - characterPosition.y;\n    d = vectorResult.nor();\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    shapeRenderer.setProjection(camera.projectionView.values);\n    shapeRenderer.begin();\n    shapeRenderer.rect(true, 0, 0, 500, 1000);\n    shapeRenderer.end();\n\n    if (\n      characterPosition.x !== nextPosition.x ||\n      characterPosition.y !== nextPosition.y\n    ) {\n      frame += delta;\n      if (rotation >= -45 && rotation < 45) {\n        region = walkRightAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      }\n      if (rotation >= -135 && rotation < -45) {\n        region = walkDownAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      }\n      if (rotation >= 45 && rotation < 135) {\n        region = walkUpAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      }\n      if (\n        (rotation >= 135 && rotation < 180) ||\n        (rotation <= -135 && rotation >= -180)\n      ) {\n        region = walkLeftAnimation.getKeyFrame(frame, PlayMode.LOOP);\n      }\n\n      if (characterPosition.x < nextPosition.x) {\n        characterPosition.x = Math.min(\n          characterPosition.x + d.x * moveSpeed * delta,\n          nextPosition.x\n        );\n      }\n      if (characterPosition.y < nextPosition.y) {\n        characterPosition.y = Math.min(\n          characterPosition.y + d.y * moveSpeed * delta,\n          nextPosition.y\n        );\n      }\n      if (characterPosition.x > nextPosition.x) {\n        characterPosition.x = Math.max(\n          characterPosition.x + d.x * moveSpeed * delta,\n          nextPosition.x\n        );\n      }\n      if (characterPosition.y > nextPosition.y) {\n        characterPosition.y = Math.max(\n          characterPosition.y + d.y * moveSpeed * delta,\n          nextPosition.y\n        );\n      }\n    } else {\n      frame = 0;\n      setTimeout(() => {\n        region = walkDownAnimation.getKeyFrame(frame, PlayMode.NORMAL);\n      }, 0.2);\n      if (count <= path.length) {\n        count += 2;\n      } else {\n        count = 0;\n      }\n      nextPosition.x = path[count];\n      nextPosition.y = path[count + 1];\n      // console.log(rotation);\n      rotation =\n        (Math.atan2(\n          nextPosition.y - characterPosition.y,\n          nextPosition.x - characterPosition.x\n        ) *\n          180) /\n        Math.PI;\n    }\n\n    batch.setProjection(camera.projectionView.values);\n    batch.begin();\n    batch.draw(background, 0, 0, 500, 1000);\n    region.draw(\n      batch,\n      characterPosition.x - 50,\n      characterPosition.y - 20,\n      100,\n      100\n    );\n    batch.end();\n  });\n};\n\ninit();\n","D:\\projects\\test-game\\src\\PokemonGame.ts",[],[],{"ruleId":"14","severity":1,"message":"15","line":11,"column":3,"nodeType":"16","messageId":"17","endLine":11,"endColumn":13},"@typescript-eslint/no-unused-vars","'BitmapFont' is defined but never used.","Identifier","unusedVar"]