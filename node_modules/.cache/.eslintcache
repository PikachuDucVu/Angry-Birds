[{"D:\\projects\\test-game\\src\\index.ts":"1","D:\\projects\\test-game\\src\\system\\BackgroundRenderSystem.ts":"2","D:\\projects\\test-game\\src\\Constants.ts":"3","D:\\projects\\test-game\\src\\system\\BirdRenderSystem.ts":"4","D:\\projects\\test-game\\src\\system\\BoxesAndPigsRenderSystem.ts":"5","D:\\projects\\test-game\\src\\system\\SlingshotRenderSystem.ts":"6","D:\\projects\\test-game\\src\\system\\ShapeRendererSystem.ts":"7","D:\\projects\\test-game\\src\\system\\inputHandleSystem.ts":"8","D:\\projects\\test-game\\src\\ContactListenerSystem.ts":"9"},{"size":6674,"mtime":1663055748330,"results":"10","hashOfConfig":"11"},{"size":740,"mtime":1662974729669,"results":"12","hashOfConfig":"11"},{"size":346,"mtime":1662968176236,"results":"13","hashOfConfig":"11"},{"size":908,"mtime":1662718768267,"results":"14","hashOfConfig":"11"},{"size":4210,"mtime":1663057053240,"results":"15","hashOfConfig":"11"},{"size":952,"mtime":1663042735423,"results":"16","hashOfConfig":"11"},{"size":571,"mtime":1663042928591,"results":"17","hashOfConfig":"11"},{"size":1169,"mtime":1663048287780,"results":"18","hashOfConfig":"11"},{"size":840,"mtime":1663056223925,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"1wyhpi",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\test-game\\src\\index.ts",["51","52","53"],[],"import {\r\n  b2Body,\r\n  b2BodyDef,\r\n  b2BodyType,\r\n  b2CircleShape,\r\n  b2Contact,\r\n  b2ContactListener,\r\n  b2FixtureDef,\r\n  b2PolygonShape,\r\n  b2World,\r\n} from \"box2d.ts\";\r\nimport { World } from \"flat-ecs\";\r\nimport {\r\n  Animation,\r\n  AssetManager,\r\n  Color,\r\n  createGameLoop,\r\n  createStage,\r\n  createViewport,\r\n  PolygonBatch,\r\n  ShapeRenderer,\r\n  Vector2,\r\n  ViewportInputHandler,\r\n} from \"gdxts\";\r\nimport { ContactListenerSystem } from \"./ContactListenerSystem\";\r\nimport { BackgroundRenderSystem } from \"./system/BackgroundRenderSystem\";\r\nimport { BirdRenderSystem } from \"./system/BirdRenderSystem\";\r\nimport { BoxesAndPigsRenderSystem } from \"./system/BoxesAndPigsRenderSystem\";\r\nimport { inputHandlerSystem } from \"./system/inputHandleSystem\";\r\nimport { ShapeRendererSystem } from \"./system/ShapeRendererSystem\";\r\nimport { SlingshotRenderSystem } from \"./system/SlingshotRenderSystem\";\r\n\r\nconst WORLD_WIDTH = 1300;\r\nconst WORLD_HEIGHT = 500;\r\nconst createWall = (\r\n  world: b2World,\r\n  x: number,\r\n  y: number,\r\n  width: number,\r\n  height: number\r\n) => {\r\n  const bodyDef = new b2BodyDef();\r\n  bodyDef.type = b2BodyType.b2_staticBody;\r\n  bodyDef.position.Set(x + width / 2, y + height / 2);\r\n  const body = world.CreateBody(bodyDef);\r\n  const shape = new b2PolygonShape();\r\n  shape.SetAsBox(width / 2, height / 2);\r\n  body.SetUserData(\"ground\");\r\n  body.CreateFixture(shape);\r\n};\r\n\r\nconst createBall = (\r\n  world: b2World,\r\n  x: number,\r\n  y: number,\r\n  radius: number\r\n): b2Body => {\r\n  const bodyDef = new b2BodyDef();\r\n  bodyDef.type = b2BodyType.b2_staticBody;\r\n  bodyDef.position.Set(x + radius / 2, y + radius / 2);\r\n  const circle = new b2CircleShape();\r\n  circle.m_radius = radius;\r\n  const fixtureDef = new b2FixtureDef();\r\n  fixtureDef.shape = circle;\r\n  fixtureDef.restitution = 0.5; // bounce bird\r\n  fixtureDef.friction = 1;\r\n  fixtureDef.shape = circle;\r\n  fixtureDef.userData = \"birdFixture\";\r\n\r\n  const body = world.CreateBody(bodyDef);\r\n  body.CreateFixture(fixtureDef);\r\n  body.SetUserData(\"bird\");\r\n  return body;\r\n};\r\n\r\nconst createBox = (\r\n  world: b2World,\r\n  x: number,\r\n  y: number,\r\n  width: number,\r\n  height: number,\r\n  userData: {\r\n    name: string;\r\n  }\r\n): b2Body => {\r\n  const bodyDef = new b2BodyDef();\r\n  bodyDef.type = b2BodyType.b2_dynamicBody;\r\n  bodyDef.position.Set(x + width / 2, y + height / 2);\r\n  const body = world.CreateBody(bodyDef);\r\n  const shape = new b2PolygonShape();\r\n  shape.SetAsBox(width * 0.5, height * 0.5);\r\n  body.SetUserData({\r\n    name: userData.name,\r\n    durability: 0,\r\n  });\r\n  body.CreateFixture(shape);\r\n  return body;\r\n};\r\n\r\nconst METER_TO_WORLD = 100;\r\n\r\nexport const init = async () => {\r\n  const stage = createStage();\r\n  const canvas = stage.getCanvas();\r\n  const viewport = createViewport(canvas, WORLD_WIDTH, WORLD_HEIGHT);\r\n  const gl = viewport.getContext();\r\n  const camera = viewport.getCamera();\r\n  const batch = new PolygonBatch(gl);\r\n  const shapeRenderer = new ShapeRenderer(gl);\r\n  const inputHandler = new ViewportInputHandler(viewport);\r\n  const assetManager = new AssetManager(gl);\r\n  const contactListener = new b2ContactListener();\r\n\r\n  await assetManager.loadTexture(\"./background.png\", \"bg\");\r\n  await assetManager.loadTexture(\"./bird.png\", \"birdAsset\");\r\n  await assetManager.loadTexture(\"./pigAsset.png\", \"pigAsset\");\r\n  await assetManager.loadTexture(\"./testAnimation1.png\", \"boxAsset\");\r\n  await assetManager.loadTexture(\"./slingshot.png\", \"slingShot\");\r\n  await assetManager.loadTexture(\"./testAnimation1.png\", \"boxTexture\");\r\n\r\n  camera.setYDown(true);\r\n  batch.setYDown(true);\r\n\r\n  const physicWorld = new b2World({\r\n    x: 0,\r\n    y: 10,\r\n  });\r\n  const BALL_RADIUS = 0.2;\r\n  let bird = createBall(physicWorld, 2, 3.45, BALL_RADIUS);\r\n  const mapData = await fetch(\"./untitled.tmj\").then((res) => res.json());\r\n  const wallData = mapData.layers.find((l: any) => l.name === \"walls\").objects;\r\n\r\n  for (let wall of wallData) {\r\n    createWall(\r\n      physicWorld,\r\n      wall.x / METER_TO_WORLD,\r\n      wall.y / METER_TO_WORLD,\r\n      wall.width / METER_TO_WORLD,\r\n      wall.height / METER_TO_WORLD\r\n    );\r\n  }\r\n\r\n  let delayTime = 0;\r\n  const BOX_SIZE = 0.5;\r\n  const PIG_SIZE = 0.3;\r\n  const pigs: b2Body[] = [];\r\n  const boxes: b2Body[] = [];\r\n  let pigNumber = 0;\r\n  let boxNumber = 0;\r\n  let positionBoxX = 6;\r\n  let positionBoxY = 4.3;\r\n\r\n  const originPosition = new Vector2(\r\n    bird.GetPosition().x * METER_TO_WORLD,\r\n    bird.GetPosition().y * METER_TO_WORLD\r\n  );\r\n  let slingPos = new Vector2(\r\n    bird.GetPosition().x * METER_TO_WORLD,\r\n    bird.GetPosition().y * METER_TO_WORLD\r\n  );\r\n\r\n  for (let i = 0; i < 3; i++) {\r\n    positionBoxX = 6 + i * 0.4;\r\n    for (let j = 0; j <= i; j++) {\r\n      boxes.push(\r\n        createBox(\r\n          physicWorld,\r\n          (positionBoxX += 0.51),\r\n          (positionBoxY -= 0.55),\r\n          BOX_SIZE,\r\n          BOX_SIZE,\r\n          {\r\n            name: `box ${boxNumber++}`,\r\n          }\r\n        )\r\n      );\r\n    }\r\n    if (i < 2) {\r\n      pigs.push(\r\n        createBox(\r\n          physicWorld,\r\n          positionBoxX + 0.5,\r\n          positionBoxY - 0.25,\r\n          PIG_SIZE,\r\n          PIG_SIZE,\r\n          {\r\n            name: `pig ${pigNumber++}`,\r\n          }\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  const world = new World();\r\n  world.register(\"inputHandler\", inputHandler);\r\n  world.register(\"contactListener\", contactListener);\r\n  world.register(\"delayTime\", delayTime);\r\n  world.register(\"gl\", gl);\r\n  world.register(\"shapeRenderer\", shapeRenderer);\r\n  world.register(\"assetManager\", assetManager);\r\n  world.register(\"batch\", batch);\r\n  world.register(\"bird\", bird);\r\n  world.register(\"boxes\", boxes);\r\n  world.register(\"pigs\", pigs);\r\n  world.register(\"originPosition\", originPosition);\r\n  world.register(\"slingPos\", slingPos);\r\n  world.register(\"physicWorld\", physicWorld);\r\n  world.addSystem(new BackgroundRenderSystem(), false);\r\n  world.addSystem(new ShapeRendererSystem(), false);\r\n  world.addSystem(new inputHandlerSystem(), false);\r\n  world.addSystem(new BirdRenderSystem(), false);\r\n  world.addSystem(new BoxesAndPigsRenderSystem(), false);\r\n  world.addSystem(new SlingshotRenderSystem(), false);\r\n  world.addSystem(new ContactListenerSystem(), false);\r\n\r\n  console.log(contactListener);\r\n  gl.clearColor(0, 0, 0, 1);\r\n  physicWorld.SetContactListener(contactListener);\r\n\r\n  createGameLoop((delta: number) => {\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    batch.setProjection(camera.combined);\r\n    shapeRenderer.setProjection(camera.combined);\r\n    world.setDelta(delta);\r\n    world.processActiveSystem();\r\n    world.processPassiveSystem();\r\n    physicWorld.Step(delta, 8, 3);\r\n  });\r\n};\r\ninit();\r\n","D:\\projects\\test-game\\src\\system\\BackgroundRenderSystem.ts",["54"],[],"import { b2Body } from \"box2d.ts\";\r\nimport { System, Inject } from \"flat-ecs\";\r\nimport { AssetManager, PolygonBatch, Texture } from \"gdxts\";\r\nimport { Constants } from \"../Constants\";\r\n\r\nexport class BackgroundRenderSystem extends System {\r\n  @Inject(\"gl\") gl: WebGLRenderingContext;\r\n  @Inject(\"batch\") batch: PolygonBatch;\r\n  @Inject(\"assetManager\") assetManager: AssetManager;\r\n\r\n  background: Texture;\r\n  initialized(): void {\r\n    this.background = this.assetManager.getTexture(\"bg\") as Texture;\r\n  }\r\n  dispose(): void {}\r\n  process(): void {\r\n    this.batch.begin();\r\n    this.batch.draw(\r\n      this.background,\r\n      0,\r\n      0,\r\n      Constants.WORLD_WIDTH,\r\n      Constants.WORLD_HEIGHT\r\n    );\r\n    this.batch.end();\r\n  }\r\n}\r\n","D:\\projects\\test-game\\src\\Constants.ts",[],[],"D:\\projects\\test-game\\src\\system\\BirdRenderSystem.ts",[],[],"D:\\projects\\test-game\\src\\system\\BoxesAndPigsRenderSystem.ts",[],[],"D:\\projects\\test-game\\src\\system\\SlingshotRenderSystem.ts",["55","56","57","58","59"],[],"import { b2Body, b2BodyType } from \"box2d.ts\";\r\nimport { System, Inject } from \"flat-ecs\";\r\nimport {\r\n  AssetManager,\r\n  Color,\r\n  InputEvent,\r\n  PolygonBatch,\r\n  ShapeRenderer,\r\n  Texture,\r\n  Vector2,\r\n  ViewportInputHandler,\r\n} from \"gdxts\";\r\nimport { Constants } from \"../Constants\";\r\n\r\nexport class SlingshotRenderSystem extends System {\r\n  slingShot: Texture;\r\n\r\n  @Inject(\"shapeRenderer\") shapeRenderer: ShapeRenderer;\r\n  @Inject(\"assetManager\") assetManager: AssetManager;\r\n  @Inject(\"batch\") batch: PolygonBatch;\r\n  @Inject(\"slingPos\") slingPos: Vector2;\r\n\r\n  initialized() {\r\n    this.slingShot = this.assetManager.getTexture(\"slingShot\") as Texture;\r\n  }\r\n\r\n  process(): void {\r\n    this.batch.begin();\r\n    this.batch.draw(\r\n      this.slingShot,\r\n      2 * Constants.METER_TO_WORLD,\r\n      3.5 * Constants.METER_TO_WORLD,\r\n      0.25 * Constants.METER_TO_WORLD,\r\n      0.7 * Constants.METER_TO_WORLD\r\n    );\r\n    this.batch.end();\r\n  }\r\n}\r\n","D:\\projects\\test-game\\src\\system\\ShapeRendererSystem.ts",[],[],[],"D:\\projects\\test-game\\src\\system\\inputHandleSystem.ts",[],[],"D:\\projects\\test-game\\src\\ContactListenerSystem.ts",[],[],{"ruleId":"60","severity":1,"message":"61","line":6,"column":3,"nodeType":"62","messageId":"63","endLine":6,"endColumn":12},{"ruleId":"60","severity":1,"message":"64","line":14,"column":3,"nodeType":"62","messageId":"63","endLine":14,"endColumn":12},{"ruleId":"60","severity":1,"message":"65","line":16,"column":3,"nodeType":"62","messageId":"63","endLine":16,"endColumn":8},{"ruleId":"60","severity":1,"message":"66","line":1,"column":10,"nodeType":"62","messageId":"63","endLine":1,"endColumn":16},{"ruleId":"60","severity":1,"message":"66","line":1,"column":10,"nodeType":"62","messageId":"63","endLine":1,"endColumn":16},{"ruleId":"60","severity":1,"message":"67","line":1,"column":18,"nodeType":"62","messageId":"63","endLine":1,"endColumn":28},{"ruleId":"60","severity":1,"message":"65","line":5,"column":3,"nodeType":"62","messageId":"63","endLine":5,"endColumn":8},{"ruleId":"60","severity":1,"message":"68","line":6,"column":3,"nodeType":"62","messageId":"63","endLine":6,"endColumn":13},{"ruleId":"60","severity":1,"message":"69","line":11,"column":3,"nodeType":"62","messageId":"63","endLine":11,"endColumn":23},"@typescript-eslint/no-unused-vars","'b2Contact' is defined but never used.","Identifier","unusedVar","'Animation' is defined but never used.","'Color' is defined but never used.","'b2Body' is defined but never used.","'b2BodyType' is defined but never used.","'InputEvent' is defined but never used.","'ViewportInputHandler' is defined but never used."]