import { Texture } from './Texture';
import { TextureAtlas } from './TextureAtlas';
export default class AssetManager {
    gl: WebGLRenderingContext;
    promises: Array<Promise<any>>;
    atlases: Map<string, TextureAtlas>;
    textures: Map<string, Texture>;
    jsonData: Map<string, any>;
    binaryData: Map<string, ArrayBuffer>;
    done: number;
    listeners: any[];
    addListener(handler: any): void;
    constructor(gl: WebGLRenderingContext);
    reportDone(): void;
    loadAtlas(path: string, name: string): Promise<TextureAtlas>;
    getAtlas(name: string): TextureAtlas | undefined;
    loadJsonData(path: string, name: string): Promise<any>;
    getJsonData(name: string): any;
    loadBinaryData(path: string, name: string): Promise<ArrayBuffer>;
    getBinaryData(name: string): ArrayBuffer;
    loadTexture(path: string, name: string): Promise<Texture>;
    getTexture(name: string): Texture | undefined;
    finishLoading(): Promise<void>;
    getDone(): number;
    getTotal(): number;
    disposeAll(): void;
}
