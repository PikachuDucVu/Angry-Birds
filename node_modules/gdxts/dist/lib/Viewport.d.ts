import { OrthoCamera } from './Camera';
export interface ViewportInfo {
    pixelRatio: number;
    x: number;
    y: number;
    width: number;
    height: number;
    worldWidth: number;
    worldHeight: number;
}
export interface ViewportOptions {
    autoUpdate?: Boolean;
    pixelRatio?: number;
    crop?: Boolean;
    disablePremultipliedAlpha?: Boolean;
    contextOption?: WebGLContextAttributes;
}
export interface Viewport {
    getViewportInfo(): ViewportInfo;
    getCamera(): OrthoCamera;
    getContext(): WebGLRenderingContext;
    getCanvas(): HTMLCanvasElement;
    update(): void;
    cleanUp(): void;
    addCamera(camera: OrthoCamera): void;
}
export declare const createViewport: (canvas: HTMLCanvasElement, width: number, height: number, options?: ViewportOptions) => {
    getViewportInfo(): {
        pixelRatio: number;
        x: number;
        y: number;
        width: number;
        height: number;
        worldWidth: number;
        worldHeight: number;
    };
    getCamera(): OrthoCamera;
    addCamera(camera: any): void;
    getContext(): WebGLRenderingContext;
    getCanvas(): HTMLCanvasElement;
    update(): void;
    cleanUp(): void;
};
