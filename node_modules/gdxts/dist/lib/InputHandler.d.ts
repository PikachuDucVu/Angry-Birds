/// <reference types="node" />
import { EventEmitter } from 'events';
import { OrthoCamera } from './Camera';
import { Vector2 } from './Vector2';
export declare enum InputEvent {
    TouchStart = "touchStart",
    TouchEnd = "touchEnd",
    TouchMove = "touchMove"
}
export declare class InputHandler {
    canvas: HTMLCanvasElement;
    lastX: number;
    lastY: number;
    touched: boolean;
    emitter: EventEmitter;
    mouseDownHandler: (evt: any) => void;
    mouseUpHandler: (evt: any) => void;
    mouseMoveHandler: (evt: any) => void;
    touchStartHandler: (evt: any) => void;
    touchEndHandler: (evt: any) => void;
    touchMoveHandler: (evt: any) => void;
    constructor(canvas: HTMLCanvasElement);
    cleanup(): void;
    addEventListener(event: InputEvent, listener: (x: number, y: number) => void): void;
    private handleMove;
    getX(): number;
    getY(): number;
    isTouched(): boolean;
    private screenCoord;
    private worldCoord;
    getTouchedWorldCoord(camera: OrthoCamera): Vector2;
}
