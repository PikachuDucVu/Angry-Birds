"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ManagedWebGLRenderingContext = void 0;
class ManagedWebGLRenderingContext {
    constructor(canvasOrContext, contextConfig = { alpha: 'true' }) {
        this.restorables = new Array();
        if (!(canvasOrContext instanceof WebGLRenderingContext ||
            (typeof WebGL2RenderingContext !== 'undefined' && canvasOrContext instanceof WebGL2RenderingContext)))
            this.setupCanvas(canvasOrContext, contextConfig);
        else {
            this.gl = canvasOrContext;
            this.canvas = this.gl.canvas;
        }
    }
    setupCanvas(canvas, contextConfig) {
        this.gl = (canvas.getContext('webgl2', contextConfig) ||
            canvas.getContext('webgl', contextConfig));
        this.canvas = canvas;
        canvas.addEventListener('webglcontextlost', (e) => {
            let event = e;
            if (event)
                event.preventDefault();
        });
        canvas.addEventListener('webglcontextrestored', (e) => {
            for (let i = 0, n = this.restorables.length; i < n; i++)
                this.restorables[i].restore();
        });
    }
    addRestorable(restorable) {
        this.restorables.push(restorable);
    }
    removeRestorable(restorable) {
        let index = this.restorables.indexOf(restorable);
        if (index > -1)
            this.restorables.splice(index, 1);
    }
}
exports.ManagedWebGLRenderingContext = ManagedWebGLRenderingContext;
// const ONE = 1;
// const ONE_MINUS_SRC_COLOR = 0x0301;
// const SRC_ALPHA = 0x0302;
// const ONE_MINUS_SRC_ALPHA = 0x0303;
// const ONE_MINUS_DST_ALPHA = 0x0305;
// const DST_COLOR = 0x0306;
