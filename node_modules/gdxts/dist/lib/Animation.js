"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Animation = exports.PlayMode = void 0;
var PlayMode;
(function (PlayMode) {
    PlayMode[PlayMode["NORMAL"] = 0] = "NORMAL";
    PlayMode[PlayMode["LOOP"] = 1] = "LOOP";
    PlayMode[PlayMode["LOOP_PINGPONG"] = 2] = "LOOP_PINGPONG";
    PlayMode[PlayMode["REVERSED"] = 3] = "REVERSED";
    PlayMode[PlayMode["LOOP_REVERSED"] = 4] = "LOOP_REVERSED";
})(PlayMode = exports.PlayMode || (exports.PlayMode = {}));
class Animation {
    constructor(keyFrames, frameDurations) {
        this.totalDuration = 0;
        this.keyFrames = keyFrames;
        if (!Array.isArray(frameDurations)) {
            frameDurations = [frameDurations];
        }
        const lastDuration = frameDurations[frameDurations.length - 1] || 0;
        while (frameDurations.length < keyFrames.length) {
            frameDurations.push(lastDuration);
        }
        for (let fD of frameDurations) {
            this.totalDuration += fD;
        }
        this.frameDurations = frameDurations;
    }
    getFrameNumber(stateTimeRemainder, reverse = false) {
        const { frameDurations } = this;
        let fN = reverse ? frameDurations.length - 1 : 0;
        while (true) {
            stateTimeRemainder -= frameDurations[fN];
            if (stateTimeRemainder < 0) {
                break;
            }
            reverse ? fN-- : fN++;
        }
        return fN;
    }
    getKeyFrame(stateTime, mode) {
        const { keyFrames, frameDurations, totalDuration } = this;
        const runIndex = Math.floor(stateTime / totalDuration);
        const stateTimeRemainder = stateTime % totalDuration;
        let frameNumber = 0;
        switch (mode) {
            case PlayMode.NORMAL:
                frameNumber = runIndex === 0 ? this.getFrameNumber(stateTimeRemainder) : frameDurations.length - 1;
                break;
            case PlayMode.LOOP:
                frameNumber = this.getFrameNumber(stateTimeRemainder);
                break;
            case PlayMode.LOOP_PINGPONG:
                frameNumber = this.getFrameNumber(stateTimeRemainder, runIndex % 2 === 1);
                break;
            case PlayMode.REVERSED:
                frameNumber = runIndex === 0 ? this.getFrameNumber(stateTimeRemainder, true) : 0;
                break;
            case PlayMode.LOOP_REVERSED:
                frameNumber = this.getFrameNumber(stateTimeRemainder, true);
                break;
            default:
        }
        return keyFrames[frameNumber];
    }
}
exports.Animation = Animation;
