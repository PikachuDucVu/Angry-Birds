export declare enum TextureFilter {
    Nearest = 9728,
    Linear = 9729,
    MipMap = 9987,
    MipMapNearestNearest = 9984,
    MipMapLinearNearest = 9985,
    MipMapNearestLinear = 9986,
    MipMapLinearLinear = 9987
}
export declare enum TextureWrap {
    MirroredRepeat = 33648,
    ClampToEdge = 33071,
    Repeat = 10497
}
export declare class Texture {
    protected _image: HTMLImageElement | ImageBitmap;
    getImage(): HTMLImageElement | ImageBitmap;
    static load(gl: WebGLRenderingContext, url: string, useMipmaps?: boolean): Promise<Texture>;
    context: WebGLRenderingContext;
    private texture;
    private boundUnit;
    private useMipMaps;
    width: number;
    height: number;
    static DISABLE_UNPACK_PREMULTIPLIED_ALPHA_WEBGL: boolean;
    constructor(context: WebGLRenderingContext, image: HTMLImageElement | ImageBitmap, useMipMaps?: boolean);
    setFilters(minFilter: TextureFilter, magFilter: TextureFilter): void;
    static validateMagFilter(magFilter: TextureFilter): TextureFilter.Nearest | TextureFilter.Linear;
    setWraps(uWrap: TextureWrap, vWrap: TextureWrap): void;
    update(useMipMaps: boolean): void;
    restore(): void;
    bind(unit?: number): void;
    unbind(): void;
    dispose(): void;
}
